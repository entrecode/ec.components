var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AceComponent.html",[0,0.247,1,1.241]],["body/components/AceComponent.html",[0,0.416,1,1.749,2,0.172,3,0.172,4,0.602,5,0.813,6,0.813,7,1.155,8,0.151,9,2.426,10,0.317,11,2.879,12,6.103,13,5.028,14,2.42,15,1.737,16,4.294,17,4.599,18,2.006,19,1.891,20,2.963,21,2.963,22,0.657,23,1.659,24,0.007,25,0.869,26,2.258,27,1.985,28,1.612,29,4.599,30,1.215,31,4.599,32,0.323,33,0.602,34,2.543,35,1.794,36,3.969,37,3.969,38,1.364,39,1.925,40,2.982,41,1.818,42,2.579,43,1.918,44,0.713,45,4.708,46,3.336,47,3.442,48,3.003,49,3.969,50,4.599,51,4.599,52,2.879,53,7.646,54,7.811,55,0.913,56,2.834,57,6.34,58,2.178,59,4.691,60,0.365,61,3.556,62,3.68,63,6.34,64,0.831,65,1.845,66,1.19,67,2.968,68,2.968,69,2.968,70,1.715,71,0.781,72,1.94,73,3.31,74,1.786,75,1.055,76,1.158,77,1.959,78,2.968,79,2.769,80,2.968,81,2.879,82,2.968,83,3.145,84,2.222,85,3.145,86,0.965,87,0.891,88,0.676,89,2.879,90,2.968,91,4.599,92,2.968,93,4.564,94,4.092,95,4.599,96,4.599,97,2.968,98,4.599,99,2.879,100,2.968,101,3.003,102,2.669,103,1.715,104,3.556,105,1.264,106,2.056,107,2.968,108,1.588,109,2.968,110,1.718,111,2.968,112,1.835,113,0.879,114,2.42,115,2.968,116,2.612,117,2.968,118,2.056,119,2.669,120,2.968,121,1.49,122,2.579,123,3.68,124,2.265,125,2.265,126,1.181,127,2.879,128,2.265,129,2.265,130,1.611,131,2.879,132,0.265,133,2.879,134,1.207,135,1.327,136,2.641,137,2.968,138,2.426,139,2.137,140,2.265,141,1.084,142,0.744,143,1.858,144,1.858,145,0.125,146,0.081,147,2.265,148,4.599,149,4.599,150,2.968,151,2.968,152,5.182,153,2.968,154,3.509,155,2.641,156,5.63,157,2.968,158,5.63,159,2.968,160,3.31,161,2.968,162,1.58,163,4.092,164,2.968,165,1.611,166,2.968,167,1.396,168,2.137,169,2.641,170,2.265,171,1.155,172,2.641,173,1.723,174,1.858,175,2.426,176,2.968,177,2.968,178,2.968,179,4.092,180,2.968,181,1.858,182,0.551,183,1.194,184,0.885,185,1.181,186,1.235,187,1.474,188,1.706,189,0.813,190,0.813,191,0.731,192,0.757,193,1.055,194,0.939,195,1.879,196,0.771,197,1.879,198,0.757,199,0.784,200,0.771,201,0.813,202,0.757,203,1.26,204,0.771,205,0.813,206,0.757,207,0.813,208,0.731,209,0.744,210,1.391,211,1.542,212,0.731,213,0.757,214,0.757,215,0.744,216,0.813,217,0.771,218,1.542,219,0.813,220,0.813,221,0.771,222,1.737,223,0.757,224,1.542,225,0.771,226,0.771,227,0.757,228,0.813,229,0.744,230,0.771,231,0.813,232,0.757,233,0.813,234,0.813,235,0.757,236,0.813,237,0.731,238,0.757,239,0.813,240,0.744,241,0.813,242,0.669,243,0.813,244,0.744,245,1.41,246,0.813,247,0.744,248,0.813,249,0.744,250,0.813,251,0.705,252,0.813,253,0.757,254,0.693,255,0.757,256,0.771,257,0.813,258,0.757,259,0.813,260,0.813,261,0.757,262,0.813,263,0.757,264,0.813,265,0.705,266,0.813,267,0.757,268,0.757,269,0.813,270,0.757,271,0.771,272,0.813,273,0.731,274,0.744,275,1.635,276,0.757,277,0.602,278,0.771,279,0.757,280,0.757,281,0.771,282,0.757,283,0.813,284,0.757,285,0.757,286,0.813,287,0.744,288,0.813,289,0.757,290,0.813,291,0.757,292,0.813,293,0.757,294,0.813,295,0.757,296,0.718,297,0.731,298,0.813,299,0.744,300,0.813,301,0.744,302,0.813,303,0.744,304,0.813,305,0.744,306,0.813,307,0.744,308,0.784,309,0.813,310,0.744,311,0.771,312,0.731,313,0.813,314,0.003,315,0.003]],["title/modules/AceModule.html",[316,1.041,317,3.503]],["body/modules/AceModule.html",[1,2.516,2,0.382,3,0.382,8,0.335,23,2.364,24,0.007,25,1.739,58,2.269,60,0.393,132,0.589,141,3.153,145,0.378,146,0.181,182,1.227,314,0.006,315,0.006,316,1.714,317,6.815,318,2.627,319,5.877,320,5.877,321,5.877,322,5.877,323,3.261,324,2.515,325,2.224,326,6.604,327,4.497,328,3.054,329,6.604]],["title/components/AdminEntryInputComponent.html",[0,0.247,191,1.198]],["body/components/AdminEntryInputComponent.html",[0,0.43,1,1.069,2,0.243,3,0.243,4,1.4,5,1.148,6,1.148,8,0.213,10,0.447,18,2.592,19,2.092,22,0.928,24,0.007,26,2.29,27,2.017,30,1.57,32,0.457,33,0.777,35,1.748,39,2.196,40,3.532,41,2.235,42,3.055,43,2.176,55,0.747,60,0.342,64,0.841,66,1.108,86,0.638,87,0.923,88,0.447,108,1.489,110,1.05,112,1.72,113,0.824,121,1.925,122,3.333,123,4.359,124,3.199,125,3.199,126,1.667,127,3.72,128,3.199,129,3.199,130,2.275,132,0.374,145,0.177,146,0.115,173,2.433,182,0.778,183,1.543,184,1.143,188,2.021,189,1.148,190,1.148,191,1.848,192,1.069,193,1.363,194,1.152,195,2.172,196,1.088,197,2.172,198,1.069,199,1.108,200,1.088,201,1.148,202,1.069,203,1.628,204,1.088,205,1.148,206,1.069,207,1.148,208,1.032,209,1.05,210,1.831,211,1.891,212,1.032,213,1.069,214,1.069,215,1.05,216,1.148,217,1.088,218,1.891,219,1.148,220,1.148,221,1.088,222,2.058,223,1.069,224,1.891,225,1.088,226,1.088,227,1.069,228,1.148,229,1.05,230,1.088,231,1.148,232,1.069,233,1.148,234,1.148,235,1.069,236,1.148,237,1.032,238,1.069,239,1.148,240,1.05,241,1.148,242,0.945,243,1.148,244,1.05,245,1.729,246,1.148,247,1.05,248,1.148,249,1.05,250,1.148,251,0.996,252,1.148,253,1.069,254,0.978,255,1.069,256,1.088,257,1.148,258,1.069,259,1.148,260,1.148,261,1.069,262,1.148,263,1.069,264,1.148,265,0.996,266,1.148,267,1.069,268,1.069,269,1.148,270,1.069,271,1.088,272,1.148,273,1.032,274,1.05,275,1.856,276,1.069,277,0.85,278,1.088,279,1.069,280,1.069,281,1.088,282,1.069,283,1.148,284,1.069,285,1.069,286,1.148,287,1.05,288,1.148,289,1.069,290,1.148,291,1.069,292,1.148,293,1.069,294,1.148,295,1.069,296,1.014,297,1.032,298,1.148,299,1.05,300,1.148,301,1.05,302,1.148,303,1.05,304,1.148,305,1.05,306,1.148,307,1.05,308,1.108,309,1.148,310,1.05,311,1.088,312,1.032,313,1.148,314,0.004,315,0.004,330,5.407,331,5.407,332,3.017,333,3.036,334,3.333,335,5.288,336,6.731,337,3.873,338,3.577,339,4.064,340,4.857,341,5.407,342,5.942,343,4.857,344,4.535,345,3.225,346,0.896,347,2.206,348,3.07,349,5.942,350,3.73,351,3.426,352,3.426,353,2.624,354,3.426,355,2.025,356,2.624,357,4.192,358,3.017,359,3.426,360,3.426,361,4.857,362,3.72]],["title/directives/AssetDirective.html",[184,0.936,297,1.198]],["body/directives/AssetDirective.html",[2,0.279,3,0.279,4,1.692,8,0.332,10,0.514,15,1.793,21,3.912,22,1.067,24,0.007,25,1.237,26,1.501,32,0.525,33,0.856,35,1.848,39,2.166,44,1.015,46,4.197,55,1.107,60,0.363,64,0.892,65,1.915,66,1.221,70,1.797,71,1.112,74,1.611,76,1.192,77,1.207,86,0.997,87,0.698,88,0.698,103,2.441,113,1.105,116,3.276,121,2.121,132,0.43,142,1.207,145,0.203,146,0.132,184,1.535,193,2.24,297,1.611,314,0.005,315,0.005,337,4.211,345,3.579,346,1.03,347,2.536,348,3.207,355,2.327,358,3.469,362,4.993,363,2.209,364,4.288,365,4.167,366,4.356,367,7.83,368,5.454,369,5.673,370,5.021,371,2.535,372,6.546,373,1.583,374,5.35,375,4.855,376,4.819,377,4.819,378,4.996,379,1.583,380,4.819,381,4.819,382,2.493,383,4.819,384,3.554,385,1.474,386,2.634,387,4.819,388,5.825,389,4.819,390,2.39,391,5.825,392,2.209,393,4.819,394,4.712,395,4.819,396,4.819,397,3.939,398,2.901,399,4.819,400,2.209,401,4.819,402,3.295,403,4.819,404,4.819,405,4.819,406,4.819,407,3.295,408,3.295,409,2.327,410,3.147,411,3.677,412,6.546,413,7.097,414,3.677,415,1.447,416,2.901,417,4.819,418,3.677,419,3.147,420,4.288,421,5.35,422,4.819,423,3.677,424,4.819,425,4.819]],["title/components/AssetListPopComponent.html",[0,0.247,192,1.241]],["body/components/AssetListPopComponent.html",[0,0.376,1,0.714,2,0.162,3,0.162,4,0.568,5,1.203,6,0.767,8,0.142,10,0.299,15,1.203,18,1.916,19,0.677,20,2.853,22,0.62,24,0.007,25,0.83,26,2.251,27,1.982,28,1.539,30,1.161,32,0.305,33,0.574,34,1.539,35,1.528,38,1.191,39,2.135,42,2.714,43,1.763,44,0.681,47,3.333,55,0.89,60,0.374,64,0.829,65,1.541,66,1.185,71,1.043,74,1.642,75,1.007,76,1.14,77,1.774,84,2.161,86,0.935,87,0.904,88,0.655,105,1.192,106,1.963,108,1.1,110,0.701,112,2.219,113,1.026,121,1.423,123,4.298,132,0.25,145,0.118,146,0.077,171,1.709,182,0.52,183,1.14,184,0.845,188,1.652,189,0.767,190,0.767,191,0.689,192,1.566,193,1.85,194,1.594,195,1.828,196,0.726,197,1.828,198,0.714,199,2.026,200,0.726,201,0.767,202,0.714,203,1.203,204,0.726,205,0.767,206,0.714,207,0.767,208,0.689,209,0.701,210,1.817,211,1.485,212,0.689,213,0.714,214,0.714,215,0.701,216,0.767,217,0.726,218,1.485,219,0.767,220,0.767,221,0.726,222,1.682,223,0.714,224,1.485,225,0.726,226,0.726,227,0.714,228,0.767,229,0.701,230,0.726,231,0.767,232,0.714,233,0.767,234,0.767,235,0.714,236,0.767,237,0.689,238,0.714,239,0.767,240,0.701,241,0.767,242,0.631,243,0.767,244,0.701,245,1.358,246,0.767,247,0.701,248,0.767,249,0.701,250,0.767,251,0.665,252,0.767,253,0.714,254,0.653,255,0.714,256,0.726,257,0.767,258,0.714,259,0.767,260,0.767,261,0.714,262,0.767,263,0.714,264,0.767,265,0.665,266,0.767,267,0.714,268,0.714,269,0.767,270,0.714,271,0.726,272,0.767,273,2.024,274,0.701,275,1.728,276,0.714,277,0.568,278,0.726,279,0.714,280,0.714,281,0.726,282,1.701,283,0.767,284,0.714,285,0.714,286,0.767,287,0.701,288,0.767,289,0.714,290,0.767,291,0.714,292,0.767,293,0.714,294,0.767,295,0.714,296,1.311,297,0.689,298,0.767,299,0.701,300,0.767,301,0.701,302,0.767,303,0.701,304,0.767,305,0.701,306,0.767,307,0.701,308,0.739,309,0.767,310,0.701,311,0.726,312,1.334,313,0.767,314,0.003,315,0.003,345,2.88,346,1.159,348,2.64,356,2.749,365,1.871,371,2.12,373,1.062,379,1.712,382,1.673,385,2.346,386,2.532,390,2.585,398,2.644,407,1.913,408,1.913,415,0.84,426,7.718,427,7.089,428,2.287,429,4.564,430,3.352,431,3.59,432,3.59,433,2.244,434,1.963,435,3.844,436,1.637,437,3.154,438,3.162,439,3.908,440,3.908,441,3.59,442,3.59,443,6.444,444,5.097,445,4.803,446,6.141,447,2.78,448,3.908,449,3.511,450,4.432,451,4.936,452,2.021,453,3.515,454,3.897,455,4.357,456,2.49,457,4.623,458,4.017,459,3.444,460,4.298,461,4.392,462,1.871,463,3.908,464,2.384,465,3.908,466,2.49,467,4.017,468,2.798,469,2.798,470,1.685,471,2.135,472,2.798,473,2.798,474,3.162,475,2.49,476,3.003,477,2.49,478,2.798,479,2.798,480,3.59,481,1.963,482,2.868,483,2.798,484,4.392,485,2.798,486,2.463,487,3.908,488,2.798,489,2.798,490,2.463,491,2.549,492,2.798,493,2.49,494,2.798,495,2.287,496,2.798,497,4.035,498,2.798,499,2.065,500,1.786,501,2.798,502,2.463,503,2.013,504,2.798,505,2.287,506,1.473,507,2.287,508,1.389,509,2.014,510,2.49,511,2.798,512,1.569,513,2.798,514,2.287,515,2.014,516,1.429,517,2.287,518,2.798,519,2.287,520,1.479,521,2.798,522,2.49,523,2.798,524,2.798,525,2.798,526,6.301,527,2.49,528,2.49,529,2.798,530,3.707,531,2.798,532,2.014,533,2.798,534,3.003,535,2.798,536,2.798,537,2.014,538,2.868,539,4.392]],["title/components/AssetgroupSelectComponent.html",[0,0.247,198,1.241]],["body/components/AssetgroupSelectComponent.html",[0,0.406,1,1.096,2,0.249,3,0.249,4,0.871,5,1.177,6,1.177,8,0.218,15,1.657,19,1.039,20,3.682,22,0.951,24,0.007,26,2.293,27,2.021,30,1.598,32,0.468,33,0.791,35,1.827,38,0.691,39,1.722,44,0.938,47,4.122,60,0.275,64,0.815,65,1.652,66,1.158,71,0.73,76,0.595,77,1.076,86,0.654,87,0.929,88,0.458,108,1.515,110,1.076,113,0.97,132,0.383,145,0.181,146,0.118,182,0.798,183,1.57,184,1.163,188,2.043,189,1.177,190,1.177,191,1.057,192,1.096,193,1.742,194,1.167,195,2.192,196,1.115,197,2.192,198,1.936,199,2.439,200,1.115,201,1.177,202,1.096,203,1.657,204,1.115,205,1.177,206,1.096,207,1.177,208,1.057,209,1.076,210,1.623,211,1.917,212,1.057,213,1.096,214,1.096,215,1.076,216,1.177,217,1.115,218,1.917,219,1.177,220,1.177,221,1.115,222,2.08,223,1.096,224,1.917,225,1.115,226,1.115,227,1.096,228,1.177,229,1.076,230,1.115,231,1.177,232,1.096,233,1.177,234,1.177,235,1.096,236,1.177,237,1.057,238,1.096,239,1.177,240,1.076,241,1.177,242,0.968,243,1.177,244,1.076,245,1.753,246,1.177,247,1.076,248,1.177,249,1.076,250,1.177,251,1.021,252,1.177,253,1.096,254,1.003,255,1.096,256,1.115,257,1.177,258,1.096,259,1.177,260,1.177,261,1.096,262,1.177,263,1.096,264,1.177,265,1.021,266,1.177,267,1.096,268,1.096,269,1.177,270,1.096,271,1.115,272,1.177,273,1.057,274,1.076,275,1.871,276,1.096,277,0.871,278,1.115,279,1.096,280,1.096,281,1.115,282,1.096,283,1.177,284,1.096,285,1.096,286,1.177,287,1.076,288,1.177,289,1.096,290,1.177,291,1.096,292,1.177,293,1.096,294,1.177,295,1.096,296,1.039,297,1.057,298,1.177,299,1.076,300,1.177,301,1.076,302,1.177,303,1.076,304,1.177,305,1.076,306,1.177,307,1.076,308,1.135,309,1.177,310,1.076,311,1.115,312,1.057,313,1.177,314,0.004,315,0.004,346,1.293,371,2.413,379,1.836,385,1.314,386,2.508,443,5.718,447,2.46,451,4.38,460,5.264,465,5.38,527,3.823,528,3.823,540,7.982,541,7.331,542,3.823,543,6.046,544,6.997,545,4.344,546,4.785,547,4.296,548,6.046,549,4.296,550,4.296,551,4.296,552,4.296,553,4.296,554,4.296,555,4.296]],["title/injectables/AuthGuard.html",[373,1.177,556,3.503]],["body/injectables/AuthGuard.html",[2,0.338,3,0.338,8,0.296,10,0.623,15,1.599,24,0.007,25,1.104,32,0.636,33,0.971,34,2.603,38,0.939,44,1.152,55,1.081,56,3.32,60,0.404,64,0.781,66,1.068,71,1.262,73,5.346,76,1.132,86,0.889,87,0.623,88,0.623,113,0.809,126,2.954,132,0.521,145,0.246,146,0.16,254,1.734,314,0.005,315,0.005,345,3.496,346,1.248,347,3.072,348,3.383,351,4.771,371,2.36,373,1.975,400,2.676,453,3.687,497,4.911,499,3.493,512,3.274,520,1.966,556,5.346,557,7.65,558,5.195,559,7.427,560,3.794,561,5.671,562,4.471,563,3.693,564,4.978,565,4.667,566,4.649,567,3.687,568,7.121,569,9.073,570,3.841,571,4.152,572,7.427,573,5.838,574,5.381,575,6.07,576,4.85,577,1.998,578,3.169,579,4.455,580,1.855,581,5.838,582,4.455,583,5.195,584,5.838,585,5.838,586,7.427,587,5.838,588,5.838,589,5.195,590,5.838,591,5.838,592,5.838]],["title/modules/AuthModule.html",[316,1.041,593,3.503]],["body/modules/AuthModule.html",[0,0.381,2,0.345,3,0.345,8,0.302,10,0.635,23,2.429,24,0.007,58,2.045,60,0.436,76,0.825,132,0.531,134,2.421,141,3.01,145,0.376,146,0.163,182,1.106,251,2.288,270,2.456,271,1.545,314,0.005,315,0.005,316,1.851,318,2.368,323,3.058,324,2.267,325,2.005,328,2.864,365,2.536,458,4.962,459,5.114,462,3.203,481,3.361,556,6.564,593,7.065,594,5.297,595,5.297,596,5.297,597,5.297,598,5.297,599,5.489,600,4.866,601,3.446,602,2.661,603,6.691,604,5.636,605,6.691,606,4.285,607,5.297,608,4.866,609,4.866,610,5.953,611,5.953,612,5.953,613,4.866,614,2.661,615,6.146,616,5.953,617,5.953,618,5.953]],["title/injectables/AuthService.html",[373,1.177,459,2.729]],["body/injectables/AuthService.html",[2,0.341,3,0.185,8,0.162,10,0.34,23,2.417,24,0.007,25,1.113,27,0.985,32,0.347,37,3.041,38,1.059,39,1.969,44,1.38,45,2.924,55,0.939,60,0.34,64,0.713,65,2.058,66,1.141,70,1.189,72,1.486,74,1.62,75,1.835,76,1.357,79,2.924,86,1.294,87,0.907,88,0.964,103,1.189,113,1.076,116,2.507,121,1.574,132,0.284,142,1.474,145,0.134,146,0.087,254,1.654,271,2.015,275,1.326,277,0.985,314,0.005,315,0.003,324,1.85,337,4.522,339,4.845,343,6.101,345,2.394,346,0.682,348,2.783,373,1.592,375,3.843,390,1.774,392,3.667,409,1.54,410,2.082,418,5.924,436,2.783,452,2.454,458,1.919,459,2.724,481,3.47,520,1.636,561,2.924,574,3.041,580,1.013,614,1.425,619,2.837,620,3.707,621,3.497,622,6.347,623,3.97,624,4.237,625,4.237,626,5.237,627,3.97,628,5.697,629,3.707,630,3.497,631,2.942,632,5.38,633,2.724,634,3.97,635,4.323,636,4.323,637,4.858,638,4.323,639,4.858,640,4.858,641,4.323,642,6.582,643,6.582,644,4.858,645,4.858,646,7.085,647,3.188,648,4.187,649,3.188,650,4.323,651,4.858,652,3.188,653,5.588,654,5.191,655,4.323,656,3.188,657,4.858,658,3.188,659,1.604,660,5.023,661,4.858,662,5.607,663,3.464,664,3.188,665,4.858,666,3.188,667,4.298,668,2.837,669,3.188,670,4.645,671,6.643,672,4.858,673,3.188,674,3.188,675,4.858,676,3.188,677,4.858,678,3.188,679,2.82,680,3.188,681,3.188,682,2.605,683,2.605,684,2.082,685,1.85,686,2.295,687,1.995,688,3.188,689,6.582,690,6.582,691,4.858,692,4.858,693,4.858,694,5.857,695,4.858,696,3.188,697,4.858,698,3.188,699,5.886,700,5.886,701,3.188,702,3.188,703,4.323,704,3.188,705,2.837,706,2.837,707,3.188,708,1.919,709,3.188,710,3.188,711,3.188,712,3.188,713,3.188,714,3.188,715,3.188,716,4.858,717,3.188,718,4.858,719,3.188,720,3.041,721,3.188,722,2.724,723,3.041,724,3.188,725,4.858,726,4.858,727,3.188,728,3.188,729,3.188,730,3.497,731,4.858,732,3.188,733,4.858,734,3.707,735,4.858,736,4.858,737,3.172,738,4.858,739,4.858,740,4.323,741,4.858,742,3.188,743,4.858,744,3.188,745,3.188,746,3.188,747,3.188,748,3.188,749,3.188,750,3.188,751,3.188,752,2.295,753,2.837,754,1.85,755,3.188]],["title/classes/Collection.html",[146,0.133,756,2.642]],["body/classes/Collection.html",[2,0.2,3,0.2,7,3.484,8,0.175,10,0.369,24,0.007,25,1.757,32,0.8,33,0.675,34,2.875,38,1.319,39,1.894,43,2.584,44,0.8,60,0.235,64,0.856,66,1.16,71,1.246,74,1.687,75,2.071,76,1.294,77,1.548,84,1.672,86,1.276,87,0.894,88,0.924,113,1.137,121,1.119,142,1.838,145,0.145,146,0.201,162,1.773,194,1.031,314,0.004,315,0.004,346,0.739,363,1.583,379,2.306,382,2.611,385,2.831,392,2.366,415,2.602,447,1.119,464,2.802,486,3.845,491,4.468,497,4.492,499,3.224,500,3.472,503,2.832,512,1.937,574,4.291,575,2.823,633,3.465,659,3.095,679,2.005,756,5.105,757,3.074,758,5.05,759,5.161,760,4.716,761,3.718,762,5.161,763,5.161,764,6.855,765,5.161,766,5.161,767,5.161,768,5.161,769,4.218,770,5.499,771,3.252,772,3.587,773,3.454,774,3.231,775,7.968,776,3.454,777,5.161,778,5.161,779,7.808,780,3.454,781,4.476,782,4.127,783,5.161,784,5.161,785,3.454,786,5.161,787,3.939,788,3.715,789,5.161,790,3.454,791,5.161,792,5.161,793,3.454,794,5.161,795,5.161,796,3.454,797,3.454,798,5.161,799,3.454,800,5.161,801,5.161,802,3.454,803,5.161,804,3.454,805,3.454,806,3.074,807,3.074,808,3.074,809,3.074,810,3.074,811,3.074,812,3.074,813,3.074,814,2.256,815,2.162,816,4.994,817,3.53,818,6.179,819,5.161,820,3.454,821,3.454,822,1.818,823,3.454,824,3.454,825,6.179,826,6.855,827,6.179,828,7.977,829,3.454,830,3.454,831,3.454,832,3.454,833,3.074,834,3.454]],["title/classes/Config.html",[146,0.133,452,1.815]],["body/classes/Config.html",[2,0.347,3,0.347,8,0.304,10,0.64,24,0.007,32,0.654,33,1.266,38,0.965,39,2.035,41,1.892,44,1.417,55,0.754,56,3.88,64,0.83,65,2.018,66,0.988,75,2.095,76,1.24,86,0.913,87,0.64,88,0.882,103,2.817,113,0.831,145,0.253,146,0.227,167,2.821,314,0.005,315,0.005,359,4.902,392,2.749,436,3.406,452,3.692,520,2.786,567,3.751,835,5.337,836,4.738,837,4.385,838,5.997,839,5.997,840,5.997,841,6.174,842,7.555,843,4.435,844,7.555,845,7.555,846,7.555,847,5.765,848,5.438,849,4.577,850,3.256,851,5.997,852,5.997,853,5.997,854,7.555,855,8.27,856,5.997]],["title/components/CrudComponent.html",[0,0.247,202,1.241]],["body/components/CrudComponent.html",[0,0.339,1,0.715,2,0.162,3,0.162,4,1.354,5,0.768,6,0.768,7,1.091,8,0.142,10,0.299,15,1.205,19,0.678,20,2.856,22,0.621,24,0.007,25,1.339,26,2.252,27,1.982,28,1.542,30,1.162,32,0.305,33,0.71,35,1.529,38,0.708,39,2.058,41,1.775,43,2.027,44,1.252,47,3.337,55,0.891,58,1.511,60,0.405,64,0.811,65,1.453,66,1.164,71,0.747,75,1.009,76,1.256,77,1.102,84,1.425,86,1.017,87,0.916,88,0.861,103,3.01,105,2.844,106,2.747,108,1.54,110,0.702,112,1.779,113,0.982,132,0.25,135,1.253,145,0.118,146,0.149,162,1.865,171,1.711,174,1.755,182,0.521,183,1.409,184,0.846,185,1.115,186,1.166,187,1.392,188,1.654,189,0.768,190,0.768,191,0.69,192,0.715,193,1.009,194,1.495,195,1.829,196,0.728,197,1.829,198,0.715,199,0.741,200,0.728,201,0.768,202,1.807,203,1.205,204,0.728,205,0.768,206,0.715,207,0.768,208,0.69,209,0.702,210,1.76,211,1.487,212,0.69,213,0.715,214,0.715,215,0.702,216,0.768,217,0.728,218,1.487,219,0.768,220,0.768,221,1.142,222,1.684,223,1.703,224,1.487,225,1.733,226,0.728,227,0.715,228,0.768,229,0.702,230,0.728,231,0.768,232,0.715,233,0.768,234,0.768,235,0.715,236,0.768,237,0.69,238,0.715,239,0.768,240,0.702,241,0.768,242,1.505,243,0.768,244,0.702,245,1.36,246,0.768,247,0.702,248,0.768,249,0.702,250,0.768,251,0.666,252,0.768,253,0.715,254,0.654,255,0.715,256,0.728,257,0.768,258,0.715,259,0.768,260,0.768,261,0.715,262,0.768,263,0.715,264,0.768,265,0.666,266,0.768,267,0.715,268,0.715,269,0.768,270,0.715,271,0.728,272,0.768,273,0.69,274,0.702,275,1.597,276,0.715,277,0.569,278,0.728,279,0.715,280,0.715,281,0.728,282,0.715,283,0.768,284,0.715,285,0.715,286,0.768,287,0.702,288,0.768,289,0.715,290,0.768,291,0.715,292,0.768,293,0.715,294,0.768,295,0.715,296,0.678,297,0.69,298,0.768,299,0.702,300,0.768,301,0.702,302,0.768,303,0.702,304,0.768,305,0.702,306,0.768,307,0.702,308,0.741,309,0.768,310,0.702,311,0.728,312,0.69,313,0.768,314,0.003,315,0.003,325,1.481,345,1.789,346,0.599,347,1.475,348,2.292,365,2.312,370,3.267,371,2.122,379,1.063,385,1.346,386,2.447,390,1.606,400,1.285,409,1.354,415,1.321,416,1.687,429,3.235,434,2.747,435,1.755,447,2.747,449,2.314,452,2.023,454,2.969,455,3.544,458,3.267,459,3.447,467,4.02,470,2.648,476,2.698,514,2.291,516,1.432,520,2.719,532,2.018,560,3.785,563,1.166,570,3.796,571,2.969,578,1.522,579,2.139,580,0.891,614,1.966,659,2.03,679,1.627,708,1.687,836,2.247,847,2.139,857,2.494,858,3.166,859,2.466,860,3.594,861,3.356,862,4.398,863,3.044,864,3.397,865,2.621,866,3.913,867,3.913,868,6.146,869,3.247,870,5.461,871,5.469,872,3.913,873,4.398,874,4.398,875,4.398,876,3.899,877,3.15,878,2.207,879,2.558,880,5.101,881,4.398,882,5.469,883,2.648,884,2.803,885,2.803,886,2.803,887,4.627,888,2.803,889,2.803,890,2.803,891,3.913,892,4.436,893,4.142,894,3.913,895,2.803,896,4.398,897,2.803,898,3.913,899,4.398,900,2.803,901,2.553,902,2.803,903,4.398,904,2.803,905,2.803,906,2.803,907,3.007,908,2.803,909,2.803,910,2.803,911,2.291,912,2.139,913,1.755,914,2.291,915,2.291,916,2.291,917,2.494,918,2.494,919,2.291,920,1.83,921,1.475,922,2.291,923,2.291,924,2.291,925,2.803,926,2.803,927,2.139,928,2.803,929,2.803,930,2.803,931,1.522,932,2.018,933,2.803,934,4.829,935,2.494,936,2.494,937,2.803,938,2.291,939,2.803,940,2.803,941,1.917,942,2.803,943,2.803,944,5.427,945,2.291,946,2.494,947,2.494,948,2.803,949,2.803,950,2.872,951,3.907,952,2.803,953,3.007,954,2.803,955,1.755,956,2.139,957,2.803,958,1.83,959,3.913,960,3.913]],["title/interfaces/CrudConfig.html",[467,2.93,961,1.435]],["body/interfaces/CrudConfig.html",[0,0.43,2,0.265,3,0.265,8,0.232,10,0.489,18,2.758,24,0.007,25,1.75,27,1.283,32,0.499,33,0.827,38,1.017,44,1.372,53,5.627,55,1.113,60,0.33,64,0.906,65,2.029,70,3.298,88,1.043,113,1.082,145,0.193,146,0.232,162,2.172,171,2.461,186,2.631,194,1.413,210,1.878,242,1.76,265,1.855,275,1.425,277,1.662,314,0.004,315,0.004,365,3.608,370,5.1,379,2.337,382,2.758,398,3.807,429,4.783,432,5.168,438,4.552,447,2.744,467,4.701,500,2.572,502,3.546,516,2.34,565,4.239,570,3.984,653,6.098,659,2.706,660,4.826,720,4.888,722,4.061,723,4.533,837,3.67,850,3.433,858,4.552,865,3.054,869,3.882,915,3.744,961,1.864,962,4.077,963,2.868,964,6.323,965,4.359,966,7.808,967,7.808,968,6.923,969,7.808,970,7.808,971,7.808,972,7.808,973,7.808,974,6.948,975,5.168,976,5.098,977,4.552,978,5.627,979,2.898,980,5.958,981,4.324,982,6.323,983,4.826,984,3.433,985,6.323,986,2.898,987,6.948,988,5.958,989,5.339,990,6.948,991,5.168,992,3.496,993,4.581]],["title/injectables/CrudService.html",[373,1.177,994,2.642]],["body/injectables/CrudService.html",[0,0.268,2,0.207,3,0.207,8,0.181,10,0.381,24,0.007,25,1.407,32,0.389,33,1.055,38,1.539,41,1.326,44,0.821,55,0.876,60,0.367,61,2.003,62,2.073,64,0.868,65,1.976,66,1.126,70,3.329,71,1.37,72,1.093,75,2.141,76,1.326,79,2.15,84,3.048,86,1.288,87,0.902,88,0.902,103,3.255,112,1.034,113,0.495,114,1.88,116,2.654,126,2.105,132,0.318,142,1.326,145,0.223,146,0.098,162,1.227,167,1.68,194,0.883,210,1.968,277,1.716,314,0.004,315,0.006,338,3.794,345,2.834,346,0.764,347,1.88,348,2.598,366,1.68,370,3.186,373,1.799,379,1.524,384,4.23,385,1.619,386,1.18,392,1.637,409,1.725,436,3.409,462,2.254,464,1.939,476,3.071,486,4.173,491,3.071,497,4.101,500,3.892,512,2.003,520,2.123,566,3.312,580,1.135,708,3.794,722,2.968,723,3.312,815,2.236,822,3.317,843,3.801,865,2.556,907,3.618,931,2.872,961,1.053,984,4.039,988,2.726,989,2.443,994,3.421,995,2.919,996,3.186,997,3.618,998,3.186,999,2.556,1000,3.186,1001,2.308,1002,3.455,1003,4.709,1004,4.325,1005,4.709,1006,5.291,1007,4.325,1008,3.572,1009,4.325,1010,4.216,1011,4.325,1012,3.572,1013,3.618,1014,4.709,1015,3.572,1016,4.709,1017,5.532,1018,3.572,1019,4.325,1020,3.572,1021,3.809,1022,4.116,1023,4.325,1024,3.572,1025,4.038,1026,4.038,1027,4.709,1028,3.572,1029,3.455,1030,4.709,1031,4.709,1032,3.572,1033,3.618,1034,2.236,1035,2.919,1036,2.919,1037,2.332,1038,2.726,1039,2.919,1040,2.919,1041,2.919,1042,2.919,1043,2.919,1044,2.919,1045,2.919,1046,2.919,1047,3.178,1048,3.178,1049,3.178,1050,5.609,1051,5.151,1052,2.919,1053,3.071,1054,2.919,1055,2.919,1056,3.178,1057,4.709,1058,4.325,1059,2.15,1060,3.178,1061,5.151,1062,2.919,1063,2.919,1064,2.919,1065,2.919,1066,5.151,1067,2.15,1068,2.919,1069,3.178,1070,2.919,1071,3.178,1072,3.178]],["title/modules/DataModule.html",[316,1.041,1073,3.328]],["body/modules/DataModule.html",[2,0.251,3,0.251,8,0.22,23,2.455,24,0.007,58,1.491,60,0.442,76,0.601,103,2.27,132,0.387,134,1.765,141,2.568,145,0.321,146,0.119,173,3.534,174,2.716,182,0.806,191,2.148,202,2.338,208,2.148,209,2.187,210,1.823,221,2.381,223,2.338,225,2.381,226,2.415,301,2.297,303,2.297,314,0.004,315,0.004,316,1.302,318,1.726,323,2.476,324,1.652,325,1.461,327,3.414,328,2.679,331,3.123,346,0.928,538,2.833,578,2.355,593,6.601,599,5.521,601,2.79,602,1.939,603,5.418,606,3.123,608,3.546,622,5.782,624,4.383,630,4.383,685,3.534,848,3.123,911,3.546,912,3.311,913,2.716,919,3.546,920,2.833,994,4.52,1073,6.81,1074,3.861,1075,3.861,1076,3.861,1077,3.861,1078,3.861,1079,6.601,1080,6.271,1081,5.988,1082,5.994,1083,5.438,1084,4.833,1085,4.339,1086,4.383,1087,5.418,1088,5.418,1089,2.967,1090,4.339,1091,4.339,1092,3.546,1093,4.339,1094,3.665,1095,3.123,1096,3.861,1097,3.311,1098,4.339,1099,4.339,1100,2.967,1101,2.833,1102,3.861,1103,4.339,1104,3.546,1105,3.546,1106,4.339]],["title/components/DatetimeComponent.html",[0,0.247,206,1.241]],["body/components/DatetimeComponent.html",[0,0.418,1,0.972,2,0.221,3,0.221,4,0.773,5,1.044,6,1.044,7,1.483,8,0.193,10,0.407,15,2.185,16,5.384,19,0.922,22,0.844,23,1.929,24,0.007,25,1.359,26,2.283,27,2.011,28,1.945,30,1.467,32,0.415,33,0.726,35,1.804,36,4.5,38,1.157,39,1.611,40,2.61,44,0.861,48,4.694,49,4.992,52,3.474,55,0.698,60,0.327,64,0.762,65,1.424,66,1.143,71,0.943,75,1.273,76,0.907,77,1.64,81,3.474,84,2.329,86,0.845,87,0.918,88,0.592,89,3.474,99,3.474,103,2.069,105,1.623,106,2.481,108,1.39,110,0.955,112,1.606,113,1.059,114,2.921,122,4.731,131,3.474,132,0.34,133,3.474,134,1.55,143,2.386,144,2.386,145,0.161,146,0.104,181,2.386,182,0.708,183,1.441,184,1.068,185,1.516,186,1.586,187,1.892,188,1.934,189,1.044,190,1.044,191,0.938,192,0.972,193,1.273,194,1.092,195,2.093,196,0.989,197,2.093,198,0.972,199,1.007,200,1.983,201,1.044,202,0.972,203,1.52,204,0.989,205,1.044,206,1.948,207,1.044,208,0.938,209,0.955,210,1.55,211,1.793,212,0.938,213,0.972,214,0.972,215,0.955,216,1.044,217,0.989,218,1.793,219,1.044,220,1.044,221,0.989,222,1.97,223,0.972,224,1.793,225,0.989,226,0.989,227,0.972,228,1.044,229,0.955,230,0.989,231,1.044,232,0.972,233,1.044,234,1.044,235,0.972,236,1.044,237,0.938,238,0.972,239,1.044,240,0.955,241,1.044,242,0.859,243,1.044,244,0.955,245,1.64,246,1.044,247,0.955,248,1.044,249,0.955,250,1.044,251,0.905,252,1.044,253,0.972,254,0.89,255,0.972,256,0.989,257,1.044,258,0.972,259,1.044,260,1.044,261,0.972,262,1.044,263,0.972,264,1.044,265,0.905,266,1.044,267,0.972,268,0.972,269,1.044,270,0.972,271,0.989,272,1.044,273,0.938,274,0.955,275,1.797,276,0.972,277,0.773,278,0.989,279,0.972,280,0.972,281,0.989,282,0.972,283,1.044,284,0.972,285,0.972,286,1.044,287,0.955,288,1.044,289,0.972,290,1.044,291,0.972,292,1.044,293,0.972,294,1.044,295,0.972,296,0.922,297,0.938,298,1.044,299,0.955,300,1.044,301,0.955,302,1.044,303,0.955,304,1.044,305,0.955,306,1.044,307,0.955,308,1.007,309,1.044,310,0.955,311,0.989,312,0.938,313,1.044,314,0.004,315,0.004,333,2.835,379,1.342,435,3.474,447,1.798,506,2.921,545,4.148,659,1.833,1107,3.392,1108,5.486,1109,5.55,1110,5.55,1111,5.55,1112,6.086,1113,7.189,1114,5.604,1115,6.545,1116,2.625,1117,3.474,1118,4.938,1119,3.811,1120,3.811,1121,3.811,1122,5.55,1123,3.811,1124,3.811,1125,3.811,1126,3.811,1127,3.811,1128,3.811,1129,3.474,1130,3.811,1131,4.235,1132,5.55,1133,3.795,1134,2.744,1135,3.811,1136,3.811,1137,3.811]],["title/pipes/DatetimePipe.html",[1138,2.561,1139,3.503]],["body/pipes/DatetimePipe.html",[2,0.361,3,0.361,8,0.316,10,0.665,15,1.707,22,1.379,24,0.007,25,1.178,33,1.012,38,1.52,43,2.326,44,0.966,55,0.973,60,0.383,64,0.739,65,2.123,66,0.815,72,2.367,75,1.774,76,1.22,86,0.948,87,0.898,88,0.665,113,0.863,126,3.077,132,0.555,142,1.561,145,0.262,146,0.171,314,0.005,315,0.005,392,2.855,580,1.98,659,2.555,774,4.843,878,2.534,879,3.219,921,3.278,1010,3.736,1108,5.904,1114,5.267,1133,5.29,1134,4.484,1138,4.428,1139,5.569,1140,5.543,1141,5.29,1142,5.904,1143,4.199,1144,5.543,1145,6.514,1146,7.396,1147,6.229,1148,6.884,1149,5.29,1150,6.229,1151,6.229,1152,6.229,1153,6.229,1154,6.229,1155,6.229]],["title/interfaces/Day.html",[961,1.435,1131,3.714]],["body/interfaces/Day.html",[0,0.264,2,0.202,3,0.202,8,0.177,10,0.372,15,0.956,20,2.737,21,2.737,24,0.007,25,1.46,26,0.8,27,0.708,28,1.223,30,0.922,32,0.933,33,0.68,34,1.823,35,1.735,39,1.53,47,1.894,56,1.56,60,0.335,64,0.87,65,1.89,71,1.252,74,1.696,75,1.772,76,1.253,77,1.726,84,2.593,88,0.555,119,2.025,121,2.772,132,0.311,142,1.846,145,0.219,146,0.17,162,1.787,165,3.374,263,0.89,277,1.055,314,0.004,315,0.004,355,1.685,371,1.975,379,2.149,382,2.806,386,2.434,415,1.562,434,3.079,436,1.301,437,1.486,447,2.665,453,1.732,476,1.329,490,4.489,497,3.877,500,2.115,503,2.849,512,1.957,534,4.711,659,2.053,760,3.968,781,3.396,788,2.512,859,1.957,878,1.419,879,2.164,921,1.836,961,2.031,975,2.852,1067,2.101,1089,5.473,1112,4.744,1114,5.564,1116,1.899,1117,2.184,1118,7.614,1131,7.391,1133,5.625,1134,2.512,1156,3.105,1157,8.888,1158,7.368,1159,6.871,1160,6.108,1161,8.406,1162,3.743,1163,3.743,1164,8.793,1165,5.561,1166,3.105,1167,3.489,1168,2.663,1169,3.489,1170,3.489,1171,5.257,1172,3.465,1173,3.489,1174,4.628,1175,3.105,1176,7.726,1177,3.489,1178,3.489,1179,3.489,1180,3.105,1181,3.489,1182,2.101,1183,3.489,1184,3.489,1185,6.216,1186,3.105,1187,3.489,1188,3.489,1189,5.2,1190,3.489,1191,3.489,1192,3.489,1193,3.489,1194,3.489,1195,3.489,1196,3.489,1197,3.489,1198,7.726,1199,5.2,1200,6.216,1201,5.2,1202,6.216,1203,5.2,1204,3.489,1205,3.489,1206,3.489,1207,3.489,1208,3.489,1209,7.368,1210,3.489,1211,3.489,1212,3.489,1213,3.489,1214,3.489,1215,6.889,1216,3.489,1217,5.2,1218,5.2,1219,4.475,1220,3.489,1221,3.489,1222,3.489,1223,3.489,1224,3.489,1225,5.2,1226,2.852,1227,3.489,1228,3.489,1229,3.489,1230,3.489,1231,3.489,1232,3.489,1233,5.2,1234,3.489,1235,3.489,1236,3.105,1237,3.489,1238,3.489,1239,3.489,1240,3.489,1241,3.489,1242,3.489,1243,3.489,1244,6.216,1245,3.489,1246,6.216,1247,3.489,1248,3.489,1249,3.489,1250,3.489,1251,5.2,1252,3.489,1253,3.489,1254,3.489,1255,3.489,1256,3.489,1257,2.025,1258,3.489,1259,3.105,1260,3.489,1261,5.2,1262,3.489,1263,3.489,1264,3.489,1265,3.489,1266,3.489,1267,3.489,1268,3.489,1269,3.489,1270,3.489,1271,3.489,1272,3.489,1273,3.489,1274,3.489,1275,3.489,1276,3.489,1277,3.489,1278,2.663,1279,3.489,1280,3.489,1281,3.489,1282,3.489]],["title/components/DefaultEntryInputComponent.html",[0,0.247,208,1.198]],["body/components/DefaultEntryInputComponent.html",[0,0.434,1,1.104,2,0.251,3,0.251,4,1.628,5,1.186,6,1.186,8,0.22,10,0.462,18,2.652,19,2.11,22,0.959,24,0.007,26,2.292,27,2.02,30,1.607,32,0.472,33,0.795,35,1.831,39,2.211,40,3.584,41,2.186,42,3.099,43,2.199,55,0.765,60,0.32,64,0.834,66,1.089,86,0.659,87,0.931,88,0.462,108,1.523,110,1.085,112,1.76,113,1.154,122,3.41,123,4.423,124,3.305,125,3.305,126,1.723,127,3.806,128,3.305,129,3.305,130,2.351,132,0.386,145,0.182,146,0.119,173,2.514,182,0.804,183,1.578,184,1.17,188,2.05,189,1.186,190,1.186,191,1.066,192,1.104,193,1.395,194,1.172,195,2.199,196,1.124,197,2.199,198,1.104,199,1.145,200,1.124,201,1.186,202,1.104,203,1.666,204,1.124,205,1.186,206,1.104,207,1.186,208,1.875,209,1.085,210,1.823,211,1.925,212,1.066,213,1.104,214,1.104,215,1.085,216,1.186,217,1.124,218,1.925,219,1.186,220,1.186,221,1.124,222,2.088,223,1.104,224,1.925,225,1.124,226,1.124,227,1.104,228,1.186,229,1.085,230,1.124,231,1.186,232,1.104,233,1.186,234,1.186,235,1.104,236,1.186,237,1.066,238,1.104,239,1.186,240,1.085,241,1.186,242,0.976,243,1.186,244,1.085,245,1.76,246,1.186,247,1.085,248,1.186,249,1.085,250,1.186,251,1.029,252,1.186,253,1.104,254,1.011,255,1.104,256,1.124,257,1.186,258,1.104,259,1.186,260,1.186,261,1.104,262,1.186,263,1.104,264,1.186,265,1.029,266,1.186,267,1.104,268,1.104,269,1.186,270,1.104,271,1.124,272,1.186,273,1.066,274,1.085,275,1.876,276,1.104,277,0.878,278,1.124,279,1.104,280,1.104,281,1.124,282,1.104,283,1.186,284,1.104,285,1.104,286,1.186,287,1.085,288,1.186,289,1.104,290,1.186,291,1.104,292,1.186,293,1.104,294,1.186,295,1.104,296,1.047,297,1.066,298,1.186,299,1.085,300,1.186,301,1.085,302,1.186,303,1.085,304,1.186,305,1.085,306,1.186,307,1.085,308,1.145,309,1.186,310,1.085,311,1.124,312,1.066,313,1.186,314,0.004,315,0.004,330,5.059,332,3.118,333,3.106,341,4.377,344,4.64,345,3.265,346,0.926,347,2.279,348,3.103,351,3.54,352,3.54,353,2.711,355,2.092,356,2.711,360,3.54,361,4.97,362,3.806,1094,4.23,1162,4.377,1283,4.331,1284,4.331]],["title/components/DefaultEntryOutputComponent.html",[0,0.247,209,1.219]],["body/components/DefaultEntryOutputComponent.html",[0,0.455,1,1.157,2,0.263,3,0.263,4,1.462,5,1.243,6,1.243,8,0.23,10,0.484,19,1.097,22,1.005,24,0.007,26,2.297,27,2.025,30,1.66,32,0.495,33,0.822,35,0.937,41,2.272,43,2.397,60,0.328,64,0.743,66,0.822,87,0.924,108,1.574,110,1.137,113,1.223,132,0.405,145,0.191,146,0.124,182,0.843,183,1.631,184,1.209,188,2.092,189,1.243,190,1.243,191,1.117,192,1.157,193,1.441,194,1.202,195,2.237,196,1.178,197,2.237,198,1.157,199,1.199,200,1.178,201,1.243,202,1.157,203,1.721,204,1.178,205,1.243,206,1.157,207,1.243,208,1.117,209,1.948,210,1.875,211,1.974,212,1.117,213,1.157,214,1.157,215,1.137,216,1.243,217,1.178,218,1.974,219,1.243,220,1.243,221,1.178,222,2.131,223,1.157,224,1.974,225,1.178,226,1.178,227,1.157,228,1.243,229,1.137,230,1.178,231,1.243,232,1.157,233,1.243,234,1.243,235,1.157,236,1.243,237,1.117,238,1.157,239,1.243,240,1.137,241,1.243,242,1.023,243,1.243,244,1.137,245,1.805,246,1.243,247,1.137,248,1.243,249,1.137,250,1.243,251,1.078,252,1.243,253,1.157,254,1.059,255,1.157,256,1.178,257,1.243,258,1.157,259,1.243,260,1.243,261,1.157,262,1.243,263,1.157,264,1.243,265,1.078,266,1.243,267,1.157,268,1.157,269,1.243,270,1.157,271,1.178,272,1.243,273,1.117,274,1.137,275,1.903,276,1.157,277,0.921,278,1.178,279,1.157,280,1.157,281,1.178,282,1.157,283,1.243,284,1.157,285,1.157,286,1.243,287,1.137,288,1.243,289,1.157,290,1.243,291,1.157,292,1.243,293,1.157,294,1.243,295,1.157,296,1.097,297,1.117,298,1.243,299,1.137,300,1.243,301,1.137,302,1.243,303,1.137,304,1.243,305,1.137,306,1.243,307,1.137,308,1.199,309,1.243,310,1.137,311,1.178,312,1.117,313,1.243,314,0.004,315,0.004,330,5.187,333,3.209,341,4.522,360,3.709,361,5.135,362,3.933,371,2.883,508,2.253,687,3.933,1094,4.338,1116,2.294,1162,4.522,1285,3.709,1286,5.59,1287,4.538,1288,4.538,1289,2.963,1290,5.59]],["title/components/DefaultInputComponent.html",[0,0.247,19,1.177]],["body/components/DefaultInputComponent.html",[0,0.436,1,1.127,2,0.256,3,0.256,4,1.441,5,1.21,6,1.21,8,0.224,10,0.471,19,1.859,22,0.978,24,0.007,26,2.294,27,2.022,30,1.63,32,0.481,33,0.807,35,1.669,39,2.264,40,3.939,41,2.305,42,3.407,43,2.384,55,0.967,60,0.35,64,0.8,66,1.005,87,0.917,88,0.658,108,1.545,110,1.107,112,2.224,113,1.065,122,4.311,126,2.453,127,4.812,130,3.347,132,0.394,134,1.797,145,0.186,146,0.121,182,0.821,183,1.601,184,1.186,188,2.068,189,1.21,190,1.21,191,1.087,192,1.127,193,1.414,194,1.185,195,2.215,196,1.147,197,2.215,198,1.127,199,1.168,200,1.147,201,1.21,202,1.127,203,1.689,204,1.147,205,1.21,206,1.127,207,1.21,208,1.087,209,1.107,210,1.64,211,1.946,212,1.087,213,1.127,214,1.127,215,1.107,216,1.21,217,1.147,218,1.946,219,1.21,220,1.21,221,1.147,222,2.106,223,1.127,224,1.946,225,1.147,226,1.147,227,1.127,228,1.21,229,1.107,230,1.147,231,1.21,232,1.127,233,1.21,234,1.21,235,1.127,236,1.21,237,1.087,238,1.127,239,1.21,240,1.107,241,1.21,242,0.996,243,1.21,244,1.107,245,1.779,246,1.21,247,1.107,248,1.21,249,1.107,250,1.21,251,1.05,252,1.21,253,1.127,254,1.031,255,1.127,256,1.147,257,1.21,258,1.127,259,1.21,260,1.21,261,1.127,262,1.21,263,1.127,264,1.21,265,1.05,266,1.21,267,1.127,268,1.127,269,1.21,270,1.127,271,1.147,272,1.21,273,1.087,274,1.107,275,1.888,276,1.127,277,0.896,278,1.147,279,1.127,280,1.127,281,1.147,282,1.127,283,1.21,284,1.127,285,1.127,286,1.21,287,1.107,288,1.21,289,1.127,290,1.21,291,1.127,292,1.21,293,1.127,294,1.21,295,1.127,296,1.068,297,1.087,298,1.21,299,1.107,300,1.21,301,1.107,302,1.21,303,1.107,304,1.21,305,1.107,306,1.21,307,1.107,308,1.168,309,1.21,310,1.107,311,1.147,312,1.087,313,1.21,314,0.004,315,0.004,332,3.18,333,3.15,344,4.705,350,3.931,353,5.062,1289,2.885,1291,6.609,1292,4.439,1293,4.418,1294,4.418,1295,4.418,1296,2.564]],["title/components/DefaultOutputComponent.html",[0,0.247,212,1.198]],["body/components/DefaultOutputComponent.html",[0,0.412,1,1.141,2,0.259,3,0.259,4,1.451,5,1.226,6,1.226,8,0.227,10,0.477,19,1.082,22,0.991,24,0.007,26,2.296,27,2.024,28,2.181,30,1.644,32,0.488,33,0.814,35,1.476,38,1.001,41,2.31,43,2.437,60,0.326,64,0.595,66,0.814,87,0.92,108,1.559,110,1.121,113,1.219,130,3.377,132,0.399,145,0.188,146,0.123,182,0.831,183,1.615,184,1.197,188,2.08,189,1.226,190,1.226,191,1.101,192,1.141,193,1.427,194,1.193,195,2.226,196,1.162,197,2.226,198,1.141,199,1.183,200,1.162,201,1.226,202,1.141,203,1.705,204,1.162,205,1.226,206,1.141,207,1.226,208,1.101,209,1.121,210,1.648,211,1.959,212,1.902,213,1.141,214,1.141,215,1.121,216,1.226,217,1.162,218,1.959,219,1.226,220,1.226,221,1.162,222,2.118,223,1.141,224,1.959,225,1.162,226,1.162,227,1.141,228,1.226,229,1.121,230,1.162,231,1.226,232,1.141,233,1.226,234,1.226,235,1.141,236,1.226,237,1.101,238,1.141,239,1.226,240,1.121,241,1.226,242,1.009,243,1.226,244,1.121,245,1.792,246,1.226,247,1.121,248,1.226,249,1.121,250,1.226,251,1.063,252,1.226,253,1.141,254,1.045,255,1.141,256,1.162,257,1.226,258,1.141,259,1.226,260,1.226,261,1.141,262,1.226,263,1.141,264,1.226,265,1.063,266,1.226,267,1.141,268,1.141,269,1.226,270,1.141,271,1.162,272,1.226,273,1.101,274,1.121,275,1.895,276,1.141,277,0.908,278,1.162,279,1.141,280,1.141,281,1.162,282,1.141,283,1.226,284,1.141,285,1.141,286,1.226,287,1.121,288,1.226,289,1.141,290,1.226,291,1.141,292,1.226,293,1.141,294,1.226,295,1.141,296,1.082,297,1.101,298,1.226,299,1.121,300,1.226,301,1.121,302,1.226,303,1.121,304,1.226,305,1.121,306,1.226,307,1.121,308,1.183,309,1.226,310,1.121,311,1.162,312,1.101,313,1.226,314,0.004,315,0.004,333,3.178,371,2.456,687,3.895,979,2.851,1116,2.272,1285,3.658,1286,5.536,1289,2.922,1290,8.477,1291,5.845,1296,2.598,1297,4.891,1298,5.536,1299,4.475,1300,4.475,1301,6.222,1302,4.475,1303,6.222,1304,4.255]],["title/directives/DropzoneDirective.html",[184,0.936,299,1.219]],["body/directives/DropzoneDirective.html",[2,0.317,3,0.317,8,0.461,10,0.584,22,1.212,24,0.007,25,1.645,26,1.634,32,0.597,35,1.732,38,0.881,60,0.249,64,0.757,66,1.188,71,0.93,76,1.163,86,0.833,87,0.584,88,0.584,104,4.706,108,2.102,113,0.759,132,0.488,145,0.231,146,0.217,184,1.674,299,1.785,312,1.754,314,0.005,315,0.005,346,1.17,371,2.667,379,1.916,385,2.779,386,2.772,415,2.765,431,5.824,440,6.341,453,4.79,476,3.196,520,1.844,538,6.133,580,1.74,1219,5.703,1305,4.871,1306,5.824,1307,7.126,1308,8.7,1309,5.173,1310,7.922,1311,7.922,1312,7.05,1313,8.391,1314,8.919,1315,4.474,1316,5.474,1317,5.824,1318,5.824,1319,5.474,1320,5.474,1321,5.474,1322,6.046,1323,5.474,1324,5.474,1325,6.806,1326,5.474,1327,5.474,1328,5.474,1329,5.474,1330,5.474,1331,5.474,1332,5.474,1333,7.922,1334,5.703,1335,7.742,1336,5.474,1337,5.474,1338,5.474,1339,5.474,1340,5.474,1341,5.474,1342,5.474]],["title/components/DynamicRackComponent.html",[0,0.247,213,1.241]],["body/components/DynamicRackComponent.html",[0,0.417,1,1.181,2,0.268,3,0.268,4,0.939,5,1.268,6,1.268,8,0.235,10,0.494,19,1.119,22,1.025,23,1.877,24,0.007,26,2.298,27,2.029,30,1.683,35,0.956,41,1.596,55,1.069,60,0.29,64,0.609,66,0.606,70,2.375,72,1.949,86,0.705,87,0.946,88,0.494,106,2.069,108,1.596,110,1.16,112,1.843,113,0.883,132,0.413,145,0.195,146,0.127,171,1.801,182,0.86,183,1.653,184,1.509,188,2.11,189,1.268,190,1.268,191,1.139,192,1.181,193,1.461,194,1.372,195,2.253,196,1.202,197,2.253,198,1.181,199,1.223,200,1.202,201,1.268,202,1.181,203,1.745,204,1.202,205,1.268,206,1.181,207,1.268,208,1.139,209,1.16,210,1.668,211,1.995,212,1.139,213,2,214,1.181,215,1.965,216,1.268,217,1.202,218,1.995,219,1.268,220,1.268,221,1.202,222,2.149,223,1.181,224,1.995,225,1.202,226,1.202,227,1.181,228,1.268,229,1.16,230,1.202,231,1.268,232,1.181,233,1.268,234,1.268,235,1.181,236,1.268,237,1.139,238,1.181,239,1.268,240,1.16,241,1.268,242,1.043,243,1.268,244,1.16,245,1.824,246,1.268,247,1.16,248,1.268,249,1.16,250,1.268,251,1.1,252,1.268,253,1.181,254,1.081,255,1.181,256,1.202,257,1.268,258,1.181,259,1.268,260,1.268,261,1.181,262,1.268,263,1.181,264,1.268,265,1.1,266,1.268,267,1.181,268,1.181,269,1.268,270,1.181,271,1.202,272,1.268,273,1.139,274,1.16,275,1.915,276,1.181,277,0.939,278,1.202,279,1.181,280,1.181,281,1.202,282,1.181,283,1.268,284,1.181,285,1.181,286,1.268,287,1.16,288,1.268,289,1.181,290,1.268,291,1.181,292,1.268,293,1.181,294,1.268,295,1.181,296,1.119,297,1.139,298,1.268,299,1.16,300,1.268,301,1.16,302,1.268,303,1.16,304,1.268,305,1.16,306,1.268,307,1.16,308,1.223,309,1.268,310,1.16,311,1.202,312,1.139,313,1.268,314,0.004,315,0.004,346,1.557,434,2.847,580,1.471,1116,2.326,1172,2.995,1343,5.206,1344,5.206,1345,4.12,1346,4.861,1347,6.369,1348,4.12,1349,7.562,1350,4.63,1351,5.206,1352,5.206,1353,5.668,1354,4.63,1355,4.63,1356,4.63]],["title/components/DynamicSlotComponent.html",[0,0.247,214,1.241]],["body/components/DynamicSlotComponent.html",[0,0.453,1,1.071,2,0.243,3,0.243,4,0.852,5,1.15,6,1.15,8,0.213,10,0.448,19,1.015,22,0.93,23,1.754,24,0.007,26,2.291,27,2.022,30,1.572,32,0.458,33,0.778,35,0.867,38,0.676,41,2.064,43,1.572,44,0.923,55,1.089,60,0.271,64,0.81,66,0.904,70,2.218,72,1.82,74,1.464,75,1.365,76,0.825,86,0.906,87,0.939,88,0.635,105,1.788,106,2.659,108,1.49,110,1.052,112,1.722,113,1.1,121,1.927,132,0.374,142,1.731,145,0.177,146,0.115,171,2.315,182,0.78,183,1.544,184,1.446,188,2.022,189,1.15,190,1.15,191,1.033,192,1.071,193,1.365,194,1.324,195,2.174,196,1.09,197,2.174,198,1.071,199,1.11,200,1.09,201,1.15,202,1.071,203,1.63,204,1.09,205,1.15,206,1.071,207,1.15,208,1.033,209,1.052,210,1.609,211,1.893,212,1.033,213,1.071,214,1.917,215,1.988,216,1.15,217,1.09,218,1.893,219,1.15,220,1.15,221,1.09,222,2.059,223,1.071,224,1.893,225,1.09,226,1.09,227,1.071,228,1.15,229,1.052,230,1.09,231,1.15,232,1.071,233,1.15,234,1.15,235,1.071,236,1.15,237,1.033,238,1.071,239,1.15,240,1.052,241,1.15,242,0.946,243,1.15,244,1.052,245,1.731,246,1.15,247,1.052,248,1.15,249,1.052,250,1.15,251,0.998,252,1.15,253,1.071,254,0.98,255,1.071,256,1.09,257,1.15,258,1.071,259,1.15,260,1.15,261,1.071,262,1.15,263,1.071,264,1.15,265,0.998,266,1.15,267,1.071,268,1.071,269,1.15,270,1.071,271,1.09,272,1.15,273,1.033,274,1.052,275,1.857,276,1.071,277,0.852,278,1.09,279,1.071,280,1.071,281,1.09,282,1.071,283,1.15,284,1.071,285,1.071,286,1.15,287,1.052,288,1.15,289,1.071,290,1.15,291,1.071,292,1.15,293,1.071,294,1.15,295,1.071,296,1.015,297,1.033,298,1.15,299,1.052,300,1.15,301,1.052,302,1.15,303,1.052,304,1.15,305,1.052,306,1.15,307,1.052,308,1.11,309,1.15,310,1.988,311,1.951,312,1.033,313,1.15,314,0.004,315,0.004,346,1.477,365,2.534,434,3.36,436,2.576,502,3.337,580,1.334,1116,2.172,1172,2.798,1343,6.143,1346,4.54,1348,3.737,1349,7.332,1351,5.648,1352,4.863,1353,5.294,1357,5.411,1358,3.737,1359,4.863,1360,6.734,1361,4.863,1362,5.95,1363,4.863,1364,3.63,1365,4.199,1366,6.485,1367,4.863,1368,3.737,1369,4.199,1370,4.199,1371,4.199,1372,4.199,1373,4.199,1374,4.199,1375,4.199]],["title/directives/EntriesDirective.html",[184,0.936,301,1.219]],["body/directives/EntriesDirective.html",[0,0.217,2,0.248,3,0.248,4,0.868,7,1.664,8,0.217,10,0.456,15,1.651,21,3.673,22,0.947,24,0.007,25,1.51,26,1.382,27,0.868,32,0.466,33,0.788,35,1.795,38,1.123,39,1.718,43,2.337,44,0.935,45,2.575,46,3.988,55,0.878,60,0.388,61,3.38,64,0.831,65,1.312,66,1.234,75,1.738,76,1.308,77,1.898,86,0.918,87,0.643,88,0.852,103,3.297,113,1.107,116,3.157,121,2.455,132,0.381,135,1.912,142,1.071,145,0.18,146,0.117,162,1.469,167,2.011,184,1.343,185,1.701,186,1.78,187,2.123,194,1.164,210,1.818,242,1.573,301,1.51,314,0.004,315,0.004,345,3.082,346,0.914,347,2.251,348,2.826,363,1.96,365,4.05,369,5.326,373,1.457,378,4.6,379,1.832,390,2.767,394,4.339,409,2.066,411,3.264,414,3.264,415,2.096,416,4.562,421,6.194,452,2.247,499,4.09,520,2.792,577,1.622,580,1.359,817,4.773,863,3.914,869,3.662,907,6.525,932,3.079,947,3.806,1017,4.744,1034,2.677,1035,3.496,1376,3.806,1377,4.926,1378,6.194,1379,6.744,1380,6.744,1381,6.194,1382,6.028,1383,6.98,1384,6.028,1385,4.277,1386,3.773,1387,6.028,1388,4.277,1389,4.277,1390,4.277,1391,7.578,1392,4.277,1393,4.277,1394,4.6,1395,4.277,1396,4.277,1397,4.277,1398,4.277,1399,4.277,1400,4.277,1401,6.028,1402,4.277,1403,4.277,1404,4.277,1405,4.277,1406,4.277,1407,4.277,1408,6.98,1409,6.028,1410,3.264,1411,4.277,1412,4.277,1413,4.277,1414,3.496,1415,4.277,1416,6.98,1417,6.211,1418,7.578,1419,6.98,1420,4.277,1421,4.277,1422,4.277,1423,4.277,1424,4.277,1425,4.277,1426,4.277,1427,4.277]],["title/directives/EntryDirective.html",[184,0.936,303,1.219]],["body/directives/EntryDirective.html",[2,0.294,3,0.294,4,1.723,7,1.978,8,0.258,10,0.542,15,1.859,21,4.02,22,1.125,24,0.007,25,1.283,26,1.556,27,1.031,32,0.554,33,0.888,35,1.871,44,1.052,46,4.289,55,1.122,60,0.371,64,0.877,65,1.773,66,1.223,71,0.863,76,1.211,77,1.273,86,0.774,87,0.542,88,0.542,103,3.326,113,0.94,116,3.327,121,2.198,132,0.453,135,2.272,145,0.214,146,0.139,184,1.568,185,2.022,186,2.115,187,2.523,210,1.979,242,1.721,303,1.7,314,0.005,315,0.005,345,3.315,346,1.087,347,2.675,348,3.039,362,5.102,363,2.329,365,4.184,366,4.109,369,5.829,370,5.112,371,2.59,373,1.641,378,5.178,379,1.641,382,2.584,384,3.683,385,1.555,386,2.692,390,2.478,391,6.038,394,4.884,397,4.154,398,3.06,409,2.455,411,3.879,414,3.879,415,1.526,416,4.085,421,5.546,580,1.615,863,4.284,869,3.892,932,3.659,946,4.523,1017,3.182,1034,3.182,1070,4.154,1377,5.546,1378,6.243,1417,4.523,1428,4.523,1429,6.797,1430,6.785,1431,5.083,1432,5.083,1433,5.083,1434,5.083,1435,5.083,1436,5.083,1437,5.083,1438,5.083,1439,5.083,1440,5.083,1441,6.785,1442,5.083,1443,5.083,1444,5.083]],["title/components/EntryListComponent.html",[0,0.247,223,1.241]],["body/components/EntryListComponent.html",[0,0.35,1,0.766,2,0.174,3,0.174,4,0.61,5,0.823,6,0.823,7,1.169,8,0.152,10,0.321,18,2.784,19,0.727,22,0.665,24,0.007,25,0.568,26,2.259,27,1.988,28,1.627,30,1.227,32,0.328,33,0.954,34,1.627,35,1.505,38,1.223,39,1.698,41,1.421,43,0.794,44,0.99,46,2.443,55,0.584,60,0.392,64,0.841,65,1.501,66,1.192,70,1.12,71,0.51,72,1.953,74,0.74,75,1.301,76,1.161,77,1.827,84,2.235,86,0.972,87,0.907,88,0.86,103,3.124,105,1.978,108,1.163,110,0.753,113,0.786,116,2.161,123,5.057,130,1.631,132,0.268,142,1.163,145,0.127,146,0.082,167,2.184,182,0.558,183,1.205,184,0.893,185,1.195,186,1.251,187,1.492,188,1.717,189,0.823,190,0.823,191,0.74,192,0.766,193,1.065,194,1.548,195,1.89,196,0.78,197,1.89,198,0.766,199,0.794,200,0.78,201,0.823,202,0.766,203,1.272,204,0.78,205,0.823,206,0.766,207,0.823,208,0.74,209,0.753,210,1.785,211,1.554,212,0.74,213,0.766,214,0.766,215,0.753,216,0.823,217,0.78,218,1.554,219,0.823,220,0.823,221,0.78,222,1.748,223,1.86,224,1.554,225,0.78,226,0.78,227,0.766,228,0.823,229,0.753,230,0.78,231,0.823,232,0.766,233,0.823,234,0.823,235,0.766,236,0.823,237,1.396,238,0.766,239,0.823,240,0.753,241,0.823,242,1.046,243,0.823,244,0.753,245,1.421,246,0.823,247,0.753,248,0.823,249,0.753,250,0.823,251,0.714,252,0.823,253,0.766,254,0.701,255,0.766,256,0.78,257,0.823,258,0.766,259,0.823,260,0.823,261,0.766,262,0.823,263,0.766,264,0.823,265,0.714,266,0.823,267,0.766,268,0.766,269,0.823,270,0.766,271,0.78,272,0.823,273,0.74,274,0.753,275,1.855,276,0.766,277,0.61,278,0.78,279,2.296,280,0.766,281,0.78,282,0.766,283,0.823,284,0.766,285,0.766,286,0.823,287,0.753,288,0.823,289,0.766,290,0.823,291,0.766,292,0.823,293,0.766,294,0.823,295,0.766,296,0.727,297,0.74,298,0.823,299,0.753,300,0.823,301,0.753,302,0.823,303,0.753,304,0.823,305,0.753,306,0.823,307,0.753,308,0.794,309,0.823,310,0.753,311,0.78,312,0.74,313,0.823,314,0.003,315,0.003,330,5.473,337,2.668,345,2.596,346,1.213,348,2.379,356,2.907,363,1.377,365,2.938,371,1.475,379,0.727,385,0.92,386,0.993,390,1.695,392,1.377,398,1.809,409,1.451,430,2.293,433,1.535,447,0.974,452,2.928,462,1.28,476,1.144,481,2.536,486,1.685,491,1.744,499,1.413,500,2.596,516,1.535,519,2.456,560,4.28,565,3.08,571,3.082,578,1.631,579,2.293,614,1.343,631,1.343,648,3.869,663,1.582,670,1.744,685,1.744,754,1.744,760,5.992,865,3.082,869,2.6,876,3.838,877,3.704,878,2.596,879,2.656,880,5.653,907,4.364,912,5.801,913,1.881,916,2.456,921,1.582,931,1.631,932,4.966,958,3.705,965,4.577,992,2.293,994,3.464,1010,2.74,1017,3.552,1034,1.881,1083,4.167,1092,2.456,1100,2.055,1226,2.456,1278,2.293,1377,3.795,1445,2.674,1446,5.674,1447,4.643,1448,4.132,1449,4.643,1450,7.602,1451,6.382,1452,4.643,1453,6.489,1454,3.175,1455,3.005,1456,3.88,1457,4.263,1458,4.643,1459,4.132,1460,3.005,1461,4.132,1462,2.674,1463,2.674,1464,3.005,1465,3.005,1466,3.005,1467,3.005,1468,2.674,1469,3.005,1470,1.377,1471,3.005,1472,3.005,1473,3.005,1474,3.005,1475,3.005,1476,4.319,1477,2.674,1478,3.005,1479,2.055,1480,3.005,1481,3.005,1482,3.005,1483,3.005,1484,3.005,1485,3.005,1486,3.005,1487,3.175,1488,3.005,1489,3.005,1490,3.005,1491,3.005,1492,3.005,1493,1.881,1494,1.881,1495,3.005,1496,1.809,1497,3.005,1498,3.005,1499,3.005,1500,3.005,1501,3.005,1502,3.005,1503,3.005,1504,3.005,1505,3.005,1506,3.005,1507,4.643,1508,4.643,1509,1.881,1510,3.005,1511,3.005,1512,2.674,1513,2.456,1514,3.005,1515,3.005,1516,3.005,1517,4.132]],["title/components/ErrorComponent.html",[0,0.247,227,1.241]],["body/components/ErrorComponent.html",[0,0.407,1,1.101,2,0.25,3,0.25,4,0.876,5,1.183,6,1.183,8,0.219,10,0.461,15,1.663,19,1.044,20,3.693,21,3.693,22,0.956,24,0.007,26,2.294,27,2.021,30,1.604,32,0.471,35,1.655,44,0.941,46,4.005,47,4.132,60,0.276,64,0.58,66,1.049,76,1.055,77,1.758,84,1.966,86,0.658,87,0.958,88,0.461,103,2.263,108,1.52,110,1.082,113,0.841,119,3.523,132,0.385,142,1.082,145,0.182,146,0.118,182,0.802,183,1.576,184,1.168,188,2.048,189,1.183,190,1.183,191,1.063,192,1.101,193,1.392,194,1.338,195,2.197,196,1.121,197,2.197,198,1.101,199,1.141,200,1.121,201,1.183,202,1.789,203,1.663,204,1.121,205,1.183,206,1.101,207,1.183,208,1.063,209,1.082,210,1.733,211,1.922,212,1.063,213,1.101,214,1.101,215,1.082,216,1.183,217,1.121,218,1.922,219,1.183,220,1.183,221,1.121,222,2.085,223,1.101,224,1.922,225,1.121,226,1.121,227,1.941,228,1.183,229,1.082,230,1.121,231,1.183,232,1.101,233,1.183,234,1.183,235,1.101,236,1.183,237,1.063,238,1.101,239,1.183,240,1.082,241,1.183,242,0.973,243,1.183,244,1.082,245,1.758,246,1.183,247,1.082,248,1.183,249,1.082,250,1.183,251,1.026,252,1.183,253,1.101,254,1.008,255,1.101,256,1.121,257,1.183,258,1.101,259,1.183,260,1.183,261,1.101,262,1.183,263,1.101,264,1.183,265,1.026,266,1.183,267,1.101,268,1.101,269,1.183,270,1.101,271,1.121,272,1.183,273,1.063,274,1.082,275,1.874,276,1.101,277,0.876,278,1.121,279,1.101,280,1.101,281,1.121,282,1.101,283,1.183,284,1.101,285,1.101,286,1.183,287,1.082,288,1.183,289,1.101,290,1.183,291,1.101,292,1.183,293,1.101,294,1.183,295,1.101,296,1.044,297,1.063,298,1.183,299,1.082,300,1.183,301,1.082,302,1.183,303,1.082,304,1.183,305,1.082,306,1.183,307,1.082,308,1.141,309,1.183,310,1.082,311,1.121,312,1.063,313,1.183,314,0.004,315,0.004,325,2.044,345,1.757,346,0.923,500,3.653,563,3.737,564,4.497,580,1.373,614,2.713,858,4.369,859,3.404,860,4.96,861,4.632,878,2.469,879,3.167,921,2.273,1116,2.562,1518,3.843,1519,6.069,1520,3.109,1521,6.069,1522,4.319,1523,4.319,1524,4.319,1525,4.319,1526,5.401,1527,4.319,1528,4.319,1529,4.319,1530,4.319,1531,4.319,1532,4.319,1533,4.319,1534,4.319,1535,4.319]],["title/classes/Field.html",[41,1.219,146,0.133]],["body/classes/Field.html",[0,0.378,2,0.208,3,0.208,7,2.067,8,0.182,15,1.455,24,0.007,25,1.195,32,0.579,33,1.197,34,1.259,35,1.779,38,1.509,41,2.367,42,2.571,43,1.671,44,1.211,55,0.982,56,3.333,60,0.163,64,0.913,65,2.115,66,1.249,71,0.61,75,1.218,76,1.033,86,0.547,87,0.885,88,1.034,112,2.586,113,1.15,118,3.123,142,1.331,145,0.151,146,0.236,171,3.227,194,1.413,314,0.004,315,0.004,334,4.378,346,0.768,363,1.646,366,3.672,371,2.37,379,2.238,382,2.408,390,1.311,402,3.632,415,2.344,429,2.795,436,2.357,437,1.529,438,3.824,447,1.721,452,3.259,454,3.374,464,2.883,545,4.502,614,3.123,621,3.824,631,2.826,769,4.341,843,2.713,901,3.083,938,2.935,979,3.949,986,1.646,1010,4.162,1059,3.198,1116,2.851,1142,4.054,1143,3.432,1162,2.585,1165,2.585,1172,3.901,1182,3.198,1470,1.646,1479,3.632,1509,3.325,1536,3.195,1537,4.689,1538,6.217,1539,5.332,1540,4.206,1541,5.098,1542,5.71,1543,5.62,1544,4.887,1545,6.986,1546,5.312,1547,3.59,1548,4.341,1549,3.59,1550,3.59,1551,3.59,1552,4.054,1553,3.824,1554,4.727,1555,3.59,1556,3.59,1557,5.312,1558,4.054,1559,3.59,1560,4.341,1561,5.312,1562,4.341,1563,3.59,1564,3.59,1565,3.59,1566,3.59,1567,4.727,1568,3.083,1569,3.59,1570,3.59,1571,3.59,1572,7.807,1573,3.59,1574,3.632,1575,3.59,1576,3.59,1577,3.59,1578,3.59,1579,3.59,1580,3.59,1581,4.727,1582,2.345,1583,2.935,1584,2.74,1585,2.979,1586,2.455,1587,3.195,1588,3.083,1589,2.084,1590,2.014,1591,2.935,1592,3.195,1593,3.195,1594,2.935,1595,1.889,1596,3.195,1597,2.935,1598,2.935,1599,4.054,1600,4.341,1601,2.014,1602,3.195,1603,4.054,1604,3.195,1605,3.195,1606,2.455,1607,3.195,1608,3.195,1609,2.935,1610,2.935,1611,3.195,1612,2.74,1613,2.585,1614,2.74,1615,2.345,1616,3.195,1617,2.74,1618,4.341,1619,3.59,1620,3.59,1621,3.195,1622,3.59,1623,2.935]],["title/interfaces/FieldConfig.html",[961,1.435,1624,2.93]],["body/interfaces/FieldConfig.html",[2,0.424,3,0.424,8,0.372,10,0.782,24,0.007,32,0.798,41,2.26,65,1.856,66,0.958,112,2.468,145,0.308,194,1.222,314,0.006,315,0.006,836,4.609,843,4.357,961,2.514,963,4.586,999,4.119,1537,5.393,1624,5.134,1625,7.589,1626,7.325]],["title/interfaces/FileOptions.html",[961,1.435,1627,3.328]],["body/interfaces/FileOptions.html",[0,0.19,2,0.217,3,0.217,8,0.402,10,0.4,24,0.007,25,0.709,32,0.409,33,0.717,39,1.951,43,2.301,55,0.897,60,0.402,64,0.803,65,1.92,70,2.045,71,1.516,72,1.147,75,0.86,76,1.326,79,2.257,84,2.311,87,0.585,88,0.989,103,1.398,112,1.876,116,3.019,118,3.188,126,1.491,132,0.334,142,1.986,145,0.273,146,0.103,162,2.227,171,2.776,193,2.224,194,1.19,210,1.315,275,1.461,277,0.761,296,2.105,314,0.004,315,0.005,338,3.903,345,2.637,348,2.045,366,2.579,368,5.191,373,1.568,379,2.071,384,2.035,385,1.147,386,2.356,407,5.191,408,2.564,409,1.811,415,1.647,423,2.861,451,4.466,460,2.176,462,1.597,464,2.035,476,2.088,481,2.898,500,2.637,503,2.513,520,2.184,530,2.564,537,2.699,566,2.347,577,1.009,580,1.191,648,3.636,659,2.141,684,2.448,685,3.183,722,3.636,730,2.699,737,2.448,850,2.977,865,1.811,931,2.035,941,3.75,961,2.237,977,2.699,986,1.718,994,2.035,996,2.257,997,2.564,998,2.257,999,1.811,1000,2.257,1001,1.635,1002,2.448,1033,2.564,1037,2.448,1053,2.176,1084,3.183,1101,2.448,1296,2.176,1364,2.648,1386,2.347,1457,3.519,1470,1.718,1476,3.433,1493,2.347,1494,2.347,1496,3.301,1585,2.103,1627,4.434,1628,2.861,1629,5.444,1630,6.48,1631,5.444,1632,5.444,1633,5.444,1634,3.947,1635,3.433,1636,3.947,1637,3.433,1638,4.482,1639,4.482,1640,4.482,1641,3.064,1642,4.948,1643,2.861,1644,3.064,1645,3.064,1646,3.064,1647,3.064,1648,2.564,1649,3.064,1650,3.064,1651,3.064,1652,4.482,1653,4.233,1654,3.064,1655,2.564,1656,2.699,1657,2.347,1658,3.064,1659,6.204,1660,3.064,1661,3.064,1662,5.299,1663,3.064,1664,4.482,1665,4.482,1666,4.482,1667,4.482,1668,4.482,1669,4.482,1670,4.482,1671,4.482,1672,4.482,1673,4.482,1674,4.948,1675,2.861,1676,3.064,1677,3.064,1678,3.064,1679,4.482,1680,3.064,1681,4.482,1682,3.064,1683,5.83,1684,3.064,1685,3.064,1686,3.064,1687,4.482,1688,4.482,1689,3.064,1690,3.064,1691,2.861,1692,3.064,1693,2.103,1694,2.564,1695,3.064,1696,3.064,1697,3.064,1698,3.064,1699,3.064,1700,3.064,1701,3.064,1702,3.064,1703,3.064,1704,3.064,1705,3.064,1706,3.064]],["title/injectables/FileService.html",[373,1.177,460,2.825]],["body/injectables/FileService.html",[0,0.251,2,0.189,3,0.189,8,0.409,10,0.348,24,0.007,25,0.935,32,0.356,33,0.647,38,1.072,39,2.27,43,2.224,44,0.767,55,0.901,60,0.389,64,0.804,65,1.861,66,1.08,70,2.485,71,1.518,72,0.999,75,1.135,76,1.331,79,1.966,84,2.536,86,1.192,87,0.86,88,0.968,103,1.217,112,1.728,113,0.924,116,3.301,118,3.368,126,1.968,132,0.291,142,1.888,145,0.252,146,0.089,162,2.052,171,1.925,193,2.21,194,1.195,210,1.528,275,1.346,277,1.004,296,2.161,314,0.003,315,0.005,337,2.327,338,4.012,345,3.065,346,0.698,347,1.718,348,2.485,366,2.327,368,4.897,373,1.731,379,1.444,384,2.686,385,1.514,386,2.585,392,2.267,407,5.513,408,2.233,409,1.577,415,2.001,418,2.492,423,2.492,451,5.047,460,2.872,462,2.107,464,2.686,476,2.275,481,2.67,500,2.912,503,2.267,520,2.012,530,2.233,537,2.351,566,3.097,577,0.879,580,1.038,648,4.39,659,2.585,684,2.132,685,2.872,722,3.35,730,2.351,737,2.132,850,1.773,865,2.389,931,2.686,941,3.383,961,1.761,977,3.561,986,1.497,994,1.773,996,2.978,997,3.383,998,2.978,999,2.389,1000,2.978,1001,2.158,1002,3.231,1033,3.383,1037,2.132,1053,2.872,1084,3.868,1101,2.132,1296,1.895,1364,2.885,1386,3.097,1457,4.249,1470,2.267,1476,3.097,1493,2.044,1494,2.044,1496,1.966,1585,1.831,1627,5.153,1628,2.492,1629,2.492,1630,4.043,1631,2.492,1632,2.492,1633,2.492,1634,2.351,1635,2.044,1636,2.351,1637,2.044,1638,2.669,1639,2.669,1640,4.043,1641,2.669,1642,5.75,1643,2.492,1644,2.669,1645,2.669,1646,5.446,1647,5.446,1648,4.085,1649,4.043,1650,2.669,1651,2.669,1652,4.043,1653,3.9,1654,2.669,1655,2.233,1656,2.351,1657,2.044,1658,2.669,1659,6.397,1660,4.043,1661,4.882,1662,4.882,1663,2.669,1664,4.043,1665,4.043,1666,4.043,1667,4.043,1668,4.043,1669,4.043,1670,4.043,1671,4.043,1672,4.043,1673,4.043,1674,4.558,1675,3.775,1676,2.669,1677,2.669,1678,2.669,1679,4.043,1680,2.669,1681,4.043,1682,4.043,1683,5.446,1684,2.669,1685,2.669,1686,2.669,1687,4.043,1688,4.043,1689,2.669,1690,2.669,1691,2.492,1692,2.669,1693,1.831,1694,2.233,1695,2.669,1696,2.669,1697,2.669,1698,2.669,1699,2.669,1700,2.669,1701,2.669,1702,2.669,1703,4.043,1704,4.043,1705,2.669,1706,2.669,1707,4.947,1708,4.947,1709,4.947,1710,4.947,1711,4.402,1712,4.947,1713,3.265,1714,3.265,1715,3.265,1716,3.265,1717,3.265,1718,3.265,1719,3.265,1720,3.265]],["title/modules/FilesModule.html",[316,1.041,1079,3.503]],["body/modules/FilesModule.html",[2,0.305,3,0.305,8,0.267,23,2.291,24,0.007,58,1.809,60,0.44,132,0.47,134,2.142,141,2.838,145,0.348,146,0.144,182,0.978,185,2.094,192,2.413,193,1.593,194,1.159,196,2.482,198,2.439,199,1.392,295,2.439,297,2.329,299,2.371,307,2.371,314,0.005,315,0.005,316,1.485,318,2.094,323,2.825,324,2.005,325,1.774,327,3.896,328,2.645,427,4.303,460,5.122,517,4.303,541,4.303,599,5.312,601,3.184,602,2.353,608,4.303,920,3.438,1079,7.148,1080,6.034,1081,6.18,1086,5,1097,5.301,1102,4.685,1104,4.303,1721,4.685,1722,4.685,1723,5.265,1724,4.685,1725,4.685,1726,5.265,1727,3.79,1728,3.438,1729,4.685,1730,4.685,1731,5.265,1732,5.265,1733,5.265]],["title/interfaces/Focus.html",[961,1.435,1734,3.328]],["body/interfaces/Focus.html",[2,0.424,3,0.424,8,0.372,24,0.007,32,0.798,33,1.116,44,1.323,60,0.333,64,0.7,66,0.958,76,1.015,132,0.653,145,0.308,314,0.006,315,0.006,386,3.069,961,2.514,1734,5.832,1735,6.518,1736,8.268,1737,6.688,1738,7.325]],["title/directives/FocusDirective.html",[184,0.936,305,1.219]],["body/directives/FocusDirective.html",[2,0.393,3,0.393,8,0.344,15,2.232,20,4.596,22,1.501,24,0.007,26,2.003,32,0.739,35,1.87,44,1.263,47,4.918,60,0.309,64,0.779,66,1.142,76,0.94,77,1.699,86,1.032,87,0.723,88,0.723,104,5.081,108,2.041,132,0.605,145,0.286,146,0.186,184,1.68,305,2.041,314,0.006,315,0.006,346,1.45,379,1.639,385,2.075,386,2.885,499,3.189,580,2.155,1315,5.542,1739,6.034,1740,9.268,1741,8.147,1742,6.78,1743,5.542,1744,6.78,1745,6.78,1746,6.78,1747,6.78,1748,6.78]],["title/interfaces/FormConfig.html",[961,1.435,1749,3.714]],["body/interfaces/FormConfig.html",[2,0.429,3,0.429,8,0.376,10,0.79,18,3.743,24,0.007,60,0.337,145,0.312,314,0.006,315,0.006,430,6.548,516,3.782,961,2.529,963,4.635,1749,7.114,1750,6.588,1751,6.194,1752,6.051]],["title/modules/FormModule.html",[316,1.041,1753,3.328]],["body/modules/FormModule.html",[2,0.271,3,0.271,8,0.238,19,2.151,23,2.16,24,0.007,58,1.611,60,0.442,113,0.89,132,0.418,134,1.907,141,2.676,145,0.332,146,0.128,173,2.721,174,2.935,182,0.871,200,2.412,204,2.412,206,2.37,212,2.189,229,2.328,230,2.412,263,2.37,291,2.37,314,0.004,315,0.004,316,1.374,318,1.865,323,2.613,324,1.785,325,1.579,327,3.603,328,2.447,353,2.935,454,2.264,601,2.944,602,2.095,604,5.012,1095,3.375,1139,6.689,1297,3.206,1753,6.823,1754,4.172,1755,4.172,1756,4.172,1757,4.172,1758,4.172,1759,6.689,1760,6.689,1761,6.355,1762,6.068,1763,5.34,1764,5.834,1765,5.57,1766,6.141,1767,4.688,1768,3.832,1769,4.688,1770,4.688,1771,4.172,1772,4.688,1773,4.688,1774,4.688,1775,4.688,1776,4.688,1777,4.172,1778,3.578,1779,4.172,1780,4.688,1781,3.832,1782,4.688,1783,4.688]],["title/injectables/FormService.html",[373,1.177,1766,3.503]],["body/injectables/FormService.html",[2,0.302,3,0.302,8,0.264,10,0.556,14,4.069,24,0.007,32,0.568,39,2.165,40,4.137,41,2.449,42,3.65,44,1.07,55,0.972,60,0.375,64,0.787,66,1.077,71,1.454,72,2.11,75,1.888,76,1.301,77,1.305,86,1.253,87,0.878,88,0.878,112,2.824,119,4.003,122,2.921,127,5.152,132,0.464,134,2.119,142,2.204,145,0.219,146,0.212,167,2.45,171,2.027,314,0.005,315,0.005,373,1.87,415,1.564,433,3.523,462,2.937,500,2.119,507,5.637,563,3.217,614,3.083,631,2.328,663,3.629,761,3.331,822,3.629,961,2.033,1289,3.401,1544,5.875,1766,4.965,1784,4.635,1785,4.317,1786,6.897,1787,6.897,1788,6.897,1789,6.897,1790,6.897,1791,5.209,1792,6.897,1793,5.209,1794,6.897,1795,5.209,1796,6.897,1797,6.88,1798,6.897,1799,5.209,1800,8.23,1801,7.732,1802,4.635,1803,6.897,1804,5.209,1805,4.635,1806,5.209,1807,6.897,1808,5.209,1809,6.897,1810,5.209,1811,5.209,1812,5.209,1813,5.209,1814,5.209,1815,5.209,1816,5.209,1817,5.209,1818,5.209,1819,5.209]],["title/injectables/GeocodeService.html",[373,1.177,1820,3.178]],["body/injectables/GeocodeService.html",[2,0.292,3,0.292,8,0.256,10,0.538,11,4.224,24,0.007,32,0.549,35,1.677,39,2.255,44,1.046,60,0.385,64,0.809,66,1.108,71,1.38,75,1.999,76,1.303,86,1.289,87,0.903,88,0.903,108,2.035,116,3.094,132,0.449,141,2.464,142,1.905,145,0.212,146,0.138,188,1.356,245,2.295,314,0.006,315,0.005,337,3.173,346,1.078,373,1.839,382,2.57,433,3.447,444,4.857,486,4.749,520,1.698,580,1.602,815,3.155,822,2.652,837,3.916,850,4.41,1013,3.447,1143,3.663,1306,5.515,1317,5.515,1479,4.614,1820,4.406,1821,4.119,1822,5.847,1823,7.606,1824,6.747,1825,6.747,1826,6.747,1827,6.747,1828,5.04,1829,8.123,1830,7.921,1831,5.04,1832,6.747,1833,6.747,1834,5.04,1835,6.921,1836,6.747,1837,5.04,1838,5.515,1839,7.536,1840,5.515,1841,6.747,1842,5.04,1843,6.747,1844,6.747,1845,5.04,1846,4.119,1847,5.04,1848,5.04,1849,5.04,1850,4.485,1851,4.485,1852,5.04,1853,5.04,1854,5.04,1855,5.04,1856,4.224,1857,5.04,1858,5.04,1859,6.747,1860,4.119,1861,6.004,1862,5.04,1863,6.004,1864,5.04,1865,5.04,1866,5.04,1867,5.04,1868,5.04,1869,5.04,1870,4.119,1871,5.04,1872,5.04,1873,6.004,1874,5.04,1875,5.04,1876,5.04,1877,5.04,1878,5.04,1879,5.04,1880,5.04,1881,5.04,1882,5.04,1883,5.04]],["title/pipes/GroupPipe.html",[1138,2.561,1141,3.328]],["body/pipes/GroupPipe.html",[2,0.385,3,0.385,8,0.337,10,0.709,15,1.822,22,1.473,24,0.007,33,1.226,38,1.539,42,3.275,43,2.505,44,1.031,55,1.013,60,0.367,64,0.636,65,1.884,66,0.87,72,2.464,75,1.847,76,1.248,86,1.012,87,0.924,88,0.709,126,3.203,132,0.593,145,0.28,146,0.182,314,0.006,315,0.006,508,3.301,659,3.045,774,5.04,1010,3.889,1138,4.558,1141,6.155,1142,6.145,1143,3.61,1149,5.506,1884,5.917,1885,8.052,1886,6.65,1887,6.65,1888,6.65]],["title/injectables/HistoryService.html",[373,1.177,1082,3.503]],["body/injectables/HistoryService.html",[2,0.246,3,0.403,8,0.216,10,0.454,24,0.007,32,0.464,33,0.785,38,1.283,39,2.249,44,1.079,60,0.395,64,0.892,65,1.89,66,1.171,71,0.723,72,2.313,75,1.951,76,1.204,77,1.066,84,2.449,86,1.151,87,0.807,88,0.807,103,2.239,113,1.105,116,3.037,121,1.945,132,0.379,135,1.902,142,1.743,145,0.179,146,0.117,165,3.26,210,1.218,275,1.99,277,1.412,314,0.004,315,0.004,336,6.951,346,1.284,354,3.477,365,3.22,373,1.683,385,1.837,400,1.95,415,1.803,419,2.778,420,3.786,450,4.733,453,2.981,481,4.172,500,3.641,562,2.561,563,2.499,571,3.997,578,2.31,630,5.443,722,2.386,723,2.663,752,4.323,754,3.486,837,4.388,843,4.668,870,5.967,876,4.809,877,4.628,950,2.778,1017,5.324,1034,2.663,1082,5.443,1257,3.486,1364,3.652,1457,4.961,1493,2.663,1674,4.583,1889,3.786,1890,4.583,1891,8.505,1892,6.005,1893,6.005,1894,3.786,1895,6.005,1896,6.005,1897,4.254,1898,4.106,1899,5.344,1900,8.275,1901,6.005,1902,8.505,1903,4.254,1904,3.862,1905,5.443,1906,6.005,1907,4.254,1908,4.908,1909,5.344,1910,4.254,1911,4.254,1912,4.254,1913,6.728,1914,4.254,1915,4.254,1916,4.254,1917,4.254,1918,4.254,1919,8.505,1920,4.254,1921,4.254,1922,4.254,1923,6.005,1924,6.96,1925,4.583,1926,4.254,1927,4.254,1928,6.005,1929,4.254,1930,4.254,1931,6.005,1932,3.486,1933,6.005,1934,4.254,1935,4.254]],["title/components/IconComponent.html",[0,0.247,232,1.241]],["body/components/IconComponent.html",[0,0.426,1,1.034,2,0.235,3,0.235,4,0.822,5,1.111,6,1.111,8,0.206,10,0.433,15,1.59,19,0.98,20,3.567,22,0.898,24,0.007,26,2.288,27,2.019,30,1.534,32,0.442,33,0.759,34,2.034,35,1.616,44,0.9,47,4.016,55,0.93,60,0.356,64,0.648,65,1.263,66,0.968,73,4.177,74,1.428,75,0.93,76,0.562,77,1.016,86,0.617,87,1.008,88,0.433,108,1.454,110,1.016,113,0.939,118,3.307,121,2.536,132,0.362,139,5.326,145,0.285,146,0.186,182,0.753,183,1.506,184,1.117,188,1.991,189,1.111,190,1.111,191,0.998,192,1.034,193,1.331,194,1.131,195,2.145,196,1.053,197,2.145,198,1.034,199,1.072,200,1.053,201,1.111,202,1.034,203,1.59,204,1.053,205,1.111,206,1.034,207,1.111,208,0.998,209,1.016,210,1.588,211,1.857,212,0.998,213,1.034,214,1.034,215,1.016,216,1.111,217,1.053,218,1.857,219,1.111,220,1.111,221,1.053,222,2.027,223,1.034,224,1.857,225,1.053,226,1.053,227,1.034,228,1.111,229,1.016,230,1.053,231,1.111,232,1.887,233,1.111,234,1.111,235,1.034,236,1.111,237,0.998,238,1.034,239,1.111,240,1.016,241,1.111,242,0.914,243,1.111,244,1.016,245,1.698,246,1.111,247,1.016,248,1.111,249,1.016,250,1.111,251,0.963,252,1.111,253,1.034,254,0.946,255,1.034,256,1.053,257,1.111,258,1.034,259,1.111,260,1.111,261,1.034,262,1.111,263,1.034,264,1.111,265,0.963,266,1.111,267,1.034,268,1.034,269,1.111,270,1.034,271,1.053,272,1.111,273,0.998,274,1.016,275,1.836,276,1.034,277,0.822,278,1.053,279,1.034,280,1.034,281,1.053,282,1.034,283,1.111,284,1.034,285,1.034,286,1.111,287,1.016,288,1.111,289,1.034,290,1.111,291,1.034,292,1.111,293,1.034,294,1.111,295,1.034,296,0.98,297,0.998,298,1.111,299,1.016,300,1.111,301,1.016,302,1.111,303,1.016,304,1.111,305,1.016,306,1.111,307,1.016,308,1.072,309,1.111,310,1.016,311,1.053,312,0.998,313,1.111,314,0.004,315,0.005,346,0.867,355,2.803,363,1.858,562,4.08,565,3.15,576,2.648,580,1.288,629,3.094,878,3.009,1116,2.475,1257,2.353,1487,4.635,1509,2.538,1541,6.386,1936,3.608,1937,6.664,1938,4.631,1939,5.803,1940,4.055,1941,6.012,1942,5.803,1943,4.055,1944,4.055,1945,5.803,1946,4.743,1947,3.608,1948,3.314,1949,4.428,1950,5.164,1951,5.164,1952,3.608,1953,3.608,1954,3.608,1955,3.608,1956,5.803,1957,4.055,1958,4.055,1959,4.055,1960,2.773,1961,4.055,1962,5.803]],["title/modules/IconModule.html",[316,1.041,1763,3.047]],["body/modules/IconModule.html",[2,0.398,3,0.398,8,0.348,23,2.588,24,0.007,58,2.359,60,0.423,132,0.612,141,3.206,145,0.383,146,0.188,182,1.275,232,2.501,314,0.006,315,0.006,316,1.755,318,2.731,323,3.339,324,2.615,325,2.313,328,3.126,601,3.762,602,3.069,1763,6.06,1941,6.164,1954,6.111,1963,6.111,1964,6.111,1965,6.111,1966,6.111,1967,6.867,1968,6.867]],["title/injectables/IconService.html",[373,1.177,1941,3.178]],["body/injectables/IconService.html",[2,0.385,3,0.385,8,0.337,10,0.709,18,2.9,24,0.007,27,1.87,32,0.725,33,1.053,38,1.07,39,2.131,55,1.013,60,0.41,64,0.636,66,0.87,74,2.306,83,6.155,113,1.2,118,3.599,121,2.608,132,0.593,145,0.28,146,0.182,314,0.006,315,0.006,334,4.516,373,2.094,462,3.834,878,3.661,879,3.35,1541,6.4,1637,5.04,1937,6.869,1941,5.258,1955,5.917,1969,5.917,1970,7.078,1971,6.65,1972,5.917]],["title/directives/ImageDirective.html",[184,0.936,307,1.219]],["body/directives/ImageDirective.html",[2,0.273,3,0.273,4,1.308,8,0.239,10,0.503,15,1.767,18,2.057,21,3.869,22,1.044,24,0.007,25,1.219,26,1.479,32,0.514,33,0.844,35,1.839,38,0.759,39,1.945,44,1,46,4.159,55,1.041,60,0.389,64,0.874,65,2.024,66,1.196,71,0.801,76,1.267,77,1.616,86,1.203,87,0.843,88,0.843,104,4.907,108,1.616,113,0.654,118,3.533,132,0.42,145,0.199,146,0.129,184,1.521,193,2.096,297,1.587,307,1.616,308,2.089,314,0.004,315,0.004,345,3.367,346,1.008,347,2.481,348,3.186,355,2.277,363,2.161,365,3.962,366,3.893,368,5.405,369,4.922,375,3.079,379,1.56,388,5.74,390,2.355,392,2.161,407,5.66,408,3.225,409,2.277,410,3.079,411,3.598,413,5.74,414,3.598,415,2.208,416,2.839,520,1.588,654,2.839,941,3.225,991,5.272,1053,2.737,1059,3.883,1642,6.676,1643,3.598,1653,3.079,1693,4.642,1730,4.196,1973,4.196,1974,7.385,1975,6.45,1976,5.272,1977,6.361,1978,6.032,1979,9.035,1980,6.45,1981,6.765,1982,6.45,1983,4.715,1984,6.46,1985,5.74,1986,4.715,1987,5.74,1988,4.715,1989,4.715,1990,6.45,1991,6.45,1992,4.715,1993,6.45,1994,4.715,1995,6.45,1996,4.715,1997,4.715,1998,4.715,1999,4.715,2000,7.351,2001,4.715,2002,4.715,2003,4.715,2004,5.74,2005,4.715,2006,4.715,2007,5.272,2008,4.715,2009,6.45,2010,4.715,2011,4.715,2012,4.715,2013,6.45,2014,4.715]],["title/components/InputComponent.html",[0,0.247,110,1.219]],["body/components/InputComponent.html",[0,0.466,1,0.804,2,0.183,3,0.183,4,1.186,5,0.864,6,0.864,8,0.16,10,0.337,13,2.616,15,1.32,16,3.661,18,2.102,19,1.414,21,3.077,22,0.699,23,1.724,24,0.007,25,0.911,26,2.265,27,1.997,30,1.274,32,0.344,33,1.069,35,1.874,36,4.098,38,1.196,40,3.751,41,2.225,42,3.244,43,2.273,44,0.747,46,3.445,48,3.147,49,4.098,52,3.017,55,0.973,60,0.352,64,0.856,65,1.049,66,1.171,71,0.536,72,2.003,74,0.776,75,0.723,76,1.03,77,1.64,81,3.017,83,3.295,84,2.821,85,3.295,86,0.89,87,0.939,88,0.624,89,3.017,99,3.017,101,3.147,102,2.797,103,1.797,105,1.343,106,1.41,108,1.207,110,1.938,112,2.546,113,1.105,114,2.536,121,1.022,122,3.279,123,2.797,127,3.661,131,3.017,132,0.281,133,3.017,134,1.283,139,3.469,142,1.207,143,1.975,144,1.975,145,0.133,146,0.086,167,1.484,171,1.227,173,1.831,181,1.975,182,0.586,183,1.251,184,1.26,188,1.761,189,0.864,190,0.864,191,0.776,192,0.804,193,1.105,194,1.176,195,1.932,196,0.819,197,1.932,198,0.804,199,0.834,200,0.819,201,0.864,202,0.804,203,1.32,204,0.819,205,0.864,206,0.804,207,0.864,208,0.776,209,0.79,210,1.43,211,1.602,212,0.776,213,0.804,214,1.896,215,1.64,216,0.864,217,0.819,218,1.602,219,0.864,220,0.864,221,0.819,222,1.793,223,0.804,224,1.602,225,0.819,226,0.819,227,0.804,228,0.864,229,0.79,230,0.819,231,0.864,232,0.804,233,0.864,234,0.864,235,0.804,236,0.864,237,0.776,238,0.804,239,0.864,240,0.79,241,0.864,242,0.711,243,0.864,244,0.79,245,1.465,246,0.864,247,0.79,248,0.864,249,0.79,250,0.864,251,0.749,252,0.864,253,0.804,254,0.736,255,0.804,256,0.819,257,0.864,258,0.804,259,0.864,260,0.864,261,0.804,262,0.864,263,0.804,264,0.864,265,0.749,266,0.864,267,0.804,268,0.804,269,0.864,270,0.804,271,0.819,272,0.864,273,0.776,274,0.79,275,1.675,276,0.804,277,0.64,278,0.819,279,0.804,280,0.804,281,0.819,282,0.804,283,0.864,284,0.804,285,0.804,286,0.864,287,0.79,288,0.864,289,0.804,290,0.864,291,0.804,292,0.864,293,0.804,294,0.864,295,0.804,296,0.763,297,0.776,298,0.864,299,0.79,300,0.864,301,0.79,302,0.864,303,0.79,304,0.864,305,0.79,306,0.864,307,0.79,308,0.834,309,0.864,310,1.465,311,0.819,312,0.776,313,0.864,314,0.003,315,0.003,333,2.462,334,2.703,353,1.975,365,1.343,371,2.08,385,1.789,386,1.931,434,2.614,435,3.017,436,1.797,476,2.493,502,1.769,503,2.209,506,2.536,567,2.392,614,1.41,817,3.295,822,1.66,996,2.901,1094,1.899,1116,1.76,1289,2.06,1296,1.831,1346,3.677,1357,4.209,1359,3.939,1360,5.35,1361,3.939,1363,2.578,1364,3.162,1366,4.779,1367,2.578,1487,3.295,1590,2.703,1623,2.578,1653,2.06,1802,2.807,1904,2.462,2007,2.578,2015,2.807,2016,6.546,2017,6.275,2018,3.154,2019,6.616,2020,3.154,2021,4.288,2022,3.154,2023,3.154,2024,3.154,2025,3.154,2026,3.154,2027,4.819,2028,4.819,2029,3.154,2030,3.154,2031,3.154,2032,3.154,2033,3.154,2034,2.807,2035,3.154,2036,3.147,2037,4.288,2038,3.939,2039,4.819,2040,3.295,2041,4.819,2042,4.819,2043,3.154,2044,2.807,2045,2.578,2046,5.825,2047,3.154,2048,4.819,2049,3.154,2050,3.154,2051,3.154,2052,3.154,2053,4.819,2054,3.154,2055,3.154,2056,3.154,2057,2.807,2058,3.154,2059,3.154,2060,3.154,2061,3.154,2062,3.154,2063,3.154,2064,3.154,2065,3.154,2066,3.154]],["title/components/InputErrorsComponent.html",[0,0.247,235,1.241]],["body/components/InputErrorsComponent.html",[0,0.43,1,1.074,2,0.244,3,0.244,4,1.404,5,1.153,6,1.153,8,0.214,10,0.449,19,1.018,22,0.932,24,0.007,26,2.292,27,2.019,28,2.089,30,1.575,32,0.459,33,0.78,35,1.865,39,1.467,40,4.143,44,1.167,55,0.75,60,0.362,64,0.661,66,0.984,76,0.959,86,0.641,87,0.924,88,0.449,108,1.493,110,1.055,112,2.386,113,0.826,122,3.881,126,2.371,132,0.375,134,1.712,145,0.177,146,0.115,171,1.638,182,0.782,183,1.547,184,1.147,188,2.025,189,1.153,190,1.153,191,1.036,192,1.074,193,1.367,194,1.154,195,2.176,196,1.093,197,2.176,198,1.074,199,1.113,200,1.093,201,1.153,202,1.074,203,1.633,204,1.093,205,1.153,206,1.074,207,1.153,208,1.036,209,1.055,210,1.611,211,1.896,212,1.036,213,1.074,214,1.074,215,1.055,216,1.153,217,1.093,218,1.896,219,1.153,220,1.153,221,1.093,222,2.062,223,1.074,224,1.896,225,1.093,226,1.093,227,1.074,228,1.153,229,1.055,230,1.093,231,1.153,232,1.074,233,1.153,234,1.153,235,1.919,236,1.153,237,1.036,238,1.074,239,1.153,240,1.055,241,1.153,242,0.949,243,1.153,244,1.055,245,1.733,246,1.153,247,1.055,248,1.153,249,1.055,250,1.153,251,1,252,1.153,253,1.074,254,0.983,255,1.074,256,1.093,257,1.153,258,1.074,259,1.153,260,1.153,261,1.074,262,1.153,263,1.074,264,1.153,265,1,266,1.153,267,1.074,268,1.074,269,1.153,270,1.074,271,1.093,272,1.153,273,1.036,274,1.055,275,1.859,276,1.074,277,0.854,278,1.093,279,1.074,280,1.074,281,1.093,282,1.074,283,1.153,284,1.074,285,1.074,286,1.153,287,1.055,288,1.153,289,1.074,290,1.153,291,1.074,292,1.153,293,1.074,294,1.153,295,1.074,296,1.018,297,1.036,298,1.153,299,1.055,300,1.153,301,1.055,302,1.153,303,1.055,304,1.153,305,1.055,306,1.153,307,1.055,308,1.113,309,1.153,310,1.055,311,1.093,312,1.036,313,1.153,314,0.004,315,0.004,346,0.9,355,2.033,436,2.222,520,2.331,563,3.666,564,4.625,670,3.46,843,4.057,878,3.23,879,3.432,953,2.879,1116,2.176,1257,3.46,1520,3.031,1890,5.743,1972,3.746,2067,7.067,2068,6.491,2069,3.746,2070,5.304,2071,5.961,2072,5.961,2073,5.961,2074,7.525,2075,5.961,2076,4.21,2077,4.872,2078,4.291,2079,4.21,2080,4.21,2081,5.961,2082,4.21,2083,4.21,2084,4.21,2085,5.961]],["title/modules/IoModule.html",[316,1.041,1761,3.328]],["body/modules/IoModule.html",[2,0.332,3,0.332,8,0.291,19,1.958,23,2.164,24,0.007,35,1.184,58,1.97,60,0.436,110,2.421,132,0.511,134,2.332,141,2.957,145,0.36,146,0.157,173,3.328,182,1.065,212,1.993,213,2.443,214,2.443,215,1.839,235,2.465,267,2.465,310,2.4,311,1.489,314,0.005,315,0.005,316,1.57,318,2.281,323,2.986,324,2.184,325,1.931,327,4.118,328,2.796,353,3.59,601,3.365,602,2.563,604,5.539,1094,4.42,1095,4.128,1297,3.921,1344,4.687,1357,4.128,1368,5.103,1761,6.739,2045,4.687,2068,4.687,2086,5.103,2087,5.103,2088,5.103,2089,5.734,2090,5.734,2091,5.734,2092,5.734,2093,5.734]],["title/interfaces/ItemConfig.html",[961,1.435,1751,3.178]],["body/interfaces/ItemConfig.html",[2,0.309,3,0.309,8,0.271,10,0.57,24,0.007,32,0.582,33,1.223,34,2.458,38,1.259,41,2.295,43,2.567,55,1.152,56,3.96,60,0.356,64,0.919,65,2.064,72,2.145,74,1.726,85,4.795,88,1.036,116,2.034,118,3.96,126,2.789,145,0.225,167,2.512,171,2.728,314,0.005,315,0.005,400,4.06,436,2.919,444,5.047,447,2.271,452,2.919,516,2.728,546,4.795,576,4.579,614,3.96,775,6.239,814,5.785,849,5.351,901,4.07,961,2.067,963,3.343,979,3.809,984,4.249,1116,3.035,1145,5.047,1163,5.047,1496,4.221,1537,3.1,1583,5.731,1588,3.1,1591,5.731,1616,6.239,1617,4.076,1624,5.004,1751,5.427,1932,5.317,2040,4.795,2094,4.753,2095,6.239,2096,6.239,2097,6.793,2098,6.793,2099,6.966,2100,5.731,2101,7.012,2102,7.012,2103,6.239,2104,7.012,2105,5.047,2106,6.239,2107,3.845]],["title/components/ListComponent.html",[0,0.247,237,1.198]],["body/components/ListComponent.html",[0,0.369,1,0.763,2,0.173,3,0.173,4,0.939,5,0.82,6,0.82,7,2.203,8,0.152,10,0.319,15,1.268,19,0.724,21,2.979,22,0.663,24,0.007,25,1.204,26,2.259,27,1.986,28,1.623,30,1.224,32,0.855,33,0.606,34,1.623,35,1.777,38,0.911,41,0.75,42,1.218,43,2.441,44,0.718,46,2.436,55,0.801,59,2.047,60,0.29,64,0.8,66,1.16,70,1.116,71,1.367,72,1.732,75,1.461,76,1.14,77,1.596,84,2.459,86,0.862,87,0.938,88,0.68,108,1.16,110,0.75,113,0.785,121,1.5,132,0.267,145,0.126,146,0.082,162,1.945,171,1.802,182,0.556,183,1.202,184,0.891,185,1.841,186,1.926,187,2.298,188,1.714,189,0.82,190,0.82,191,0.737,192,0.763,193,1.062,194,1.558,195,1.887,196,0.777,197,1.887,198,0.763,199,0.791,200,0.777,201,0.82,202,0.763,203,1.268,204,0.777,205,0.82,206,0.763,207,0.82,208,0.737,209,0.75,210,1.397,211,1.551,212,0.737,213,0.763,214,0.763,215,0.75,216,0.82,217,0.777,218,1.551,219,0.82,220,0.82,221,0.777,222,1.745,223,0.763,224,1.551,225,0.777,226,0.777,227,0.763,228,0.82,229,0.75,230,0.777,231,0.82,232,0.763,233,0.82,234,0.82,235,0.763,236,0.82,237,1.792,238,0.763,239,0.82,240,0.75,241,0.82,242,0.675,243,0.82,244,0.75,245,1.418,246,0.82,247,0.75,248,0.82,249,0.75,250,0.82,251,0.711,252,0.82,253,0.763,254,0.699,255,0.763,256,0.777,257,0.82,258,0.763,259,0.82,260,0.82,261,0.763,262,0.82,263,0.763,264,0.82,265,0.711,266,0.82,267,0.763,268,0.763,269,0.82,270,0.763,271,0.777,272,0.82,273,0.737,274,0.75,275,1.641,276,0.763,277,0.607,278,0.777,279,0.763,280,0.763,281,0.777,282,0.763,283,0.82,284,0.763,285,0.763,286,0.82,287,0.75,288,0.82,289,0.763,290,0.82,291,0.763,292,0.82,293,0.763,294,0.82,295,0.763,296,0.724,297,0.737,298,0.82,299,0.75,300,0.82,301,0.75,302,0.82,303,0.75,304,0.82,305,0.75,306,0.82,307,0.75,308,0.791,309,0.82,310,0.75,311,0.777,312,0.737,313,0.82,314,0.003,315,0.003,363,1.372,371,2.189,379,1.119,382,2.156,385,2.228,386,2.508,392,2.122,415,0.899,436,1.116,447,3.052,452,3.066,454,3.076,455,4.497,474,4.585,490,1.679,499,3.239,503,1.372,508,1.486,516,1.53,532,2.155,534,4.71,654,1.802,659,1.87,756,4.673,817,2.047,859,2.596,887,3.023,956,2.285,958,3.696,965,4.571,979,2.594,1116,2.067,1182,2.787,1226,3.784,1292,4.075,1296,1.738,1322,3.533,1364,1.446,1448,4.12,1454,3.871,1470,2.594,1513,2.447,1517,4.12,1568,2.687,1584,3.533,1586,2.047,1743,2.447,2107,2.155,2108,2.664,2109,4.63,2110,4.63,2111,4.63,2112,3.784,2113,3.784,2114,4.63,2115,4.63,2116,6.369,2117,6.369,2118,6.369,2119,5.363,2120,2.994,2121,2.994,2122,2.994,2123,2.994,2124,2.994,2125,2.994,2126,2.994,2127,2.994,2128,2.994,2129,4.12,2130,2.994,2131,4.63,2132,4.356,2133,4.63,2134,4.63,2135,4.63,2136,2.994,2137,6.369,2138,4.63,2139,2.994,2140,2.994,2141,2.994,2142,3.333,2143,2.994,2144,4.12,2145,2.994,2146,2.047,2147,2.664,2148,2.447,2149,2.447,2150,2.447,2151,5.629,2152,5.629,2153,2.447,2154,2.047,2155,2.447,2156,2.447,2157,2.664,2158,3.533,2159,2.664,2160,3.784,2161,2.664,2162,2.447,2163,2.994,2164,2.664,2165,2.994,2166,2.994,2167,2.994,2168,5.206,2169,2.994,2170,2.994,2171,2.994,2172,4.12,2173,2.994,2174,2.994,2175,2.664,2176,2.664,2177,2.664,2178,2.994,2179,2.994,2180,2.994,2181,2.994,2182,4.63,2183,2.994,2184,2.994,2185,4.63,2186,4.63,2187,4.63,2188,4.63,2189,6.369]],["title/interfaces/ListConfig.html",[961,1.435,965,2.93]],["body/interfaces/ListConfig.html",[2,0.278,3,0.278,8,0.243,10,0.512,18,2.846,24,0.007,25,1.733,32,0.523,33,1.123,38,1.05,43,2.103,60,0.218,64,0.921,65,2.014,74,1.959,84,2.113,87,0.696,88,1.049,113,1.19,121,2.113,145,0.202,146,0.179,194,1.575,314,0.005,315,0.006,371,2.073,379,2.322,382,3.596,400,3.936,415,1.959,437,3.39,447,2.578,453,3.951,454,3.844,455,4.26,464,3.542,516,2.449,565,3.542,577,2.406,659,2.155,720,4.084,836,3.333,837,4.62,843,3.333,887,4.26,961,1.923,963,3.002,965,3.928,1010,4.319,1182,5.171,1306,5.332,1454,5.873,1574,4.461,1584,6.074,1601,5.142,1635,4.084,1693,5.015,1751,4.842,1752,3.919,2105,4.696,2154,4.461,2190,4.267,2191,7.959,2192,7.083,2193,6.505,2194,7.959,2195,7.959,2196,7.083,2197,7.643,2198,7.643,2199,7.959,2200,5.806,2201,3.659,2202,5.806,2203,4.696,2204,4.979,2205,6.524,2206,6.524]],["title/components/ListHeaderComponent.html",[0,0.247,238,1.241]],["body/components/ListHeaderComponent.html",[0,0.418,1,0.972,2,0.221,3,0.221,4,0.773,5,1.044,6,1.044,8,0.193,10,0.407,19,0.922,22,0.844,23,1.636,24,0.007,26,2.283,27,2.011,28,1.945,30,1.467,32,0.415,33,0.94,34,1.945,35,1.646,38,1.157,39,2.203,40,3.078,41,1.914,44,0.861,60,0.363,64,0.73,66,1.103,72,2.2,75,1.649,76,1.105,77,1.64,86,1.095,87,0.964,88,0.851,105,2.364,106,2.481,108,1.39,110,0.955,112,1.606,113,0.769,121,1.798,132,0.34,145,0.161,146,0.104,182,0.708,183,1.441,184,1.068,188,1.934,189,1.044,190,1.044,191,0.938,192,0.972,193,1.273,194,1.576,195,2.093,196,0.989,197,2.093,198,0.972,199,1.007,200,0.989,201,1.044,202,0.972,203,1.52,204,0.989,205,1.044,206,0.972,207,1.044,208,0.938,209,0.955,210,1.55,211,1.793,212,0.938,213,0.972,214,0.972,215,0.955,216,1.044,217,0.989,218,1.793,219,1.044,220,1.044,221,0.989,222,1.97,223,0.972,224,1.793,225,0.989,226,0.989,227,0.972,228,1.044,229,1.914,230,0.989,231,1.044,232,0.972,233,1.044,234,1.044,235,0.972,236,1.044,237,0.938,238,1.833,239,1.044,240,0.955,241,1.044,242,0.859,243,1.044,244,0.955,245,1.64,246,1.044,247,0.955,248,1.044,249,0.955,250,1.044,251,0.905,252,1.044,253,0.972,254,0.89,255,0.972,256,0.989,257,1.044,258,0.972,259,1.044,260,1.044,261,0.972,262,1.044,263,0.972,264,1.044,265,0.905,266,1.044,267,0.972,268,0.972,269,1.044,270,0.972,271,0.989,272,1.044,273,1.366,274,0.955,275,1.797,276,0.972,277,0.773,278,0.989,279,0.972,280,0.972,281,0.989,282,0.972,283,1.044,284,0.972,285,0.972,286,1.044,287,0.955,288,1.044,289,0.972,290,1.044,291,0.972,292,1.044,293,0.972,294,1.044,295,0.972,296,0.922,297,0.938,298,1.044,299,0.955,300,1.044,301,0.955,302,1.044,303,0.955,304,1.044,305,0.955,306,1.044,307,0.955,308,1.007,309,1.044,310,0.955,311,0.989,312,0.938,313,1.044,314,0.004,315,0.004,333,2.835,415,1.145,429,4.526,447,2.733,454,2.68,506,2.006,508,1.892,859,3.112,914,3.115,976,3.624,992,2.909,998,3.341,1010,4.324,1182,4.328,1898,3.795,2203,3.995,2207,7.03,2208,7.03,2209,3.392,2210,5.55,2211,5.55,2212,5.55,2213,5.55,2214,5.55,2215,5.55,2216,3.811,2217,3.811,2218,5.55,2219,3.811,2220,5.55,2221,5.55,2222,3.811,2223,4.938,2224,7.189,2225,3.811,2226,5.55,2227,3.811,2228,3.811,2229,3.795,2230,5.876,2231,4.938,2232,3.811,2233,5.55,2234,3.811,2235,3.811,2236,3.811,2237,3.811,2238,3.811,2239,3.811,2240,3.811,2241,3.811,2242,3.811,2243,5.55,2244,3.811]],["title/components/ListItemsComponent.html",[0,0.247,240,1.219]],["body/components/ListItemsComponent.html",[0,0.39,1,0.984,2,0.223,3,0.223,4,0.783,5,1.058,6,1.058,8,0.196,10,0.412,15,1.535,19,0.933,21,3.469,22,0.855,23,1.651,24,0.007,25,1.059,26,2.284,27,2.012,28,1.963,30,1.48,32,0.421,35,1.747,40,2.634,43,2.524,44,0.869,46,3.806,55,0.91,60,0.329,64,0.766,66,1.081,71,0.656,72,2.213,75,1.285,76,0.776,77,1.403,86,0.588,87,0.903,88,0.819,108,1.403,110,0.967,113,0.776,132,0.344,145,0.163,146,0.106,165,3.579,182,0.717,183,1.454,184,1.078,188,1.946,189,1.058,190,1.058,191,0.95,192,0.984,193,1.285,194,1.597,195,2.104,196,1.002,197,2.104,198,0.984,199,1.02,200,1.002,201,1.058,202,0.984,203,1.535,204,1.002,205,1.058,206,0.984,207,1.058,208,0.95,209,0.967,210,1.558,211,1.806,212,0.95,213,0.984,214,0.984,215,0.967,216,1.058,217,1.002,218,1.806,219,1.058,220,1.058,221,1.002,222,1.981,223,0.984,224,1.806,225,1.002,226,1.002,227,0.984,228,1.058,229,0.967,230,1.002,231,1.058,232,0.984,233,1.058,234,1.058,235,0.984,236,1.058,237,1.379,238,0.984,239,1.058,240,2.007,241,1.058,242,0.87,243,1.058,244,0.967,245,1.651,246,1.058,247,0.967,248,1.058,249,0.967,250,1.058,251,0.917,252,1.058,253,0.984,254,0.901,255,0.984,256,1.002,257,1.058,258,0.984,259,1.058,260,1.058,261,0.984,262,1.058,263,0.984,264,1.058,265,0.917,266,1.058,267,0.984,268,0.984,269,1.058,270,0.984,271,1.002,272,1.058,273,0.95,274,0.967,275,1.805,276,0.984,277,0.783,278,1.002,279,0.984,280,0.984,281,1.002,282,0.984,283,1.058,284,0.984,285,0.984,286,1.058,287,0.967,288,1.058,289,0.984,290,1.058,291,0.984,292,1.058,293,0.984,294,1.058,295,0.984,296,0.933,297,0.95,298,1.058,299,0.967,300,1.058,301,0.967,302,1.058,303,0.967,304,1.058,305,0.967,306,1.058,307,0.967,308,1.02,309,1.058,310,0.967,311,1.002,312,1.89,313,1.058,314,0.004,315,0.004,371,2.298,379,1.354,385,2.451,386,2.389,447,2.907,450,3.506,454,2.705,455,5.015,474,4.032,499,2.634,508,1.916,532,2.779,534,2.64,565,3.041,574,3.506,659,2.389,814,3.658,817,3.83,887,4.723,913,2.416,956,2.946,986,2.567,1116,2.641,1129,3.506,1182,3.372,1334,2.779,1454,4.508,1470,2.567,1553,4.032,2129,4.984,2168,4.578,2175,3.435,2176,3.435,2177,3.435,2201,3.141,2203,4.032,2207,6.918,2245,6.918,2246,3.435,2247,5.601,2248,5.601,2249,5.601,2250,5.601,2251,5.601,2252,4.578,2253,5.601,2254,3.86,2255,3.86,2256,3.86,2257,3.86,2258,3.86,2259,3.86,2260,3.86,2261,3.435,2262,3.86,2263,3.155]],["title/modules/ListModule.html",[316,1.041,2264,3.328]],["body/modules/ListModule.html",[2,0.323,3,0.323,8,0.283,23,2.125,24,0.007,58,1.915,60,0.438,132,0.497,141,2.918,145,0.356,146,0.153,182,1.035,194,1.203,237,2.349,238,2.434,240,2.391,268,2.434,282,2.434,314,0.005,315,0.005,316,1.542,318,2.218,323,2.933,324,2.123,325,1.878,328,2.746,601,3.305,602,2.492,913,3.49,1141,6.526,1753,6.526,1763,5.611,1765,5.853,1778,4.255,1781,4.557,2208,4.557,2245,4.557,2264,6.796,2265,4.961,2266,4.961,2267,4.961,2268,4.961,2269,6.13,2270,5.575,2271,4.961,2272,4.961,2273,5.575,2274,5.575,2275,5.575,2276,5.575,2277,5.575]],["title/components/LoaderComponent.html",[0,0.247,242,1.097]],["body/components/LoaderComponent.html",[0,0.403,1,0.87,2,0.197,3,0.197,4,1.244,5,0.934,6,0.934,7,1.327,8,0.173,10,0.364,19,0.825,22,0.755,24,0.007,25,0.645,26,2.273,27,2.002,28,1.792,30,1.351,32,0.372,33,0.669,35,0.704,38,0.822,44,1.188,55,1.051,59,3.496,60,0.279,61,2.867,62,2.967,64,0.586,66,1.039,71,0.868,74,1.676,75,1.674,76,0.944,77,1.281,86,0.778,87,0.891,88,0.545,102,3.954,104,3.82,108,1.706,110,0.854,113,1.011,116,3.499,118,2.741,121,1.656,126,2.709,130,1.851,132,0.304,135,1.524,142,0.854,145,0.215,146,0.168,170,2.603,182,0.633,183,1.327,184,1.18,185,1.357,186,1.419,187,1.693,188,1.833,189,0.934,190,0.934,191,0.839,192,0.87,193,1.173,194,1.023,195,1.999,196,0.885,197,1.999,198,0.87,199,0.901,200,0.885,201,0.934,202,0.87,203,1.401,204,0.885,205,0.934,206,0.87,207,0.934,208,0.839,209,0.854,210,1.48,211,1.68,212,0.839,213,0.87,214,0.87,215,0.854,216,0.934,217,0.885,218,1.68,219,0.934,220,0.934,221,0.885,222,1.866,223,0.87,224,1.68,225,0.885,226,0.885,227,0.87,228,0.934,229,0.854,230,0.885,231,0.934,232,0.87,233,0.934,234,0.934,235,0.87,236,0.934,237,0.839,238,0.87,239,0.934,240,0.854,241,0.934,242,1.79,243,0.934,244,0.854,245,1.536,246,0.934,247,0.854,248,0.934,249,0.854,250,0.934,251,0.81,252,0.934,253,0.87,254,0.796,255,0.87,256,0.885,257,0.934,258,0.87,259,0.934,260,0.934,261,0.87,262,0.934,263,0.87,264,0.934,265,0.81,266,0.934,267,0.87,268,0.87,269,0.934,270,0.87,271,0.885,272,0.934,273,0.839,274,0.854,275,1.726,276,0.87,277,0.692,278,0.885,279,0.87,280,0.87,281,0.885,282,0.87,283,0.934,284,0.87,285,0.87,286,0.934,287,0.854,288,0.934,289,0.87,290,0.934,291,0.87,292,0.934,293,0.87,294,0.934,295,0.87,296,0.825,297,0.839,298,0.934,299,0.854,300,0.934,301,0.854,302,0.934,303,0.854,304,0.934,305,0.854,306,0.934,307,0.854,308,0.901,309,0.934,310,0.854,311,0.885,312,2.056,313,0.934,314,0.004,315,0.004,325,1.149,346,0.729,363,1.563,365,3.558,373,1.236,379,0.825,390,1.245,415,1.841,419,2.227,433,1.742,437,3.624,449,4.031,453,3.044,454,4.11,462,1.453,470,2.053,491,2.967,495,4.178,506,3.227,520,3.034,562,2.053,563,2.127,577,0.918,580,1.625,631,1.524,654,2.053,703,4.549,756,4.158,761,1.647,782,3.078,869,4.344,876,3.585,981,2.332,986,1.563,999,2.469,1000,2.053,1002,3.338,1160,3.901,1309,2.227,1540,2.053,1574,3.496,1582,2.227,1585,2.867,1595,1.795,1613,2.455,1634,2.455,1637,3.2,1856,3.2,1870,5.012,1873,4.549,1904,1.742,2132,4.193,2278,3.035,2279,5.112,2280,5.112,2281,4.178,2282,5.112,2283,5.112,2284,5.112,2285,6.219,2286,8.509,2287,6.261,2288,3.41,2289,5.112,2290,3.41,2291,3.41,2292,4.549,2293,3.41,2294,4.549,2295,4.549,2296,3.41,2297,3.41,2298,5.112,2299,2.135,2300,4.658,2301,4.004,2302,3.035,2303,2.053,2304,3.035,2305,3.035,2306,4.549,2307,3.035,2308,5.457,2309,3.035,2310,4.549,2311,5.457,2312,5.457,2313,3.035,2314,3.035,2315,2.787,2316,3.035,2317,3.035,2318,3.035,2319,3.035,2320,3.035,2321,3.035,2322,3.035,2323,3.41,2324,3.41,2325,3.41,2326,3.035,2327,3.035,2328,5.112,2329,3.41,2330,3.035,2331,3.41]],["title/modules/LoaderModule.html",[316,1.041,1764,3.328]],["body/modules/LoaderModule.html",[2,0.394,3,0.394,8,0.345,23,2.579,24,0.007,58,2.339,60,0.422,132,0.607,141,3.195,145,0.382,146,0.187,182,1.265,242,2.208,314,0.006,315,0.006,316,1.746,318,2.708,323,3.322,324,2.593,325,2.293,328,3.11,601,3.743,602,3.043,876,4.958,1764,6.611,2332,6.059,2333,6.059,2334,6.059,2335,6.059,2336,6.809,2337,5.565,2338,6.809]],["title/injectables/LoaderService.html",[373,1.177,876,2.561]],["body/injectables/LoaderService.html",[2,0.352,3,0.352,8,0.309,10,0.65,24,0.007,32,0.664,33,0.998,38,0.979,44,1.183,55,1.153,60,0.347,64,0.796,66,1.089,74,2.148,75,2.134,76,1.21,77,1.525,83,5.215,86,1.161,87,0.814,88,0.814,113,0.844,116,3.64,132,0.543,145,0.256,146,0.167,242,2.154,314,0.005,315,0.005,335,6.786,373,2.014,416,5.013,462,3.248,869,4.558,876,4.013,986,3.495,1410,4.646,1574,5.215,1904,3.896,2036,4.98,2132,5.694,2287,7.495,2292,6.786,2300,6.271,2337,4.976,2339,5.418,2340,7.626,2341,6.088,2342,6.088,2343,6.088,2344,6.088]],["title/components/LocationMapComponent.html",[0,0.247,244,1.219]],["body/components/LocationMapComponent.html",[0,0.426,1,1.042,2,0.237,3,0.237,4,0.829,5,1.119,6,1.119,8,0.207,10,0.436,19,0.988,22,0.905,24,0.007,25,1.103,26,2.289,27,2.017,28,2.045,30,1.542,32,0.445,35,1.806,38,1.459,44,0.905,60,0.186,64,0.78,66,1.068,71,0.694,74,1.827,76,0.943,77,1.462,84,2.909,86,0.888,87,0.933,88,0.622,108,1.462,110,1.023,112,1.688,113,0.943,132,0.364,142,1.023,145,0.172,146,0.112,160,2.941,182,0.759,183,1.515,184,1.123,188,1.998,189,1.119,190,1.119,191,1.005,192,1.042,193,1.338,194,1.135,195,2.151,196,1.061,197,2.151,198,1.042,199,1.08,200,1.061,201,1.119,202,1.042,203,1.599,204,1.061,205,1.119,206,1.042,207,1.119,208,1.005,209,1.023,210,1.593,211,1.865,212,1.005,213,1.042,214,1.042,215,1.023,216,1.119,217,1.061,218,1.865,219,1.119,220,1.119,221,1.061,222,2.034,223,1.042,224,1.865,225,1.061,226,1.061,227,1.042,228,1.119,229,1.023,230,1.061,231,1.119,232,1.042,233,1.119,234,1.119,235,1.042,236,1.119,237,1.005,238,1.042,239,1.119,240,1.023,241,1.119,242,0.921,243,1.119,244,1.86,245,2.191,246,1.119,247,1.023,248,1.119,249,1.023,250,1.119,251,0.971,252,1.119,253,1.042,254,0.954,255,1.042,256,1.061,257,1.119,258,1.042,259,1.119,260,1.119,261,1.042,262,1.119,263,1.042,264,1.119,265,0.971,266,1.119,267,1.042,268,1.042,269,1.119,270,1.042,271,1.061,272,1.119,273,1.005,274,1.023,275,1.84,276,1.042,277,0.829,278,1.061,279,1.042,280,1.042,281,1.061,282,1.042,283,1.119,284,1.042,285,1.042,286,1.119,287,1.023,288,1.119,289,1.042,290,1.119,291,1.042,292,1.119,293,1.042,294,1.119,295,1.042,296,0.988,297,1.005,298,1.119,299,1.023,300,1.119,301,1.023,302,1.119,303,1.023,304,1.119,305,1.023,306,1.119,307,1.023,308,1.08,309,1.119,310,1.023,311,1.061,312,1.005,313,1.119,314,0.004,315,0.004,371,2.359,379,1.411,382,2.222,385,1.25,386,2.452,437,2.485,476,2.222,546,4.654,837,3.387,850,4.666,1822,4.2,1860,5.563,1861,6.987,1863,6.987,2345,6.414,2346,3.635,2347,5.835,2348,5.835,2349,5.835,2350,5.192,2351,7.48,2352,5.835,2353,5.835,2354,5.835,2355,4.085,2356,8.165,2357,4.085,2358,4.085,2359,4.085,2360,5.835,2361,4.085,2362,5.835,2363,5.192,2364,4.085,2365,5.835,2366,4.085,2367,4.085,2368,4.085,2369,4.085,2370,4.085,2371,4.085,2372,4.085]],["title/modules/LocationModule.html",[316,1.041,2373,3.714]],["body/modules/LocationModule.html",[0,0.419,2,0.346,3,0.346,8,0.303,10,0.637,23,2.432,24,0.007,58,2.05,60,0.436,132,0.532,134,2.427,135,2.667,141,3.013,142,1.495,145,0.365,146,0.164,182,1.108,244,2.401,245,2.067,247,2.401,249,2.401,314,0.005,315,0.005,316,1.91,318,2.374,323,3.063,324,2.273,325,2.01,327,4.224,328,2.868,333,3.847,462,3.208,481,3.366,599,5.493,601,3.452,602,2.667,604,5.15,1820,5.958,1846,4.878,1856,3.736,2373,7.475,2374,5.311,2375,5.311,2376,5.968,2377,5.311,2378,5.311,2379,4.878,2380,7.531,2381,7.303,2382,5.968,2383,4.878,2384,5.311,2385,5.968,2386,5.311,2387,5.968,2388,5.968,2389,5.968,2390,5.968,2391,5.968]],["title/components/LocationPickerComponent.html",[0,0.247,247,1.219]],["body/components/LocationPickerComponent.html",[0,0.42,1,0.841,2,0.191,3,0.191,4,0.669,5,0.903,6,0.903,8,0.167,10,0.352,13,2.705,15,1.834,16,4.501,18,2.174,19,1.955,22,0.73,23,1.771,24,0.007,25,1.43,26,2.269,27,1.996,28,1.747,30,1.317,32,0.359,33,0.652,35,1.862,36,4.192,38,1.414,39,2.109,40,3.557,41,1.895,42,2.723,43,1.999,44,0.773,48,3.254,49,4.192,52,3.119,55,0.627,60,0.344,64,0.83,65,1.084,66,1.188,74,1.226,76,1.048,77,1.801,81,3.119,84,2.169,86,1.019,87,0.914,88,0.714,89,3.119,99,3.119,101,3.254,102,2.892,103,1.858,105,2.122,106,2.685,108,1.248,110,1.801,112,2.188,113,0.928,114,2.622,122,4.535,123,3.887,124,2.516,125,2.516,126,1.311,127,3.119,128,2.516,129,2.516,130,1.789,131,3.119,132,0.294,133,3.119,134,1.341,135,1.473,142,0.826,143,2.064,144,2.064,145,0.139,146,0.09,175,2.694,181,2.064,182,0.612,183,1.294,184,0.959,188,1.802,189,0.903,190,0.903,191,0.811,192,0.841,193,1.143,194,1.002,195,1.97,196,0.856,197,1.97,198,0.841,199,0.871,200,0.856,201,0.903,202,0.841,203,1.365,204,0.856,205,0.903,206,0.841,207,0.903,208,0.811,209,0.826,210,1.459,211,1.646,212,0.811,213,0.841,214,0.841,215,0.826,216,0.903,217,0.856,218,1.646,219,0.903,220,0.903,221,0.856,222,1.834,223,0.841,224,1.646,225,0.856,226,0.856,227,0.841,228,0.903,229,0.826,230,0.856,231,0.903,232,0.841,233,0.903,234,0.903,235,0.841,236,0.903,237,0.811,238,0.841,239,0.903,240,0.826,241,0.903,242,0.743,243,0.903,244,1.967,245,2.276,246,0.903,247,1.801,248,0.903,249,1.967,250,0.903,251,0.783,252,0.903,253,0.841,254,0.769,255,0.841,256,0.856,257,0.903,258,0.841,259,0.903,260,0.903,261,0.841,262,0.903,263,0.841,264,0.903,265,0.783,266,0.903,267,0.841,268,0.841,269,0.903,270,0.841,271,0.856,272,0.903,273,0.811,274,0.826,275,1.704,276,0.841,277,0.669,278,0.856,279,0.841,280,0.841,281,0.856,282,0.841,283,0.903,284,0.841,285,0.841,286,0.903,287,0.826,288,0.903,289,0.841,290,0.903,291,0.841,292,0.903,293,0.841,294,0.903,295,0.841,296,0.797,297,0.811,298,0.903,299,0.826,300,0.903,301,0.826,302,0.903,303,0.826,304,0.903,305,0.826,306,0.903,307,0.826,308,0.871,309,0.903,310,0.826,311,0.856,312,0.811,313,0.903,314,0.003,315,0.003,333,2.546,346,1.065,356,2.064,379,1.453,392,1.511,454,2.407,463,4.434,500,2.027,502,3.755,687,3.119,850,4.389,1129,3.119,1146,4.073,1552,5.11,1820,5.597,1835,4.073,1838,4.073,1839,4.434,1840,4.073,2345,6.773,2350,4.434,2363,4.434,2383,2.694,2384,2.933,2386,2.933,2392,2.933,2393,4.983,2394,4.983,2395,4.983,2396,6.696,2397,6.008,2398,2.933,2399,4.983,2400,3.296,2401,3.296,2402,3.296,2403,3.296,2404,6.696,2405,3.296,2406,3.296,2407,4.983,2408,3.296,2409,3.296,2410,3.296,2411,3.296,2412,3.296,2413,3.296,2414,3.296,2415,3.296,2416,4.983,2417,4.983,2418,3.296,2419,3.296,2420,3.296,2421,6.008,2422,3.296,2423,3.296,2424,3.296,2425,3.296,2426,4.983]],["title/components/LocationSearchComponent.html",[0,0.247,249,1.219]],["body/components/LocationSearchComponent.html",[0,0.4,1,1.056,2,0.24,3,0.24,4,0.84,5,1.135,6,1.135,8,0.21,10,0.442,15,1.614,19,1.001,22,0.917,24,0.007,26,2.29,27,2.018,30,1.557,32,0.451,33,0.771,35,1.893,38,1.103,44,0.914,55,0.741,60,0.312,64,0.655,66,1.073,71,0.703,76,0.817,77,1.476,84,2.734,86,0.631,87,0.92,88,0.442,104,4.189,105,1.764,106,2.633,108,1.871,110,1.037,113,0.95,132,0.369,145,0.174,146,0.113,182,0.769,183,1.529,184,1.134,188,2.01,189,1.135,190,1.135,191,1.019,192,1.056,193,1.351,194,1.144,195,2.162,196,1.075,197,2.162,198,1.056,199,1.094,200,1.075,201,1.135,202,1.056,203,1.614,204,1.075,205,1.135,206,1.056,207,1.135,208,1.019,209,1.037,210,1.601,211,1.879,212,1.019,213,1.056,214,1.056,215,1.037,216,1.135,217,1.075,218,1.879,219,1.135,220,1.135,221,1.075,222,2.047,223,1.056,224,1.879,225,1.075,226,1.075,227,1.056,228,1.135,229,1.037,230,1.075,231,1.135,232,1.056,233,1.135,234,1.135,235,1.056,236,1.135,237,1.019,238,1.056,239,1.135,240,1.037,241,1.135,242,0.933,243,1.135,244,1.037,245,2.256,246,1.135,247,1.037,248,1.135,249,1.871,250,1.135,251,0.984,252,1.135,253,1.056,254,0.967,255,1.056,256,1.075,257,1.135,258,1.056,259,1.135,260,1.135,261,1.056,262,1.135,263,1.056,264,1.135,265,0.984,266,1.135,267,1.056,268,1.056,269,1.135,270,1.056,271,1.075,272,1.135,273,1.019,274,1.037,275,1.849,276,1.056,277,0.84,278,1.075,279,1.056,280,1.056,281,1.075,282,1.056,283,1.135,284,1.056,285,1.056,286,1.135,287,1.037,288,1.135,289,1.056,290,1.135,291,1.056,292,1.135,293,1.056,294,1.135,295,1.056,296,1.001,297,1.019,298,1.135,299,1.037,300,1.135,301,1.037,302,1.135,303,1.037,304,1.135,305,1.037,306,1.135,307,1.037,308,1.094,309,1.135,310,1.037,311,1.075,312,1.019,313,1.135,314,0.004,315,0.005,346,1.26,371,2.374,385,1.267,386,2.467,444,5.377,447,1.909,476,2.244,520,1.984,545,4.285,850,3.198,931,3.723,1067,4.938,1552,6.259,1737,5.377,1820,5.632,1822,4.241,1830,7.509,1835,4.815,1860,5.605,2345,6.44,2383,3.385,2398,3.685,2427,3.685,2428,5.233,2429,5.892,2430,7.47,2431,5.892,2432,4.141,2433,4.141,2434,4.141,2435,4.141,2436,4.141,2437,4.141,2438,4.141,2439,4.141,2440,4.141,2441,4.141]],["title/components/LoginComponent.html",[0,0.247,251,1.156]],["body/components/LoginComponent.html",[0,0.385,1,0.957,2,0.217,3,0.217,4,0.761,5,1.028,6,1.028,7,1.46,8,0.19,10,0.4,15,1.503,19,0.907,22,0.831,24,0.007,25,0.709,26,2.282,27,2.009,30,1.45,32,0.409,33,0.718,35,1.567,38,0.604,39,2.067,44,0.851,55,0.897,60,0.382,64,0.803,66,1.121,71,0.637,72,1.679,76,0.52,77,0.94,86,0.835,87,0.914,88,0.761,93,3.95,105,1.598,106,2.452,108,1.374,110,0.94,113,1.052,126,2.182,132,0.335,135,1.677,142,0.94,145,0.158,146,0.103,182,0.697,183,1.424,184,1.056,185,1.492,186,1.561,187,1.863,188,1.92,189,1.028,190,1.028,191,0.923,192,0.957,193,1.258,194,1.082,195,2.08,196,0.974,197,2.08,198,0.957,199,0.992,200,0.974,201,1.028,202,0.957,203,1.503,204,0.974,205,1.028,206,0.957,207,1.028,208,0.923,209,0.94,210,1.54,211,1.777,212,0.923,213,0.957,214,0.957,215,0.94,216,1.028,217,0.974,218,1.777,219,1.028,220,1.028,221,0.974,222,1.955,223,0.957,224,1.777,225,0.974,226,0.974,227,0.957,228,1.028,229,0.94,230,0.974,231,1.028,232,0.957,233,1.028,234,1.028,235,0.957,236,1.028,237,0.923,238,0.957,239,1.028,240,0.94,241,1.028,242,1.237,243,1.028,244,0.94,245,1.625,246,1.028,247,0.94,248,1.028,249,0.94,250,1.028,251,1.695,252,1.028,253,1.654,254,2.121,255,0.957,256,0.974,257,1.028,258,0.957,259,1.028,260,1.028,261,0.957,262,1.028,263,0.957,264,1.028,265,0.891,266,1.028,267,0.957,268,0.957,269,1.028,270,0.957,271,1.684,272,1.028,273,0.923,274,0.94,275,1.787,276,0.957,277,0.761,278,0.974,279,0.957,280,0.957,281,0.974,282,0.957,283,1.028,284,0.957,285,0.957,286,1.028,287,0.94,288,1.028,289,0.957,290,1.028,291,0.957,292,1.028,293,0.957,294,1.028,295,0.957,296,0.907,297,0.923,298,1.028,299,0.94,300,1.028,301,0.94,302,1.028,303,0.94,304,1.028,305,0.94,306,1.028,307,0.94,308,0.992,309,1.028,310,0.94,311,0.974,312,0.923,313,1.028,314,0.004,315,0.004,337,3.05,346,0.802,355,1.812,358,2.701,371,2.268,375,4.958,385,1.148,386,2.357,400,2.515,410,2.45,433,2.803,437,2.337,449,2.887,458,4.571,459,4.883,497,4.174,499,3.356,563,2.969,567,2.724,568,4.187,570,4.274,571,3.83,576,3.583,577,1.476,613,3.067,667,3.583,668,3.339,679,2.178,682,3.067,683,3.067,863,3.638,864,4.06,869,3.849,877,4.603,878,3.226,879,3.3,921,1.975,922,3.067,923,3.067,924,3.067,927,2.863,950,3.583,951,4.669,955,2.349,1509,3.435,1637,3.435,2442,3.339,2443,5.487,2444,5.373,2445,5.487,2446,4.484,2447,3.339,2448,5.487,2449,5.487,2450,3.752,2451,3.752,2452,3.752,2453,4.484,2454,3.752,2455,3.752,2456,3.752,2457,3.752,2458,3.752,2459,3.339,2460,3.752,2461,3.752,2462,3.339,2463,3.752,2464,3.339,2465,3.339]],["title/components/LoginFormComponent.html",[0,0.247,253,1.241]],["body/components/LoginFormComponent.html",[0,0.41,1,0.771,2,0.175,3,0.175,4,0.613,5,0.828,6,0.828,7,1.176,8,0.153,10,0.322,15,1.278,18,1.318,19,0.731,20,2.996,22,0.669,24,0.007,25,1.44,26,2.26,27,1.987,28,1.635,30,1.232,32,0.329,33,0.61,34,1.635,35,1.758,38,1.266,39,1.799,41,2.065,42,1.897,44,0.993,47,3.475,60,0.333,64,0.752,65,1.239,66,1.186,71,0.792,75,1.07,76,1.013,77,1.168,86,0.867,87,0.88,88,0.607,108,1.168,110,0.757,112,2.665,113,1.163,119,2.707,126,2.546,127,4.007,132,0.269,134,1.229,142,0.757,145,0.127,146,0.156,165,3.475,182,0.561,183,1.211,184,0.897,185,1.202,186,1.258,187,1.5,188,1.722,189,0.828,190,0.828,191,0.744,192,0.771,193,1.07,194,0.95,195,1.895,196,0.785,197,1.895,198,0.771,199,0.799,200,0.785,201,0.828,202,0.771,203,1.278,204,0.785,205,0.828,206,0.771,207,0.828,208,0.744,209,0.757,210,1.403,211,1.56,212,0.744,213,0.771,214,0.771,215,0.757,216,0.828,217,0.785,218,1.56,219,0.828,220,0.828,221,0.785,222,1.754,223,0.771,224,1.56,225,0.785,226,0.785,227,0.771,228,0.828,229,0.757,230,0.785,231,0.828,232,0.771,233,0.828,234,0.828,235,0.771,236,0.828,237,0.744,238,0.771,239,0.828,240,0.757,241,0.828,242,1.443,243,0.828,244,0.757,245,1.426,246,0.828,247,0.757,248,0.828,249,0.757,250,0.828,251,0.718,252,0.828,253,1.632,254,2.167,255,0.771,256,0.785,257,0.828,258,0.771,259,0.828,260,0.828,261,0.771,262,0.828,263,0.771,264,0.828,265,0.718,266,0.828,267,0.771,268,0.771,269,0.828,270,0.771,271,2.14,272,0.828,273,0.744,274,0.757,275,1.647,276,0.771,277,0.946,278,0.785,279,0.771,280,0.771,281,0.785,282,0.771,283,0.828,284,0.771,285,0.771,286,0.828,287,0.757,288,0.828,289,0.771,290,0.828,291,0.771,292,0.828,293,0.771,294,0.828,295,0.771,296,0.731,297,0.744,298,0.828,299,0.757,300,0.828,301,0.757,302,0.828,303,0.757,304,0.828,305,0.757,306,0.828,307,0.757,308,0.799,309,0.828,310,0.757,311,0.785,312,0.744,313,0.828,314,0.003,315,0.003,324,1.776,337,2.678,346,0.646,363,1.385,371,2.198,373,1.128,379,1.377,384,2.531,385,2.523,386,2.516,390,2.669,416,1.819,437,1.986,438,3.357,476,2.783,486,1.695,520,1.918,545,3.475,563,3.492,564,2.615,565,2.531,570,3.796,580,0.96,667,3.718,705,2.689,815,1.892,863,3.193,869,3.17,883,1.819,953,2.067,979,3.606,980,4.885,983,3.559,1067,2.807,1325,3.559,1544,4.007,1904,2.382,2444,4.164,2453,4.654,2465,2.689,2466,8.115,2467,7.454,2468,2.689,2469,6.401,2470,7.762,2471,4.663,2472,4.663,2473,4.663,2474,7.309,2475,5.696,2476,6.401,2477,5.694,2478,6.916,2479,6.916,2480,5.694,2481,5.694,2482,5.694,2483,5.694,2484,3.022,2485,7.309,2486,4.663,2487,4.663,2488,1.602,2489,3.022,2490,3.022,2491,7,2492,3.022,2493,4.15,2494,3.022,2495,4.663,2496,3.022,2497,6.504,2498,3.022,2499,3.022,2500,4.663,2501,3.022,2502,3.022,2503,4.663,2504,3.022,2505,4.663,2506,3.022,2507,4.663,2508,4.663,2509,3.022,2510,3.022,2511,4.663,2512,3.022,2513,3.022,2514,3.022,2515,4.663,2516,3.811,2517,3.022,2518,2.47,2519,3.022,2520,3.022,2521,3.022,2522,3.022,2523,3.022,2524,3.022,2525,4.663,2526,3.022,2527,2.47,2528,4.663,2529,3.022,2530,3.022,2531,3.022,2532,3.022,2533,3.022,2534,3.022,2535,3.022,2536,3.022,2537,3.022,2538,3.022,2539,3.022]],["title/pipes/MaxItemsPipe.html",[1138,2.561,1759,3.503]],["body/pipes/MaxItemsPipe.html",[2,0.397,3,0.397,8,0.348,10,0.732,15,1.879,22,1.518,24,0.007,38,1.103,43,2.168,44,1.063,60,0.312,64,0.655,66,0.897,76,1.137,86,1.044,87,0.936,88,0.732,113,0.95,132,0.611,145,0.289,146,0.188,314,0.006,315,0.006,382,3.594,503,3.759,659,3.117,1117,5.494,1138,4.892,1143,3.722,1149,5.609,1542,7.712,1759,5.904,2540,7.299,2541,6.102,2542,7.299,2543,8.202,2544,8.202,2545,6.857,2546,6.857]],["title/components/MediumEditorComponent.html",[0,0.247,255,1.241]],["body/components/MediumEditorComponent.html",[0,0.406,1,0.892,2,0.203,3,0.203,4,0.71,5,0.959,6,0.959,7,1.362,8,0.178,10,0.373,11,3.262,13,5.032,15,1.428,16,3.898,19,0.846,20,3.277,22,0.775,23,1.836,24,0.007,25,0.985,26,2.275,27,2.002,28,1.827,30,1.377,32,0.381,33,0.682,34,2.711,35,1.654,36,4.319,37,4.842,38,1.398,39,1.533,44,0.808,45,3.137,47,3.745,48,3.403,49,4.319,52,3.262,60,0.283,64,0.804,65,1.134,66,1.174,71,0.885,72,1.595,76,1.022,77,1.937,81,3.262,84,2.235,86,0.793,87,0.898,88,0.855,89,3.262,99,3.262,101,3.403,102,3.025,103,2.987,104,3.869,105,1.49,106,2.329,108,1.728,110,0.877,112,1.508,113,0.863,114,2.743,116,2.809,121,1.688,131,3.262,132,0.312,133,3.262,134,1.423,143,2.191,144,2.191,145,0.147,146,0.096,147,2.67,152,2.86,154,2.67,155,3.114,160,3.752,163,3.114,181,2.191,182,0.65,183,1.353,184,1.003,185,1.392,186,1.456,187,1.737,188,1.856,189,0.959,190,0.959,191,0.861,192,0.892,193,1.195,194,1.039,195,2.021,196,0.908,197,2.021,198,0.892,199,0.925,200,0.908,201,0.959,202,0.892,203,1.428,204,0.908,205,0.959,206,0.892,207,0.959,208,0.861,209,0.877,210,1.496,211,1.706,212,0.861,213,0.892,214,0.892,215,0.877,216,0.959,217,0.908,218,1.706,219,0.959,220,0.959,221,0.908,222,1.89,223,0.892,224,1.706,225,0.908,226,0.908,227,0.892,228,0.959,229,0.877,230,0.908,231,0.959,232,0.892,233,0.959,234,0.959,235,0.892,236,0.959,237,0.861,238,0.892,239,0.959,240,0.877,241,0.959,242,0.789,243,0.959,244,0.877,245,1.56,246,0.959,247,0.877,248,0.959,249,0.877,250,0.959,251,0.831,252,0.959,253,0.892,254,0.817,255,1.881,256,2.223,257,0.959,258,0.892,259,0.959,260,0.959,261,0.892,262,0.959,263,0.892,264,0.959,265,0.831,266,0.959,267,0.892,268,0.892,269,0.959,270,0.892,271,0.908,272,0.959,273,0.861,274,0.877,275,1.743,276,0.892,277,0.71,278,0.908,279,0.892,280,0.892,281,0.908,282,0.892,283,0.959,284,0.892,285,0.892,286,0.959,287,0.877,288,0.959,289,0.892,290,0.959,291,0.892,292,0.959,293,0.892,294,0.959,295,0.892,296,0.846,297,0.861,298,0.959,299,0.877,300,0.959,301,0.877,302,0.959,303,0.877,304,0.959,305,0.877,306,0.959,307,0.877,308,0.925,309,0.959,310,0.877,311,0.908,312,0.861,313,0.959,314,0.004,315,0.004,371,2.192,385,1.071,386,2.279,464,2.829,474,3.752,520,2.097,545,4.005,932,2.519,1364,2.517,1414,2.86,1621,3.114,2112,4.259,2113,4.259,2162,2.86,2547,6.905,2548,8.051,2549,3.114,2550,5.211,2551,5.211,2552,5.541,2553,5.211,2554,5.211,2555,6.139,2556,6.227,2557,3.499,2558,7.734,2559,3.499,2560,3.499,2561,3.499,2562,3.499,2563,4.637,2564,3.499,2565,3.499,2566,3.499,2567,3.499,2568,3.499,2569,3.499,2570,3.499,2571,3.499,2572,3.499,2573,3.499,2574,3.499,2575,3.499,2576,3.499,2577,3.499,2578,3.499,2579,3.499,2580,3.499,2581,2.67,2582,3.499,2583,3.114]],["title/modules/MediumModule.html",[316,1.041,2584,3.503]],["body/modules/MediumModule.html",[2,0.381,3,0.381,8,0.334,23,2.358,24,0.007,25,1.737,58,2.26,60,0.408,132,0.586,141,3.147,145,0.378,146,0.18,182,1.222,255,2.503,256,1.707,314,0.006,315,0.006,316,1.71,318,2.616,323,3.253,324,2.505,325,2.215,328,3.046,601,3.666,602,2.94,2547,5.019,2584,6.809,2585,5.853,2586,5.853,2587,6.577,2588,5.853,2589,6.577,2590,6.577]],["title/components/MenuComponent.html",[0,0.247,258,1.241]],["body/components/MenuComponent.html",[0,0.345,1,0.744,2,0.169,3,0.169,4,0.592,5,0.799,6,0.799,8,0.148,10,0.311,14,3.305,15,1.243,19,0.705,21,2.93,22,0.646,24,0.007,25,1.362,26,2.256,27,1.983,28,1.59,30,1.199,32,0.318,33,0.593,35,1.716,38,1.21,39,1.37,43,2.41,44,0.704,46,3.305,55,0.906,60,0.253,64,0.719,65,1.636,66,1.193,75,1.44,76,1.315,77,1.573,84,1.469,86,1.216,87,0.942,88,0.852,108,1.136,110,0.731,113,1.107,119,1.693,121,2.519,132,0.26,142,0.731,145,0.123,146,0.08,162,1.002,167,1.372,182,0.542,183,1.178,184,0.873,188,1.69,189,0.799,190,0.799,191,0.718,192,0.744,193,1.04,194,0.929,195,1.864,196,0.757,197,1.864,198,0.744,199,0.771,200,0.757,201,0.799,202,0.744,203,1.243,204,0.757,205,0.799,206,0.744,207,0.799,208,0.718,209,0.731,210,1.38,211,1.525,212,0.718,213,0.744,214,0.744,215,0.731,216,0.799,217,0.757,218,1.525,219,0.799,220,0.799,221,0.757,222,1.721,223,0.744,224,1.525,225,0.757,226,0.757,227,0.744,228,0.799,229,0.731,230,0.757,231,0.799,232,0.744,233,0.799,234,0.799,235,0.744,236,0.799,237,0.718,238,0.744,239,0.799,240,0.731,241,0.799,242,0.657,243,0.799,244,0.731,245,1.395,246,0.799,247,0.731,248,0.799,249,0.731,250,0.799,251,0.693,252,0.799,253,0.744,254,0.681,255,0.744,256,0.757,257,0.799,258,1.837,259,1.525,260,0.799,261,0.744,262,0.799,263,0.744,264,0.799,265,0.693,266,0.799,267,0.744,268,0.744,269,0.799,270,0.744,271,0.757,272,0.799,273,0.718,274,0.731,275,1.623,276,0.744,277,0.92,278,0.757,279,0.744,280,0.744,281,0.757,282,0.744,283,0.799,284,0.744,285,0.744,286,0.799,287,0.731,288,0.799,289,0.744,290,0.799,291,0.744,292,0.799,293,0.744,294,0.799,295,0.744,296,0.705,297,0.718,298,0.799,299,0.731,300,0.799,301,0.731,302,0.799,303,0.731,304,0.799,305,0.731,306,0.799,307,0.731,308,0.771,309,0.799,310,0.731,311,0.757,312,0.718,313,0.799,314,0.003,315,0.003,325,1.528,346,0.624,370,4.527,373,1.097,379,1.346,382,2.392,400,3.446,433,2.317,445,5.186,447,1.469,453,3.576,480,3.707,500,1.845,502,4.04,503,3.118,520,1.875,560,4.771,565,2.462,578,1.583,580,0.927,659,1.498,774,2.84,814,5.077,850,2.462,859,2.544,870,5.331,1171,6.095,1496,5.084,1540,2.731,1590,3.522,2303,2.731,2591,2.595,2592,7.705,2593,4.536,2594,4.536,2595,8.164,2596,8.164,2597,6.28,2598,4.536,2599,4.536,2600,4.536,2601,4.536,2602,4.536,2603,4.536,2604,6.28,2605,4.037,2606,4.536,2607,6.803,2608,6.803,2609,2.384,2610,4.536,2611,4.536,2612,6.28,2613,4.536,2614,4.536,2615,4.536,2616,2.916,2617,4.536,2618,3.462,2619,2.916,2620,2.916,2621,2.916,2622,2.916,2623,2.916,2624,4.536,2625,4.037,2626,2.916,2627,2.916,2628,4.536,2629,4.536,2630,2.916,2631,4.536,2632,2.916,2633,4.536,2634,2.916,2635,4.536,2636,4.536,2637,2.916,2638,4.536,2639,2.916,2640,4.037,2641,4.536,2642,2.916,2643,2.916,2644,4.536,2645,2.916,2646,4.536,2647,2.916,2648,2.916,2649,2.916,2650,4.037,2651,2.916,2652,4.536,2653,2.916,2654,2.916,2655,2.916,2656,2.916,2657,5.567,2658,2.916,2659,4.536,2660,2.916,2661,2.916,2662,7.204,2663,2.916,2664,2.916,2665,2.916,2666,2.916,2667,2.916,2668,2.916,2669,5.567,2670,3.265,2671,2.916,2672,2.916,2673,2.916,2674,6.803,2675,2.916,2676,6.28]],["title/components/MockupComponent.html",[0,0.247,261,1.241]],["body/components/MockupComponent.html",[0,0.409,1,0.909,2,0.364,3,0.206,4,0.723,5,0.976,6,0.976,8,0.181,10,0.38,19,0.862,22,0.789,24,0.006,26,2.277,27,2.004,28,1.852,30,1.396,35,0.736,43,1.396,60,0.162,87,0.86,108,1.323,110,0.893,113,0.732,132,0.318,145,0.15,146,0.173,162,3.406,171,2.056,182,0.662,183,1.371,184,1.016,188,1.873,189,0.976,190,0.976,191,0.877,192,0.909,193,1.212,194,1.05,195,2.037,196,0.925,197,2.037,198,0.909,199,0.942,200,0.925,201,0.976,202,0.909,203,1.447,204,0.925,205,0.976,206,0.909,207,0.976,208,0.877,209,0.893,210,1.508,211,1.725,212,0.877,213,0.909,214,0.909,215,0.893,216,0.976,217,0.925,218,1.725,219,0.976,220,0.976,221,0.925,222,1.907,223,0.909,224,1.725,225,0.925,226,0.925,227,0.909,228,0.976,229,0.893,230,0.925,231,0.976,232,0.909,233,0.976,234,0.976,235,0.909,236,0.976,237,0.877,238,0.909,239,0.976,240,0.893,241,0.976,242,0.803,243,0.976,244,0.893,245,1.577,246,0.976,247,0.893,248,0.976,249,0.893,250,0.976,251,0.847,252,0.976,253,0.909,254,0.832,255,0.909,256,0.925,257,0.976,258,0.909,259,0.976,260,0.976,261,1.775,262,0.976,263,0.909,264,0.976,265,0.847,266,0.976,267,0.909,268,0.909,269,0.976,270,0.909,271,0.925,272,0.976,273,0.877,274,0.893,275,1.755,276,0.909,277,1.965,278,0.925,279,0.909,280,0.909,281,0.925,282,0.909,283,0.976,284,0.909,285,0.909,286,0.976,287,0.893,288,0.976,289,0.909,290,0.976,291,0.909,292,0.976,293,0.909,294,0.976,295,0.909,296,0.862,297,0.877,298,0.976,299,0.893,300,0.976,301,0.893,302,0.976,303,0.893,304,0.976,305,0.893,306,0.976,307,0.893,308,0.942,309,0.976,310,0.893,311,0.925,312,0.877,313,0.976,314,0.004,315,0.004,333,2.699,447,1.711,563,2.198,979,4.544,1309,3.45,2444,3.18,2677,3.171,2678,3.45,2679,5.283,2680,5.283,2681,5.283,2682,5.283,2683,6.961,2684,5.283,2685,9.673,2686,9.789,2687,9.789,2688,9.642,2689,9.642,2690,4.701,2691,5.283,2692,5.283]],["title/interfaces/ModelConfig.html",[961,1.435,1456,3.328]],["body/interfaces/ModelConfig.html",[2,0.411,3,0.411,8,0.36,10,0.757,24,0.007,32,0.774,33,1.095,41,2.382,60,0.323,64,0.678,74,2.061,88,0.893,145,0.299,314,0.006,315,0.006,436,3.122,508,3.524,659,2.765,836,4.277,961,2.711,963,4.444,999,4.044,1001,3.652,1100,4.855,1456,5.726,1537,5.169,1624,5.537,2693,5.11,2694,6.843,2695,5.241]],["title/injectables/ModelConfigService.html",[373,1.177,1083,3.178]],["body/injectables/ModelConfigService.html",[2,0.18,3,0.18,7,2.532,8,0.158,10,0.333,18,1.36,24,0.007,25,1.599,32,0.34,33,1.219,34,1.674,38,1.191,41,2.283,42,1.943,43,1.534,44,1.009,55,0.882,60,0.391,64,0.871,65,1.994,66,1.066,70,1.781,74,1.821,75,2.064,76,1.296,77,0.781,86,1.21,87,0.945,88,0.887,103,3.331,112,1.883,113,1.152,114,3.055,116,2.478,132,0.278,142,1.63,145,0.131,146,0.159,162,1.641,167,1.466,169,4.25,314,0.003,315,0.004,334,1.749,339,2.132,345,2.361,346,0.667,348,2.759,356,1.952,366,3.06,373,1.696,379,0.754,392,2.189,400,3.215,409,1.506,415,2.313,452,3.509,467,4.784,470,2.875,481,2.595,503,1.429,515,2.244,516,2.966,520,2.363,546,2.132,562,2.875,567,2.371,574,2.99,580,0.991,659,2.317,670,4.612,685,1.81,771,1.641,816,2.99,822,3.424,836,3.324,848,3.438,865,2.307,878,2.361,879,2.707,921,1.641,941,2.132,945,2.548,965,1.877,979,3.642,992,2.379,994,4.017,996,2.875,1017,1.952,1021,4.684,1022,4.581,1034,1.952,1059,2.875,1083,3.119,1084,3.777,1092,2.548,1100,5.685,1116,2.376,1145,2.244,1146,4.745,1172,2.246,1236,4.25,1296,1.81,1304,3.266,1477,2.774,1479,3.266,1487,5.061,1512,2.774,1537,1.81,1540,3.917,1543,3.438,1617,2.379,1624,5.568,1635,1.952,1648,3.97,1655,2.132,1932,1.81,1976,3.904,2097,2.548,2098,2.548,2146,3.266,2300,4.797,2301,4.832,2693,5.985,2694,6.048,2695,2.99,2696,2.379,2697,4.776,2698,7.249,2699,4.25,2700,7.4,2701,4.776,2702,4.776,2703,4.776,2704,4.776,2705,4.776,2706,3.118,2707,3.118,2708,4.776,2709,2.774,2710,4.776,2711,3.118,2712,4.776,2713,3.118,2714,4.776,2715,4.25,2716,3.904,2717,4.776,2718,3.118,2719,4.25,2720,3.118,2721,3.97,2722,4.776,2723,3.118,2724,4.776,2725,3.118,2726,4.776,2727,4.776,2728,4.776,2729,3.118,2730,3.118,2731,3.118,2732,3.118,2733,4.776,2734,3.118,2735,3.118,2736,4.25,2737,3.118,2738,4.776,2739,3.118,2740,2.379,2741,3.118,2742,3.118,2743,3.118,2744,2.774,2745,2.774,2746,4.776,2747,4.25,2748,4.25,2749,4.776,2750,3.118,2751,3.118,2752,3.118,2753,3.118,2754,3.118,2755,5.166,2756,4.776,2757,3.118,2758,3.118,2759,4.776,2760,3.118,2761,3.118,2762,4.776,2763,4.776,2764,3.118,2765,3.118,2766,3.118,2767,3.118,2768,4.776,2769,6.507,2770,3.118,2771,3.118,2772,3.118,2773,4.776,2774,3.118,2775,3.118,2776,3.118,2777,3.118,2778,3.118,2779,3.118,2780,3.118,2781,3.118,2782,3.118,2783,3.118,2784,2.548,2785,2.548,2786,2.774,2787,2.379,2788,3.118,2789,4.776,2790,3.118,2791,3.118]],["title/interfaces/ModelConfiguration.html",[961,1.435,2792,3.978]],["body/interfaces/ModelConfiguration.html",[2,0.411,3,0.411,8,0.36,10,0.757,24,0.007,32,0.774,33,1.095,41,2.382,60,0.323,64,0.678,74,2.061,88,0.893,145,0.299,314,0.006,315,0.006,436,3.122,508,3.524,659,2.765,836,4.277,961,2.711,999,4.044,1001,3.652,1100,4.855,1537,5.169,1624,5.537,2693,5.11,2694,6.843,2695,5.241,2792,6.843,2793,6.317]],["title/classes/Notification.html",[146,0.133,570,2.289]],["body/classes/Notification.html",[2,0.438,3,0.288,8,0.253,10,0.807,24,0.007,25,1.266,27,1.358,32,0.543,33,0.876,38,1.077,55,0.842,60,0.227,64,0.924,65,1.989,66,1.235,74,2.273,75,1.992,86,0.759,87,0.532,88,1.037,121,2.169,126,2.663,145,0.21,146,0.183,265,2.064,312,2.138,314,0.005,315,0.005,334,3.755,346,1.617,379,1.829,382,2.88,392,3.069,400,4.135,434,3.614,449,4.255,453,4.313,454,3.234,505,5.473,506,4.255,561,4.031,563,4.024,564,4.872,565,3.635,567,3.324,570,4.619,659,2.671,679,5.042,877,3.887,955,5.062,1116,3.172,1163,4.82,1386,5.438,1470,3.069,1540,4.031,1615,4.372,1618,4.073,2021,5.958,2223,5.958,2229,4.579,2444,4.031,2794,4.434,2795,6.696,2796,6.696,2797,6.696,2798,4.868,2799,4.983,2800,4.983,2801,4.983,2802,4.82,2803,4.983,2804,4.983,2805,6.696,2806,5.11,2807,4.983,2808,5.473,2809,6.696,2810,4.983,2811,4.983,2812,6.696,2813,4.983,2814,4.434,2815,4.983,2816,4.983]],["title/components/NotificationsComponent.html",[0,0.247,265,1.156]],["body/components/NotificationsComponent.html",[0,0.425,1,0.88,2,0.2,3,0.2,4,1.046,5,1.691,6,0.945,7,2.006,8,0.175,10,0.368,15,1.413,19,0.834,22,0.764,24,0.007,25,0.652,26,2.274,27,2.002,28,1.807,30,1.363,32,0.376,33,0.808,35,1.514,38,0.555,39,1.269,55,0.862,56,1.542,60,0.312,64,0.735,66,0.808,71,1.049,72,1.055,74,1.805,75,1.183,76,0.856,86,0.525,87,0.875,88,0.55,108,1.292,110,0.864,113,1.066,121,1.67,132,0.308,140,2.632,145,0.288,146,0.211,182,0.641,183,1.338,184,0.992,185,1.372,186,1.435,187,1.713,188,1.843,189,0.945,190,0.945,191,0.849,192,0.88,193,1.183,194,1.03,195,2.009,196,0.895,197,2.009,198,0.88,199,0.912,200,0.895,201,0.945,202,0.88,203,1.413,204,0.895,205,0.945,206,0.88,207,0.945,208,0.849,209,0.864,210,1.487,211,1.691,212,0.849,213,0.88,214,0.88,215,0.864,216,0.945,217,0.895,218,1.691,219,0.945,220,0.945,221,0.895,222,1.877,223,0.88,224,1.691,225,0.895,226,0.895,227,0.88,228,0.945,229,0.864,230,0.895,231,0.945,232,0.88,233,0.945,234,0.945,235,0.88,236,0.945,237,0.849,238,0.88,239,0.945,240,0.864,241,0.945,242,0.777,243,0.945,244,0.864,245,1.547,246,0.945,247,0.864,248,0.945,249,0.864,250,0.945,251,0.819,252,0.945,253,0.88,254,0.805,255,0.88,256,0.895,257,0.945,258,0.88,259,0.945,260,0.945,261,0.88,262,0.945,263,0.88,264,0.945,265,1.742,266,0.945,267,0.88,268,0.88,269,0.945,270,0.88,271,0.895,272,0.945,273,0.849,274,0.864,275,1.734,276,0.88,277,0.7,278,0.895,279,0.88,280,0.88,281,0.895,282,0.88,283,0.945,284,0.88,285,0.88,286,0.945,287,0.864,288,0.945,289,0.88,290,0.945,291,0.88,292,0.945,293,0.88,294,0.945,295,0.88,296,0.834,297,0.849,298,0.945,299,0.864,300,0.945,301,0.864,302,0.945,303,0.864,304,0.945,305,0.864,306,0.945,307,0.864,308,0.912,309,0.945,310,0.864,311,0.895,312,1.893,313,0.945,314,0.004,315,0.004,316,0.738,346,1.102,363,1.581,382,1.964,400,3.526,433,1.762,434,2.304,436,1.286,437,2.196,449,4.314,454,3.309,462,1.469,476,1.964,490,1.935,503,1.581,506,4.196,563,3.411,564,3.462,567,2.56,570,4.575,571,3.959,580,1.962,582,4.711,631,1.542,659,1.139,679,3.584,708,2.077,720,2.159,752,2.483,756,4.176,782,2.077,864,3.228,877,4.256,901,2.002,950,3.367,951,4.444,953,2.359,955,3.865,961,1.017,983,2.632,986,1.581,999,2.49,1001,1.505,1116,2.254,1257,2.002,1386,2.159,1470,1.581,1540,2.077,1548,4.214,1585,1.935,1595,3.249,1635,3.865,1856,3.228,1894,3.07,1904,2.634,1925,2.632,1946,2.819,2142,3.711,2204,2.632,2252,4.214,2285,3.711,2299,3.228,2303,3.104,2322,3.07,2444,3.104,2516,2.819,2670,2.483,2721,2.359,2740,3.935,2798,2.077,2817,3.07,2818,6.096,2819,5.156,2820,5.156,2821,5.156,2822,5.156,2823,5.156,2824,3.449,2825,3.07,2826,3.07,2827,2.359,2828,4.588,2829,3.07,2830,5.494,2831,5.046,2832,4.214,2833,2.819,2834,3.07,2835,3.07,2836,3.07,2837,2.819,2838,3.07,2839,3.07,2840,3.07,2841,3.07,2842,3.07,2843,2.483,2844,2.819,2845,2.632,2846,3.07,2847,3.07,2848,4.588,2849,3.07,2850,3.07,2851,4.588,2852,3.07,2853,3.07,2854,3.07,2855,2.252,2856,2.483,2857,3.07,2858,3.07,2859,6.174,2860,3.449,2861,3.449,2862,3.449,2863,3.449,2864,6.174,2865,5.494,2866,3.449,2867,3.449,2868,3.449,2869,3.449,2870,3.449,2871,3.449,2872,5.156,2873,3.449,2874,3.07,2875,4.588,2876,3.07,2877,3.449]],["title/modules/NotificationsModule.html",[316,1.041,2878,3.503]],["body/modules/NotificationsModule.html",[2,0.365,3,0.365,8,0.32,23,2.606,24,0.007,58,2.168,60,0.435,132,0.563,141,3.09,145,0.372,146,0.173,182,1.172,227,2.475,265,2.306,314,0.005,315,0.005,316,1.667,318,2.51,323,3.172,324,2.403,325,2.126,328,2.97,415,1.895,571,4.469,601,3.574,602,2.821,624,4.543,1762,6.042,1763,5.792,1768,5.158,1778,4.816,2814,5.616,2858,5.616,2878,7.072,2879,5.616,2880,5.616,2881,6.311,2882,5.616,2883,5.616,2884,6.311,2885,6.311,2886,5.616]],["title/injectables/NotificationsService.html",[373,1.177,571,2.351]],["body/injectables/NotificationsService.html",[0,0.323,2,0.268,3,0.268,8,0.235,10,0.493,23,2.504,24,0.007,25,1.482,27,1.291,32,0.504,33,0.833,38,1.171,39,2.091,44,0.987,55,0.8,60,0.357,64,0.786,66,1.139,70,1.724,71,1.443,72,1.948,74,1.791,76,1.229,77,1.159,86,1.108,87,0.776,88,0.776,93,4.582,113,1.206,116,2.424,132,0.412,138,3.78,141,1.689,142,1.823,145,0.195,146,0.127,185,1.84,186,1.925,312,1.929,314,0.004,315,0.004,316,1.361,341,4.582,346,1.556,373,2.054,379,1.76,382,2.424,384,3.455,392,2.12,437,3.339,462,2.711,474,6.555,476,3.235,486,4.765,497,4.666,499,2.993,506,3.35,512,2.594,520,2.641,561,2.784,564,2.594,565,3.455,570,4.643,571,3.074,623,5.202,624,4.582,653,6.116,687,2.895,737,3.02,781,4.156,815,2.895,816,2.895,955,2.895,968,5.202,986,2.12,1172,2.993,1588,2.685,1635,2.895,2146,4.353,2670,3.329,2716,5.202,2856,4.582,2865,4.116,2874,4.116,2875,5.664,2876,4.116,2886,7.56,2887,3.78,2888,6.365,2889,9.337,2890,7.84,2891,6.365,2892,7.84,2893,4.625,2894,6.365,2895,6.365,2896,4.625,2897,7.84,2898,6.976,2899,8.496,2900,6.365,2901,4.625,2902,6.365,2903,4.625,2904,6.365,2905,4.625,2906,6.365,2907,4.625,2908,5.554,2909,4.116,2910,4.625,2911,4.625,2912,4.625,2913,4.625,2914,4.625,2915,4.625,2916,4.625,2917,4.116,2918,4.625,2919,4.625,2920,4.625,2921,4.625,2922,4.625,2923,4.625,2924,4.625,2925,4.625]],["title/components/OutputComponent.html",[0,0.247,267,1.241]],["body/components/OutputComponent.html",[0,0.461,1,1.052,2,0.239,3,0.239,4,1.388,5,1.13,6,1.13,8,0.209,10,0.44,15,1.609,18,2.562,19,0.997,21,3.6,22,0.913,24,0.007,26,2.29,27,2.018,28,2.059,30,1.552,32,0.449,33,0.975,35,1.691,38,0.663,41,2.352,43,2.44,44,0.911,46,3.923,55,0.86,60,0.359,64,0.783,66,1.031,72,1.797,74,1.684,75,1.807,76,0.814,77,1.033,86,0.628,87,0.919,88,0.44,105,1.756,106,1.843,108,1.471,110,1.033,113,1.033,121,1.336,123,3.409,132,0.368,145,0.174,146,0.113,171,1.605,182,0.766,183,1.525,184,1.13,188,2.006,189,1.13,190,1.13,191,1.015,192,1.052,193,1.347,194,1.141,195,2.159,196,1.07,197,2.159,198,1.052,199,1.09,200,1.07,201,1.13,202,1.052,203,1.609,204,1.07,205,1.13,206,1.052,207,1.13,208,1.015,209,1.033,210,1.598,211,1.874,212,1.939,213,1.052,214,2.089,215,2.052,216,1.13,217,1.07,218,1.874,219,1.13,220,1.13,221,1.07,222,2.043,223,1.052,224,1.874,225,1.07,226,1.07,227,1.052,228,1.13,229,1.033,230,1.07,231,1.13,232,1.052,233,1.13,234,1.13,235,1.052,236,1.13,237,1.015,238,1.052,239,1.13,240,1.033,241,1.13,242,0.929,243,1.13,244,1.033,245,1.714,246,1.13,247,1.033,248,1.13,249,1.033,250,1.13,251,0.98,252,1.13,253,1.052,254,0.963,255,1.052,256,1.07,257,1.13,258,1.052,259,1.13,260,1.13,261,1.052,262,1.13,263,1.052,264,1.13,265,0.98,266,1.13,267,1.901,268,1.052,269,1.13,270,1.052,271,1.07,272,1.13,273,1.015,274,1.033,275,1.846,276,1.052,277,0.836,278,1.07,279,1.052,280,1.052,281,1.07,282,1.052,283,1.13,284,1.052,285,1.052,286,1.13,287,1.033,288,1.13,289,1.052,290,1.13,291,1.052,292,1.13,293,1.052,294,1.13,295,1.052,296,0.997,297,1.015,298,1.13,299,1.033,300,1.13,301,1.033,302,1.13,303,1.033,304,1.13,305,1.033,306,1.13,307,1.033,308,1.09,309,1.13,310,1.714,311,1.07,312,1.015,313,1.13,314,0.004,315,0.004,362,3.677,365,2.914,371,2.603,394,4.228,434,1.843,436,2.19,502,2.313,817,4.017,859,4.181,1094,2.483,1095,2.969,1289,2.693,1296,2.394,1297,2.82,1298,5.227,1357,4.925,1359,4.801,1360,6.093,1361,4.801,1363,3.37,1364,2.837,1366,3.37,1367,3.37,2019,5.227,2034,3.67,2044,3.67,2045,3.37,2046,5.227,2926,3.67,2927,4.124,2928,4.124,2929,4.124,2930,4.124]],["title/classes/Pagination.html",[146,0.133,2201,2.729]],["body/classes/Pagination.html",[2,0.341,3,0.185,7,1.243,8,0.162,10,0.341,23,1.434,24,0.007,25,1.468,32,0.348,33,0.636,38,0.783,39,1.839,40,2.288,43,2.116,44,0.755,45,2.929,55,0.741,60,0.268,64,0.813,66,1.208,71,1.205,72,1.489,74,1.197,75,1.714,76,1.331,77,2.187,84,2.907,86,1.183,87,0.829,88,0.875,113,0.913,121,2.794,142,0.8,145,0.135,146,0.181,162,2.999,314,0.003,315,0.003,338,2.929,346,0.683,363,1.464,365,3.757,379,1.806,382,3.674,384,2.641,390,1.166,392,2.701,416,4.677,419,4.63,436,1.814,447,2.134,452,3.369,453,2.415,486,4.19,490,4.771,497,3.732,499,3.935,500,1.979,503,1.464,512,1.791,516,1.632,520,1.985,563,2.742,567,2.415,577,2.638,659,2.849,734,3.713,760,6.26,815,1.999,847,3.713,958,2.086,965,5.037,986,1.464,987,4.329,998,3.966,999,2.35,1160,6.583,1257,1.854,1364,2.35,1379,5.863,1380,5.863,1381,5.385,1470,3.02,1513,4.816,1568,2.824,1574,2.184,1590,1.791,1595,1.681,1691,2.437,1693,4.771,1694,2.184,1890,4.497,2077,3.976,2078,4.242,2142,3.502,2192,5.244,2201,5.157,2542,5.863,2605,4.329,2618,3.713,2695,3.046,2719,5.863,2898,6.648,2931,2.842,2932,9.037,2933,8.007,2934,5.863,2935,6.589,2936,4.329,2937,4.329,2938,4.865,2939,6.589,2940,3.194,2941,4.865,2942,3.194,2943,3.194,2944,3.194,2945,4.329,2946,3.194,2947,3.194,2948,3.194,2949,4.865,2950,3.194,2951,3.194,2952,3.194,2953,3.194,2954,4.865,2955,3.194,2956,3.194,2957,3.194,2958,3.194,2959,4.865,2960,3.194,2961,4.865,2962,3.194,2963,4.865,2964,5.893,2965,4.865,2966,3.194,2967,4.329,2968,4.865,2969,3.194,2970,2.437,2971,2.842,2972,2.842,2973,2.842,2974,2.842,2975,3.194,2976,3.194,2977,3.194,2978,3.194,2979,7.768,2980,3.194,2981,3.194,2982,8.506,2983,5.863,2984,7.091,2985,3.194,2986,3.194,2987,6.589,2988,4.865,2989,3.194,2990,3.194,2991,3.194,2992,3.194,2993,5.893,2994,3.194,2995,3.194]],["title/components/PaginationComponent.html",[0,0.247,268,1.241]],["body/components/PaginationComponent.html",[0,0.403,1,0.867,2,0.197,3,0.197,4,0.689,5,0.931,6,0.931,8,0.172,10,0.363,15,1.397,19,0.822,20,3.22,21,3.22,22,0.753,24,0.007,26,2.272,27,1.999,28,1.787,30,1.347,32,0.37,33,0.667,34,3.129,35,1.579,37,3.831,38,0.547,44,0.791,45,3.684,46,3.578,47,3.691,55,0.855,60,0.31,64,0.731,65,1.109,66,1.129,71,0.866,72,2.08,75,1.169,76,1.157,77,1.825,84,2.203,86,0.776,87,0.89,88,0.544,104,4.45,105,2.606,106,2.735,108,1.703,110,0.851,113,0.707,121,1.982,132,0.303,142,1.533,145,0.143,146,0.168,147,2.593,162,2.921,167,1.598,182,0.631,183,1.324,184,0.981,188,1.83,189,0.931,190,0.931,191,0.836,192,0.867,193,1.169,194,1.021,195,1.996,196,0.882,197,1.996,198,0.867,199,0.898,200,0.882,201,0.931,202,0.867,203,1.397,204,0.882,205,0.931,206,0.867,207,0.931,208,0.836,209,0.851,210,1.478,211,1.676,212,0.836,213,0.867,214,0.867,215,0.851,216,0.931,217,0.882,218,1.676,219,0.931,220,0.931,221,0.882,222,1.863,223,0.867,224,1.676,225,0.882,226,0.882,227,0.867,228,0.931,229,0.851,230,0.882,231,0.931,232,0.867,233,0.931,234,0.931,235,0.867,236,0.931,237,0.836,238,0.867,239,0.931,240,0.851,241,0.931,242,0.766,243,0.931,244,0.851,245,1.533,246,0.931,247,0.851,248,0.931,249,0.851,250,0.931,251,0.807,252,0.931,253,0.867,254,0.793,255,0.867,256,0.882,257,0.931,258,0.867,259,0.931,260,0.931,261,0.867,262,0.931,263,0.867,264,0.931,265,0.807,266,0.931,267,0.867,268,1.734,269,0.931,270,0.867,271,0.882,272,0.931,273,0.836,274,0.851,275,1.724,276,0.867,277,0.689,278,0.882,279,0.867,280,0.867,281,0.882,282,0.867,283,0.931,284,0.867,285,0.867,286,0.931,287,0.851,288,0.931,289,0.867,290,0.931,291,0.867,292,0.931,293,0.867,294,0.931,295,0.867,296,0.822,297,0.836,298,0.931,299,0.851,300,0.931,301,0.851,302,0.931,303,0.851,304,0.931,305,0.851,306,0.931,307,0.851,308,0.898,309,0.931,310,0.851,311,0.882,312,0.836,313,0.931,314,0.004,315,0.004,362,3.192,363,1.558,379,0.822,385,1.56,394,3.67,452,3.043,454,2.463,490,2.859,508,1.687,516,1.736,520,2.811,577,2.496,771,2.683,859,2.859,878,3.557,931,2.768,958,3.329,1163,4.895,1172,2.398,1470,2.337,1693,2.859,1737,4.895,1779,3.024,2119,4.185,2201,5.15,2230,5.557,2231,4.537,2261,3.024,2428,4.67,2670,2.446,2936,4.537,2983,4.537,2996,3.024,2997,5.099,2998,5.099,2999,6.8,3000,5.099,3001,6.8,3002,3.398,3003,3.398,3004,5.099,3005,3.398,3006,3.398,3007,7.565,3008,3.398,3009,3.398,3010,3.398,3011,4.537,3012,3.398,3013,3.398,3014,3.398,3015,5.099,3016,3.398,3017,5.099,3018,3.398,3019,4.537,3020,5.099,3021,3.398,3022,3.398,3023,5.099,3024,3.398,3025,3.398,3026,5.099,3027,5.099,3028,3.398,3029,6.119,3030,3.398,3031,6.119,3032,3.398,3033,6.119,3034,3.398,3035,3.398,3036,3.398,3037,3.398,3038,3.398,3039,3.398,3040,3.398,3041,3.398,3042,5.099,3043,5.099,3044,5.099,3045,5.099,3046,5.099,3047,5.099,3048,5.099,3049,5.099,3050,5.099,3051,5.099,3052,5.099,3053,5.099]],["title/classes/PaginationConfig.html",[146,0.133,2119,3.328]],["body/classes/PaginationConfig.html",[0,0.39,2,0.357,3,0.357,8,0.313,10,0.659,24,0.007,32,0.673,33,1.006,38,0.993,40,3.618,60,0.281,64,0.838,66,1.147,86,0.94,87,0.659,88,0.659,113,1.161,121,2.492,145,0.26,146,0.211,162,2.643,314,0.005,315,0.005,346,1.792,379,2.225,382,3.341,449,4.616,452,3.271,454,3.716,490,4.314,577,2.577,771,4.616,772,4.465,836,3.93,879,2.569,883,4.631,921,3.249,963,3.865,1059,4.631,1116,2.809,1160,5.871,1590,4.314,1618,5.046,2119,6.172,2201,4.314,2937,6.846,3054,8.031,3055,8.772,3056,8.772,3057,8.395,3058,7.693,3059,6.174,3060,6.287,3061,6.174,3062,6.846,3063,7.693,3064,7.693,3065,7.693]],["title/components/PasswordResetComponent.html",[0,0.247,270,1.241]],["body/components/PasswordResetComponent.html",[0,0.385,1,0.953,2,0.216,3,0.216,4,0.758,5,1.024,6,1.024,8,0.19,10,0.399,15,1.499,19,0.904,22,0.828,24,0.007,25,1.223,26,2.281,27,2.009,30,1.446,32,0.407,33,0.716,35,1.635,38,0.601,39,1.866,41,1.371,44,0.849,55,0.896,60,0.324,64,0.802,65,1.408,66,1.138,71,0.635,72,1.674,76,0.518,77,0.936,86,0.569,87,0.895,88,0.69,105,1.592,106,2.445,108,1.371,110,0.936,112,2.061,113,0.897,132,0.333,135,1.671,142,0.936,145,0.157,146,0.102,165,2.97,171,2.129,182,0.694,183,1.42,184,1.053,188,1.917,189,1.024,190,1.024,191,0.92,192,0.953,193,1.255,194,1.08,195,2.077,196,0.97,197,2.077,198,0.953,199,0.988,200,0.97,201,1.024,202,0.953,203,1.499,204,0.97,205,1.024,206,0.953,207,1.024,208,0.92,209,0.936,210,1.538,211,1.773,212,0.92,213,0.953,214,0.953,215,0.936,216,1.024,217,0.97,218,1.773,219,1.024,220,1.024,221,0.97,222,1.951,223,0.953,224,1.773,225,0.97,226,0.97,227,0.953,228,1.024,229,0.936,230,0.97,231,1.024,232,0.953,233,1.024,234,1.024,235,0.953,236,1.024,237,0.92,238,0.953,239,1.024,240,0.936,241,1.024,242,1.233,243,1.024,244,0.936,245,1.621,246,1.024,247,0.936,248,1.024,249,0.936,250,1.024,251,0.888,252,1.024,253,0.953,254,0.872,255,0.953,256,0.97,257,1.024,258,0.953,259,1.024,260,1.024,261,0.953,262,1.024,263,0.953,264,1.024,265,0.888,266,1.024,267,0.953,268,0.953,269,1.024,270,1.816,271,2.178,272,1.024,273,0.92,274,0.936,275,1.785,276,0.953,277,0.758,278,0.97,279,0.953,280,0.953,281,0.97,282,0.953,283,1.024,284,0.953,285,0.953,286,1.024,287,0.936,288,1.024,289,0.953,290,1.024,291,0.953,292,1.024,293,0.953,294,1.024,295,0.953,296,0.904,297,0.92,298,1.024,299,0.936,300,1.024,301,0.936,302,1.024,303,0.936,304,1.024,305,0.936,306,1.024,307,0.936,308,0.988,309,1.024,310,0.936,311,0.97,312,0.92,313,1.024,314,0.004,315,0.004,324,3.313,337,3.565,346,0.799,355,1.805,358,2.691,371,2.264,374,4.472,375,4.226,379,1.565,385,1.98,386,2.353,400,2.508,410,2.441,437,2.33,458,4.564,459,4.705,545,4.115,561,4.288,563,2.277,564,2.096,570,3.946,571,3.825,582,4.175,589,3.326,609,7.206,613,3.055,667,5.478,863,3.629,869,3.845,927,2.852,955,3.425,1470,2.508,1905,3.938,1984,7.11,2444,4.768,2447,3.326,2462,3.326,2464,3.326,2491,6.338,2493,4.869,2497,5.759,2837,3.055,3066,7.846,3067,3.326,3068,7.048,3069,5.471,3070,7.123,3071,5.471,3072,3.738,3073,3.738,3074,3.738,3075,3.738,3076,5.471,3077,3.738,3078,3.738,3079,5.471,3080,4.869,3081,4.869,3082,3.738,3083,3.738,3084,3.738,3085,3.738,3086,3.326,3087,3.738,3088,3.738,3089,3.738,3090,3.738,3091,3.738,3092,3.738,3093,3.738,3094,6.472,3095,3.738]],["title/components/PopComponent.html",[0,0.247,273,1.198]],["body/components/PopComponent.html",[0,0.38,1,0.926,2,0.21,3,0.21,4,0.737,5,1.743,6,0.995,7,1.413,8,0.184,10,0.387,19,0.878,22,0.804,24,0.007,25,1.482,26,2.279,27,2.012,28,1.877,30,1.415,32,0.396,33,0.701,34,2.462,35,1.618,38,1.13,39,2.091,44,0.831,55,0.674,56,2.394,60,0.244,64,0.749,66,1.088,71,0.617,74,2.126,76,0.974,77,1.594,84,1.735,86,0.815,87,0.906,88,0.571,108,1.342,110,0.91,113,1.124,132,0.324,145,0.153,146,0.147,182,0.674,183,1.39,184,1.031,185,1.444,186,1.511,187,1.803,188,1.89,189,0.995,190,0.995,191,0.894,192,0.926,193,1.228,194,1.062,195,2.052,196,0.943,197,2.052,198,0.926,199,0.96,200,0.943,201,0.995,202,0.926,203,1.467,204,0.943,205,0.995,206,0.926,207,0.995,208,0.894,209,0.91,210,1.52,211,1.743,212,0.894,213,0.926,214,0.926,215,0.91,216,0.995,217,0.943,218,1.743,219,0.995,220,0.995,221,0.943,222,1.925,223,0.926,224,1.743,225,0.943,226,0.943,227,0.926,228,0.995,229,0.91,230,0.943,231,0.995,232,0.926,233,0.995,234,0.995,235,0.926,236,0.995,237,0.894,238,0.926,239,0.995,240,0.91,241,0.995,242,0.818,243,0.995,244,0.91,245,1.594,246,0.995,247,0.91,248,0.995,249,0.91,250,0.995,251,0.863,252,0.995,253,0.926,254,0.848,255,0.926,256,0.943,257,0.995,258,0.926,259,0.995,260,0.995,261,0.926,262,0.995,263,0.926,264,0.995,265,0.863,266,0.995,267,0.926,268,0.926,269,0.995,270,0.926,271,0.943,272,0.995,273,1.729,274,0.91,275,1.767,276,0.926,277,0.737,278,0.943,279,0.926,280,0.926,281,0.943,282,0.926,283,0.995,284,0.926,285,0.926,286,0.995,287,0.91,288,0.995,289,0.926,290,0.995,291,0.926,292,0.995,293,0.926,294,0.995,295,0.926,296,0.878,297,0.894,298,0.995,299,0.91,300,0.995,301,0.91,302,0.995,303,0.91,304,0.995,305,0.91,306,0.995,307,0.91,308,0.96,309,0.995,310,0.91,311,0.943,312,0.894,313,0.995,314,0.004,315,0.004,346,0.776,363,1.664,371,2.232,379,2.089,382,2.04,385,1.111,386,2.32,415,2.109,429,4.879,437,3.618,441,4.377,442,4.377,445,5.99,449,4.379,450,4.907,453,4.35,454,4.537,456,3.231,457,5.119,470,3.224,471,4.087,476,2.985,490,3.94,491,4.077,493,4.766,495,5.741,499,1.708,503,3.219,505,4.377,506,2.819,507,4.377,519,2.968,577,0.977,1001,1.584,1335,4.766,1459,4.766,1558,2.771,1560,2.968,1588,2.108,1595,1.911,1743,2.968,1898,2.483,1938,3.984,2107,2.614,2164,3.231,2303,2.186,2326,3.231,2330,3.231,2670,3.856,2678,2.371,2798,2.186,3096,3.231,3097,4.766,3098,7.025,3099,5.356,3100,5.356,3101,5.356,3102,3.631,3103,3.631,3104,3.631,3105,3.631,3106,3.631,3107,3.631,3108,3.231,3109,3.231,3110,2.968,3111,3.231,3112,3.231,3113,3.231,3114,3.631,3115,3.631,3116,3.631,3117,3.631,3118,6.364,3119,3.631]],["title/modules/PopModule.html",[316,1.041,1762,3.178]],["body/modules/PopModule.html",[2,0.394,3,0.394,8,0.345,23,2.579,24,0.007,58,2.339,60,0.422,132,0.607,141,3.195,145,0.382,146,0.187,182,1.265,273,2.411,314,0.006,315,0.006,316,1.746,318,2.708,323,3.322,324,2.593,325,2.293,328,3.11,457,6.152,601,3.743,602,3.043,920,4.446,1762,6.313,3113,6.059,3120,6.059,3121,6.059,3122,6.059,3123,6.059,3124,6.809]],["title/injectables/PopService.html",[373,1.177,457,3.178]],["body/injectables/PopService.html",[2,0.368,3,0.368,8,0.323,10,0.679,24,0.007,32,0.693,33,1.025,38,1.023,60,0.387,64,0.608,66,1.025,71,1.331,113,0.882,121,2.539,132,0.567,142,1.593,145,0.268,146,0.174,162,2.185,273,1.565,314,0.005,315,0.005,333,4.003,346,1.816,373,2.054,385,2.599,429,5.064,449,4.124,457,5.117,491,4.549,508,3.158,756,5.032,843,4.003,920,4.153,976,6.053,1898,5.359,2285,6.927,2818,7.888,3125,5.66,3126,9.104,3127,6.973,3128,8.865,3129,7.836,3130,6.361,3131,6.361,3132,6.361,3133,6.361,3134,6.361,3135,6.361,3136,6.361,3137,6.361,3138,6.361]],["title/injectables/ResourceConfig.html",[373,1.177,648,2.729]],["body/injectables/ResourceConfig.html",[2,0.125,3,0.125,4,0.725,8,0.269,10,0.381,24,0.007,25,1.811,27,0.725,32,0.236,34,0.759,35,0.738,38,1.405,39,1.123,41,2.247,42,2.564,44,0.821,55,0.449,60,0.304,64,0.69,65,2.023,66,0.973,70,3.255,71,0.368,74,0.533,75,0.82,76,1.304,86,0.892,87,0.884,88,0.625,94,1.927,103,1.332,112,2.367,113,0.734,114,1.14,118,2.039,130,1.176,132,0.193,145,0.091,146,0.059,167,1.019,172,1.927,173,2.074,191,0.879,193,1.446,194,1.503,199,0.944,208,0.879,210,0.925,275,1.503,277,1.074,314,0.002,315,0.002,331,1.559,334,2.004,339,3.619,340,1.77,346,0.463,368,4.766,373,1.103,379,1.919,382,0.825,400,3.572,402,5.516,415,2.826,451,2.237,452,3.183,467,4.196,481,2.366,503,2.426,515,1.559,516,1.106,520,0.73,530,1.481,537,1.559,546,3.619,561,1.304,562,1.304,580,0.688,625,1.559,628,2.727,648,2.004,653,4.8,659,1.507,667,2.978,684,4.982,685,1.257,687,4.174,722,2.968,723,3.946,754,1.257,822,1.14,836,1.106,837,1.257,843,1.106,848,1.559,850,1.94,878,2.382,879,2.775,921,1.14,979,4.447,998,1.304,1010,4.157,1021,6.09,1053,2.074,1084,3.072,1094,1.304,1101,1.414,1114,2.855,1116,3.058,1171,1.653,1172,4.5,1470,0.993,1476,1.356,1520,1.559,1539,1.653,1543,6.029,1599,2.727,1613,2.572,1636,1.559,1648,3.119,1655,2.444,1656,1.559,1657,1.356,1932,4.861,1974,3.728,1981,3.728,2004,4.059,2097,6.685,2099,5.61,2299,1.356,2301,2.333,2696,1.653,2709,1.927,2744,4.059,2747,3.18,2748,3.18,2784,5.153,2785,1.77,2786,1.927,2787,5.319,2827,2.444,3139,5.217,3140,5.293,3141,7.225,3142,3.573,3143,3.573,3144,6.97,3145,2.166,3146,2.166,3147,6.304,3148,3.573,3149,3.573,3150,1.927,3151,2.166,3152,3.573,3153,2.166,3154,2.166,3155,2.166,3156,5.679,3157,2.166,3158,3.573,3159,2.166,3160,3.573,3161,2.166,3162,1.927,3163,2.166,3164,2.166,3165,2.166,3166,1.653,3167,1.653,3168,3.573,3169,2.166,3170,2.166,3171,2.166,3172,1.927,3173,2.166,3174,2.166,3175,2.166,3176,3.573,3177,2.166,3178,2.166,3179,2.166,3180,8.066,3181,4.561,3182,2.166,3183,2.166,3184,4.561,3185,2.166,3186,3.573,3187,5.293,3188,2.166,3189,2.166,3190,2.166,3191,2.166,3192,1.77,3193,2.166,3194,8.18,3195,8.18,3196,2.166,3197,2.166,3198,2.166,3199,2.166,3200,2.166,3201,2.166,3202,2.166,3203,2.166,3204,2.166,3205,2.166,3206,5.293,3207,2.166,3208,2.166,3209,1.927,3210,4.561,3211,3.573,3212,3.573,3213,2.166,3214,3.573,3215,3.573,3216,2.166,3217,2.166,3218,2.166,3219,2.166,3220,2.166,3221,2.166,3222,2.166,3223,2.166,3224,2.166,3225,2.166,3226,2.166,3227,2.166,3228,1.927,3229,2.166,3230,2.166,3231,2.166,3232,2.166,3233,2.166,3234,1.653,3235,2.166,3236,2.166,3237,2.166,3238,2.166,3239,2.166,3240,2.166,3241,2.166,3242,2.166,3243,2.166,3244,2.166,3245,2.166,3246,2.166,3247,4.561,3248,5.293,3249,3.573,3250,4.561,3251,3.573,3252,3.573,3253,2.166,3254,2.166,3255,2.166,3256,2.166,3257,2.166,3258,2.166,3259,2.166,3260,2.166,3261,2.166,3262,2.166,3263,2.166,3264,2.166,3265,2.166,3266,2.166,3267,2.166,3268,3.573,3269,2.166,3270,2.166,3271,2.166,3272,2.166,3273,2.166,3274,2.166,3275,2.166,3276,2.166,3277,2.166,3278,2.166,3279,2.166,3280,2.166,3281,2.166,3282,2.166,3283,2.166,3284,2.166,3285,2.166,3286,2.166,3287,2.166,3288,2.166,3289,3.573,3290,2.166,3291,2.166,3292,1.927,3293,1.653,3294,2.166,3295,2.166,3296,2.166,3297,2.166,3298,2.166,3299,3.573,3300,2.166,3301,3.573,3302,2.166,3303,3.573,3304,2.166,3305,2.166,3306,2.166]],["title/components/ResourceCrudComponent.html",[0,0.247,274,1.219]],["body/components/ResourceCrudComponent.html",[0,0.344,1,0.737,2,0.167,3,0.167,4,1.375,5,0.792,6,0.792,8,0.147,10,0.309,15,1.235,19,0.699,20,2.914,22,0.64,24,0.007,25,0.852,26,2.255,27,1.986,28,1.58,30,1.191,32,0.315,33,0.589,35,1.601,38,0.465,39,1.96,43,1.191,44,1.307,47,3.394,55,0.975,60,0.401,64,0.826,65,1.475,66,1.178,70,2.891,71,0.941,75,1.434,76,1.21,77,1.566,84,1.46,86,0.843,87,0.922,88,0.827,105,2.886,106,2.794,108,1.566,110,0.724,113,1.039,132,0.258,135,1.293,145,0.122,146,0.152,162,0.994,167,1.36,171,1.754,174,1.81,182,0.537,183,1.437,184,0.867,188,1.682,189,0.792,190,0.792,191,0.712,192,0.737,193,1.034,194,1.482,195,1.857,196,0.751,197,1.857,198,0.737,199,0.764,200,0.751,201,0.792,202,0.737,203,1.235,204,0.751,205,0.792,206,0.737,207,0.792,208,0.712,209,0.724,210,1.375,211,1.517,212,0.712,213,0.737,214,0.737,215,0.724,216,0.792,217,0.751,218,1.517,219,0.792,220,0.792,221,0.751,222,1.713,223,0.737,224,1.517,225,0.751,226,0.751,227,0.737,228,0.792,229,0.724,230,0.751,231,0.792,232,0.737,233,0.792,234,0.792,235,0.737,236,0.792,237,0.712,238,0.737,239,0.792,240,0.724,241,0.792,242,1.527,243,0.792,244,0.724,245,1.387,246,0.792,247,0.724,248,0.792,249,0.724,250,0.792,251,0.687,252,0.792,253,0.737,254,0.675,255,0.737,256,0.751,257,0.792,258,0.737,259,0.792,260,0.792,261,0.737,262,0.792,263,0.737,264,0.792,265,0.687,266,0.792,267,0.737,268,0.737,269,0.792,270,0.737,271,0.751,272,0.792,273,0.712,274,1.798,275,2.072,276,0.737,277,0.587,278,1.17,279,1.912,280,1.728,281,0.751,282,0.737,283,0.792,284,0.737,285,0.737,286,0.792,287,0.724,288,0.792,289,0.737,290,0.792,291,0.737,292,0.792,293,0.737,294,0.792,295,0.737,296,0.699,297,0.712,298,0.792,299,0.724,300,0.792,301,0.724,302,0.792,303,0.724,304,0.792,305,0.724,306,0.792,307,0.724,308,0.764,309,0.792,310,0.724,311,0.751,312,0.712,313,0.792,314,0.003,315,0.003,325,1.518,337,3.646,345,2.252,346,0.618,347,1.522,348,2.331,365,1.919,371,2.464,379,0.699,385,1.694,386,2.69,390,1.646,409,1.397,429,4.286,434,2.794,447,2.829,452,2.064,455,4.425,458,3.333,459,3.506,467,4.08,470,2.713,476,2.381,481,3.029,499,2.119,514,2.364,515,2.082,516,1.477,520,1.865,532,2.082,560,3.667,571,3.02,574,1.81,578,1.57,579,2.207,580,0.919,614,2.014,631,2.014,659,2.065,663,2.914,670,2.616,686,2.082,847,2.207,858,3.244,859,2.527,860,3.683,861,3.439,863,3.105,865,2.177,866,4.01,867,4.01,869,3.29,870,5.503,871,5.563,872,4.01,876,3.945,877,3.214,880,5.168,882,4.01,883,2.713,887,2.943,891,4.01,892,3.683,893,3.439,894,4.01,913,1.81,914,2.364,915,2.364,916,2.364,917,2.573,918,2.573,920,1.888,927,2.207,934,4.927,935,2.573,936,2.573,956,2.207,958,1.888,959,4.01,960,4.01,976,2.943,980,4.771,1453,4.01,1461,6.03,1462,4.01,1463,4.01,1468,4.01,1494,1.81,2100,3.683,2695,2.821,2806,2.207,3139,6.194,3293,2.207,3307,7.404,3308,2.573,3309,6.252,3310,5.537,3311,4.507,3312,2.892,3313,2.892,3314,2.892,3315,2.892,3316,2.892,3317,5.563,3318,2.892,3319,2.892,3320,2.892,3321,2.892,3322,2.892,3323,2.892,3324,4.507,3325,2.892,3326,2.892,3327,2.892,3328,2.892,3329,2.892,3330,2.892,3331,2.207,3332,2.207,3333,2.892,3334,2.892,3335,2.892,3336,2.573,3337,2.892,3338,2.892,3339,2.892,3340,2.892,3341,2.892,3342,2.892,3343,2.892,3344,2.892]],["title/components/ResourceDeletePopComponent.html",[0,0.247,276,1.241]],["body/components/ResourceDeletePopComponent.html",[0,0.406,1,0.889,2,0.202,3,0.202,4,0.707,5,0.955,6,0.955,8,0.177,10,0.372,19,0.842,20,1.834,22,0.772,24,0.007,26,2.275,27,2.002,28,1.821,30,1.373,32,0.38,33,0.679,35,1.594,38,0.836,39,2.023,44,1.198,55,0.653,60,0.335,64,0.83,65,1.13,66,1.119,71,0.592,74,1.694,75,1.689,76,0.861,77,1.301,86,0.946,87,0.913,88,0.663,105,1.484,106,2.322,108,1.301,110,0.873,113,0.954,132,0.311,135,1.557,142,0.873,145,0.147,146,0.095,182,0.647,183,1.612,184,1,188,1.852,189,0.955,190,0.955,191,0.858,192,0.889,193,1.191,194,1.036,195,2.017,196,0.904,197,2.017,198,0.889,199,0.921,200,0.904,201,0.955,202,0.889,203,1.423,204,0.904,205,0.955,206,0.889,207,0.955,208,0.858,209,0.873,210,1.494,211,1.702,212,0.858,213,0.889,214,0.889,215,0.873,216,0.955,217,0.904,218,1.702,219,0.955,220,0.955,221,0.904,222,1.886,223,0.889,224,1.702,225,0.904,226,0.904,227,0.889,228,0.955,229,0.873,230,0.904,231,0.955,232,0.889,233,0.955,234,0.955,235,0.889,236,0.955,237,0.858,238,0.889,239,0.955,240,0.873,241,0.955,242,0.785,243,0.955,244,0.873,245,1.556,246,0.955,247,0.873,248,0.955,249,0.873,250,0.955,251,0.828,252,0.955,253,0.889,254,0.813,255,0.889,256,0.904,257,0.955,258,0.889,259,0.955,260,0.955,261,0.889,262,0.955,263,0.889,264,0.955,265,0.828,266,0.955,267,0.889,268,0.889,269,0.955,270,0.889,271,0.904,272,0.955,273,1.812,274,0.873,275,2.194,276,1.756,277,1.986,278,0.904,279,0.889,280,0.889,281,0.904,282,0.889,283,0.955,284,0.889,285,0.889,286,0.955,287,0.873,288,0.955,289,0.889,290,0.955,291,0.889,292,0.955,293,0.889,294,0.955,295,0.889,296,0.842,297,0.858,298,0.955,299,0.873,300,0.955,301,0.873,302,0.955,303,0.873,304,0.955,305,0.873,306,0.955,307,0.873,308,0.921,309,0.955,310,0.873,311,0.904,312,0.858,313,0.955,314,0.004,315,0.004,346,0.745,355,1.683,371,2.454,373,1.256,385,1.066,386,2.274,390,1.897,398,3.127,400,2.381,428,2.848,429,4.626,434,2.322,437,2.212,441,4.246,442,4.246,466,3.101,475,3.101,477,3.101,481,3.291,520,1.174,563,1.45,571,3.729,730,2.508,869,3.539,876,4.327,877,4.482,878,3.531,879,3.421,921,1.834,950,3.392,1004,4.246,1037,3.392,1172,2.443,1457,4.343,1493,2.181,1520,2.508,1904,2.654,1925,2.659,2299,3.252,2444,3.739,3139,5.937,3166,2.659,3331,6.625,3345,8.222,3346,5.195,3347,5.195,3348,3.484,3349,3.484,3350,5.195,3351,3.484,3352,7.722,3353,5.195,3354,3.484,3355,3.484,3356,3.101,3357,2.848,3358,3.484,3359,3.484,3360,3.101,3361,3.484,3362,3.484,3363,3.484,3364,3.101,3365,5.195,3366,5.195,3367,5.195]],["title/classes/ResourceForm.html",[146,0.133,3167,3.714]],["body/classes/ResourceForm.html",[2,0.296,3,0.296,8,0.26,10,0.546,18,2.972,24,0.007,32,0.557,33,1.169,38,1.437,39,2.333,41,2.302,43,1.352,44,1.057,60,0.387,64,0.887,65,2.036,66,1.214,70,1.907,71,1.302,72,1.565,75,1.952,76,1.238,86,1.296,87,0.953,88,0.908,112,2.769,116,2.595,123,4.94,145,0.215,146,0.187,275,2.013,314,0.005,315,0.005,337,4.268,345,2.771,346,1.094,358,3.682,397,4.18,430,3.903,436,2.857,452,3.426,481,4.056,508,2.539,659,1.689,663,4.776,686,3.682,761,2.47,769,6.263,836,2.613,958,3.34,984,4.436,1013,3.498,1026,5.2,1059,4.102,1296,2.969,1457,5.115,1493,3.202,1537,3.955,1588,2.969,1589,3.955,1590,3.821,1615,3.34,1749,6.679,1751,3.34,2299,4.266,3139,5.985,3166,3.903,3167,5.2,3332,6.679,3336,4.551,3368,4.551,3369,6.814,3370,6.814,3371,6.814,3372,6.814,3373,5.115,3374,5.115,3375,5.115,3376,5.115,3377,5.115,3378,5.115,3379,5.115,3380,6.814,3381,5.115,3382,6.814,3383,5.115,3384,5.115,3385,5.115,3386,5.115,3387,5.115,3388,5.115,3389,5.115,3390,5.115,3391,5.115,3392,5.115,3393,5.115]],["title/modules/ResourceModule.html",[316,1.041,1080,3.328]],["body/modules/ResourceModule.html",[2,0.308,3,0.308,8,0.269,23,2.301,24,0.007,58,1.825,60,0.439,132,0.474,134,2.16,135,2.374,141,2.851,145,0.349,146,0.146,174,3.325,182,0.986,185,2.113,274,2.374,275,2.062,276,2.416,277,1.417,278,2.46,279,2.441,280,2.416,281,2.46,314,0.005,315,0.005,316,1.494,318,2.113,323,2.842,324,2.023,325,1.789,327,3.918,328,2.661,599,5.705,601,3.202,602,2.374,648,4.961,684,3.468,685,3.083,913,3.325,920,4.562,1080,6.782,1081,6.188,1086,5.029,1097,4.053,1104,4.341,1457,4.802,1493,3.325,1494,3.325,1727,3.824,1728,3.468,3307,4.341,3331,5.332,3332,4.053,3394,4.727,3395,4.727,3396,5.312,3397,4.727,3398,4.727,3399,5.312,3400,5.312,3401,4.727]],["title/injectables/ResourceService.html",[373,1.177,1457,2.642]],["body/injectables/ResourceService.html",[0,0.254,2,0.192,3,0.192,8,0.169,10,0.355,24,0.007,25,1.568,32,0.362,33,1.03,38,1.536,39,1.867,41,1.256,43,1.907,44,0.778,55,0.846,56,1.486,60,0.385,64,0.863,65,1.966,66,1.123,70,3.202,71,1.338,72,1.017,75,2.121,76,1.317,79,2.001,84,3.021,86,1.263,87,0.885,88,0.885,112,0.962,113,0.695,114,1.749,116,2.889,126,1.994,132,0.296,142,1.512,145,0.211,146,0.091,162,1.142,194,1.007,210,1.364,275,2.181,277,1.715,314,0.003,315,0.005,337,3.704,338,3.635,345,2.735,346,0.711,347,1.749,348,2.507,366,1.563,373,1.745,379,1.46,384,4.118,385,1.534,386,1.098,392,1.523,409,1.605,415,2.019,436,3.369,452,2.829,462,2.136,464,1.804,476,2.999,481,3.934,486,4.047,491,2.91,497,3.992,500,3.874,508,1.65,512,1.864,566,3.139,580,1.056,648,4.255,663,4.144,685,1.929,686,2.393,708,3.635,722,2.812,723,3.139,815,2.081,822,3.538,843,3.686,865,2.422,931,2.722,945,2.716,961,0.98,984,3.917,988,2.536,989,2.273,994,1.804,996,3.019,997,3.429,998,3.019,999,2.422,1000,3.019,1001,2.187,1002,3.274,1003,4.462,1004,4.098,1005,4.462,1007,4.098,1009,4.098,1010,4.148,1011,4.098,1013,3.429,1019,4.098,1021,3.609,1022,3.942,1023,4.098,1025,3.826,1026,3.826,1029,3.274,1033,3.429,1036,2.716,1037,2.17,1038,2.536,1039,2.716,1040,2.716,1041,2.716,1042,2.716,1043,2.716,1044,2.716,1045,2.716,1051,4.935,1052,2.716,1053,2.91,1054,2.716,1055,2.716,1058,4.098,1059,2.001,1061,4.935,1062,2.716,1063,2.716,1064,2.716,1065,2.716,1066,5.898,1067,2.001,1068,2.716,1429,2.958,1457,2.722,1476,3.139,1494,2.081,1562,2.716,1932,2.91,3139,5.951,3166,2.536,3402,2.958,3403,5.014,3404,3.324,3405,6.724,3406,6.724,3407,3.324,3408,5.014,3409,3.324,3410,5.014,3411,3.324,3412,3.324,3413,3.324,3414,5.014,3415,3.324,3416,5.014,3417,5.014,3418,3.324,3419,3.324,3420,3.324,3421,3.324,3422,3.324,3423,3.324,3424,3.324,3425,3.324,3426,3.324,3427,6.038,3428,3.324,3429,5.014,3430,3.324,3431,3.324,3432,3.324,3433,3.324]],["title/pipes/SafeHtmlPipe.html",[1138,2.561,3434,3.503]],["body/pipes/SafeHtmlPipe.html",[2,0.396,3,0.396,8,0.347,10,0.731,15,1.876,22,1.516,24,0.007,38,1.411,44,1.062,55,1.031,60,0.373,66,0.896,76,1.136,86,1.043,87,0.936,88,0.731,132,0.611,145,0.288,146,0.188,183,2.36,185,2.724,314,0.006,315,0.006,373,1.656,580,2.176,1138,4.616,1143,4.761,1144,7.293,1149,5.604,1728,4.471,3434,5.899,3435,7.293,3436,6.093,3437,8.195,3438,6.698,3439,7.293,3440,8.195,3441,8.195,3442,6.848,3443,8.771,3444,6.848,3445,6.848]],["title/modules/SdkModule.html",[316,1.041,1081,3.178]],["body/modules/SdkModule.html",[2,0.407,3,0.407,8,0.357,23,2.615,24,0.007,58,2.418,60,0.417,132,0.627,141,3.041,145,0.374,146,0.193,182,1.307,185,2.799,314,0.006,315,0.006,316,1.781,318,2.799,323,3.388,324,2.68,325,2.37,327,3.947,328,3.172,348,3.539,1081,6.198,1727,5.066,1728,4.595,3446,6.262,3447,6.262,3448,7.037,3449,7.037]],["title/injectables/SdkService.html",[348,1.815,373,1.177]],["body/injectables/SdkService.html",[2,0.35,3,0.193,8,0.169,10,0.355,23,2.237,24,0.007,25,1.489,32,0.363,33,0.657,34,1.759,37,4.751,38,1.267,39,2.339,44,1.044,45,4.569,55,1.064,60,0.369,64,0.841,65,1.571,66,1.204,70,1.871,71,1.289,72,2.765,73,3.613,74,1.996,75,1.543,76,1.298,77,1.257,86,1.2,87,0.841,88,0.939,103,2.692,105,1.418,113,1.15,116,3.271,118,2.243,119,1.932,121,2.88,132,0.297,145,0.14,146,0.091,154,3.83,179,2.962,193,1.151,314,0.003,315,0.003,336,2.72,337,4.48,339,6.021,346,0.712,348,2.509,354,2.72,359,6.628,362,3.142,366,2.842,373,1.746,375,5.419,379,1.461,390,2.636,410,2.173,415,0.999,419,4.394,436,1.871,458,3.022,481,3.007,520,2.035,561,4.996,563,2.089,620,3.83,621,3.613,622,6.74,623,4.102,624,3.613,625,5.198,626,4.466,627,4.102,628,5.135,629,3.83,630,3.613,631,3.007,632,5.499,633,2.815,634,4.102,635,4.466,636,4.466,638,4.466,641,2.962,650,4.466,654,3.022,655,4.466,663,3.541,682,5.499,683,2.72,686,2.396,687,2.083,694,5.988,706,2.962,708,2.004,737,2.173,754,5.161,756,2.725,822,1.751,837,2.913,841,4.102,901,2.913,1163,3.613,1325,3.83,1590,2.815,1615,3.278,1984,4.102,2281,4.102,2459,2.962,2698,5.988,2787,3.83,3162,2.962,3228,4.466,3450,2.962,3451,6.729,3452,6.729,3453,8.457,3454,5.019,3455,5.019,3456,6.043,3457,3.328,3458,5.019,3459,3.328,3460,6.043,3461,5.019,3462,3.328,3463,5.019,3464,8.109,3465,5.019,3466,3.328,3467,7.22,3468,5.019,3469,3.328,3470,5.019,3471,3.328,3472,4.466,3473,3.328,3474,3.328,3475,3.328,3476,3.432,3477,3.328,3478,3.328,3479,5.019,3480,3.328,3481,3.328,3482,3.328,3483,3.328,3484,3.328,3485,3.328,3486,3.328,3487,3.328,3488,3.328,3489,3.328,3490,3.328,3491,3.328,3492,3.328,3493,3.328,3494,6.043,3495,3.328,3496,3.328,3497,5.019,3498,3.328,3499,3.328,3500,3.328,3501,6.043,3502,2.962,3503,3.328,3504,3.328,3505,3.328,3506,5.019,3507,3.328,3508,3.328,3509,3.328,3510,3.328,3511,3.328,3512,5.019,3513,3.328,3514,3.328,3515,3.328,3516,3.328,3517,3.328,3518,3.328,3519,6.729,3520,3.328,3521,6.043,3522,3.328,3523,3.328,3524,3.328]],["title/components/SearchbarComponent.html",[0,0.247,282,1.241]],["body/components/SearchbarComponent.html",[0,0.383,1,0.75,2,0.17,3,0.17,4,0.597,5,0.806,6,0.806,8,0.149,10,0.314,15,1.252,19,0.712,22,0.652,24,0.007,25,1.547,26,2.257,27,1.984,30,1.207,32,0.321,33,1.146,34,1.601,35,1.864,37,2.86,38,1.41,39,2.157,43,2.061,44,0.708,55,0.575,60,0.355,64,0.809,65,1.697,66,1.181,71,1.282,74,0.724,75,1.837,76,1.11,77,1.712,86,0.961,87,0.889,88,0.673,108,1.581,110,0.737,113,1.173,132,0.262,135,1.315,142,1.144,145,0.124,146,0.081,165,2.48,182,0.547,183,1.186,184,0.879,186,1.901,188,1.698,189,0.806,190,0.806,191,0.724,192,0.75,193,1.048,194,1.475,195,1.872,196,0.764,197,1.872,198,0.75,199,0.778,200,0.764,201,0.806,202,0.75,203,1.252,204,0.764,205,0.806,206,0.75,207,0.806,208,0.724,209,0.737,210,1.386,211,1.534,212,0.724,213,0.75,214,0.75,215,0.737,216,0.806,217,0.764,218,1.534,219,0.806,220,0.806,221,0.764,222,1.729,223,0.75,224,1.534,225,0.764,226,0.764,227,0.75,228,0.806,229,0.737,230,0.764,231,0.806,232,0.75,233,0.806,234,0.806,235,0.75,236,0.806,237,1.553,238,0.75,239,0.806,240,0.737,241,0.806,242,0.663,243,0.806,244,0.737,245,1.403,246,0.806,247,0.737,248,0.806,249,0.737,250,0.806,251,0.699,252,0.806,253,0.75,254,0.687,255,0.75,256,0.764,257,0.806,258,0.75,259,0.806,260,0.806,261,0.75,262,0.806,263,0.75,264,0.806,265,0.699,266,0.806,267,0.75,268,0.75,269,0.806,270,0.75,271,0.764,272,0.806,273,0.724,274,0.737,275,1.629,276,0.75,277,0.597,278,0.764,279,0.75,280,0.75,281,0.764,282,1.609,283,0.806,284,0.75,285,0.75,286,0.806,287,0.737,288,0.806,289,0.75,290,0.806,291,0.75,292,0.806,293,0.75,294,0.806,295,0.75,296,0.712,297,0.724,298,0.806,299,0.737,300,0.806,301,0.737,302,0.806,303,0.737,304,0.806,305,0.737,306,0.806,307,0.737,308,0.778,309,0.806,310,0.737,311,0.764,312,0.724,313,0.806,314,0.003,315,0.004,346,0.629,355,1.421,371,2.298,378,3.486,384,2.48,385,2.091,386,2.645,390,1.668,415,1.372,444,5.614,445,3.289,447,2.594,450,2.86,476,2.403,497,4.611,499,2.148,508,1.461,512,1.651,545,4.347,560,3.49,578,1.598,670,2.652,836,1.503,843,2.334,878,2.941,879,3.009,880,5.205,921,1.549,931,1.598,979,2.566,981,2.013,1010,3.868,1067,4.353,1129,2.86,1172,2.148,1219,4.031,1309,2.983,1334,2.119,1410,2.246,1552,4.273,1623,2.405,1734,3.829,1736,5.616,1737,4.543,1850,2.619,1932,2.652,2132,3.124,2168,4.576,2172,2.619,2197,6.714,2263,2.405,2294,4.065,2428,4.273,2609,2.405,2845,4.273,2855,2.983,3127,4.065,3156,3.486,3317,5.616,3525,2.619,3526,7.545,3527,5.616,3528,3.734,3529,4.568,3530,6.434,3531,7.719,3532,4.568,3533,4.568,3534,4.568,3535,5.599,3536,5.599,3537,4.568,3538,4.568,3539,2.943,3540,4.065,3541,2.943,3542,2.943,3543,2.943,3544,2.943,3545,2.943,3546,2.943,3547,4.576,3548,4.568,3549,2.943,3550,4.568,3551,2.943,3552,4.568,3553,2.943,3554,4.568,3555,4.568,3556,4.568,3557,2.943,3558,6.311,3559,4.568,3560,2.943,3561,4.568,3562,2.943,3563,2.943,3564,2.943,3565,4.568,3566,4.568,3567,2.943,3568,2.943,3569,2.943,3570,2.943,3571,4.568,3572,2.943,3573,2.943,3574,2.943,3575,2.943,3576,2.943,3577,2.943,3578,2.943,3579,2.943,3580,2.943,3581,4.568,3582,4.568,3583,2.619,3584,2.943,3585,2.943,3586,2.943,3587,4.568,3588,2.943,3589,2.943,3590,2.943,3591,2.943,3592,2.943,3593,2.943,3594,2.943,3595,2.943,3596,2.943,3597,4.982,3598,2.943,3599,2.943,3600,2.943,3601,2.943]],["title/modules/SelectModule.html",[316,1.041,3602,3.503]],["body/modules/SelectModule.html",[2,0.365,3,0.365,8,0.32,23,2.299,24,0.007,25,1.717,58,2.168,60,0.427,132,0.563,141,3.09,145,0.372,146,0.173,182,1.172,284,2.492,314,0.005,315,0.005,316,1.667,318,2.51,323,3.172,324,2.403,325,2.126,328,2.97,538,4.121,601,3.574,602,2.821,606,4.543,1088,6.939,1089,4.316,1097,4.816,2264,6.636,3602,6.918,3603,5.616,3604,5.616,3605,6.311,3606,6.311,3607,5.616,3608,6.311,3609,5.616]],["title/directives/SlotHostDirective.html",[184,0.936,310,1.219]],["body/directives/SlotHostDirective.html",[0,0.475,2,0.384,3,0.384,8,0.337,10,0.708,22,1.47,24,0.007,26,1.845,27,1.632,32,0.724,33,1.052,34,2.82,39,1.98,41,2.015,55,1.012,60,0.302,64,0.769,66,1.052,86,1.011,87,0.708,88,0.708,102,4.67,132,0.592,145,0.28,146,0.182,184,1.665,310,2.015,311,2.088,312,2.214,314,0.006,315,0.006,346,1.851,355,3.207,365,3.832,434,3.596,620,6.139,631,3.596,869,3.687,1172,3.784,1351,7.952,1394,6.139,3610,7.702,3611,5.909,3612,8.045,3613,6.64,3614,6.64,3615,8.045,3616,6.64]],["title/classes/Sorter.html",[146,0.133,3617,3.503]],["body/classes/Sorter.html",[2,0.272,3,0.272,7,1.83,8,0.239,10,0.687,24,0.007,25,1.217,32,0.8,33,1.261,34,2.767,38,1.181,43,2.501,44,1.224,55,0.591,60,0.214,64,0.873,65,1.988,66,0.96,71,0.799,75,2.005,76,1.312,86,0.98,87,0.687,88,0.933,113,0.652,118,2.877,142,1.839,145,0.332,146,0.201,162,2.522,314,0.005,315,0.004,338,2.83,363,2.155,379,2.065,382,3.149,392,3.364,433,3.288,436,3.083,470,2.83,482,3.07,520,2.472,562,2.83,614,3.528,620,3.588,631,2.101,659,3.11,734,6.671,781,4.203,833,4.184,849,3.588,901,4.261,1013,3.215,1105,7.466,1318,3.843,1394,3.588,1410,5.602,1479,4.402,1585,2.637,1595,2.474,1601,5.433,1653,3.07,1752,3.843,1838,5.261,1938,4.03,2105,3.385,2193,6.758,2200,5.728,2299,4.03,2934,7.025,2970,4.912,3617,6.146,3618,3.588,3619,6.437,3620,7.894,3621,6.437,3622,5.261,3623,5.261,3624,5.261,3625,4.702,3626,6.437,3627,4.702,3628,8.268,3629,6.437,3630,4.702,3631,3.385,3632,5.261,3633,3.843,3634,4.184,3635,4.184,3636,4.184,3637,4.184,3638,4.702,3639,4.184,3640,4.184,3641,4.702,3642,6.437,3643,4.702,3644,4.702,3645,4.702,3646,4.702,3647,4.702,3648,6.437,3649,4.702,3650,4.702,3651,4.702,3652,4.702,3653,4.702,3654,4.702,3655,4.702,3656,4.702]],["title/interfaces/Symbol.html",[878,1.98,961,1.435]],["body/interfaces/Symbol.html",[2,0.401,3,0.401,8,0.351,10,0.739,24,0.007,32,0.755,33,1.079,56,3.688,64,0.789,65,2.08,74,2.031,87,1.034,88,0.94,93,4.986,139,5.94,145,0.292,314,0.006,315,0.006,779,6.163,878,3.887,961,2.432,1304,5.643,1544,5.165,1909,7.342,1938,5.983,2040,5.643,3657,6.163,3658,8.251,3659,7.342,3660,8.251]],["title/modules/SymbolModule.html",[316,1.041,1765,3.178]],["body/modules/SymbolModule.html",[2,0.408,3,0.408,8,0.358,23,2.617,24,0.007,58,2.421,60,0.426,132,0.628,141,3.044,145,0.374,146,0.193,182,1.309,314,0.006,315,0.006,316,1.782,318,2.803,323,3.391,324,2.684,325,2.374,328,3.175,601,3.821,602,3.15,879,3.951,1765,6.2,3661,6.271,3662,6.271,3663,7.047,3664,5.76,3665,6.775,3666,7.047]],["title/injectables/SymbolPipe.html",[373,1.177,3665,3.714]],["body/injectables/SymbolPipe.html",[2,0.494,3,0.372,8,0.326,10,0.685,15,1.759,24,0.007,32,0.7,44,1.222,58,2.206,60,0.388,64,0.614,65,1.986,66,0.84,75,1.808,76,1.182,86,0.977,87,1.014,88,0.685,132,0.572,145,0.27,146,0.176,183,1.667,314,0.005,315,0.005,346,1.373,373,2.062,390,2.878,436,2.394,580,2.04,631,3.523,633,4.42,878,3.939,879,3.798,1046,6.441,1138,4.68,1143,4.278,1149,5.389,1938,4.934,3007,7.013,3664,5.247,3665,6.014,3667,5.713,3668,7.881,3669,6.42,3670,7.881,3671,5.713,3672,6.42]],["title/injectables/SymbolService.html",[373,1.177,879,2.025]],["body/injectables/SymbolService.html",[2,0.284,3,0.284,8,0.249,10,0.524,24,0.007,32,0.818,33,0.867,38,1.066,39,2.128,44,1.028,55,1.158,60,0.366,64,0.871,65,2.061,66,1.176,71,0.834,74,2.361,75,1.983,76,1.246,77,1.88,83,5.495,86,1.278,87,0.999,88,0.895,93,4.771,113,1.114,118,3.865,121,2.603,132,0.438,142,1.66,145,0.207,146,0.134,162,1.686,168,4.771,314,0.005,315,0.005,346,1.604,373,1.814,419,3.204,462,3.422,679,3.847,822,2.582,837,3.847,843,4.418,878,4.022,879,2.758,1029,3.204,1636,4.771,1937,7.144,1938,4.148,2301,4.327,2699,5.897,2808,5.416,3671,4.367,3673,4.367,3674,8.648,3675,6.627,3676,4.907,3677,6.627,3678,4.907,3679,6.627,3680,4.907,3681,6.627,3682,4.907,3683,6.627,3684,5.897,3685,6.627,3686,4.907,3687,6.627,3688,4.907,3689,4.907,3690,8.035,3691,4.907,3692,6.627,3693,4.907,3694,4.907,3695,4.907,3696,4.907,3697,4.907,3698,4.907,3699,4.907,3700,4.907,3701,4.907,3702,4.907,3703,4.907,3704,4.907,3705,4.907]],["title/components/TabComponent.html",[0,0.247,285,1.241]],["body/components/TabComponent.html",[0,0.394,1,1.014,2,0.23,3,0.23,4,0.807,5,1.09,6,1.09,8,0.202,10,0.424,19,0.962,22,0.881,24,0.007,25,1.268,26,2.287,27,2.014,28,2.006,30,1.513,32,0.434,33,0.749,35,1.721,39,1.409,44,0.888,60,0.261,64,0.816,65,1.596,66,1.154,71,0.972,74,1.805,75,1.313,76,0.793,77,1.434,86,0.606,87,0.91,88,0.424,104,4.538,108,1.434,110,0.996,113,0.793,126,2.277,132,0.355,145,0.168,146,0.109,182,0.739,183,1.486,184,1.101,188,1.973,189,1.09,190,1.09,191,0.979,192,1.014,193,1.313,194,1.119,195,2.129,196,1.033,197,2.129,198,1.014,199,1.051,200,1.033,201,1.09,202,1.014,203,1.568,204,1.033,205,1.09,206,1.014,207,1.09,208,0.979,209,0.996,210,1.576,211,1.837,212,0.979,213,1.014,214,1.014,215,0.996,216,1.09,217,1.033,218,1.837,219,1.09,220,1.09,221,1.033,222,2.009,223,1.014,224,1.837,225,1.033,226,1.033,227,1.014,228,1.09,229,0.996,230,1.033,231,1.09,232,1.014,233,1.09,234,1.09,235,1.014,236,1.09,237,0.979,238,1.014,239,1.09,240,0.996,241,1.09,242,0.896,243,1.09,244,0.996,245,1.68,246,1.09,247,0.996,248,1.09,249,0.996,250,1.09,251,0.945,252,1.09,253,1.014,254,0.928,255,1.014,256,1.033,257,1.09,258,1.014,259,1.09,260,1.09,261,1.014,262,1.09,263,1.014,264,1.09,265,0.945,266,1.09,267,1.014,268,1.014,269,1.09,270,1.014,271,1.033,272,1.09,273,0.979,274,0.996,275,1.824,276,1.014,277,0.807,278,1.033,279,1.014,280,1.014,281,1.033,282,1.014,283,1.09,284,1.014,285,1.87,286,1.09,287,2.238,288,1.09,289,1.014,290,1.09,291,1.014,292,1.09,293,1.014,294,1.09,295,1.014,296,0.962,297,0.979,298,1.09,299,0.996,300,1.09,301,0.996,302,1.09,303,0.996,304,1.09,305,0.996,306,1.09,307,0.996,308,1.051,309,1.09,310,0.996,311,1.033,312,0.979,313,1.09,314,0.004,315,0.004,346,1.434,355,1.921,371,2.762,379,1.384,385,1.751,386,2.754,415,1.194,434,2.558,447,2.816,453,4.587,476,2.793,499,3.449,534,3.914,560,3.97,761,2.765,814,5.573,979,3.562,1117,3.583,1278,4.368,1315,3.251,1317,6.351,1548,4.678,1856,3.583,3706,3.54,3707,7.164,3708,5.724,3709,5.724,3710,8.692,3711,5.724,3712,5.724,3713,3.978,3714,3.978,3715,3.978,3716,3.978,3717,3.978,3718,3.978,3719,3.978,3720,5.724,3721,3.978,3722,3.54,3723,3.978,3724,3.978]],["title/components/TabsComponent.html",[0,0.247,287,1.219]],["body/components/TabsComponent.html",[0,0.419,1,0.984,2,0.223,3,0.223,4,1.136,5,1.058,6,1.058,7,1.502,8,0.196,10,0.412,15,1.535,19,0.933,22,0.855,24,0.007,26,2.284,27,2.012,28,1.963,30,1.48,32,0.421,33,0.733,35,1.585,44,0.869,55,0.485,56,2.504,60,0.3,64,0.734,65,1.434,66,1.081,72,1.714,73,4.032,74,1.379,75,1.659,76,1.064,77,1.812,86,1.004,87,0.935,88,0.703,105,1.644,108,1.403,110,0.967,113,0.776,119,3.251,132,0.344,142,1.403,145,0.163,146,0.106,162,1.326,167,1.815,182,0.717,183,1.454,184,1.078,185,1.535,186,1.606,187,1.916,188,1.946,189,1.058,190,1.058,191,0.95,192,0.984,193,1.285,194,1.1,195,2.104,196,1.002,197,2.104,198,0.984,199,1.02,200,1.002,201,1.058,202,0.984,203,1.535,204,1.002,205,1.058,206,0.984,207,1.058,208,0.95,209,0.967,210,1.558,211,1.806,212,0.95,213,0.984,214,0.984,215,0.967,216,1.058,217,1.002,218,1.806,219,1.058,220,1.058,221,1.002,222,1.981,223,0.984,224,1.806,225,1.002,226,1.002,227,0.984,228,1.058,229,0.967,230,1.002,231,1.058,232,0.984,233,1.058,234,1.058,235,0.984,236,1.058,237,0.95,238,0.984,239,1.058,240,0.967,241,1.058,242,0.87,243,1.058,244,0.967,245,1.651,246,1.058,247,0.967,248,1.058,249,0.967,250,1.058,251,0.917,252,1.058,253,0.984,254,0.901,255,0.984,256,1.002,257,1.058,258,0.984,259,1.058,260,1.058,261,0.984,262,1.058,263,0.984,264,1.058,265,0.917,266,1.058,267,0.984,268,0.984,269,1.058,270,0.984,271,1.002,272,1.058,273,0.95,274,0.967,275,1.805,276,0.984,277,0.783,278,1.002,279,0.984,280,0.984,281,1.002,282,0.984,283,1.058,284,0.984,285,2.264,286,1.058,287,2.007,288,1.058,289,0.984,290,1.058,291,0.984,292,1.058,293,0.984,294,1.058,295,0.984,296,0.933,297,0.95,298,1.058,299,0.967,300,1.058,301,0.967,302,1.058,303,0.967,304,1.058,305,0.967,306,1.058,307,0.967,308,1.02,309,1.058,310,0.967,311,1.454,312,0.95,313,1.058,314,0.004,315,0.005,333,2.861,346,0.825,363,1.769,385,1.181,447,2.876,471,2.946,502,3.141,520,1.3,534,3.83,560,3.923,567,2.781,578,2.095,580,1.227,662,3.83,822,2.031,870,5.23,880,5.206,1182,2.324,1496,2.324,1562,4.578,1904,2.861,1977,4.946,2007,3.155,2230,5.911,2609,3.155,2650,3.435,3707,7.167,3725,3.435,3726,4.578,3727,5.601,3728,6.592,3729,5.601,3730,5.601,3731,7.232,3732,7.232,3733,5.601,3734,5.601,3735,3.86,3736,3.86,3737,5.601,3738,3.86,3739,5.601,3740,3.86,3741,5.601,3742,3.86,3743,5.601,3744,3.435,3745,3.86,3746,3.86,3747,3.86,3748,3.86,3749,3.86,3750,3.86,3751,5.601,3752,3.86,3753,3.86,3754,3.86,3755,3.86,3756,3.86,3757,3.86,3758,3.86,3759,3.86,3760,3.86,3761,3.86,3762,3.86,3763,3.86,3764,5.601]],["title/components/TinymceComponent.html",[0,0.247,289,1.241]],["body/components/TinymceComponent.html",[0,0.36,1,0.817,2,0.186,3,0.186,4,0.65,5,0.878,6,0.878,7,1.247,8,0.163,10,0.342,11,3.053,13,4.94,15,1.336,16,3.696,19,0.775,22,0.71,23,1.741,24,0.007,25,0.922,26,2.266,27,1.993,28,1.71,30,1.289,32,0.349,33,0.638,34,2.622,35,1.655,36,4.132,37,4.132,38,1.472,39,1.841,40,2.294,44,0.756,48,3.185,49,4.132,52,3.053,60,0.419,64,0.785,65,1.061,66,1.165,71,1.003,72,1.492,74,1.973,76,1.078,77,1.779,79,1.929,81,3.053,84,2.83,86,0.899,87,0.893,88,0.63,89,3.053,99,3.053,101,3.185,102,2.831,103,1.819,104,3.701,105,1.365,106,2.18,108,1.222,110,0.803,113,1.138,114,2.567,116,2.704,118,2.18,119,3.831,121,2.138,130,1.74,131,3.053,132,0.286,133,3.053,134,1.303,143,2.006,144,2.006,145,0.135,146,0.088,147,2.446,152,4.826,154,3.722,160,3.511,165,1.74,181,2.006,182,0.595,183,1.266,184,0.938,185,1.275,186,1.333,187,1.591,188,1.776,189,0.878,190,0.878,191,0.789,192,0.817,193,1.119,194,0.985,195,1.946,196,0.832,197,1.946,198,0.817,199,0.847,200,0.832,201,0.878,202,0.817,203,1.336,204,0.832,205,0.878,206,0.817,207,0.878,208,0.789,209,0.803,210,1.441,211,1.618,212,0.789,213,0.817,214,0.817,215,0.803,216,0.878,217,0.832,218,1.618,219,0.878,220,0.878,221,0.832,222,1.808,223,0.817,224,1.618,225,0.832,226,0.832,227,0.817,228,0.878,229,0.803,230,0.832,231,0.878,232,0.817,233,0.878,234,0.878,235,0.817,236,0.878,237,0.789,238,0.817,239,0.878,240,0.803,241,0.878,242,0.722,243,0.878,244,0.803,245,1.479,246,0.878,247,0.803,248,0.878,249,0.803,250,0.878,251,0.761,252,0.878,253,0.817,254,0.748,255,0.817,256,0.832,257,0.878,258,0.817,259,0.878,260,0.878,261,0.817,262,0.878,263,0.817,264,0.878,265,0.761,266,0.878,267,0.817,268,0.817,269,0.878,270,0.817,271,0.832,272,0.878,273,0.789,274,0.803,275,1.686,276,0.817,277,0.65,278,0.832,279,0.817,280,0.817,281,0.832,282,0.817,283,0.878,284,0.817,285,0.817,286,0.878,287,0.803,288,0.878,289,1.811,290,0.878,291,0.817,292,0.878,293,0.817,294,0.878,295,0.817,296,0.775,297,0.789,298,0.878,299,0.803,300,0.878,301,0.803,302,0.878,303,0.803,304,0.878,305,0.803,306,0.878,307,0.803,308,1.289,309,0.878,310,0.803,311,0.832,312,0.789,313,0.878,314,0.003,315,0.003,346,0.685,371,2.377,385,0.981,386,2.18,390,1.781,476,1.857,497,4.218,499,2.294,500,2.684,506,2.567,512,1.797,561,2.936,580,1.018,737,2.093,848,4.251,859,2.735,931,2.648,1129,3.053,1166,2.852,1526,2.852,1737,4.751,1985,4.34,2017,6.319,2057,2.852,2112,3.986,2113,3.986,2162,2.619,2428,4.506,2552,5.254,2555,5.873,2563,4.34,2581,2.446,2583,2.852,2827,3.335,3530,2.852,3765,2.852,3766,5.911,3767,4.877,3768,4.877,3769,4.877,3770,3.205,3771,6.6,3772,4.877,3773,3.986,3774,4.877,3775,3.986,3776,4.877,3777,3.205,3778,3.205,3779,3.205,3780,3.205,3781,3.205,3782,3.205,3783,3.205,3784,3.205,3785,3.205,3786,3.205,3787,3.205,3788,3.205,3789,3.205,3790,3.205,3791,3.205,3792,3.205,3793,3.205,3794,3.205,3795,3.205,3796,3.205,3797,3.205,3798,3.205,3799,3.205,3800,3.205,3801,3.205,3802,3.205,3803,3.205,3804,3.986,3805,3.205,3806,3.205,3807,3.205,3808,3.205,3809,3.205,3810,3.205,3811,3.205,3812,3.205,3813,3.205,3814,3.205,3815,3.205,3816,3.205,3817,3.205,3818,3.205,3819,3.205,3820,3.205,3821,3.205,3822,4.877,3823,3.205]],["title/modules/TinymceModule.html",[316,1.041,3824,3.503]],["body/modules/TinymceModule.html",[2,0.411,3,0.411,8,0.36,23,2.093,24,0.007,58,2.439,60,0.381,132,0.633,141,3.252,145,0.387,146,0.195,182,1.318,289,2.51,314,0.006,315,0.006,316,1.79,318,2.824,323,3.406,324,2.704,325,2.391,328,3.189,3824,6.913,3825,6.317,3826,6.317,3827,6.317,3828,7.099,3829,7.099]],["title/components/ToggleComponent.html",[0,0.247,291,1.241]],["body/components/ToggleComponent.html",[0,0.425,1,1.03,2,0.234,3,0.234,4,1.372,5,1.107,6,1.107,8,0.205,10,0.431,15,1.586,16,4.235,19,0.977,22,0.895,23,1.994,24,0.007,25,1.094,26,2.288,27,2.016,28,2.029,30,1.53,32,0.44,33,0.757,35,1.73,36,4.624,38,1.469,44,0.898,48,3.78,49,4.624,52,3.624,55,0.929,60,0.264,64,0.647,65,1.26,66,1.096,76,1.024,77,1.851,81,3.624,83,5.052,84,2.191,85,3.959,86,0.881,87,0.931,88,0.618,89,3.624,99,3.624,101,3.78,108,1.45,110,1.012,113,1.161,114,3.047,121,2.393,131,3.624,132,0.36,133,3.624,134,1.644,143,2.53,144,2.53,145,0.17,146,0.111,160,4.87,181,2.53,182,0.75,183,1.503,184,1.114,188,1.988,189,1.107,190,1.107,191,0.995,192,1.03,193,1.328,194,1.129,195,2.142,196,1.049,197,2.142,198,1.03,199,1.068,200,1.049,201,1.107,202,1.03,203,1.586,204,1.049,205,1.107,206,1.03,207,1.107,208,0.995,209,1.012,210,1.586,211,1.853,212,0.995,213,1.03,214,1.03,215,1.012,216,1.107,217,1.049,218,1.853,219,1.107,220,1.107,221,1.049,222,2.024,223,1.03,224,1.853,225,1.049,226,1.049,227,1.03,228,1.107,229,1.012,230,1.049,231,1.107,232,1.03,233,1.107,234,1.107,235,1.03,236,1.107,237,0.995,238,1.03,239,1.107,240,1.012,241,1.107,242,0.911,243,1.107,244,1.012,245,1.695,246,1.107,247,1.012,248,1.107,249,1.012,250,1.107,251,0.96,252,1.107,253,1.03,254,0.943,255,1.03,256,1.049,257,1.107,258,1.03,259,1.107,260,1.107,261,1.03,262,1.107,263,1.03,264,1.107,265,0.96,266,1.107,267,1.03,268,1.03,269,1.107,270,1.03,271,1.049,272,1.107,273,0.995,274,1.012,275,1.833,276,1.03,277,0.82,278,1.049,279,1.03,280,1.03,281,1.049,282,1.03,283,1.107,284,1.03,285,1.03,286,1.107,287,1.012,288,1.107,289,1.03,290,1.107,291,1.994,292,1.107,293,1.03,294,1.107,295,1.03,296,0.977,297,0.995,298,1.107,299,1.012,300,1.107,301,1.012,302,1.107,303,1.012,304,1.107,305,1.012,306,1.107,307,1.012,308,1.068,309,1.107,310,1.012,311,1.049,312,0.995,313,1.107,314,0.004,315,0.004,379,2.072,450,5.76,545,4.244,1129,2.53,1172,2.723,2203,4.167,2315,4.732,2581,3.084,2678,3.78,3438,4.732,3830,3.596,3831,5.789,3832,5.789,3833,5.789,3834,4.041,3835,4.041,3836,4.041,3837,5.789,3838,4.041,3839,4.041,3840,4.041,3841,4.041]],["title/components/ToolbarComponent.html",[0,0.247,293,1.241]],["body/components/ToolbarComponent.html",[0,0.406,1,1.096,2,0.249,3,0.249,4,0.871,5,1.177,6,1.177,8,0.218,10,0.458,13,4.344,19,1.039,22,0.951,24,0.007,26,2.293,27,2.021,28,2.119,30,1.598,32,0.468,34,2.119,35,1.652,40,2.844,44,0.938,60,0.275,64,0.578,66,0.993,76,1.052,86,0.654,87,0.929,88,0.458,108,1.515,110,1.076,113,0.838,132,0.383,145,0.181,146,0.118,165,2.332,182,0.798,183,1.57,184,1.163,188,2.043,189,1.177,190,1.177,191,1.057,192,1.096,193,1.387,194,1.167,195,2.192,196,1.115,197,2.192,198,1.096,199,1.135,200,1.115,201,1.177,202,1.096,203,1.657,204,1.115,205,1.177,206,1.096,207,1.177,208,1.057,209,1.076,210,1.623,211,1.917,212,1.057,213,1.096,214,1.096,215,1.076,216,1.177,217,1.971,218,2.192,219,1.177,220,1.177,221,1.115,222,2.08,223,1.096,224,1.917,225,1.115,226,1.115,227,1.096,228,1.177,229,1.076,230,1.115,231,1.177,232,1.096,233,1.177,234,1.177,235,1.096,236,1.177,237,1.057,238,1.096,239,1.177,240,1.076,241,1.177,242,0.968,243,1.177,244,1.076,245,1.753,246,1.177,247,1.076,248,1.177,249,1.076,250,1.177,251,1.021,252,1.177,253,1.096,254,1.003,255,1.096,256,1.115,257,1.177,258,1.096,259,1.177,260,1.177,261,1.096,262,1.177,263,1.096,264,1.177,265,1.021,266,1.177,267,1.096,268,1.096,269,1.177,270,1.096,271,1.115,272,1.177,273,1.057,274,1.076,275,1.871,276,1.096,277,0.871,278,1.115,279,1.096,280,1.096,281,1.115,282,1.096,283,1.177,284,1.096,285,1.096,286,1.177,287,1.076,288,1.177,289,1.096,290,1.177,291,1.096,292,1.177,293,1.936,294,1.177,295,1.096,296,1.039,297,1.057,298,1.177,299,1.076,300,1.177,301,1.076,302,1.177,303,1.076,304,1.177,305,1.076,306,1.177,307,1.076,308,1.135,309,1.177,310,1.076,311,1.115,312,1.722,313,1.177,314,0.004,315,0.004,325,2.037,379,1.039,385,2.708,415,1.29,435,3.785,887,5.686,1129,2.689,1219,3.093,1312,6.226,1322,4.614,1334,3.093,1734,4.135,2263,3.511,3438,3.511,3842,3.823,3843,6.046,3844,6.757,3845,5.38,3846,6.046,3847,6.046,3848,6.046,3849,4.296,3850,6.997,3851,4.296,3852,6.046,3853,4.296,3854,7.121,3855,4.296,3856,3.823,3857,4.296,3858,4.296,3859,6.046,3860,4.296,3861,6.046,3862,7.593,3863,6.046,3864,6.046]],["title/injectables/TypeConfigService.html",[373,1.177,1084,2.825]],["body/injectables/TypeConfigService.html",[2,0.17,3,0.17,4,0.923,8,0.149,10,0.312,19,1.1,24,0.007,25,1.781,27,1.819,32,0.319,33,1.106,35,1.838,38,1.554,41,1.14,42,1.851,44,0.976,55,0.572,56,2.034,60,0.385,64,0.887,65,1.778,66,1.069,71,0.773,74,1.12,75,1.444,76,1.276,77,0.734,84,1.474,86,0.958,87,0.672,88,0.672,113,1.044,132,0.261,142,1.14,145,0.123,146,0.08,173,3.24,191,1.678,193,1.786,194,0.759,208,2.108,209,2.003,210,1.86,212,1.776,245,1.14,314,0.003,315,0.003,331,2.108,333,2.325,339,4.305,340,3.72,346,0.626,352,3.72,353,1.833,366,2.14,371,2.722,373,1.35,379,1.1,382,2.397,402,4.305,415,1.367,447,1.474,452,3.194,467,3.789,482,4.11,502,2.552,506,3.797,515,2.108,516,2.325,520,2.431,545,2.471,580,0.931,614,3.225,667,2.972,687,3.94,836,2.851,865,2.198,878,2.935,879,2.619,921,1.541,974,4.05,979,2.086,999,3.04,1010,4.266,1017,1.833,1029,1.912,1034,1.833,1059,2.74,1084,2.642,1094,2.74,1095,3.276,1101,5.222,1108,3.473,1114,4.517,1116,3.376,1133,3.112,1134,2.108,1142,5.507,1148,2.606,1159,2.394,1172,4.331,1297,2.003,1304,3.112,1520,2.108,1537,4.189,1538,7.273,1539,6.74,1543,5.884,1544,2.849,1568,2.642,1582,2.972,1617,2.235,1624,4.344,1648,3.112,1693,2.552,1694,4.305,1904,2.325,1977,3.112,2096,4.05,2690,4.05,2693,5.756,2695,2.849,2696,2.235,2736,4.05,2755,2.606,3150,2.606,3156,5.942,3292,4.05,3293,6.74,3357,2.394,3684,2.606,3865,4.551,3866,4.551,3867,7.786,3868,6.295,3869,4.551,3870,6.295,3871,2.929,3872,2.929,3873,4.551,3874,2.929,3875,4.551,3876,4.551,3877,4.551,3878,4.551,3879,2.929,3880,2.929,3881,4.551,3882,4.551,3883,2.929,3884,4.05,3885,2.929,3886,4.551,3887,4.551,3888,4.551,3889,6.295,3890,6.295,3891,6.295,3892,4.05,3893,4.551,3894,4.551,3895,4.05,3896,4.551,3897,4.551,3898,4.551,3899,4.551,3900,6.817,3901,6.295,3902,4.551,3903,4.551,3904,4.551,3905,4.551,3906,4.551,3907,2.929,3908,2.929,3909,2.929,3910,2.929,3911,2.929,3912,2.929,3913,2.929,3914,2.929,3915,2.929]],["title/modules/UiModule.html",[316,1.041,599,2.93]],["body/modules/UiModule.html",[2,0.322,3,0.322,8,0.282,23,1.64,24,0.007,58,1.911,60,0.438,132,0.496,134,2.262,141,2.031,145,0.356,146,0.152,182,1.033,314,0.005,315,0.005,316,1.539,318,2.212,323,2.928,324,2.118,325,1.874,328,2.742,599,5.982,601,3.3,602,2.486,604,5.459,1086,5.747,1753,6.524,1762,6.23,1763,5.972,1764,6.524,1765,6.23,1768,4.546,1777,4.95,1778,4.245,1781,4.546,2264,6.524,2269,6.524,2271,4.95,2272,4.95,2878,6.868,3602,6.868,3609,4.95,3916,4.95,3917,5.562,3918,4.95,3919,5.562,3920,5.562,3921,5.562]],["title/interfaces/Update.html",[500,1.98,961,1.435]],["body/interfaces/Update.html",[0,0.216,2,0.246,3,0.246,8,0.216,10,0.454,24,0.007,25,1.316,32,0.464,33,1.043,38,1.502,41,1.066,55,0.755,60,0.387,61,2.386,62,2.469,64,0.88,65,1.97,70,3.085,71,1.284,72,1.837,75,2.053,76,1.317,79,2.561,84,2.9,88,0.883,103,3.338,112,1.231,114,2.239,116,2.287,126,1.692,132,0.379,142,1.504,145,0.253,146,0.117,162,1.462,167,2.001,194,1.38,210,1.964,277,1.762,314,0.004,315,0.005,338,4.19,345,2.442,348,2.239,366,2.001,370,3.615,373,1.683,379,1.029,384,3.778,385,1.302,386,1.983,409,2.055,436,3.085,462,1.812,464,2.31,476,3.037,486,3.903,491,2.469,497,3.663,500,3.851,512,2.386,520,1.433,566,2.663,580,1.352,708,4.19,722,4.24,723,4.733,815,2.663,822,3.16,843,3.555,865,2.055,907,5.17,931,2.31,961,1.77,984,3.26,988,3.247,989,2.909,994,3.778,995,3.477,996,2.561,997,2.909,998,2.561,999,2.055,1000,2.561,1001,1.856,1002,2.778,1007,3.477,1009,3.477,1010,3.997,1011,3.477,1013,2.909,1014,3.786,1016,3.786,1017,5.437,1019,3.477,1021,3.063,1022,3.921,1023,3.477,1025,3.247,1026,3.247,1027,3.786,1029,2.778,1030,3.786,1031,3.786,1033,2.909,1034,2.663,1035,3.477,1036,3.477,1037,3.921,1038,4.583,1039,3.477,1040,3.477,1041,3.477,1042,3.477,1043,3.477,1044,3.477,1045,3.477,1046,3.477,1047,3.786,1048,3.786,1049,3.786,1050,6.193,1051,5.688,1052,3.477,1053,3.486,1054,3.477,1055,3.477,1056,3.786,1057,5.344,1058,4.908,1059,2.561,1060,3.786,1061,5.688,1062,3.477,1063,3.477,1064,3.477,1065,3.477,1066,5.688,1067,2.561,1068,3.477,1069,3.786,1070,3.477,1071,3.786,1072,3.786]],["title/interfaces/Upload.html",[296,1.177,961,1.435]],["body/interfaces/Upload.html",[0,0.191,2,0.218,3,0.218,8,0.362,10,0.401,24,0.007,25,0.711,32,0.41,33,0.719,39,1.953,43,2.484,55,0.817,60,0.402,64,0.803,65,1.784,70,2.049,71,1.5,72,1.682,75,0.863,76,1.327,79,2.264,84,2.462,87,0.401,88,0.977,103,1.402,112,1.59,116,3.023,118,3.193,126,1.496,132,0.335,142,1.988,145,0.274,146,0.103,162,2.231,171,2.139,193,2.244,194,1.402,210,1.317,275,1.464,277,0.763,296,2.198,314,0.004,315,0.005,338,4.575,345,2.642,348,2.049,366,2.585,368,4.885,373,1.57,379,1.57,384,2.042,385,1.151,386,2.51,407,5.862,408,2.572,409,1.816,415,1.65,423,2.87,451,4.472,460,2.183,462,1.602,464,2.042,476,2.473,481,2.903,500,2.906,503,2.519,520,2.188,530,2.572,537,2.707,566,2.354,577,1.012,580,1.195,648,3.642,659,2.51,684,2.456,685,3.19,722,3.642,730,2.707,737,2.456,850,2.042,865,1.816,931,2.042,941,3.758,961,2.106,977,2.707,986,1.724,994,2.984,996,2.264,997,2.572,998,2.264,999,1.816,1000,2.264,1001,1.64,1002,2.456,1033,2.572,1037,3.589,1053,2.183,1084,3.19,1101,2.456,1296,2.183,1364,2.655,1386,2.354,1457,3.526,1470,1.724,1476,4.472,1493,2.354,1494,2.354,1496,2.264,1585,3.082,1627,3.758,1628,2.87,1629,2.87,1630,4.492,1631,2.87,1632,2.87,1633,2.87,1634,2.707,1635,2.354,1636,2.707,1637,2.354,1638,3.074,1639,3.074,1640,4.492,1641,3.074,1642,4.956,1643,2.87,1644,3.074,1645,3.074,1646,3.074,1647,3.074,1648,2.572,1649,3.074,1650,3.074,1651,3.074,1652,4.492,1653,4.241,1654,3.074,1655,2.572,1656,2.707,1657,2.354,1658,3.074,1659,6.211,1660,3.074,1661,3.074,1662,5.308,1663,3.074,1664,4.492,1665,4.492,1666,4.492,1667,4.492,1668,4.492,1669,4.492,1670,4.492,1671,4.492,1672,4.492,1673,4.492,1674,4.956,1675,2.87,1676,3.074,1677,3.074,1678,3.074,1679,4.492,1680,3.074,1681,4.492,1682,3.074,1683,5.839,1684,3.074,1685,3.074,1686,3.074,1687,4.492,1688,4.492,1689,3.074,1690,3.074,1691,2.87,1692,3.074,1693,2.109,1694,2.572,1695,3.074,1696,3.074,1697,3.074,1698,3.074,1699,3.074,1700,3.074,1701,3.074,1702,3.074,1703,3.074,1704,3.074,1705,3.074,1706,3.074]],["title/components/UploadComponent.html",[0,0.247,295,1.241]],["body/components/UploadComponent.html",[0,0.372,1,0.693,2,0.157,3,0.157,4,0.552,5,0.745,6,0.745,8,0.442,10,0.29,15,1.176,19,0.658,22,0.602,24,0.007,25,1.385,26,2.248,27,1.974,30,1.135,32,0.296,33,0.562,35,1.872,38,1.125,39,1.31,41,1.076,42,3.088,44,0.937,55,0.88,60,0.364,64,0.839,65,1.315,66,1.197,71,1.027,74,1.488,76,1.195,77,1.752,84,1.724,86,1.065,87,0.898,88,0.898,104,3.39,105,1.829,106,2.379,108,1.649,110,0.681,113,1.109,116,2.027,121,1.391,132,0.242,135,1.215,145,0.115,146,0.075,165,3.976,171,2.561,182,0.505,183,1.115,184,0.826,188,1.626,189,0.745,190,0.745,191,0.669,192,0.693,193,1.835,194,0.888,195,1.803,196,0.706,197,1.803,198,0.693,199,0.719,200,0.706,201,0.745,202,0.693,203,1.176,204,0.706,205,0.745,206,0.693,207,0.745,208,0.669,209,0.681,210,1.335,211,1.458,212,0.669,213,0.693,214,0.693,215,0.681,216,0.745,217,0.706,218,1.458,219,0.745,220,0.745,221,0.706,222,1.656,223,0.693,224,1.458,225,0.706,226,0.706,227,0.693,228,0.745,229,0.681,230,0.706,231,0.745,232,0.693,233,0.745,234,0.745,235,0.693,236,0.745,237,0.669,238,0.693,239,0.745,240,0.681,241,0.745,242,1.362,243,0.745,244,0.681,245,1.333,246,0.745,247,0.681,248,0.745,249,0.681,250,0.745,251,0.646,252,0.745,253,0.693,254,0.635,255,0.693,256,0.706,257,0.745,258,0.693,259,0.745,260,0.745,261,0.693,262,0.745,263,0.693,264,0.745,265,0.646,266,0.745,267,0.693,268,0.693,269,0.745,270,0.693,271,0.706,272,0.745,273,1.62,274,0.681,275,1.576,276,0.693,277,0.871,278,0.706,279,0.693,280,0.693,281,0.706,282,0.693,283,0.745,284,0.693,285,0.693,286,0.745,287,0.681,288,0.745,289,0.693,290,0.745,291,0.693,292,0.745,293,0.693,294,0.745,295,1.541,296,2.312,297,0.669,298,0.745,299,0.681,300,0.745,301,0.681,302,0.745,303,0.681,304,0.745,305,0.681,306,0.745,307,0.681,308,0.719,309,0.745,310,0.681,311,0.706,312,0.669,313,0.745,314,0.003,315,0.003,337,4.13,345,1.747,346,0.581,347,1.431,348,2.254,371,2.091,374,3.51,375,3.475,379,1.038,385,2.323,386,2.419,390,1.568,400,1.968,409,1.313,410,1.776,415,1.815,416,1.637,418,5.338,429,4.211,433,2.194,443,4.349,447,2.459,448,3.821,449,2.26,451,3.331,460,4.251,476,2.302,487,3.821,510,2.42,517,3.51,520,2.036,522,2.42,526,5.379,530,1.86,545,3.572,562,1.637,563,2.214,570,3.903,571,2.919,580,0.864,708,1.637,754,2.493,774,1.702,781,2.804,859,2.408,863,2.984,864,3.331,869,3.357,876,3.854,877,3.089,878,3.32,879,2.515,921,1.431,922,2.223,923,2.223,924,2.223,950,2.804,951,3.831,953,1.86,955,1.702,976,2.804,1022,2.804,1053,2.493,1067,4.409,1219,1.958,1334,1.958,1386,1.702,1414,2.223,1454,4.134,1558,3.277,1590,2.408,1627,3.639,1629,3.277,1631,3.277,1632,3.277,1633,3.277,1675,3.277,1711,3.821,2036,2.804,2107,3.091,2132,5.472,2444,3.639,2640,3.821,2908,3.277,3356,2.42,3357,2.223,3360,2.42,3364,2.42,3583,2.42,3922,2.42,3923,4.294,3924,6.045,3925,6.045,3926,6.045,3927,4.294,3928,4.294,3929,2.719,3930,2.719,3931,2.719,3932,2.719,3933,2.719,3934,2.719,3935,2.719,3936,3.821,3937,2.719,3938,4.294,3939,2.719,3940,2.719,3941,4.294,3942,2.719,3943,4.294,3944,2.719,3945,2.719,3946,4.294,3947,2.719,3948,2.719,3949,2.719,3950,2.719,3951,4.294,3952,2.719,3953,2.719,3954,2.719,3955,2.719,3956,4.294,3957,2.719,3958,2.719,3959,2.719,3960,2.719,3961,2.719,3962,2.719,3963,2.42,3964,2.719,3965,2.719,3966,2.719,3967,2.719,3968,5.322,3969,2.719,3970,2.719,3971,2.719,3972,2.719,3973,2.719,3974,2.719,3975,2.719,3976,2.719,3977,2.719,3978,2.719,3979,2.719,3980,2.719,3981,4.294,3982,4.294,3983,4.294,3984,4.294,3985,4.294]],["title/modules/UtilityModule.html",[316,1.041,2269,3.328]],["body/modules/UtilityModule.html",[2,0.331,3,0.331,8,0.29,23,2.161,24,0.007,58,1.965,60,0.438,132,0.51,134,2.327,141,2.954,145,0.359,146,0.157,174,3.581,182,1.062,253,2.442,254,1.335,258,2.442,261,2.442,285,2.442,287,2.399,305,2.399,314,0.005,315,0.005,316,1.567,318,2.275,323,2.982,324,2.179,325,1.927,327,3.208,328,2.792,578,3.105,601,3.36,602,2.557,604,5.532,1086,5.824,1087,7.199,1761,6.55,1771,5.09,2269,6.765,2467,4.675,3722,5.09,3744,5.09,3986,5.09,3987,5.09,3988,5.72,3989,5.09,3990,5.72,3991,5.72,3992,5.72,3993,5.72]],["title/modules/VcModule.html",[316,1.041,3994,3.714]],["body/modules/VcModule.html",[2,0.371,3,0.371,8,0.325,23,2.321,24,0.007,58,2.203,60,0.428,132,0.572,141,3.112,145,0.374,146,0.176,182,1.191,185,2.55,217,2.541,293,2.496,314,0.005,315,0.005,316,1.684,318,2.55,323,3.203,324,2.442,325,2.16,327,4.416,328,2.999,601,3.609,602,2.866,1727,4.615,1728,4.187,3434,7,3439,5.705,3856,5.705,3994,7.448,3995,5.705,3996,5.705,3997,5.705,3998,6.411,3999,6.411,4000,6.411]],["title/pipes/VisibleFieldsPipe.html",[1138,2.561,1760,3.503]],["body/pipes/VisibleFieldsPipe.html",[2,0.389,3,0.389,8,0.341,10,0.716,15,1.84,22,1.487,24,0.007,41,2.352,44,1.041,60,0.369,64,0.642,66,0.878,74,1.993,76,1.205,86,1.022,87,0.928,88,0.716,112,2.613,132,0.599,145,0.283,146,0.184,314,0.006,315,0.006,325,2.728,415,2.612,659,3.053,989,5.538,1010,4.362,1025,6.181,1116,2.957,1138,4.577,1143,3.645,1149,5.538,1289,4.384,1470,3.712,1760,6.501,1805,5.975,4001,7.207,4002,5.975,4003,8.099,4004,8.099,4005,6.714,4006,8.099,4007,6.714]],["title/interfaces/WithLoader.html",[863,2.729,961,1.435]],["body/interfaces/WithLoader.html",[0,0.427,2,0.414,3,0.414,8,0.363,10,0.763,24,0.007,32,0.779,33,1.1,55,1.16,60,0.326,64,0.684,145,0.301,242,2.078,314,0.006,315,0.006,365,3.582,863,4.716,869,4.44,961,2.718,1479,5.751,2299,5.264,2337,5.845,4008,6.364,4009,6.364,4010,7.483]],["title/interfaces/WithNotifications.html",[864,3.047,961,1.435]],["body/interfaces/WithNotifications.html",[0,0.415,2,0.396,3,0.396,8,0.347,10,0.73,24,0.007,25,1.548,32,0.745,33,1.071,55,1.143,56,3.66,60,0.311,64,0.783,88,0.969,145,0.288,314,0.006,315,0.006,379,2.119,476,3.118,563,3.407,570,4.646,864,5.126,961,2.678,1352,7.426,1540,4.93,1908,7.426,1913,7.286,2040,5.6,4011,6.085,4012,6.085,4013,8.085]],["title/changelog.html",[1117,2.56,2802,2.944,4014,3.639]],["body/changelog.html",[0,0.381,4,0.743,15,1.003,18,1.597,24,0.005,25,0.692,27,1.957,33,0.836,34,1.283,35,1.757,37,2.292,38,0.867,39,0.901,41,2.169,42,2.192,43,0.968,44,1.094,55,1.154,59,2.504,60,0.342,61,2.053,64,0.35,70,2.009,71,1.381,72,1.12,74,1.736,76,0.507,84,2.954,88,0.802,101,2.391,102,2.125,103,2.009,112,2.041,113,1.042,116,2.052,118,1.636,119,3.128,135,1.636,146,0.148,171,2.097,174,2.292,184,1.357,186,3.382,193,2.057,194,1.312,210,1.727,215,0.917,229,0.917,237,0.901,240,0.917,251,0.87,254,1.755,271,0.95,274,0.917,275,1.919,277,1.431,279,0.934,280,0.934,296,1.303,312,0.901,314,0.004,315,0.004,316,1.152,324,1.394,334,2.053,337,1.722,345,1.489,348,2.009,366,3.535,367,3.258,370,2.204,371,2.032,385,1.649,398,2.204,402,4.373,415,1.099,429,3.712,433,1.87,435,2.292,437,2.295,439,4.795,447,2.973,450,4.415,451,2.292,452,3.345,453,3.501,454,3.088,455,4.176,458,2.204,459,2.053,462,1.559,464,1.987,476,1.394,481,2.409,491,4.718,502,3.022,509,3.879,538,3.519,545,1.987,546,2.504,560,2.753,565,1.987,567,2.675,606,2.636,621,5.411,625,2.636,631,1.636,633,3.955,653,2.636,660,2.794,670,3.128,671,3.258,679,3.712,722,2.053,723,2.292,761,1.768,774,2.292,781,4.176,782,5.681,836,1.87,865,2.603,869,1.678,879,1.523,892,5.764,893,2.794,913,3.373,977,2.636,978,3.258,979,3.603,986,1.678,996,3.244,1000,2.204,1010,1.768,1022,2.391,1038,2.794,1053,3.712,1073,2.504,1089,3.685,1108,4.112,1112,2.794,1114,2.292,1172,3.697,1186,3.258,1292,2.636,1309,3.519,1378,4.404,1470,1.678,1476,2.292,1509,2.292,1539,2.794,1541,4.605,1542,2.992,1543,2.636,1553,2.636,1554,3.258,1567,3.258,1568,3.128,1585,2.053,1586,2.504,1595,1.927,1601,3.586,1614,2.794,1615,3.519,1635,2.292,1785,2.292,1904,1.87,1905,2.636,1976,2.992,1978,2.794,2036,2.391,2107,6.004,2119,3.685,2148,2.992,2193,2.992,2196,3.258,2198,6.276,2201,3.022,2203,2.636,2204,2.794,2300,2.504,2301,2.391,2470,4.795,2488,1.258,2678,4.909,2695,2.292,2806,5.382,2808,2.992,2843,5.077,2855,2.391,2856,3.879,2917,3.258,3057,3.258,3192,2.992,3293,2.794,3476,6.609,3597,7.982,3631,2.636,3664,2.992,3884,3.258,3936,4.795,4014,3.258,4015,3.661,4016,3.022,4017,3.661,4018,3.661,4019,3.661,4020,3.685,4021,3.661,4022,3.661,4023,3.661,4024,3.661,4025,3.661,4026,3.661,4027,3.661,4028,3.258,4029,8.341,4030,3.661,4031,3.661,4032,3.258,4033,3.258,4034,3.661,4035,3.661,4036,3.661,4037,3.661,4038,3.661,4039,4.795,4040,3.661,4041,3.661,4042,3.258,4043,3.661,4044,3.258,4045,3.661,4046,3.661,4047,3.661,4048,3.661,4049,3.661,4050,3.661,4051,3.258,4052,3.661,4053,3.661,4054,3.661,4055,3.661,4056,3.258,4057,3.661,4058,3.661,4059,3.661,4060,3.661,4061,3.661,4062,5.389,4063,3.661,4064,3.661,4065,3.661,4066,3.661,4067,3.258,4068,3.661,4069,3.661,4070,3.661,4071,4.795,4072,4.795,4073,5.389,4074,2.794,4075,3.661,4076,3.661,4077,5.69,4078,3.661,4079,3.661,4080,3.661,4081,3.661,4082,3.661,4083,3.258,4084,3.258,4085,3.661,4086,3.661,4087,3.661,4088,3.661,4089,3.661,4090,3.661,4091,3.661,4092,3.661,4093,6.395,4094,3.661,4095,2.504,4096,2.391,4097,3.661,4098,3.661,4099,3.661,4100,3.258,4101,3.661,4102,3.661,4103,3.661,4104,3.661,4105,3.661,4106,3.661,4107,3.258,4108,3.661,4109,3.661,4110,3.258,4111,3.661,4112,3.661,4113,3.661,4114,2.794,4115,3.661,4116,6.395,4117,3.661,4118,3.661,4119,3.258,4120,2.636,4121,3.661,4122,3.258,4123,5.389,4124,3.661,4125,5.389,4126,3.661,4127,3.661]],["title/coverage.html",[4128,5.864]],["body/coverage.html",[0,0.498,1,0.79,8,0.157,9,3.886,12,2.12,19,0.75,24,0.007,41,0.777,43,0.819,64,0.296,71,0.527,110,0.777,112,0.897,146,0.24,184,1.479,191,0.763,192,0.79,194,0.965,196,0.805,198,0.79,200,0.805,202,0.79,204,0.805,206,0.79,208,0.763,209,0.777,210,1.173,212,0.763,213,0.79,214,0.79,217,0.805,221,0.805,223,0.79,225,0.805,226,0.805,227,0.79,229,0.777,230,0.805,232,0.79,235,0.79,237,0.763,238,0.79,240,0.777,242,0.699,244,0.777,247,0.777,249,0.777,251,0.736,253,0.79,255,0.79,258,0.79,261,0.79,263,0.79,265,0.736,267,0.79,268,0.79,270,0.79,273,0.763,274,0.777,276,0.79,277,0.965,278,0.805,279,0.79,280,0.79,281,0.805,282,0.79,284,0.79,285,0.79,287,0.777,289,0.79,291,0.79,293,0.79,295,0.79,296,0.75,297,0.763,299,0.777,301,0.777,303,0.777,305,0.777,307,0.777,310,0.777,314,0.003,315,0.003,330,5.71,331,2.231,332,4.164,348,1.156,353,1.94,364,2.758,373,2.202,426,4.231,427,2.533,428,5.302,447,1.004,452,1.773,457,2.024,459,1.738,460,1.799,467,1.866,500,1.934,503,2.651,540,2.758,541,2.533,542,5.772,556,2.231,557,2.758,558,2.758,563,1.29,570,1.458,571,1.497,600,2.533,609,2.533,614,2.899,615,2.533,619,2.758,648,1.738,662,5.996,684,2.024,756,1.683,757,2.758,835,2.758,857,2.758,863,1.738,864,1.94,876,1.631,878,1.261,879,1.29,907,2.12,911,2.533,912,3.629,919,2.533,961,2.65,962,2.758,963,4.812,965,1.866,994,1.683,995,3.886,1082,2.231,1083,2.024,1084,1.799,1094,2.863,1096,2.758,1100,3.956,1101,2.024,1107,2.758,1131,2.365,1138,3.682,1139,2.231,1140,2.758,1141,2.12,1156,4.231,1168,2.365,1285,3.886,1291,3.886,1297,2.12,1305,2.758,1343,3.886,1344,2.533,1345,2.758,1357,2.231,1358,2.758,1376,2.758,1428,2.758,1445,4.231,1456,2.12,1457,1.683,1476,1.94,1494,2.977,1518,2.758,1536,2.758,1537,1.799,1624,1.866,1625,4.231,1627,2.12,1628,4.414,1657,1.94,1694,6.759,1729,2.758,1734,2.12,1735,2.758,1739,2.758,1749,2.365,1750,2.758,1751,2.024,1759,2.231,1760,2.231,1766,2.231,1784,2.758,1820,2.024,1821,3.886,1822,2.231,1884,2.758,1889,2.758,1932,1.799,1936,2.758,1941,2.024,1949,2.365,1969,2.758,1970,2.533,1973,2.758,2015,2.758,2067,2.758,2068,2.533,2069,2.758,2094,2.758,2108,2.758,2119,2.12,2190,2.758,2201,1.738,2207,3.886,2208,2.533,2209,2.758,2245,2.533,2246,2.758,2278,2.758,2339,2.758,2345,4.414,2346,2.758,2379,2.533,2381,2.533,2392,2.758,2427,2.758,2442,2.758,2466,2.758,2467,2.533,2468,5.147,2518,2.533,2527,2.533,2540,2.758,2541,2.758,2547,2.365,2548,2.758,2549,2.758,2591,2.758,2677,2.758,2693,4.67,2696,4.414,2792,2.533,2793,2.758,2794,2.758,2817,2.758,2887,3.886,2908,2.365,2926,2.758,2931,2.758,2996,2.758,3054,2.758,3066,2.758,3067,2.758,3096,2.758,3125,2.758,3139,5.775,3167,2.365,3307,2.533,3308,2.758,3331,3.629,3332,3.629,3368,2.758,3401,2.758,3402,4.231,3434,2.231,3435,2.758,3436,2.758,3450,2.758,3525,2.758,3610,2.758,3611,2.758,3617,2.231,3618,5.339,3622,2.533,3623,2.533,3624,2.533,3633,2.533,3657,2.758,3665,3.629,3667,4.231,3673,2.758,3706,2.758,3725,2.758,3765,2.758,3804,2.533,3830,2.758,3842,2.758,3922,2.758,4001,2.758,4002,2.758,4008,2.758,4009,2.758,4011,2.758,4012,2.758,4032,6.226,4033,2.758,4042,2.758,4044,2.758,4128,2.758,4129,3.629,4130,3.1,4131,6.997,4132,3.1,4133,9.377,4134,3.1,4135,7.383,4136,3.1,4137,3.1,4138,3.1,4139,3.1,4140,3.1,4141,4.755,4142,3.1,4143,5.785,4144,3.1,4145,3.1,4146,3.1,4147,3.1,4148,4.755,4149,3.1,4150,3.1,4151,6.487,4152,5.785,4153,3.1,4154,3.1,4155,3.1,4156,2.758,4157,2.758,4158,4.231,4159,2.758,4160,3.1,4161,3.1,4162,6.487,4163,5.785,4164,3.1,4165,5.785,4166,3.1,4167,4.755,4168,6.997,4169,6.997,4170,3.1,4171,4.755,4172,4.755,4173,4.755,4174,3.1,4175,3.1,4176,3.1,4177,3.1,4178,4.755,4179,5.785,4180,3.1,4181,3.1,4182,3.1,4183,4.755,4184,3.1,4185,3.1,4186,3.1,4187,3.1,4188,3.1,4189,4.755,4190,3.1,4191,6.487,4192,4.755,4193,3.1,4194,3.1,4195,6.997,4196,5.785,4197,4.755,4198,6.487,4199,3.1,4200,4.755,4201,3.1,4202,3.1,4203,3.1,4204,3.1,4205,3.1,4206,3.1,4207,3.1,4208,3.1,4209,3.1,4210,4.755,4211,4.755,4212,3.1,4213,3.1,4214,4.755,4215,3.1,4216,3.1,4217,2.758,4218,2.758,4219,3.1,4220,3.1,4221,3.1,4222,3.1,4223,3.1,4224,3.1,4225,3.1,4226,3.1,4227,3.1,4228,3.1,4229,3.1,4230,3.1,4231,3.1,4232,3.1,4233,2.758,4234,4.231,4235,2.758,4236,4.755,4237,3.1,4238,3.1,4239,5.785,4240,4.755,4241,4.755,4242,5.785,4243,3.1,4244,3.1,4245,3.1,4246,3.1,4247,3.1,4248,3.1,4249,3.1,4250,3.1,4251,3.1,4252,2.758,4253,2.758,4254,2.758,4255,2.758,4256,4.231,4257,3.1,4258,3.1]],["title/dependencies.html",[58,2.006,4016,2.294]],["body/dependencies.html",[12,4.676,13,3.712,24,0.007,58,2.349,132,0.61,134,2.781,185,3.257,215,1.713,314,0.006,315,0.006,509,4.922,538,4.465,578,3.712,606,5.894,607,6.085,621,4.922,663,3.598,1089,4.676,1133,4.676,1134,4.922,1728,5.347,1846,5.589,1899,6.085,3766,4.922,4056,6.085,4074,5.218,4107,6.085,4110,7.286,4122,6.085,4259,7.286,4260,6.838,4261,6.085,4262,9.533,4263,6.085,4264,6.838,4265,6.838,4266,6.085,4267,6.085,4268,4.922,4269,6.838,4270,6.838,4271,6.838,4272,6.838,4273,6.838,4274,6.838,4275,6.085,4276,6.838,4277,6.838,4278,6.085,4279,6.838,4280,6.838,4281,6.838,4282,6.838]],["title/miscellaneous/functions.html",[614,2.61,4283,3.121]],["body/miscellaneous/functions.html",[24,0.007,32,0.779,65,1.556,86,1.36,87,0.953,88,0.953,314,0.006,315,0.006,365,3.046,379,1.729,382,2.724,600,5.845,605,6.364,614,3.197,615,7.301,734,7.27,1601,5.01,3618,5.458,3622,6.873,3623,6.873,3624,6.873,3632,5.845,3637,6.364,3639,6.364,3640,6.364,4283,5.458,4284,7.152,4285,7.949]],["title/index.html",[32,0.446,1117,2.56,2802,2.944]],["body/index.html",[0,0.439,3,0.384,8,0.426,14,4.552,18,2.143,24,0.007,32,0.723,34,2.818,55,1.088,56,2.195,58,1.688,60,0.415,61,4.851,62,4.666,64,0.469,66,0.643,71,1.126,84,1.591,87,0.524,135,2.195,145,0.207,146,0.135,168,3.536,245,1.661,277,1.345,314,0.005,315,0.005,316,1.795,318,2.986,325,2.234,363,2.251,390,2.421,434,3.356,447,1.591,500,1.998,508,2.439,509,3.536,563,3.124,567,3.991,574,3.075,575,4.015,576,4.33,622,3.536,631,2.195,633,3.719,654,3.992,663,4.23,670,4.666,720,3.075,752,3.536,754,4.358,758,4.015,774,4.151,816,4.7,883,4.839,898,4.371,968,6.136,975,6.136,1001,2.143,1029,3.207,1117,4.151,1180,7.153,1278,5.729,1364,3.203,1496,3.992,1509,3.075,1553,3.536,1586,4.535,1589,5.499,1590,3.719,1615,4.33,1637,4.7,1785,5.415,1856,3.075,1908,4.015,2037,6.681,2103,4.371,2146,5.134,2285,3.536,2678,3.207,2715,4.371,2802,3.536,2806,3.748,2827,4.535,3060,4.015,3234,3.748,3502,4.371,3528,4.015,3631,6.365,3726,6.136,3963,4.371,4016,5.166,4020,5.134,4074,3.748,4077,4.371,4114,3.748,4120,5.404,4129,5.061,4259,4.371,4268,6.365,4278,4.371,4286,4.912,4287,4.912,4288,7.508,4289,4.912,4290,4.912,4291,4.371,4292,4.912,4293,6.681,4294,4.912,4295,7.153,4296,4.912,4297,4.912,4298,4.912,4299,5.901,4300,4.151,4301,5.42,4302,4.912,4303,6.861,4304,6.632,4305,4.912,4306,4.912,4307,4.912,4308,4.912,4309,4.912,4310,4.371,4311,4.371,4312,4.912,4313,4.912,4314,4.912,4315,4.912,4316,4.912,4317,4.912,4318,6.862,4319,5.729,4320,4.371,4321,4.912,4322,3.748,4323,4.912,4324,4.912,4325,4.912,4326,4.912,4327,4.912,4328,4.912,4329,4.912,4330,4.912,4331,6.632,4332,6.632,4333,4.912,4334,4.912,4335,4.912,4336,4.912,4337,4.912,4338,4.912,4339,4.912,4340,4.912,4341,4.912,4342,4.912,4343,4.912,4344,4.912,4345,4.371,4346,6.632,4347,4.912,4348,4.912,4349,4.912,4350,4.912,4351,4.912,4352,4.912,4353,4.912,4354,4.912,4355,5.901,4356,6.632,4357,4.912,4358,4.912,4359,4.912,4360,4.371,4361,4.912,4362,4.912]],["title/modules.html",[316,1.409]],["body/modules.html",[24,0.006,185,3.957,186,4.14,314,0.006,315,0.006,316,1.42,317,4.78,593,4.78,599,3.998,1073,4.541,1079,4.78,1080,4.541,1081,4.336,1753,4.541,1761,4.541,1762,4.336,1763,4.157,1764,4.541,1765,4.336,2264,4.541,2269,4.541,2373,5.068,2584,4.78,2878,4.78,3602,4.78,3824,4.78,3994,5.068,4363,9.949,4364,9.949]],["title/overview.html",[4365,5.029]],["body/overview.html",[0,0.122,1,1.912,19,1.184,23,0.708,24,0.007,25,1.417,58,0.825,110,1.746,141,0.877,145,0.101,146,0.066,182,0.446,184,0.462,191,1.205,192,1.777,196,1.809,198,1.777,200,1.809,202,1.777,204,1.809,206,1.777,208,1.205,209,1.227,212,1.205,213,1.777,214,1.777,217,1.809,221,1.809,223,1.777,225,1.809,226,1.809,227,1.777,229,1.746,230,1.809,232,1.777,235,1.777,237,1.715,238,1.777,240,1.746,242,1.57,244,1.746,247,1.746,249,1.746,251,1.655,253,1.777,255,1.912,258,1.777,261,1.777,263,1.777,265,1.655,267,1.777,268,1.777,270,1.777,273,1.715,274,1.746,276,1.777,278,1.809,279,1.777,280,1.777,281,1.809,282,1.777,284,1.912,285,1.777,287,1.746,289,1.777,291,1.777,293,1.777,295,1.777,297,1.715,299,1.746,301,1.746,303,1.746,305,1.746,307,1.746,310,1.746,314,0.003,315,0.003,316,0.831,317,4.451,318,0.955,319,2.136,320,2.136,321,2.136,322,2.136,323,1.581,324,0.914,325,0.809,348,1.826,373,0.58,457,3.198,459,2.746,460,2.843,556,3.525,571,2.365,593,6.361,594,2.136,595,2.136,596,2.136,597,2.136,598,2.136,599,5.681,648,2.746,788,1.728,876,2.577,879,2.038,961,0.708,994,2.658,1073,6.567,1074,2.136,1075,2.136,1076,2.136,1077,2.136,1078,2.136,1079,6.752,1080,6.4,1081,5.476,1082,3.525,1083,3.198,1084,2.843,1138,1.263,1139,5.016,1141,4.765,1457,2.658,1606,1.642,1721,2.136,1722,2.136,1724,2.136,1725,2.136,1753,6.607,1754,2.136,1755,2.136,1756,2.136,1757,2.136,1758,2.136,1759,5.016,1760,5.016,1761,6.252,1762,5.538,1763,5.25,1764,5.582,1765,5.143,1766,3.525,1820,3.198,1941,3.198,1963,2.136,1964,2.136,1965,2.136,1966,2.136,2086,2.136,2087,2.136,2088,2.136,2264,6.414,2265,2.136,2266,2.136,2267,2.136,2268,2.136,2269,6.274,2332,2.136,2333,2.136,2334,2.136,2335,2.136,2373,6.4,2374,2.136,2375,2.136,2377,2.136,2378,2.136,2584,4.451,2585,2.136,2586,2.136,2588,2.136,2878,6.272,2879,2.136,2880,2.136,2882,2.136,2883,2.136,3120,2.136,3121,2.136,3122,2.136,3123,2.136,3394,2.136,3395,2.136,3397,2.136,3398,2.136,3434,5.016,3446,2.136,3447,2.136,3602,5.876,3603,2.136,3604,2.136,3607,2.136,3661,2.136,3662,2.136,3824,4.451,3825,2.136,3826,2.136,3827,2.136,3916,2.136,3918,2.136,3986,2.136,3987,2.136,3989,2.136,3994,6.01,3995,2.136,3996,2.136,3997,2.136,4365,1.832,4366,2.4,4367,2.4,4368,2.4,4369,2.4,4370,2.4]],["title/miscellaneous/variables.html",[662,3.993,4283,3.121]],["body/miscellaneous/variables.html",[0,0.076,4,0.704,8,0.283,9,1.224,12,2.844,13,1.418,24,0.007,25,0.786,26,1.278,27,0.304,32,0.163,34,1.217,35,0.539,38,1.183,40,0.704,41,0.375,42,0.609,54,1.332,55,0.593,60,0.068,64,0.689,65,0.326,71,0.801,74,0.643,76,0.576,87,1.073,102,0.869,108,0.654,113,0.925,122,0.84,126,0.596,130,0.813,138,2.134,139,1.078,140,1.143,141,0.954,142,1.298,146,0.17,162,1.621,165,0.813,167,1.228,168,1.88,170,1.143,183,0.389,184,0.288,194,0.694,244,0.375,245,1.48,247,0.375,249,0.375,254,0.349,277,0.304,296,0.631,308,1.099,314,0.002,315,0.002,316,0.558,323,1.062,325,0.504,334,0.84,341,1.078,356,2.174,366,1.228,370,0.901,382,0.994,390,0.547,400,3.485,402,1.024,415,1.249,431,1.224,433,0.765,434,1.552,435,1.635,436,1.932,437,1.112,445,1.078,447,0.846,449,0.788,450,0.937,452,0.558,453,1.296,480,2.134,482,0.978,499,1.228,503,0.686,538,0.978,561,1.572,563,2.156,564,1.465,570,0.704,574,2.953,583,2.324,614,1.552,633,1.465,634,1.224,659,0.495,662,1.024,667,3.639,720,1.635,740,3.09,761,2.008,771,3.262,787,1.143,816,0.937,822,0.788,837,1.516,843,2.41,850,1.418,861,2.65,878,1.691,893,5.962,961,1.024,976,2.268,979,0.686,980,2.65,981,2.844,984,1.418,986,0.686,989,1.786,990,1.332,991,1.224,1001,2.431,1010,1.261,1067,0.901,1089,1.024,1112,3.954,1114,0.937,1145,1.078,1159,2.134,1168,3.173,1171,3.173,1172,2.219,1174,2.324,1175,1.332,1304,4.412,1309,0.978,1325,3.954,1364,2.008,1381,1.224,1541,3.08,1544,1.635,1588,1.516,1594,1.224,1601,0.84,1655,2.844,1656,1.078,1657,1.635,1693,0.84,1734,1.786,1797,2.324,1821,1.224,1822,3.396,1851,1.332,1898,4.041,1905,1.078,1938,4.949,1949,2.65,1970,2.838,1974,2.134,1977,1.024,1981,2.838,1987,4.96,2142,1.078,2158,3.173,2229,1.024,2252,1.224,2295,1.332,2327,1.332,2351,3.7,2379,1.224,2381,2.838,2475,1.332,2518,2.838,2527,2.838,2625,1.332,2716,3.856,2740,1.143,2784,1.224,2785,2.838,2831,2.838,2832,1.224,2833,1.224,2887,1.224,2908,3.954,2909,1.332,3011,2.324,3019,1.332,3060,4.235,3062,4.96,3068,2.324,3080,2.324,3086,1.332,3097,2.324,3172,1.332,3192,6.303,3209,1.332,3527,6.116,3531,1.332,3540,1.332,3547,1.224,3618,1.143,3632,1.224,3633,2.838,3634,1.332,3635,1.332,3636,1.332,3659,3.7,3726,1.224,3766,1.078,3804,2.838,3844,1.332,3845,3.09,3854,4.611,3892,2.324,3895,2.324,4010,1.332,4013,1.332,4067,5.258,4071,2.324,4072,2.324,4095,1.024,4100,1.332,4114,1.993,4129,3.6,4156,1.332,4157,2.324,4158,1.332,4159,3.09,4217,1.332,4218,2.324,4233,1.332,4234,3.7,4235,1.332,4252,1.332,4253,3.7,4254,1.332,4255,2.324,4256,1.332,4268,1.078,4283,1.143,4285,1.332,4322,3.173,4355,1.332,4371,1.497,4372,2.611,4373,1.497,4374,1.497,4375,1.497,4376,1.497,4377,1.497,4378,1.497,4379,1.497,4380,1.497,4381,1.497,4382,1.497,4383,1.497,4384,1.497,4385,1.497,4386,1.497,4387,2.611,4388,1.497,4389,1.497,4390,1.497,4391,1.497,4392,2.611,4393,1.497,4394,1.497,4395,5.574,4396,3.473,4397,2.611,4398,6.452,4399,1.497,4400,2.611,4401,1.497,4402,1.497,4403,4.158,4404,5.574,4405,1.497,4406,1.497,4407,4.158,4408,3.473,4409,1.497,4410,1.497,4411,1.497,4412,1.497,4413,1.497,4414,2.611,4415,4.158,4416,3.473,4417,6.199,4418,5.182,4419,4.158,4420,1.497,4421,2.611,4422,3.473,4423,1.497,4424,2.611,4425,1.497,4426,1.497,4427,2.611,4428,2.611,4429,3.473,4430,4.717,4431,1.497,4432,4.158,4433,1.497,4434,1.497,4435,2.611,4436,1.497,4437,5.574,4438,5.182,4439,5.574,4440,2.611,4441,2.611,4442,2.611,4443,2.611,4444,2.611,4445,2.611,4446,2.611,4447,1.497,4448,5.182,4449,1.497,4450,1.497,4451,2.611,4452,1.497,4453,1.497,4454,1.497,4455,1.497,4456,1.497,4457,1.497,4458,2.611,4459,4.158,4460,1.497,4461,1.497,4462,2.611,4463,1.497,4464,1.497,4465,1.497,4466,1.497,4467,1.497,4468,2.611,4469,2.611,4470,1.497,4471,1.497,4472,1.497,4473,2.611,4474,2.611,4475,2.611,4476,1.497,4477,1.497,4478,1.497,4479,2.611,4480,1.497,4481,2.611,4482,1.497,4483,1.497,4484,1.497,4485,1.497,4486,2.611,4487,2.611,4488,1.497,4489,1.497,4490,1.497,4491,1.497,4492,1.497,4493,3.473,4494,1.497,4495,1.497,4496,1.497,4497,1.497,4498,1.497,4499,4.717,4500,1.497,4501,1.497,4502,1.497,4503,1.497,4504,1.497,4505,4.158,4506,1.497,4507,1.497,4508,1.497,4509,1.497,4510,3.473,4511,1.497,4512,1.497,4513,1.332,4514,1.497,4515,1.497,4516,1.497,4517,1.497,4518,2.611,4519,1.497,4520,1.497,4521,1.497,4522,1.497,4523,3.473,4524,2.611,4525,1.497,4526,1.497,4527,2.611,4528,1.497,4529,2.611,4530,4.158,4531,2.611,4532,3.473,4533,1.497,4534,1.497,4535,4.158,4536,1.497,4537,1.497,4538,1.497,4539,2.611,4540,1.497,4541,2.611,4542,4.717,4543,4.717,4544,1.497,4545,1.497,4546,1.497,4547,1.497,4548,1.497,4549,1.497,4550,1.497,4551,1.497,4552,1.497,4553,1.497,4554,1.497,4555,1.497,4556,1.497,4557,1.497,4558,2.611,4559,4.158,4560,1.497,4561,1.497,4562,2.611,4563,1.497,4564,1.497,4565,1.497,4566,1.497,4567,2.611,4568,2.611,4569,2.611,4570,1.497,4571,2.611,4572,1.497,4573,1.497,4574,1.497,4575,1.497,4576,1.497,4577,1.497,4578,1.497,4579,1.497,4580,4.158,4581,1.497,4582,1.497,4583,1.497,4584,1.497,4585,1.497,4586,1.497,4587,1.497,4588,1.497,4589,6.675,4590,1.497,4591,3.473,4592,2.611,4593,1.497,4594,1.497,4595,1.497,4596,1.497,4597,2.611,4598,1.497,4599,1.497,4600,1.497,4601,1.497,4602,1.497,4603,1.497,4604,1.497,4605,1.497,4606,1.497,4607,1.497,4608,1.497,4609,1.497,4610,1.497,4611,1.497,4612,2.611,4613,1.497,4614,2.611,4615,1.497,4616,1.497,4617,1.497,4618,1.497,4619,1.497,4620,1.497,4621,1.497,4622,1.497,4623,1.497,4624,2.611,4625,1.497,4626,1.497,4627,1.497,4628,1.497,4629,1.497,4630,1.497,4631,1.497,4632,1.497,4633,1.497,4634,1.497,4635,1.497,4636,1.497,4637,1.497,4638,1.497,4639,3.473,4640,1.497,4641,1.497,4642,1.497,4643,1.497,4644,1.497,4645,1.497,4646,1.497,4647,1.497,4648,1.497,4649,1.497,4650,2.611,4651,3.473,4652,1.497,4653,1.497,4654,1.497,4655,2.611,4656,2.611,4657,1.497,4658,2.611,4659,2.611,4660,2.611,4661,1.497,4662,4.158,4663,1.497,4664,1.497,4665,1.332,4666,2.611,4667,1.497,4668,1.497,4669,1.497,4670,2.611,4671,4.158,4672,2.611,4673,2.611,4674,2.611,4675,1.497,4676,1.497,4677,1.497,4678,1.497,4679,1.497,4680,1.497,4681,1.497,4682,2.611,4683,2.611,4684,2.611,4685,1.497,4686,4.158,4687,1.497,4688,1.497,4689,2.611,4690,1.497,4691,1.497,4692,1.497,4693,1.497,4694,1.497,4695,1.497,4696,1.497,4697,1.497,4698,1.497,4699,1.497,4700,1.497,4701,1.497,4702,1.497,4703,1.497,4704,1.497,4705,1.497,4706,1.497,4707,3.473,4708,1.497,4709,1.497,4710,1.497,4711,1.497,4712,1.497,4713,1.497,4714,1.497,4715,1.497,4716,1.497,4717,1.497,4718,1.497,4719,1.497,4720,1.497]],["title/additional-documentation/project-setup-tutorial.html",[577,0.834,2488,1.065,4020,2.12,4095,2.12,4096,2.024]],["body/additional-documentation/project-setup-tutorial.html",[0,0.386,2,0.292,8,0.256,14,2.652,23,1.989,24,0.007,25,1.276,27,1.718,34,1.767,44,1.046,55,1.065,56,2.253,58,1.732,60,0.428,62,2.925,71,1.438,74,1.661,85,3.447,87,0.538,88,0.538,102,2.925,103,1.879,113,0.699,132,0.449,134,2.05,141,1.84,142,1.69,145,0.32,146,0.138,162,1.732,168,3.628,185,2.684,215,1.263,314,0.005,315,0.005,316,1.078,318,2.005,328,1.919,343,5.515,415,1.514,434,2.253,435,3.155,437,2.147,462,2.147,481,2.253,509,5.475,560,3.447,564,2.827,570,3.173,578,2.736,602,2.253,622,6.844,625,4.857,627,5.515,628,6.199,630,5.475,632,5.515,633,4.266,654,3.034,663,2.652,670,2.925,679,2.925,753,6.768,754,4.415,761,4.47,771,2.652,772,2.925,781,4.406,787,3.846,788,3.628,816,3.155,878,2.05,883,4.062,901,2.925,984,2.736,1001,2.943,1029,3.291,1073,5.555,1116,1.84,1117,4.224,1364,3.259,1568,2.925,1588,2.925,1589,4.715,1614,3.846,1657,3.155,1727,3.628,1728,4.406,1785,4.224,1840,4.119,1905,3.628,1960,4.614,1977,3.447,2154,3.447,2229,3.447,2300,4.614,2303,4.062,2678,5.53,2721,3.447,2787,5.149,2798,4.062,2827,3.447,3081,4.485,3234,5.804,3476,3.447,3528,4.119,4016,4.266,4020,6.185,4074,3.846,4084,4.485,4095,3.447,4096,4.967,4261,6.004,4263,4.485,4268,3.628,4293,6.004,4300,4.224,4301,4.119,4318,6.199,4319,3.846,4320,7.228,4360,4.485,4721,5.04,4722,5.555,4723,4.485,4724,5.04,4725,6.747,4726,6.747,4727,5.04,4728,9.334,4729,5.04,4730,5.04,4731,6.747,4732,5.04,4733,5.04,4734,4.485,4735,6.747,4736,5.04,4737,4.119,4738,5.04,4739,5.04,4740,5.04,4741,5.04,4742,5.04,4743,5.04,4744,5.04,4745,7.606,4746,5.04,4747,5.04,4748,7.606,4749,6.747,4750,5.04,4751,5.04,4752,5.04,4753,5.04,4754,5.04,4755,6.747,4756,5.04,4757,5.04,4758,4.857,4759,5.04,4760,5.04,4761,6.747,4762,4.485,4763,5.04,4764,3.846,4765,5.04,4766,5.04,4767,5.04,4768,5.04,4769,5.04,4770,5.04,4771,5.04,4772,5.04,4773,5.04,4774,5.04]],["title/additional-documentation/project-setup-tutorial/routes.html",[560,2.089,577,1.1,2488,1.405]],["body/additional-documentation/project-setup-tutorial/routes.html",[0,0.475,4,1.432,24,0.007,60,0.321,70,3.111,71,1.417,142,1.768,162,2.425,314,0.006,315,0.006,390,2.577,560,4.9,670,5.156,761,3.409,771,3.714,772,4.097,782,4.249,865,3.409,1496,5.023,1589,4.097,1960,4.826,2036,4.609,2040,4.826,2721,5.706,3472,6.28,3476,4.826,4039,6.28,4096,5.448,4318,5.386,4775,7.058,4776,7.058,4777,7.058,4778,7.058,4779,7.058,4780,7.058,4781,7.425,4782,7.058,4783,7.058]],["title/additional-documentation/project-setup-tutorial/authorization.html",[577,1.1,2488,1.405,4764,3.121]],["body/additional-documentation/project-setup-tutorial/authorization.html",[0,0.365,4,1.712,24,0.007,55,0.905,61,4.035,62,4.176,70,3.146,71,1.222,74,1.771,162,2.472,251,1.709,254,2.09,314,0.006,315,0.006,355,3.475,390,2.627,437,3.064,560,4.719,568,6.44,761,4.076,771,3.786,772,4.176,870,5.51,1001,3.138,1589,4.176,1785,4.504,1960,4.92,2036,4.698,2446,5.88,4020,4.92,4095,4.92,4096,5.847,4764,6.44,4784,6.402,4785,6.402,4786,6.402,4787,6.402]],["title/additional-documentation/project-setup-tutorial/custom-fields.html",[41,0.884,171,1.372,577,0.949,2488,1.212]],["body/additional-documentation/project-setup-tutorial/custom-fields.html",[0,0.475,4,1.208,11,2.631,14,2.212,15,1.631,16,4.328,18,3.697,19,1.439,23,2.038,24,0.007,25,1.125,26,1.365,27,1.402,28,2.087,30,1.573,33,0.984,34,1.473,35,1.959,36,3.727,38,1.521,40,3.251,41,2.303,42,3.058,44,0.652,49,2.631,52,2.631,55,1.108,56,2.661,58,1.444,60,0.375,61,3.339,62,2.439,64,0.402,66,0.55,70,1.567,71,0.714,74,1.465,76,1.142,81,2.631,84,2.436,87,0.802,88,0.448,89,2.631,99,2.631,103,2.578,110,2.123,112,2.66,114,2.212,121,1.361,122,3.339,131,3.727,132,0.531,133,3.727,134,1.709,135,3.09,141,1.535,143,2.631,144,2.631,145,0.334,146,0.218,162,1.444,171,3.663,173,2.439,175,3.435,181,2.631,194,1.153,210,0.852,215,1.053,314,0.004,315,0.004,316,0.899,327,3.877,328,1.601,332,3.025,334,3.339,344,4.543,365,1.79,366,1.976,371,1.892,382,2.267,390,1.535,398,2.53,415,1.262,434,3.09,437,1.79,438,4.286,449,2.212,452,2.578,470,2.53,482,3.887,500,1.709,502,2.357,565,2.281,566,2.631,567,2.086,576,2.744,580,1.336,614,1.878,631,1.878,633,3.339,662,2.874,720,2.631,761,3.981,771,2.212,772,2.439,782,2.53,814,2.744,836,3.532,865,2.03,887,2.744,976,4.514,979,4.036,981,2.874,984,2.281,986,3.168,1022,2.744,1083,3.887,1116,1.535,1129,2.631,1133,2.874,1143,2.281,1145,3.025,1165,3.025,1168,3.207,1172,3.536,1182,3.584,1304,2.874,1346,3.207,1456,2.874,1544,4.328,1568,4.013,1589,2.439,1601,2.357,1606,4.071,1609,4.866,1610,3.435,1653,2.744,1977,4.071,2038,3.435,2040,4.071,2070,3.74,2078,3.025,2106,3.74,2144,5.298,2202,3.74,2229,4.071,2281,3.435,2301,2.744,2581,3.207,2618,4.543,2695,2.631,2721,2.874,2745,3.74,2844,3.435,2845,3.207,2855,5.183,3110,3.435,3476,5.921,3547,3.435,3773,3.435,4083,3.74,4318,3.207,4319,3.207,4345,3.74,4513,3.74,4723,3.74,4737,3.435,4758,3.025,4781,3.74,4788,4.203,4789,5.953,4790,4.203,4791,4.203,4792,4.203,4793,4.203,4794,4.203,4795,4.203,4796,4.203,4797,4.203,4798,5.298,4799,4.203,4800,4.203,4801,4.203,4802,4.203,4803,4.203,4804,4.203,4805,4.203,4806,8.242,4807,4.203,4808,4.203,4809,4.203,4810,5.953,4811,4.203,4812,4.203,4813,4.203,4814,4.203,4815,4.203,4816,4.203,4817,4.203,4818,5.953,4819,4.203,4820,3.74,4821,4.203,4822,4.203,4823,3.74,4824,4.203,4825,4.203,4826,4.203,4827,4.203]],["title/additional-documentation/project-setup-tutorial/adding-new-packages.html",[71,0.527,577,0.834,782,1.866,2488,1.065,4016,1.739]],["body/additional-documentation/project-setup-tutorial/adding-new-packages.html",[8,0.326,13,4.278,14,3.378,24,0.006,45,4.745,55,0.807,56,3.523,58,2.93,61,4.783,62,4.95,70,3.316,71,1.449,87,0.91,162,2.206,277,1.599,314,0.005,315,0.005,316,1.373,356,4.019,490,4.42,506,4.147,761,4.654,771,3.378,772,3.726,782,3.865,787,4.899,788,4.621,816,4.019,1001,3.438,1114,4.934,1257,3.726,1553,4.621,1581,5.713,1589,3.726,1590,3.6,1606,4.39,1657,4.019,1785,4.934,1960,4.39,1978,6.014,2146,5.389,2154,4.39,2547,6.014,2855,4.192,2945,5.713,2967,5.713,3234,4.899,3775,6.441,4016,5.454,4114,6.787,4120,4.621,4291,5.713,4295,7.013,4299,5.713,4300,5.567,4301,6.97,4303,7.269,4310,5.713,4311,5.713,4322,4.899,4734,5.713,4737,5.247,4762,7.013,4828,6.42,4829,6.42,4830,6.42,4831,6.42,4832,6.42,4833,6.42,4834,6.42,4835,6.42,4836,6.42,4837,6.42]],["title/additional-documentation/project-setup-tutorial/publishing.html",[577,1.1,2488,1.405,4303,3.343]],["body/additional-documentation/project-setup-tutorial/publishing.html",[0,0.365,4,1.712,24,0.007,55,0.905,61,4.035,62,4.176,70,3.146,71,1.222,74,1.771,162,2.472,251,1.709,254,2.09,314,0.006,315,0.006,355,3.475,390,2.627,437,3.064,560,4.719,568,6.44,761,4.076,771,3.786,772,4.176,870,5.51,1001,3.138,1589,4.176,1785,4.504,1960,4.92,2036,4.698,2446,5.88,4020,4.92,4095,4.92,4096,5.847,4764,6.44,4784,6.402,4785,6.402,4786,6.402,4787,6.402]],["title/additional-documentation/ui.html",[577,1.1,883,2.462,2488,1.405]],["body/additional-documentation/ui.html",[0,0.491,14,3.725,24,0.006,34,2.481,41,2.094,112,2.419,123,4.109,126,2.815,146,0.194,171,3.252,194,1.181,254,1.652,314,0.006,315,0.006,337,3.931,429,3.725,434,3.164,447,2.293,481,3.164,482,4.622,570,3.329,663,3.725,754,4.109,869,3.244,883,5.644,1143,3.842,1165,5.095,1292,5.095,1509,4.431,2592,6.299,2798,4.261,3476,4.84,3707,5.402,3773,5.785,4016,3.97,4051,6.299,4300,4.431,4365,5.402,4665,6.299,4722,4.84,4820,6.299,4838,7.078,4839,7.078,4840,6.299,4841,7.078,4842,7.078,4843,7.078,4844,7.078,4845,6.299]],["title/additional-documentation/ui/icons.html",[577,1.1,1541,2.671,2488,1.405]],["body/additional-documentation/ui/icons.html",[24,0.007,27,1.432,55,1.117,60,0.38,74,2.054,75,1.619,113,0.978,121,2.286,145,0.351,146,0.229,314,0.006,315,0.006,355,4.03,576,4.609,629,5.386,1116,2.577,1257,4.097,1487,6.075,1509,4.418,1541,6.424,1937,6.367,1941,5.995,1947,6.28,1948,5.768,1949,6.367,1950,7.425,1951,7.425,1952,6.28,1953,6.28]],["title/additional-documentation/ui/notificationscomponent.html",[265,0.972,577,1.1,2488,1.405]],["body/additional-documentation/ui/notificationscomponent.html",[0,0.373,4,1.163,7,2.231,15,2.012,24,0.007,25,1.084,27,1.163,33,0.75,39,1.807,55,1.074,56,2.563,64,0.774,71,0.974,72,1.754,75,1.684,76,0.795,88,0.612,113,0.795,140,4.376,145,0.341,146,0.242,265,1.362,312,1.993,314,0.005,315,0.005,316,1.226,346,1.226,400,4.046,433,2.929,436,2.138,449,4.893,462,2.442,476,2.184,490,3.216,563,3.869,564,4.118,567,3.645,570,4.588,571,4.124,580,2.333,582,6.181,631,2.563,659,1.894,679,4.701,708,3.452,720,3.59,752,4.128,782,3.452,864,4.596,877,3.328,901,3.328,950,4.794,951,5.83,953,3.921,955,4.596,961,1.69,983,4.376,1001,2.501,1116,2.094,1257,3.328,1386,3.59,1470,2.628,1540,3.452,1585,3.216,1595,4.262,1856,4.596,1904,3.751,1925,4.376,1946,4.687,2142,5.285,2204,4.376,2303,4.42,2444,4.42,2516,4.687,2721,3.921,2740,5.603,2798,3.452,2825,5.103,2826,5.103,2827,3.921,2828,6.533,2829,5.103,2830,7.207,2831,6.62,2832,6.001,2833,4.687,2834,5.103,2835,5.103,2836,5.103,2837,4.687,2838,5.103,2839,5.103,2840,5.103,2841,5.103,2842,5.103,2843,4.128,2844,4.687,2845,4.376,2846,5.103,2847,5.103,2848,6.533,2849,5.103,2850,5.103,2851,6.533,2852,5.103,2853,5.103,2854,5.103,2855,3.744,2856,4.128,2857,5.103]],["title/additional-documentation/ui/loadercomponent.html",[242,0.922,577,1.1,2488,1.405]],["body/additional-documentation/ui/loadercomponent.html",[4,1.592,24,0.007,55,1.146,59,5.368,60,0.29,74,1.932,75,1.463,113,0.884,116,2.989,118,2.851,130,3.462,135,2.851,145,0.269,146,0.215,170,4.867,184,1.227,242,1.916,314,0.005,315,0.005,325,2.148,365,3.622,379,1.542,390,2.329,419,4.164,433,3.258,453,3.166,462,2.716,470,3.839,506,3.356,562,3.839,577,1.716,580,2.027,631,2.851,654,3.839,869,4.454,876,4.669,981,4.361,986,2.923,999,3.791,1000,3.839,1309,4.164,1540,3.839,1582,4.164,1585,4.402,1595,3.356,1613,4.591,1634,4.591,1856,4.914,1870,6.95,1904,3.258,2132,4.361,2285,5.65,2287,6.415,2299,3.992,2300,6.068,2301,5.552,2302,5.675,2303,3.839,2304,5.675,2305,5.675,2306,6.985,2307,5.675,2308,7.567,2309,5.675,2310,6.985,2311,7.567,2312,7.567,2313,5.675,2314,5.675,2315,5.212,2316,5.675,2317,5.675,2318,5.675,2319,5.675,2320,5.675,2321,5.675]],["title/additional-documentation/ui/listcomponent.html",[237,1.007,577,1.1,2488,1.405]],["body/additional-documentation/ui/listcomponent.html",[0,0.342,4,1.368,24,0.007,25,1.535,38,1.306,41,1.689,42,2.742,59,4.611,70,2.514,71,1.379,72,2.063,87,0.987,88,0.719,194,1.544,314,0.006,315,0.006,392,3.09,415,2.025,436,2.514,490,3.781,654,4.059,659,2.227,756,3.66,965,4.059,979,3.993,1116,3.181,1292,4.854,1322,6.196,1364,3.256,1470,3.09,1568,4.713,1586,4.611,2146,4.611,2147,6,2148,5.511,2149,5.511,2150,5.511,2151,7.563,2152,7.563,2153,5.511,2154,4.611,2155,5.511,2156,5.511,2157,6,2158,6.196,2159,6,2160,6.636,2161,6]],["title/additional-documentation/ui/formcomponent.html",[229,1.025,577,1.1,2488,1.405]],["body/additional-documentation/ui/formcomponent.html",[24,0.006,112,2.242,314,0.006,315,0.006,4845,6.895]],["title/additional-documentation/ui/logincomponent.html",[251,0.972,577,1.1,2488,1.405]],["body/additional-documentation/ui/logincomponent.html",[0,0.443,18,3.332,24,0.006,112,2.528,126,3.038,254,2.039,314,0.006,315,0.006,337,3.592,883,4.598,2453,6.243]],["title/additional-documentation/ui/popcomponent.html",[273,1.007,577,1.1,2488,1.405]],["body/additional-documentation/ui/popcomponent.html",[24,0.006,113,1.039,146,0.205,314,0.006,315,0.006,429,4.925,437,3.193,577,2.017,1001,3.269,1558,5.72,1560,6.126,1588,4.351,1595,3.945,1898,5.126,1938,4.692,2303,4.513,2678,4.895,2798,4.513,3108,6.67,3109,6.67,3110,6.126,3111,6.67,3112,6.67]],["title/additional-documentation/ui/tabscomponent.html",[287,1.025,577,1.1,2488,1.405]],["body/additional-documentation/ui/tabscomponent.html",[4,1.554,24,0.006,55,0.964,167,3.603,311,1.989,314,0.006,315,0.006,471,5.847,1182,4.613,3707,7.011]],["title/additional-documentation/ui/selectcomponent.html",[284,1.043,577,1.1,2488,1.405]],["body/additional-documentation/ui/selectcomponent.html",[24,0.006,38,1.229,43,2.019,55,0.961,72,2.337,314,0.006,315,0.006,447,2.83,500,3.107,659,2.523,1904,3.902,4846,7.638]],["title/additional-documentation/data.html",[577,1.1,1364,1.975,2488,1.405]],["body/additional-documentation/data.html",[0,0.383,24,0.006,41,1.892,74,1.859,112,2.186,171,2.94,194,1.26,210,1.853,314,0.006,315,0.006,348,2.817,447,2.447,865,3.649,1001,3.295,1364,3.649,1456,5.166,4119,6.722,4120,5.438,4365,5.765]],["title/additional-documentation/medium.html",[256,1.062,577,1.1,2488,1.405]],["body/additional-documentation/medium.html",[11,4.6,13,5.048,14,3.867,24,0.007,55,0.924,60,0.389,145,0.309,146,0.201,184,1.414,256,1.907,314,0.006,315,0.006,316,1.571,328,2.798,761,3.549,984,3.989,2584,6.15,4016,4.791,4266,8.038,4300,4.6,4722,6.177,4758,5.289]],["title/additional-documentation/tinymce.html",[577,1.1,2488,1.405,3766,2.944]],["body/additional-documentation/tinymce.html",[0,0.374,11,4.621,13,4.007,14,3.884,24,0.007,55,0.928,60,0.39,145,0.311,146,0.202,314,0.006,315,0.006,316,1.578,328,2.811,761,3.565,984,4.007,3766,5.313,3824,6.166,4016,4.804,4267,8.053,4300,4.621,4722,6.189,4758,5.313]],["title/additional-documentation/ace.html",[12,2.797,577,1.1,2488,1.405]],["body/additional-documentation/ace.html",[0,0.363,11,4.477,12,6.109,13,3.882,14,3.764,24,0.007,55,1.058,60,0.434,136,6.364,145,0.301,146,0.196,314,0.006,315,0.006,316,1.529,317,6.053,328,2.724,761,4.314,984,3.882,1948,5.845,1978,5.458,2038,5.845,2855,4.67,3775,5.845,4016,4.716,4268,5.148,4300,4.477,4722,6.109,4758,5.148,4847,8.933,4848,8.409,4849,7.152,4850,7.152,4851,7.152]],["title/additional-documentation/core-classes.html",[146,0.097,577,0.949,663,1.856,2488,1.212]],["body/additional-documentation/core-classes.html",[0,0.368,14,3.82,24,0.006,55,0.913,146,0.232,314,0.006,315,0.006,386,2.398,434,3.245,482,4.74,486,4.071,497,3.82,508,3.604,567,3.604,633,4.071,663,4.73,754,4.213,816,4.544,849,5.54,858,5.226,986,3.327,1612,5.54,1785,4.544,2229,4.964,2798,5.411,2856,5.226,3631,5.226,4016,4.071,4096,5.539,4120,5.226,4275,6.46,4300,4.544,4319,5.54,4322,5.54,4722,4.964,4840,6.46,4852,7.259,4853,7.259,4854,7.259,4855,7.259,4856,7.259]],["title/additional-documentation/core-classes/field.html",[41,1.025,577,1.1,2488,1.405]],["body/additional-documentation/core-classes/field.html",[0,0.33,7,3.089,24,0.007,33,0.85,34,2.278,38,1.532,41,2.334,42,3.487,43,1.717,44,1.385,55,1.123,56,2.904,71,1.104,76,0.901,87,0.693,112,1.88,118,3.991,142,1.989,194,1.43,314,0.006,315,0.006,371,2.065,390,2.373,436,3.197,437,2.767,452,2.423,631,2.904,901,4.608,938,5.311,986,2.978,1116,2.899,1143,4.654,1162,4.677,1165,4.677,1470,2.978,1537,3.771,1582,4.243,1583,5.311,1584,4.958,1585,4.453,1586,4.443,1587,5.782,1588,4.608,1589,3.771,1590,3.644,1591,5.311,1592,5.782,1593,5.782,1594,5.311,1595,3.419,1596,5.782,1597,5.311,1598,5.311,1599,6.059,1600,6.489,1601,3.644,1602,5.782,1603,6.059,1604,5.782,1605,5.782,1606,4.443,1607,5.782,1608,5.782,1609,5.311,1610,5.311,1611,5.782,1612,4.958,1613,4.677,1614,4.958,1615,4.243]],["title/additional-documentation/core-classes/item.html",[43,1.081,577,1.1,2488,1.405]],["body/additional-documentation/core-classes/item.html",[24,0.007,38,1.48,41,2.198,42,2.511,43,2.514,55,1.103,71,1.533,74,1.893,85,4.222,87,0.894,118,2.759,142,2.261,146,0.169,165,3.351,314,0.005,315,0.005,390,3.06,398,3.717,400,3.526,436,2.868,452,3.125,614,2.759,631,3.746,771,3.249,979,3.841,999,2.982,1001,3.355,1116,2.254,1143,3.351,1259,5.494,1588,5.092,1597,5.046,1598,5.046,1599,5.871,1600,6.287,1601,3.462,1603,6.694,1606,4.222,1612,4.711,1624,3.717,1751,5.023,1904,3.154,1932,4.465,2095,5.494,2098,5.046,2100,5.046,2105,5.538,2970,4.711,4823,5.494,4857,6.174,4858,6.174,4859,6.174,4860,6.174,4861,6.174,4862,6.174,4863,8.031,4864,6.174,4865,6.174,4866,6.174,4867,6.174,4868,6.174,4869,6.174,4870,6.174,4871,6.174,4872,6.174,4873,6.174,4874,6.174,4875,6.174,4876,7.693,4877,7.693,4878,6.174,4879,6.174,4880,6.174,4881,6.174,4882,6.174,4883,6.174,4884,6.174,4885,6.174,4886,6.174,4887,6.174]],["title/additional-documentation/core-classes/form.html",[112,1.184,577,1.1,2488,1.405]],["body/additional-documentation/core-classes/form.html",[24,0.007,33,0.95,38,1.168,41,2.252,43,1.918,45,5.107,71,1.441,87,0.905,112,2.601,142,2.125,314,0.006,315,0.006,432,5.933,452,3.163,614,3.245,841,5.933,986,3.327,1603,6.474,1637,4.544,2077,5.933,2078,5.226,3156,5.54,4863,7.998,4888,6.46,4889,8.483,4890,7.259,4891,7.259]],["title/additional-documentation/core-classes/collection.html",[577,1.1,756,2.22,2488,1.405]],["body/additional-documentation/core-classes/collection.html",[24,0.006,25,1.715,71,1.261,142,1.86,146,0.204,194,1.239,314,0.006,315,0.006,415,2.23,447,2.406,503,3.404,633,4.165,659,2.453,756,4.925,758,6.07,770,6.609,771,3.908,772,4.311,806,6.609,807,6.609,808,6.609,809,6.609,810,6.609,811,6.609,812,6.609,813,6.609,814,4.849]],["title/additional-documentation/core-classes/pagination.html",[577,1.1,2201,2.294,2488,1.405]],["body/additional-documentation/core-classes/pagination.html",[7,2.894,24,0.007,43,2.274,55,0.935,71,1.263,142,1.863,314,0.006,315,0.006,577,2.001,1257,4.317,1568,4.317,1574,5.086,1595,3.914,1693,4.171,1890,5.676,2078,5.354,2201,5.388,2618,5.676,2970,5.676,2971,6.619,2972,6.619,2973,6.619,2974,6.619]],["title/additional-documentation/core-classes/list.html",[194,0.682,577,1.1,2488,1.405]],["body/additional-documentation/core-classes/list.html",[4,1.29,7,2.475,14,3.347,24,0.007,25,1.721,33,0.832,35,1.313,38,1.426,41,2.128,42,3.187,43,2.071,44,0.986,55,0.8,65,1.384,71,1.08,72,1.946,74,1.565,87,1.002,186,3.261,194,1.546,314,0.005,315,0.005,334,4.395,366,2.991,371,2.021,379,1.538,382,2.422,415,1.91,452,2.372,567,3.158,659,2.101,756,3.453,772,3.692,979,3.592,999,3.785,1010,3.072,1172,3.994,1544,3.982,1568,4.93,1582,4.153,1601,3.567,1693,3.567,1932,4.549,2149,5.199,2150,5.199,2151,7.44,2152,7.245,2153,5.199,2154,4.35,2155,5.199,2156,5.199,2158,5.98,2160,6.405,2201,3.567,2303,3.829,2798,3.829,2802,4.579,2843,5.641,4028,5.66,4129,4.854,4798,6.973,4888,6.973,4892,6.361,4893,7.836,4894,6.361,4895,6.361,4896,6.361,4897,6.361,4898,6.361,4899,6.361,4900,6.361,4901,6.361,4902,6.361,4903,6.361]],["title/additional-documentation/core-classes/selection.html",[447,1.325,577,1.1,2488,1.405]],["body/additional-documentation/core-classes/selection.html",[24,0.006,32,0.821,43,1.99,44,1.344,88,0.803,186,3.134,194,1.256,314,0.006,315,0.006,447,3.086,660,5.747,774,4.714,1454,5.15,1487,5.15,1582,4.917,1932,4.371,2843,5.421,4904,7.531]],["title/additional-documentation/core-classes/sorter.html",[577,1.1,2488,1.405,3617,2.944]],["body/additional-documentation/core-classes/sorter.html",[7,2.958,24,0.006,64,0.727,146,0.208,314,0.006,315,0.006,631,3.398,901,4.412,1105,6.213,1318,6.213,1394,5.801,1595,4,1601,4.263,2105,5.472,3617,6.272,3631,5.472]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["0",{"_index":503,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/collection.html":{}}}],["0.0.1",{"_index":4126,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":4122,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.1.0",{"_index":4115,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":4113,"title":{},"body":{"changelog.html":{}}}],["0.10.0",{"_index":4056,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.12.0",{"_index":4055,"title":{},"body":{"changelog.html":{}}}],["0.13.0",{"_index":4035,"title":{},"body":{"changelog.html":{}}}],["0.14.0",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["0.15.0",{"_index":4026,"title":{},"body":{"changelog.html":{}}}],["0.16.7",{"_index":4272,"title":{},"body":{"dependencies.html":{}}}],["0.17.0",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":4110,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.21.0",{"_index":4264,"title":{},"body":{"dependencies.html":{}}}],["0.22.0",{"_index":4015,"title":{},"body":{"changelog.html":{}}}],["0.23.0",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["0.25.0",{"_index":4017,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":4107,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.3.1",{"_index":4103,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["0.4.1",{"_index":4092,"title":{},"body":{"changelog.html":{}}}],["0.5.0",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":4088,"title":{},"body":{"changelog.html":{}}}],["0.5.2",{"_index":4085,"title":{},"body":{"changelog.html":{}}}],["0.5.3",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["0.7.0",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["0.7.1",{"_index":4111,"title":{},"body":{"changelog.html":{}}}],["0.8.0",{"_index":4063,"title":{},"body":{"changelog.html":{}}}],["0.8.1",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["0.8.2",{"_index":4061,"title":{},"body":{"changelog.html":{}}}],["0.8.20",{"_index":4282,"title":{},"body":{"dependencies.html":{}}}],["0.8.5",{"_index":4098,"title":{},"body":{"changelog.html":{}}}],["0.8.6",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["0/10",{"_index":4188,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4249,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4248,"title":{},"body":{"coverage.html":{}}}],["00b0ff",{"_index":4645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00dbf0",{"_index":2613,"title":{},"body":{"components/MenuComponent.html":{}}}],["05",{"_index":4123,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4117,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":162,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["1.0.0",{"_index":4259,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1.0.3",{"_index":4274,"title":{},"body":{"dependencies.html":{}}}],["1.2.9",{"_index":4269,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":4726,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["1/1",{"_index":4133,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1568,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["10/10",{"_index":4141,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":4251,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1694,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Pagination.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["10004",{"_index":1302,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["101",{"_index":4034,"title":{},"body":{"changelog.html":{}}}],["10m",{"_index":2160,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["11",{"_index":4124,"title":{},"body":{"changelog.html":{}}}],["11/11",{"_index":4167,"title":{},"body":{"coverage.html":{}}}],["11/12",{"_index":4200,"title":{},"body":{"coverage.html":{}}}],["11/13",{"_index":4155,"title":{},"body":{"coverage.html":{}}}],["12/12",{"_index":4183,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":4187,"title":{},"body":{"coverage.html":{}}}],["12/15",{"_index":4216,"title":{},"body":{"coverage.html":{}}}],["12/18",{"_index":4170,"title":{},"body":{"coverage.html":{}}}],["13/16",{"_index":4220,"title":{},"body":{"coverage.html":{}}}],["13/18",{"_index":4213,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":4369,"title":{},"body":{"overview.html":{}}}],["14/14",{"_index":4134,"title":{},"body":{"coverage.html":{}}}],["14/17",{"_index":4238,"title":{},"body":{"coverage.html":{}}}],["15/15",{"_index":4164,"title":{},"body":{"coverage.html":{}}}],["15/17",{"_index":4209,"title":{},"body":{"coverage.html":{}}}],["15/19",{"_index":4166,"title":{},"body":{"coverage.html":{}}}],["15/20",{"_index":4201,"title":{},"body":{"coverage.html":{}}}],["15/21",{"_index":4177,"title":{},"body":{"coverage.html":{}}}],["16/16",{"_index":4145,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":4370,"title":{},"body":{"overview.html":{}}}],["17/17",{"_index":4243,"title":{},"body":{"coverage.html":{}}}],["17/20",{"_index":4244,"title":{},"body":{"coverage.html":{}}}],["18/23",{"_index":4194,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":4368,"title":{},"body":{"overview.html":{}}}],["19/21",{"_index":4132,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":771,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/collection.html":{}}}],["2.0.1",{"_index":4273,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":4730,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["2.5.3",{"_index":4271,"title":{},"body":{"dependencies.html":{}}}],["2.html",{"_index":4822,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["2/2",{"_index":4195,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":4239,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2156,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["20/20",{"_index":4250,"title":{},"body":{"coverage.html":{}}}],["20/22",{"_index":4184,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1985,"title":{},"body":{"directives/ImageDirective.html":{},"components/TinymceComponent.html":{}}}],["2000",{"_index":2312,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["2017",{"_index":4116,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":4366,"title":{},"body":{"overview.html":{}}}],["21/23",{"_index":4144,"title":{},"body":{"coverage.html":{}}}],["21/24",{"_index":4180,"title":{},"body":{"coverage.html":{}}}],["21/31",{"_index":4247,"title":{},"body":{"coverage.html":{}}}],["22/22",{"_index":4148,"title":{},"body":{"coverage.html":{}}}],["22/23",{"_index":4138,"title":{},"body":{"coverage.html":{}}}],["22/33",{"_index":4229,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":4118,"title":{},"body":{"changelog.html":{}}}],["23/35",{"_index":4226,"title":{},"body":{"coverage.html":{}}}],["24/26",{"_index":4205,"title":{},"body":{"coverage.html":{}}}],["2460",{"_index":4383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":2939,"title":{},"body":{"classes/Pagination.html":{}}}],["25/27",{"_index":4181,"title":{},"body":{"coverage.html":{}}}],["26/28",{"_index":4140,"title":{},"body":{"coverage.html":{}}}],["26/41",{"_index":4228,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":3132,"title":{},"body":{"injectables/PopService.html":{}}}],["27.05.17",{"_index":2689,"title":{},"body":{"components/MockupComponent.html":{}}}],["27/28",{"_index":4232,"title":{},"body":{"coverage.html":{}}}],["29/32",{"_index":4203,"title":{},"body":{"coverage.html":{}}}],["29a9e1",{"_index":2612,"title":{},"body":{"components/MenuComponent.html":{}}}],["3",{"_index":772,"title":{},"body":{"classes/Collection.html":{},"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["3.0.0.min.css",{"_index":4635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3/3",{"_index":4135,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":4153,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":3540,"title":{},"body":{"components/SearchbarComponent.html":{},"miscellaneous/variables.html":{}}}],["34/53",{"_index":4186,"title":{},"body":{"coverage.html":{}}}],["35/36",{"_index":4176,"title":{},"body":{"coverage.html":{}}}],["35/38",{"_index":4202,"title":{},"body":{"coverage.html":{}}}],["36/36",{"_index":4137,"title":{},"body":{"coverage.html":{}}}],["37/37",{"_index":4147,"title":{},"body":{"coverage.html":{}}}],["37474f",{"_index":4642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39/50",{"_index":4182,"title":{},"body":{"coverage.html":{}}}],["39;muffin",{"_index":2731,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["4",{"_index":4737,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["4.3.6",{"_index":4728,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["4.7.6",{"_index":4277,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":4151,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":4236,"title":{},"body":{"coverage.html":{}}}],["40/43",{"_index":4204,"title":{},"body":{"coverage.html":{}}}],["40/52",{"_index":4223,"title":{},"body":{"coverage.html":{}}}],["40/53",{"_index":4206,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1256,"title":{},"body":{"interfaces/Day.html":{}}}],["43/43",{"_index":4150,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":4046,"title":{},"body":{"changelog.html":{}}}],["48.8093253",{"_index":2353,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["4[0",{"_index":3175,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["4a5ea9",{"_index":2614,"title":{},"body":{"components/MenuComponent.html":{}}}],["5",{"_index":1606,"title":{},"body":{"classes/Field.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["5.0.0",{"_index":1812,"title":{},"body":{"injectables/FormService.html":{}}}],["5.2.2",{"_index":4262,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":4276,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":4168,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":4211,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":4174,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":4172,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2618,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["500",{"_index":2625,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":2904,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["54",{"_index":4207,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":4367,"title":{},"body":{"overview.html":{}}}],["5identifi",{"_index":4874,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["5see",{"_index":2973,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["5the",{"_index":1608,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["6",{"_index":787,"title":{},"body":{"classes/Collection.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["6/10",{"_index":4161,"title":{},"body":{"coverage.html":{}}}],["6/11",{"_index":4208,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":4191,"title":{},"body":{"coverage.html":{}}}],["6/62",{"_index":4257,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":4215,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":4160,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":4171,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":4192,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":4185,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":4225,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":4169,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":4246,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":788,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["7/11",{"_index":4193,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":4212,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":4189,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":4241,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":4173,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":4162,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":4152,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":4222,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":4240,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":4165,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2154,"title":{},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["8.0.0",{"_index":4279,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":4199,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":4163,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":4242,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":4197,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":4198,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":4632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81",{"_index":4219,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":4237,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":4210,"title":{},"body":{"coverage.html":{}}}],["83cc6374",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["84",{"_index":4154,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":4214,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":4179,"title":{},"body":{"coverage.html":{}}}],["879195",{"_index":4643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88",{"_index":4196,"title":{},"body":{"coverage.html":{}}}],["89",{"_index":4030,"title":{},"body":{"changelog.html":{}}}],["89ab][0",{"_index":3177,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["9",{"_index":1657,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["9.159388100000001",{"_index":2354,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["9/10",{"_index":4190,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":4230,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":4131,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":4143,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":4032,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["93",{"_index":4033,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["95",{"_index":4042,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["96",{"_index":4044,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["97",{"_index":4175,"title":{},"body":{"coverage.html":{}}}],["98",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["9]+))?.+v=)?([a",{"_index":4692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]+\\.)+[a",{"_index":4709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{1,3}\\.[0",{"_index":4707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{1,3}])|(([a",{"_index":4708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9_",{"_index":4693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9a",{"_index":2784,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":114,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["_]{22",{"_index":3179,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["_]{22}$/.test(id",{"_index":1658,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["_]{7,14",{"_index":2786,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["_api",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["_api.login(email",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{}}}],["_api.resetpassword(email",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{}}}],["_creat",{"_index":2745,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["_creator",{"_index":2752,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_entri",{"_index":1050,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["_entrytitl",{"_index":2773,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_item",{"_index":3645,"title":{},"body":{"classes/Sorter.html":{}}}],["_item.id",{"_index":1423,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["_items.indexof(item",{"_index":3646,"title":{},"body":{"classes/Sorter.html":{}}}],["_method",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{}}}],["_methods.filter(x",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["_modifi",{"_index":2750,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_moment",{"_index":1268,"title":{},"body":{"interfaces/Day.html":{}}}],["_resourc",{"_index":3427,"title":{},"body":{"injectables/ResourceService.html":{}}}],["_toggl",{"_index":3115,"title":{},"body":{"components/PopComponent.html":{}}}],["_upload",{"_index":3974,"title":{},"body":{"components/UploadComponent.html":{}}}],["a'default",{"_index":4862,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["a.then(r",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{}}}],["abov",{"_index":1609,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{}}}],["absatz",{"_index":4661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstract",{"_index":849,"title":{},"body":{"classes/Config.html":{},"interfaces/ItemConfig.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes.html":{}}}],["abstractcontrol",{"_index":1803,"title":{},"body":{"injectables/FormService.html":{}}}],["ac",{"_index":12,"title":{"additional-documentation/ace.html":{}},"body":{"components/AceComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/ace.html":{}}}],["acc:edit",{"_index":3212,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["acc:list",{"_index":3211,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["accept",{"_index":2917,"title":{},"body":{"injectables/NotificationsService.html":{},"changelog.html":{}}}],["access",{"_index":2040,"title":{},"body":{"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/Symbol.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["access=publ",{"_index":4309,"title":{},"body":{"index.html":{}}}],["access=publicse",{"_index":4836,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["accessor",{"_index":3162,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{}}}],["accord",{"_index":2967,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["account",{"_index":339,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{}}}],["account_not_found",{"_index":4384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accountid",{"_index":3210,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["accountresourc",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/SdkService.html":{}}}],["accounts(environment.environ",{"_index":3508,"title":{},"body":{"injectables/SdkService.html":{}}}],["ace'},{'nam",{"_index":190,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ace.compon",{"_index":329,"title":{},"body":{"modules/AceModule.html":{}}}],["ace.component.html",{"_index":31,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.component.scss",{"_index":29,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.edit(this.container.nativeel",{"_index":153,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/mod",{"_index":95,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/them",{"_index":98,"title":{},"body":{"components/AceComponent.html":{}}}],["acecompon",{"_index":1,"title":{"components/AceComponent.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acemodul",{"_index":317,"title":{"modules/AceModule.html":{}},"body":{"modules/AceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/ace.html":{}}}],["act",{"_index":1318,"title":{},"body":{"directives/DropzoneDirective.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["action",{"_index":1000,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["activ",{"_index":453,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"injectables/HistoryService.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/TabComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["activatedrout",{"_index":880,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SearchbarComponent.html":{},"components/TabsComponent.html":{}}}],["active/vis",{"_index":4041,"title":{},"body":{"changelog.html":{}}}],["activi",{"_index":2320,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["actual",{"_index":2247,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["actual_compon",{"_index":313,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ad",{"_index":782,"title":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}},"body":{"classes/Collection.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["add",{"_index":761,"title":{},"body":{"classes/Collection.html":{},"injectables/FormService.html":{},"components/LoaderComponent.html":{},"classes/ResourceForm.html":{},"components/TabComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["add(item",{"_index":778,"title":{},"body":{"classes/Collection.html":{}}}],["addal",{"_index":762,"title":{},"body":{"classes/Collection.html":{}}}],["addall(item",{"_index":784,"title":{},"body":{"classes/Collection.html":{}}}],["addfield",{"_index":1786,"title":{},"body":{"injectables/FormService.html":{}}}],["addfield(field",{"_index":1790,"title":{},"body":{"injectables/FormService.html":{}}}],["addit",{"_index":2488,"title":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}},"body":{"components/LoginFormComponent.html":{},"changelog.html":{}}}],["addregist",{"_index":3294,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["address",{"_index":1839,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{}}}],["addsystempropertiestofieldconfig",{"_index":2701,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["addsystempropertiestofieldconfig(config",{"_index":2708,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["addunregist",{"_index":3296,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["adhes",{"_index":4600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":343,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["adminentryinputcompon",{"_index":191,"title":{"components/AdminEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminservic",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["adress",{"_index":2493,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{}}}],["advanc",{"_index":2838,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["advantag",{"_index":2316,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["aftercontentinit",{"_index":3728,"title":{},"body":{"components/TabsComponent.html":{}}}],["afterviewinit",{"_index":2428,"title":{},"body":{"components/LocationSearchComponent.html":{},"components/PaginationComponent.html":{},"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{}}}],["agm/cor",{"_index":1846,"title":{},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":2382,"title":{},"body":{"modules/LocationModule.html":{}}}],["agmcoremodule.forroot",{"_index":2387,"title":{},"body":{"modules/LocationModule.html":{}}}],["agnost",{"_index":4841,"title":{},"body":{"additional-documentation/ui.html":{}}}],["aizasyadgeue1yxo1f",{"_index":2389,"title":{},"body":{"modules/LocationModule.html":{}}}],["al",{"_index":4798,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["alarm",{"_index":4396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":4478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algorithm",{"_index":3628,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.resolv",{"_index":3652,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.sort(properti",{"_index":3654,"title":{},"body":{"classes/Sorter.html":{}}}],["align",{"_index":4398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aligncent",{"_index":4672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alignjustifi",{"_index":4674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alignleft",{"_index":4670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alignright",{"_index":4673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"changelog.html":{},"additional-documentation/core-classes/selection.html":{}}}],["along",{"_index":4759,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["alreadi",{"_index":2898,"title":{},"body":{"injectables/NotificationsService.html":{},"classes/Pagination.html":{}}}],["alt",{"_index":4532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alter(valu",{"_index":1279,"title":{},"body":{"interfaces/Day.html":{}}}],["altern",{"_index":2315,"title":{},"body":{"components/LoaderComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["alway",{"_index":975,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"index.html":{}}}],["alwaysloadentri",{"_index":966,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["alwaysshowhead",{"_index":2191,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["amaz",{"_index":4795,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["amazement_factor",{"_index":4794,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["amount",{"_index":505,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Notification.html":{},"components/PopComponent.html":{}}}],["android",{"_index":4574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angezeigt",{"_index":587,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["angl",{"_index":4402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":14,"title":{},"body":{"components/AceComponent.html":{},"injectables/FormService.html":{},"components/MenuComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/list.html":{}}}],["angular+datamanag",{"_index":4287,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":4727,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/cli",{"_index":4725,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/clith",{"_index":4724,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/common",{"_index":602,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/compil",{"_index":4261,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/cor",{"_index":132,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["angular/core/src/metadata/lifecycle_hook",{"_index":2261,"title":{},"body":{"components/ListItemsComponent.html":{},"components/PaginationComponent.html":{}}}],["angular/form",{"_index":134,"title":{},"body":{"components/AceComponent.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/ResourceModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["angular/http",{"_index":4263,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/languag",{"_index":4729,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/platform",{"_index":1728,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"modules/VcModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/rout",{"_index":578,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SearchbarComponent.html":{},"components/TabsComponent.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["anoth",{"_index":576,"title":{},"body":{"injectables/AuthGuard.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoginComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{}}}],["antwort",{"_index":4668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anweisungen",{"_index":3089,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["anywher",{"_index":1560,"title":{},"body":{"classes/Field.html":{},"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["aot",{"_index":4104,"title":{},"body":{"changelog.html":{}}}],["api",{"_index":337,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["api(api",{"_index":3499,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.asset(this.assetid",{"_index":422,"title":{},"body":{"directives/AssetDirective.html":{}}}],["api.checkpermission(permiss",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.create(rel",{"_index":3431,"title":{},"body":{"injectables/ResourceService.html":{}}}],["api.createdmassets(assetgroupid",{"_index":1663,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["api.getschema(model",{"_index":3522,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.logout",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.me().then((account",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["api.resourcelist",{"_index":1468,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["api.signup",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{}}}],["apikey",{"_index":2388,"title":{},"body":{"modules/LocationModule.html":{}}}],["apiresolv",{"_index":3451,"title":{},"body":{"injectables/SdkService.html":{}}}],["app",{"_index":2827,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/ResourceConfig.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["app.compon",{"_index":4774,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["app.modul",{"_index":4849,"title":{},"body":{"additional-documentation/ace.html":{}}}],["app::delet",{"_index":3237,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["app::edit",{"_index":3238,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["appcompon",{"_index":4755,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["appear",{"_index":1558,"title":{},"body":{"classes/Field.html":{},"components/PopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["append",{"_index":1386,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["appid",{"_index":3236,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["appl",{"_index":4575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appletre",{"_index":2150,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["appli",{"_index":2220,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["applic",{"_index":3773,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{}}}],["applicationref",{"_index":3771,"title":{},"body":{"components/TinymceComponent.html":{}}}],["applyfilt",{"_index":2212,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["applyfilter(properti",{"_index":2218,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["appmodul",{"_index":4758,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["appoint",{"_index":4607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodul",{"_index":4756,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["arbitrari",{"_index":2970,"title":{},"body":{"classes/Pagination.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["area",{"_index":3097,"title":{},"body":{"components/PopComponent.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":1322,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListComponent.html":{},"components/ToolbarComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["around",{"_index":3020,"title":{},"body":{"components/PaginationComponent.html":{}}}],["arrang",{"_index":4403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["array(42",{"_index":1239,"title":{},"body":{"interfaces/Day.html":{}}}],["array(math.ceil(this.tot",{"_index":2989,"title":{},"body":{"classes/Pagination.html":{}}}],["array.from(new",{"_index":2976,"title":{},"body":{"classes/Pagination.html":{}}}],["array.isarray(asset",{"_index":1650,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["array.isarray(pattern",{"_index":1153,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["array.slice(start",{"_index":2546,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["arrow",{"_index":3527,"title":{},"body":{"components/SearchbarComponent.html":{},"miscellaneous/variables.html":{}}}],["arrowdown",{"_index":3598,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["arrownavig",{"_index":3532,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["arrownavigation(",{"_index":3548,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["arrowup",{"_index":3595,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["artboard",{"_index":4405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["articl",{"_index":4611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact",{"_index":4325,"title":{},"body":{"index.html":{}}}],["asc",{"_index":4043,"title":{},"body":{"changelog.html":{}}}],["ask",{"_index":2897,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["asobserv",{"_index":3805,"title":{},"body":{"components/TinymceComponent.html":{}}}],["asset",{"_index":193,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["asset.assetid",{"_index":1654,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["asset.getfilevariant(this.s",{"_index":2008,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimagethumburl(this.s",{"_index":2010,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimageurl(200",{"_index":3249,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.getimageurl(this.s",{"_index":2011,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.id",{"_index":2006,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.reduc",{"_index":1651,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["asset.thumbnail",{"_index":3269,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.thumbnails.length",{"_index":3270,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.thumbnails[0].url",{"_index":3271,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.typ",{"_index":2004,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{}}}],["asset/asset",{"_index":4109,"title":{},"body":{"changelog.html":{}}}],["asset/asset.direct",{"_index":1730,"title":{},"body":{"modules/FilesModule.html":{},"directives/ImageDirective.html":{}}}],["assetdirect",{"_index":297,"title":{"directives/AssetDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetgroup",{"_index":199,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["assetgroup#definitions/condit",{"_index":3265,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["assetgroupid",{"_index":451,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["assetgrouplist",{"_index":1646,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetgrouplist(forcereload",{"_index":1703,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetgrouplistpromis",{"_index":1647,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetgroups[0",{"_index":529,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["assetgroupselectcompon",{"_index":198,"title":{"components/AssetgroupSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetid",{"_index":368,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{}}}],["assetid'",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["assetinput",{"_index":4108,"title":{},"body":{"changelog.html":{}}}],["assetlist.getallitem",{"_index":1666,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetlistpopcompon",{"_index":192,"title":{"components/AssetListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assets.map((asset",{"_index":1700,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assets.map(asset",{"_index":1670,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assets.reduce((id",{"_index":1684,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assets[0",{"_index":1667,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetselectcompon",{"_index":196,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assign",{"_index":1059,"title":{},"body":{"injectables/CrudService.html":{},"classes/Field.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{}}}],["associ",{"_index":1562,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceService.html":{},"components/TabsComponent.html":{}}}],["assum",{"_index":4769,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["asterisk",{"_index":4406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attempt",{"_index":2854,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["auth",{"_index":458,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"changelog.html":{}}}],["auth.servic",{"_index":613,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["auth/auth.modul",{"_index":1090,"title":{},"body":{"modules/DataModule.html":{}}}],["auth/auth.servic",{"_index":514,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["authent",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["authguard",{"_index":556,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["authmodul",{"_index":593,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":4764,"title":{"additional-documentation/project-setup-tutorial/authorization.html":{}},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["authservic",{"_index":459,"title":{"injectables/AuthService.html":{}},"body":{"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":1976,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"changelog.html":{}}}],["autocomplet",{"_index":1835,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["autocomplete.addlistener('place_chang",{"_index":1854,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocomplete.getplac",{"_index":1857,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress",{"_index":1824,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress(el",{"_index":1833,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autofocu",{"_index":3526,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["autofocus",{"_index":3538,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["autolink",{"_index":4626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoload",{"_index":369,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["autoload=fals",{"_index":391,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{}}}],["automat",{"_index":1615,"title":{},"body":{"classes/Field.html":{},"classes/Notification.html":{},"classes/ResourceForm.html":{},"injectables/SdkService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/core-classes/field.html":{}}}],["automatisch",{"_index":4702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autores",{"_index":4623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoresize_max_height",{"_index":4631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoresize_min_height",{"_index":4630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avail",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["availab",{"_index":63,"title":{},"body":{"components/AceComponent.html":{}}}],["available.validator.t",{"_index":4157,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["availables",{"_index":2192,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Pagination.html":{}}}],["avoid",{"_index":1495,"title":{},"body":{"components/EntryListComponent.html":{}}}],["ayq",{"_index":4877,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["b",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["b(r",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["b.resolv",{"_index":3653,"title":{},"body":{"classes/Sorter.html":{}}}],["b.sort(properti",{"_index":3655,"title":{},"body":{"classes/Sorter.html":{}}}],["back",{"_index":989,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":4386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backenderrorcod",{"_index":4159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bag",{"_index":4531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bake",{"_index":2848,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["baken",{"_index":2850,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["bakery:bakeryservic",{"_index":2847,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["ball",{"_index":2839,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["bank",{"_index":4408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":4590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["barcod",{"_index":4411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base",{"_index":482,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["base64",{"_index":3148,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["base64uuid",{"_index":3140,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["baseurl",{"_index":4350,"title":{},"body":{"index.html":{}}}],["basi",{"_index":1271,"title":{},"body":{"interfaces/Day.html":{}}}],["basic",{"_index":1292,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/ListComponent.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["basket",{"_index":4533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["be",{"_index":2945,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["befor",{"_index":1590,"title":{},"body":{"classes/Field.html":{},"components/InputComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"classes/ResourceForm.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes/field.html":{}}}],["began",{"_index":4106,"title":{},"body":{"changelog.html":{}}}],["begin",{"_index":1236,"title":{},"body":{"interfaces/Day.html":{},"injectables/ModelConfigService.html":{}}}],["begin.clone().add(index",{"_index":1242,"title":{},"body":{"interfaces/Day.html":{}}}],["behaviour",{"_index":2695,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["beim",{"_index":3093,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["belong",{"_index":2019,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["below",{"_index":2805,"title":{},"body":{"classes/Notification.html":{}}}],["beneath",{"_index":2071,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["berschrift",{"_index":4659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beschreibung",{"_index":2834,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["beta.2",{"_index":4260,"title":{},"body":{"dependencies.html":{}}}],["beta.4",{"_index":4280,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":2319,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["between",{"_index":507,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/FormService.html":{},"components/PopComponent.html":{}}}],["big",{"_index":4519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bigger",{"_index":4613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bild/datei",{"_index":4701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bilder",{"_index":4790,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["bind",{"_index":439,"title":{},"body":{"components/AssetListPopComponent.html":{},"changelog.html":{}}}],["binocular",{"_index":4413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["birch",{"_index":2155,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["bitcoin",{"_index":4414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["block",{"_index":3854,"title":{},"body":{"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["blockevent(",{"_index":3858,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["blood",{"_index":4467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bluetooth",{"_index":4553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blur",{"_index":1811,"title":{},"body":{"injectables/FormService.html":{}}}],["bobbi",{"_index":1603,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{}}}],["bobby.display('nam",{"_index":4871,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bobby.group('nam",{"_index":4872,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bobby.resolve('nam",{"_index":4870,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bobby.sort('nam",{"_index":4873,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bodi",{"_index":1588,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"classes/ResourceForm.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["body+1",{"_index":4885,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["body.value.nam",{"_index":1597,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["bold",{"_index":4612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["book",{"_index":4446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bookmark",{"_index":4416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":379,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["bootstrap",{"_index":318,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["bootstrap/publish",{"_index":4834,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["border",{"_index":4417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["both",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{},"changelog.html":{}}}],["bottl",{"_index":4606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":4072,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["bound",{"_index":440,"title":{},"body":{"components/AssetListPopComponent.html":{},"directives/DropzoneDirective.html":{}}}],["box",{"_index":861,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{},"miscellaneous/variables.html":{}}}],["bracket",{"_index":4401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brand",{"_index":4619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":3597,"title":{},"body":{"components/SearchbarComponent.html":{},"changelog.html":{}}}],["breit",{"_index":4703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["briefcas",{"_index":4420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bright",{"_index":4431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bring",{"_index":4875,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["broken",{"_index":4484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brows",{"_index":4364,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":185,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"modules/FilesModule.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"modules/ResourceModule.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/VcModule.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["browsermodul",{"_index":1727,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/VcModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["brush",{"_index":4500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["btn",{"_index":4651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bu",{"_index":4421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bubbl",{"_index":4438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buchstaben",{"_index":1600,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["bucket",{"_index":4501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bug",{"_index":4509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":4268,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ace.html":{}}}],["builds/blob/master/src/ext",{"_index":149,"title":{},"body":{"components/AceComponent.html":{}}}],["builds/src",{"_index":136,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/ace.html":{}}}],["bullet",{"_index":4485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bullist",{"_index":4677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["busi",{"_index":4581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button",{"_index":980,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoginFormComponent.html":{},"components/ResourceCrudComponent.html":{},"miscellaneous/variables.html":{}}}],["buttonclass",{"_index":2477,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["buttonlabel",{"_index":2478,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["bypasssecuritytrusthtml",{"_index":3440,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["c",{"_index":4802,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["c9c8d4",{"_index":2615,"title":{},"body":{"components/MenuComponent.html":{}}}],["cach",{"_index":3463,"title":{},"body":{"injectables/SdkService.html":{}}}],["calcul",{"_index":4427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calculc",{"_index":2963,"title":{},"body":{"classes/Pagination.html":{}}}],["calendar",{"_index":1112,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["calendar'},{'nam",{"_index":201,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["calendar.compon",{"_index":1135,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["calendarcompon",{"_index":200,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calendarish",{"_index":1167,"title":{},"body":{"interfaces/Day.html":{}}}],["call",{"_index":390,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"injectables/SymbolPipe.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["callback",{"_index":85,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/core-classes/item.html":{}}}],["callbackurl",{"_index":3282,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["camera",{"_index":4430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactiv",{"_index":569,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canalter(valu",{"_index":1274,"title":{},"body":{"interfaces/Day.html":{}}}],["cancel",{"_index":2628,"title":{},"body":{"components/MenuComponent.html":{}}}],["canceltimeout",{"_index":2597,"title":{},"body":{"components/MenuComponent.html":{}}}],["cand",{"_index":2365,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["cap",{"_index":4400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabl",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["caption",{"_index":3273,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["car",{"_index":4433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":4471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caret",{"_index":4610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cart",{"_index":4534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2845,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SearchbarComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["catch",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{},"components/LoaderComponent.html":{}}}],["catch((err",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["catch((error",{"_index":2462,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["catch(err",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch(error",{"_index":1925,"title":{},"body":{"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{},"components/ResourceDeletePopComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["caution",{"_index":4330,"title":{},"body":{"index.html":{}}}],["ccc",{"_index":1178,"title":{},"body":{"interfaces/Day.html":{}}}],["cd",{"_index":4734,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["cdn",{"_index":4848,"title":{},"body":{"additional-documentation/ace.html":{}}}],["cell",{"_index":1165,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes/field.html":{}}}],["center",{"_index":2351,"title":{},"body":{"components/LocationMapComponent.html":{},"miscellaneous/variables.html":{}}}],["certain",{"_index":2096,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/TypeConfigService.html":{}}}],["chang",{"_index":84,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["change(",{"_index":3938,"title":{},"body":{"components/UploadComponent.html":{}}}],["change(filt",{"_index":1007,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["change)=\"updatesize($event.target.valu",{"_index":3051,"title":{},"body":{"components/PaginationComponent.html":{}}}],["change.color",{"_index":1232,"title":{},"body":{"interfaces/Day.html":{}}}],["change.d",{"_index":1229,"title":{},"body":{"interfaces/Day.html":{}}}],["change.select",{"_index":1227,"title":{},"body":{"interfaces/Day.html":{}}}],["change.timespan",{"_index":1231,"title":{},"body":{"interfaces/Day.html":{}}}],["change[key",{"_index":1041,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["changelog",{"_index":4014,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changespan",{"_index":1188,"title":{},"body":{"interfaces/Day.html":{}}}],["chat",{"_index":4437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":574,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/ListItemsComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["checkbox",{"_index":2203,"title":{},"body":{"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["checklist",{"_index":4666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkmark",{"_index":4614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkpermiss",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkpermission(permiss",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{}}}],["chevron",{"_index":4571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["child",{"_index":2640,"title":{},"body":{"components/MenuComponent.html":{},"components/UploadComponent.html":{}}}],["children",{"_index":4039,"title":{},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["cinnamon",{"_index":4892,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["circl",{"_index":4395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":146,"title":{"classes/Collection.html":{},"classes/Config.html":{},"classes/Field.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"classes/ResourceForm.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"directives/FocusDirective.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["class.i",{"_index":1311,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["class=\"input",{"_index":3052,"title":{},"body":{"components/PaginationComponent.html":{}}}],["clean",{"_index":1003,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{}}}],["clean(valu",{"_index":1011,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["clear",{"_index":1067,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["clearselect",{"_index":1270,"title":{},"body":{"interfaces/Day.html":{}}}],["cleartimeout(this.timeout",{"_index":2672,"title":{},"body":{"components/MenuComponent.html":{}}}],["cli",{"_index":4293,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["click",{"_index":887,"title":{},"body":{"components/CrudComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ToolbarComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["click(",{"_index":3850,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["clickabl",{"_index":4038,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["clientid",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["clip",{"_index":4563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clock",{"_index":4397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clone",{"_index":2783,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["close",{"_index":1898,"title":{},"body":{"injectables/HistoryService.html":{},"components/ListHeaderComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["cloud",{"_index":4439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clubapp",{"_index":4804,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["cluster_acemodul",{"_index":319,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_acecomponent_provid",{"_index":321,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_declar",{"_index":320,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_export",{"_index":322,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":594,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":595,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_export",{"_index":597,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":596,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_provid",{"_index":598,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_datamodul",{"_index":1074,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_declar",{"_index":1075,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_export",{"_index":1077,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_import",{"_index":1076,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_provid",{"_index":1078,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_filesmodul",{"_index":1721,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_declar",{"_index":1722,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_export",{"_index":1724,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_import",{"_index":1723,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_provid",{"_index":1725,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_formmodul",{"_index":1754,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declar",{"_index":1755,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_export",{"_index":1757,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_import",{"_index":1756,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_provid",{"_index":1758,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_iconmodul",{"_index":1963,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_declar",{"_index":1964,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_export",{"_index":1965,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_provid",{"_index":1966,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iomodul",{"_index":2086,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_declar",{"_index":2087,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_export",{"_index":2088,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_listmodul",{"_index":2265,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_declar",{"_index":2266,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_export",{"_index":2268,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_import",{"_index":2267,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_loadermodul",{"_index":2332,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_declar",{"_index":2333,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_export",{"_index":2334,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_provid",{"_index":2335,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_locationmodul",{"_index":2374,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_declar",{"_index":2375,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_export",{"_index":2377,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_import",{"_index":2376,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_provid",{"_index":2378,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_mediummodul",{"_index":2585,"title":{},"body":{"modules/MediumModule.html":{},"overview.html":{}}}],["cluster_mediummodule_declar",{"_index":2586,"title":{},"body":{"modules/MediumModule.html":{},"overview.html":{}}}],["cluster_mediummodule_export",{"_index":2588,"title":{},"body":{"modules/MediumModule.html":{},"overview.html":{}}}],["cluster_mediummodule_mediumeditorcomponent_provid",{"_index":2587,"title":{},"body":{"modules/MediumModule.html":{}}}],["cluster_notificationsmodul",{"_index":2879,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_declar",{"_index":2880,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_export",{"_index":2882,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_import",{"_index":2881,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["cluster_notificationsmodule_provid",{"_index":2883,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_popmodul",{"_index":3120,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_declar",{"_index":3121,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_export",{"_index":3122,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_provid",{"_index":3123,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_resourcemodul",{"_index":3394,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_declar",{"_index":3395,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_export",{"_index":3397,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_import",{"_index":3396,"title":{},"body":{"modules/ResourceModule.html":{}}}],["cluster_resourcemodule_provid",{"_index":3398,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_sdkmodul",{"_index":3446,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_sdkmodule_provid",{"_index":3447,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_selectmodul",{"_index":3603,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_declar",{"_index":3604,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_export",{"_index":3607,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_import",{"_index":3606,"title":{},"body":{"modules/SelectModule.html":{}}}],["cluster_selectmodule_selectcomponent_provid",{"_index":3605,"title":{},"body":{"modules/SelectModule.html":{}}}],["cluster_symbolmodul",{"_index":3661,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_provid",{"_index":3662,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_tinymcemodul",{"_index":3825,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_declar",{"_index":3826,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_export",{"_index":3827,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_uimodul",{"_index":3916,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_export",{"_index":3918,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_import",{"_index":3917,"title":{},"body":{"modules/UiModule.html":{}}}],["cluster_utilitymodul",{"_index":3986,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_declar",{"_index":3987,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_export",{"_index":3989,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_import",{"_index":3988,"title":{},"body":{"modules/UtilityModule.html":{}}}],["cluster_vcmodul",{"_index":3995,"title":{},"body":{"modules/VcModule.html":{},"overview.html":{}}}],["cluster_vcmodule_declar",{"_index":3996,"title":{},"body":{"modules/VcModule.html":{},"overview.html":{}}}],["cluster_vcmodule_export",{"_index":3997,"title":{},"body":{"modules/VcModule.html":{},"overview.html":{}}}],["cmd+click",{"_index":4807,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["code",{"_index":4322,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes.html":{}}}],["codesourc",{"_index":3298,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["codesourceid",{"_index":3299,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["codesourcetyp",{"_index":3300,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["coin",{"_index":4415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collat",{"_index":3633,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["collator.compare(a",{"_index":3638,"title":{},"body":{"classes/Sorter.html":{}}}],["collect",{"_index":756,"title":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}},"body":{"classes/Collection.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"injectables/SdkService.html":{},"coverage.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["collection([1",{"_index":770,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.add(4",{"_index":808,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.addall([10,11,12",{"_index":811,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.has(1",{"_index":806,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.has(4",{"_index":807,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.hasall([1,10,11",{"_index":812,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.index(1",{"_index":810,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.remove(4",{"_index":809,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.removeall();it",{"_index":813,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["color",{"_index":1171,"title":{},"body":{"interfaces/Day.html":{},"components/MenuComponent.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["colorpick",{"_index":4629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":1584,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"additional-documentation/core-classes/field.html":{}}}],["columnclick",{"_index":455,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{}}}],["columnclick(item",{"_index":2129,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["com",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["combin",{"_index":2825,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["come",{"_index":341,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":4537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comment",{"_index":2318,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["commonmodul",{"_index":601,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{}}}],["commun",{"_index":2453,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["compani",{"_index":4573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compat",{"_index":4105,"title":{},"body":{"changelog.html":{}}}],["compil",{"_index":4341,"title":{},"body":{"index.html":{}}}],["compileropt",{"_index":4347,"title":{},"body":{"index.html":{}}}],["complain",{"_index":2909,"title":{},"body":{"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":3936,"title":{},"body":{"components/UploadComponent.html":{},"changelog.html":{}}}],["compon",{"_index":0,"title":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{}}}],["component_templ",{"_index":189,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["componentfactori",{"_index":1370,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["componentfactoryresolv",{"_index":1349,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["componentinst",{"_index":2016,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref",{"_index":1366,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentref.inst",{"_index":2054,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref.instance.control",{"_index":2055,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref.instance.control.valuechang",{"_index":2056,"title":{},"body":{"components/InputComponent.html":{}}}],["components/class",{"_index":4313,"title":{},"body":{"index.html":{}}}],["comput",{"_index":4444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["concat(this.config.availables",{"_index":2978,"title":{},"body":{"classes/Pagination.html":{}}}],["concat(this.timespan",{"_index":1204,"title":{},"body":{"interfaces/Day.html":{}}}],["concept",{"_index":1612,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["condit",{"_index":3263,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config",{"_index":452,"title":{"classes/Config.html":{}},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["config.input",{"_index":3909,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.interfac",{"_index":516,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{}}}],["config.interface.t",{"_index":963,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FieldConfig.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"classes/PaginationConfig.html":{},"coverage.html":{}}}],["config.interface.ts:11",{"_index":3058,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:4",{"_index":1626,"title":{},"body":{"interfaces/FieldConfig.html":{}}}],["config.interface.ts:7",{"_index":3061,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:9",{"_index":3059,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.output",{"_index":3910,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.popclass",{"_index":891,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["config.servic",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{}}}],["config.service.t",{"_index":2696,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["config.service.ts:11",{"_index":3145,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:112",{"_index":2725,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:129",{"_index":2713,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:137",{"_index":3871,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:141",{"_index":3879,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:15",{"_index":3153,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:157",{"_index":3883,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:166",{"_index":3874,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:172",{"_index":3872,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:177",{"_index":3880,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:178",{"_index":2711,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:18",{"_index":3885,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:20",{"_index":2734,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:25",{"_index":3150,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{}}}],["config.service.ts:26",{"_index":2707,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:37",{"_index":3155,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:42",{"_index":2718,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:45",{"_index":3161,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:54",{"_index":3159,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:57",{"_index":2729,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:62",{"_index":2723,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:63",{"_index":3157,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:67",{"_index":2709,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["config.service.ts:71",{"_index":3146,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:76",{"_index":3164,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.view",{"_index":3908,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config/field",{"_index":1616,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{}}}],["config/model",{"_index":1100,"title":{},"body":{"modules/DataModule.html":{},"components/EntryListComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["config/resourc",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config/resource.servic",{"_index":1493,"title":{},"body":{"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{}}}],["config/resource.service.t",{"_index":3402,"title":{},"body":{"injectables/ResourceService.html":{},"coverage.html":{}}}],["config/resource.service.ts:113",{"_index":3409,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:124",{"_index":3411,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:34",{"_index":3403,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:37",{"_index":3419,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:41",{"_index":3413,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:47",{"_index":3404,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:56",{"_index":3415,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:74",{"_index":3418,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:89",{"_index":3412,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:95",{"_index":3407,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/typ",{"_index":1101,"title":{},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config?.createlabel",{"_index":960,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["config[properti",{"_index":2757,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["configinput",{"_index":2166,"title":{},"body":{"components/ListComponent.html":{}}}],["configur",{"_index":836,"title":{},"body":{"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/FieldConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"classes/ResourceForm.html":{},"components/SearchbarComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["configuration.interface.t",{"_index":2793,"title":{},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["configure(key",{"_index":839,"title":{},"body":{"classes/Config.html":{}}}],["configure?(key",{"_index":853,"title":{},"body":{"classes/Config.html":{}}}],["confirm",{"_index":3345,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["confirm(resourc",{"_index":3350,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["connector",{"_index":1461,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["consist",{"_index":1259,"title":{},"body":{"interfaces/Day.html":{},"additional-documentation/core-classes/item.html":{}}}],["console.error('cannot",{"_index":3357,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["console.error('miss",{"_index":3907,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["console.error('model",{"_index":2775,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["console.error(`${relationnam",{"_index":3169,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["console.error(err",{"_index":3975,"title":{},"body":{"components/UploadComponent.html":{}}}],["console.log('could",{"_index":2464,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["console.log('cr",{"_index":1071,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["console.log('error",{"_index":952,"title":{},"body":{"components/CrudComponent.html":{}}}],["console.log('old",{"_index":1698,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["console.log('raw",{"_index":1150,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["console.log('receiv",{"_index":4819,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["console.log('resolv",{"_index":1686,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["console.log('select",{"_index":535,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["console.warn('cannot",{"_index":1410,"title":{},"body":{"directives/EntriesDirective.html":{},"injectables/LoaderService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{}}}],["console.warn('could",{"_index":3586,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["console.warn('ha",{"_index":823,"title":{},"body":{"classes/Collection.html":{}}}],["console.warn('no",{"_index":2367,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["console.warn('notification.tim",{"_index":2876,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["console.warn('pag",{"_index":3028,"title":{},"body":{"components/PaginationComponent.html":{}}}],["console.warn('thi",{"_index":2921,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["console.warn('tri",{"_index":2866,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["console.warn('wont",{"_index":1690,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["console.warn(`icon",{"_index":1958,"title":{},"body":{"components/IconComponent.html":{}}}],["console.warn(`rel",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":142,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/PopService.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["construct",{"_index":769,"title":{},"body":{"classes/Collection.html":{},"classes/Field.html":{},"classes/ResourceForm.html":{}}}],["constructor",{"_index":346,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["constructor(@inject('environ",{"_index":3503,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(@inject('usedesktopnotif",{"_index":2910,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(app",{"_index":3770,"title":{},"body":{"components/TinymceComponent.html":{}}}],["constructor(auth",{"_index":2447,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["constructor(bodi",{"_index":3372,"title":{},"body":{"classes/ResourceForm.html":{}}}],["constructor(componentfactoryresolv",{"_index":1348,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["constructor(config",{"_index":2937,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationConfig.html":{}}}],["constructor(crud",{"_index":2706,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["constructor(el",{"_index":1315,"title":{},"body":{"directives/DropzoneDirective.html":{},"directives/FocusDirective.html":{},"components/TabComponent.html":{}}}],["constructor(environ",{"_index":3457,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(fb",{"_index":2484,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["constructor(fileservic",{"_index":547,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["constructor(geocodeservic",{"_index":2398,"title":{},"body":{"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["constructor(host",{"_index":2288,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(iconservic",{"_index":1940,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(item",{"_index":767,"title":{},"body":{"classes/Collection.html":{}}}],["constructor(loaderservic",{"_index":1455,"title":{},"body":{"components/EntryListComponent.html":{}}}],["constructor(mapload",{"_index":1828,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["constructor(notif",{"_index":2796,"title":{},"body":{"classes/Notification.html":{}}}],["constructor(notificationservic",{"_index":1894,"title":{},"body":{"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{}}}],["constructor(popservic",{"_index":456,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{}}}],["constructor(priv",{"_index":580,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["constructor(properti",{"_index":1546,"title":{},"body":{"classes/Field.html":{}}}],["constructor(protect",{"_index":519,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListComponent.html":{},"components/PopComponent.html":{}}}],["constructor(publ",{"_index":355,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/icons.html":{}}}],["constructor(resourceconfig",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(rout",{"_index":2609,"title":{},"body":{"components/MenuComponent.html":{},"components/SearchbarComponent.html":{},"components/TabsComponent.html":{}}}],["constructor(sdk",{"_index":347,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/UploadComponent.html":{}}}],["constructor(symbol",{"_index":1520,"title":{},"body":{"components/ErrorComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/TypeConfigService.html":{}}}],["constructor(usedesktopnotif",{"_index":2893,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(viewcontainerref",{"_index":3613,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["contact",{"_index":4010,"title":{},"body":{"interfaces/WithLoader.html":{},"miscellaneous/variables.html":{}}}],["contain",{"_index":34,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes/field.html":{}}}],["content",{"_index":1938,"title":{},"body":{"components/IconComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["content_css",{"_index":4633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contentchildren",{"_index":3741,"title":{},"body":{"components/TabsComponent.html":{}}}],["contentchildren(tabcompon",{"_index":3745,"title":{},"body":{"components/TabsComponent.html":{}}}],["context",{"_index":2106,"title":{},"body":{"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["contextmenu",{"_index":4627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contrast",{"_index":4442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control",{"_index":40,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["control'",{"_index":2070,"title":{},"body":{"components/InputErrorsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["control.reset",{"_index":2242,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["control[field.properti",{"_index":1808,"title":{},"body":{"injectables/FormService.html":{}}}],["controlvalueaccessor",{"_index":16,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["convert",{"_index":1492,"title":{},"body":{"components/EntryListComponent.html":{}}}],["cooki",{"_index":607,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["cookiefactori",{"_index":615,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["cookiemodul",{"_index":605,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/functions.html":{}}}],["cookiemodule.forroot",{"_index":618,"title":{},"body":{"modules/AuthModule.html":{}}}],["cool",{"_index":4830,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["coolstringcompon",{"_index":4893,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["coord",{"_index":1860,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{}}}],["coords.lat",{"_index":2370,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["coords.lng",{"_index":2369,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["copi",{"_index":4461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core",{"_index":663,"title":{"additional-documentation/core-classes.html":{}},"body":{"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"injectables/FormService.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["core/ui/data",{"_index":4305,"title":{},"body":{"index.html":{}}}],["correct",{"_index":4831,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["count",{"_index":2964,"title":{},"body":{"classes/Pagination.html":{}}}],["cours",{"_index":1610,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{}}}],["coverag",{"_index":4128,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":70,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["create(model",{"_index":1014,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["create(rel",{"_index":3408,"title":{},"body":{"injectables/ResourceService.html":{}}}],["create/edit/delet",{"_index":860,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["create/read/update/delet",{"_index":1038,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"changelog.html":{}}}],["createclick",{"_index":3310,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["created(label",{"_index":3149,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["created.otherwis",{"_index":3416,"title":{},"body":{"injectables/ResourceService.html":{}}}],["createfield",{"_index":3369,"title":{},"body":{"classes/ResourceForm.html":{}}}],["createfield(properti",{"_index":3383,"title":{},"body":{"classes/ResourceForm.html":{}}}],["createlabel",{"_index":967,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["createlist",{"_index":1450,"title":{},"body":{"components/EntryListComponent.html":{}}}],["creates/upd",{"_index":1486,"title":{},"body":{"components/EntryListComponent.html":{}}}],["creator",{"_index":2733,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["credenti",{"_index":2469,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["crop",{"_index":4447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cross",{"_index":4615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crud",{"_index":865,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/data.html":{}}}],["crud'",{"_index":882,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud'},{'nam",{"_index":203,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["crud.compon",{"_index":3400,"title":{},"body":{"modules/ResourceModule.html":{}}}],["crud.component.html",{"_index":867,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud.component.scss",{"_index":866,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud.component.t",{"_index":3308,"title":{},"body":{"components/ResourceCrudComponent.html":{},"coverage.html":{}}}],["crud.component.ts:33",{"_index":3312,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:35",{"_index":3314,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:37",{"_index":3313,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:39",{"_index":3315,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:41",{"_index":3326,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:43",{"_index":3328,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:45",{"_index":3327,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:47",{"_index":3316,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:49",{"_index":3318,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:51",{"_index":3311,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:57",{"_index":3330,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:58",{"_index":3329,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:61",{"_index":3323,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:65",{"_index":3322,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:76",{"_index":3321,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:81",{"_index":3325,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:94",{"_index":3320,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:98",{"_index":3319,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud/crud",{"_index":515,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{}}}],["crud/crud.compon",{"_index":1091,"title":{},"body":{"modules/DataModule.html":{}}}],["crud/crud.servic",{"_index":1092,"title":{},"body":{"modules/DataModule.html":{},"components/EntryListComponent.html":{},"injectables/ModelConfigService.html":{}}}],["crud/resourc",{"_index":3307,"title":{},"body":{"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["crudcompon",{"_index":202,"title":{"components/CrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["crudcomponent#loadentri",{"_index":3339,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crudconfig",{"_index":467,"title":{"interfaces/CrudConfig.html":{}},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["crudservic",{"_index":994,"title":{"injectables/CrudService.html":{}},"body":{"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["current",{"_index":121,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{}}}],["cursor",{"_index":4448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom",{"_index":171,"title":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/MockupComponent.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/data.html":{}}}],["customfieldcompon",{"_index":1354,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["custominputcompon",{"_index":4806,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["customnam",{"_index":1629,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["cycl",{"_index":4835,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["da",{"_index":2830,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["darf",{"_index":4800,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["dashboard",{"_index":4434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":1364,"title":{"additional-documentation/data.html":{}},"body":{"components/DynamicSlotComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{}}}],["data.entryid",{"_index":1933,"title":{},"body":{"injectables/HistoryService.html":{}}}],["databas",{"_index":4522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datamanag",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["datamanager(environment.environ",{"_index":3514,"title":{},"body":{"injectables/SdkService.html":{}}}],["datamanager.api().emailavailable(control.value).then((avail",{"_index":4704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datamanagerid",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["datamanagerlistcompon",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["datamanagerresourc",{"_index":336,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["datamodul",{"_index":1073,"title":{"modules/DataModule.html":{}},"body":{"modules/DataModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["datamodule.forenvironment(environ",{"_index":4757,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["dataroutingmodul",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["datasourc",{"_index":3302,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["datasourceid",{"_index":3303,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["date",{"_index":1114,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["date()).format(this.symbol.resolve('moment.format.d",{"_index":3898,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date(0",{"_index":3899,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date.clon",{"_index":1262,"title":{},"body":{"interfaces/Day.html":{}}}],["date.clone().startof('day').issame(this.timespan[0].clone().startof('day",{"_index":1245,"title":{},"body":{"interfaces/Day.html":{}}}],["date.clone().startof('day').issame(this.timespan[1].clone().startof('day",{"_index":1247,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('dd",{"_index":1253,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('mm",{"_index":1248,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format(this.monthformat",{"_index":1264,"title":{},"body":{"interfaces/Day.html":{}}}],["date.isbetween(this.timespan[0",{"_index":1250,"title":{},"body":{"interfaces/Day.html":{}}}],["date.now",{"_index":2327,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["datenschutz",{"_index":4362,"title":{},"body":{"index.html":{}}}],["daterange'},{'nam",{"_index":205,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["daterangecompon",{"_index":204,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetim",{"_index":1108,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["datetime'},{'nam",{"_index":207,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["datetime.component.html",{"_index":1111,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["datetime.component.scss",{"_index":1110,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["datetime/calendar.compon",{"_index":1776,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/daterange.compon",{"_index":1783,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/datetime.compon",{"_index":1772,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/datetime.pip",{"_index":1774,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/heatmap.compon",{"_index":1782,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/month.compon",{"_index":1773,"title":{},"body":{"modules/FormModule.html":{}}}],["datetimecompon",{"_index":206,"title":{"components/DatetimeComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetimepip",{"_index":1139,"title":{"pipes/DatetimePipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"modules/FormModule.html":{},"coverage.html":{},"overview.html":{}}}],["datum",{"_index":3896,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["day",{"_index":1131,"title":{"interfaces/Day.html":{}},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"coverage.html":{}}}],["day.clone().startof('month').startof('week",{"_index":1237,"title":{},"body":{"interfaces/Day.html":{}}}],["day.date.clon",{"_index":1206,"title":{},"body":{"interfaces/Day.html":{}}}],["day.first",{"_index":1199,"title":{},"body":{"interfaces/Day.html":{}}}],["day.format('mm",{"_index":1249,"title":{},"body":{"interfaces/Day.html":{}}}],["day.last",{"_index":1201,"title":{},"body":{"interfaces/Day.html":{}}}],["dayclick",{"_index":1186,"title":{},"body":{"interfaces/Day.html":{},"changelog.html":{}}}],["de",{"_index":3674,"title":{},"body":{"injectables/SymbolService.html":{}}}],["deactiv",{"_index":3710,"title":{},"body":{"components/TabComponent.html":{}}}],["debit",{"_index":4409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debounc",{"_index":2017,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["debouncetim",{"_index":3535,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["debouncetime(this.debounc",{"_index":2057,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["decid",{"_index":2144,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["decim",{"_index":3888,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["declar",{"_index":141,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/GeocodeService.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["decor",{"_index":105,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["decreas",{"_index":4474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deeper",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":113,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"modules/FormModule.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["defaultconfig",{"_index":2743,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["defaultconfig[properti",{"_index":2756,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["defaultentryinputcompon",{"_index":208,"title":{"components/DefaultEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultentryoutputcompon",{"_index":209,"title":{"components/DefaultEntryOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultinputcompon",{"_index":19,"title":{"components/DefaultInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["defaultinputcomponent:12",{"_index":125,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:14",{"_index":129,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:16",{"_index":128,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:18",{"_index":124,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultlocal",{"_index":3188,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["defaultoutputcompon",{"_index":212,"title":{"components/DefaultOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultplacehold",{"_index":3536,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["defaulttim",{"_index":2890,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["defin",{"_index":66,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["definit",{"_index":4869,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["del",{"_index":1004,"title":{},"body":{"injectables/CrudService.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{}}}],["del(model",{"_index":1016,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["del(rel",{"_index":3410,"title":{},"body":{"injectables/ResourceService.html":{}}}],["delay",{"_index":445,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/MenuComponent.html":{},"components/PopComponent.html":{},"components/SearchbarComponent.html":{},"miscellaneous/variables.html":{}}}],["delet",{"_index":277,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["delete(resourc",{"_index":3353,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["deletenullproperti",{"_index":3406,"title":{},"body":{"injectables/ResourceService.html":{}}}],["demo",{"_index":4120,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes.html":{}}}],["demonstr",{"_index":4775,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["deni",{"_index":2920,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["depend",{"_index":58,"title":{"dependencies.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["deprec",{"_index":4025,"title":{},"body":{"changelog.html":{}}}],["der",{"_index":2832,"title":{},"body":{"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["desc",{"_index":2193,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"changelog.html":{}}}],["descend",{"_index":2200,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["describ",{"_index":1583,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/core-classes/field.html":{}}}],["descript",{"_index":10,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}}}],["deselect",{"_index":3720,"title":{},"body":{"components/TabComponent.html":{}}}],["desir",{"_index":2352,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["desktop",{"_index":2889,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotif",{"_index":2891,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotification(notif",{"_index":2895,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["destroy",{"_index":2563,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["determin",{"_index":1163,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ItemConfig.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{}}}],["dev",{"_index":4320,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["develop",{"_index":968,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["diagon",{"_index":4536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dial",{"_index":4452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialog",{"_index":3098,"title":{},"body":{"components/PopComponent.html":{}}}],["diamond",{"_index":4454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["didact",{"_index":4854,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["die",{"_index":2833,"title":{},"body":{"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["dies",{"_index":583,"title":{},"body":{"injectables/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["differ",{"_index":901,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["direct",{"_index":184,"title":{"directives/AssetDirective.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{}}}],["directive/pipe/service/class/modul",{"_index":4324,"title":{},"body":{"index.html":{}}}],["directli",{"_index":398,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ResourceDeletePopComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/item.html":{}}}],["directori",{"_index":4327,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":1309,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/LoaderComponent.html":{},"components/MockupComponent.html":{},"components/SearchbarComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["disablecreatepop",{"_index":969,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disabledragend",{"_index":1181,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledragstart",{"_index":1179,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledtyp",{"_index":3257,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["disablehead",{"_index":2194,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["disablelegaci",{"_index":544,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["disablelistpop",{"_index":970,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disableselect",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["disableselectswitch",{"_index":971,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disablestrategi",{"_index":3286,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["disabletim",{"_index":1115,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["disableupd",{"_index":1892,"title":{},"body":{"injectables/HistoryService.html":{}}}],["disableupdates(key",{"_index":1896,"title":{},"body":{"injectables/HistoryService.html":{}}}],["discuss",{"_index":4838,"title":{},"body":{"additional-documentation/ui.html":{}}}],["display",{"_index":1116,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["displayaccount",{"_index":3868,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displayd",{"_index":3869,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displaydate(tim",{"_index":3873,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["dist",{"_index":4326,"title":{},"body":{"index.html":{}}}],["distinctuntilchang",{"_index":3567,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["div",{"_index":3015,"title":{},"body":{"components/PaginationComponent.html":{}}}],["divid",{"_index":4455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dm",{"_index":3181,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dm::delet",{"_index":3183,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dm::edit",{"_index":3182,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dmaccount",{"_index":3226,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dmasset",{"_index":537,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{}}}],["dmassetlist",{"_index":1640,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["dmassetlist.getallitem",{"_index":1696,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["dmassetresourc",{"_index":1642,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["dmclient",{"_index":3280,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dmuser",{"_index":3262,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dndmodul",{"_index":1088,"title":{},"body":{"modules/DataModule.html":{},"modules/SelectModule.html":{}}}],["doc",{"_index":1554,"title":{},"body":{"classes/Field.html":{},"changelog.html":{}}}],["document",{"_index":4129,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/list.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["domsanit",{"_index":3443,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["dosomethingriski",{"_index":2835,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["down",{"_index":4404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["download",{"_index":4440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["drag",{"_index":1089,"title":{},"body":{"modules/DataModule.html":{},"interfaces/Day.html":{},"modules/SelectModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["dragend",{"_index":2362,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["draggabl",{"_index":1158,"title":{},"body":{"interfaces/Day.html":{}}}],["dragleav",{"_index":1313,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragleave(",{"_index":1323,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragov",{"_index":1314,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragover(",{"_index":1326,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragstart(day",{"_index":1216,"title":{},"body":{"interfaces/Day.html":{}}}],["drawer",{"_index":3099,"title":{},"body":{"components/PopComponent.html":{}}}],["drop",{"_index":538,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/DataModule.html":{},"directives/DropzoneDirective.html":{},"modules/SelectModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["drop(",{"_index":1328,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dropday(day",{"_index":1197,"title":{},"body":{"interfaces/Day.html":{}}}],["dropdown",{"_index":2233,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["dropzone/dropzone.direct",{"_index":1731,"title":{},"body":{"modules/FilesModule.html":{}}}],["dropzonedirect",{"_index":299,"title":{"directives/DropzoneDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dublic",{"_index":2685,"title":{},"body":{"components/MockupComponent.html":{}}}],["due",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["dumbbel",{"_index":4603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplic",{"_index":1636,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"injectables/SymbolService.html":{},"interfaces/Upload.html":{}}}],["dure",{"_index":2495,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["dynam",{"_index":215,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["dynamicrackcompon",{"_index":213,"title":{"components/DynamicRackComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcompon",{"_index":214,"title":{"components/DynamicSlotComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcomponent:11",{"_index":2044,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:18",{"_index":2034,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["e",{"_index":165,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Day.html":{},"injectables/HistoryService.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/item.html":{}}}],["e.clipboarddata).getdata('text",{"_index":3573,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["e.data.yt",{"_index":4688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.datatransfer.fil",{"_index":1338,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.datatransfer.files.length",{"_index":1339,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.display",{"_index":4880,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["e.g",{"_index":56,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthGuard.html":{},"classes/Config.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Symbol.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["e.id",{"_index":4879,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["e.key",{"_index":3594,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["e.preventdefault",{"_index":1219,"title":{},"body":{"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/SearchbarComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["e.stopimmediatepropag",{"_index":2263,"title":{},"body":{"components/ListItemsComponent.html":{},"components/SearchbarComponent.html":{},"components/ToolbarComponent.html":{}}}],["e.stoppropag",{"_index":1334,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListItemsComponent.html":{},"components/SearchbarComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["e.target",{"_index":3958,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.fil",{"_index":3959,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.files.length",{"_index":3960,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.localnam",{"_index":3817,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e.toel",{"_index":3819,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e2",{"_index":4358,"title":{},"body":{"index.html":{}}}],["each",{"_index":999,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["easi",{"_index":4028,"title":{},"body":{"changelog.html":{},"additional-documentation/core-classes/list.html":{}}}],["ec",{"_index":27,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["ec.api",{"_index":342,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["ec.asset",{"_index":3246,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ec.compon",{"_index":1785,"title":{},"body":{"injectables/FormService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes.html":{}}}],["ec.components//src/_",{"_index":4101,"title":{},"body":{"changelog.html":{}}}],["ec.components/_",{"_index":4099,"title":{},"body":{"changelog.html":{}}}],["ec.components/ac",{"_index":4847,"title":{},"body":{"additional-documentation/ace.html":{}}}],["ec.components/cor",{"_index":508,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/PaginationComponent.html":{},"injectables/PopService.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"index.html":{},"additional-documentation/core-classes.html":{}}}],["ec.components/core/src/collection/collect",{"_index":2322,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{}}}],["ec.components/core/src/config/config",{"_index":2735,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["ec.components/core/src/config/field",{"_index":2736,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["ec.components/core/src/field/field",{"_index":1289,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["ec.components/core/src/form/form",{"_index":1802,"title":{},"body":{"injectables/FormService.html":{},"components/InputComponent.html":{}}}],["ec.components/core/src/item/item",{"_index":1296,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"classes/ResourceForm.html":{},"interfaces/Upload.html":{}}}],["ec.components/core/src/list/list",{"_index":992,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{}}}],["ec.components/core/src/selection/select",{"_index":914,"title":{},"body":{"components/CrudComponent.html":{},"components/ListHeaderComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/data",{"_index":509,"title":{},"body":{"components/AssetListPopComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/data/src/entri",{"_index":3165,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ec.components/data/src/resourc",{"_index":1918,"title":{},"body":{"injectables/HistoryService.html":{}}}],["ec.components/data/src/sdk/sdk.servic",{"_index":351,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthGuard.html":{},"components/DefaultEntryInputComponent.html":{}}}],["ec.components/loc",{"_index":4265,"title":{},"body":{"dependencies.html":{}}}],["ec.components/medium",{"_index":4266,"title":{},"body":{"dependencies.html":{},"additional-documentation/medium.html":{}}}],["ec.components/styl",{"_index":4074,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/style/components.scss\";5",{"_index":4743,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/tinymc",{"_index":4267,"title":{},"body":{"dependencies.html":{},"additional-documentation/tinymce.html":{}}}],["ec.components/ui",{"_index":135,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SearchbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["ec.components/ui/src/form/default",{"_index":352,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["ec.components/ui/src/icon/emoji",{"_index":1950,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["ec.components/ui/src/loader/loader.compon",{"_index":915,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/ui/src/loader/loader.servic",{"_index":916,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/ui/src/notifications/notif",{"_index":924,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/UploadComponent.html":{}}}],["ec.components/ui/src/notifications/notifications.compon",{"_index":993,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["ec.components/ui/src/notifications/notifications.servic",{"_index":579,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/ui/src/notifications/with",{"_index":922,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/UploadComponent.html":{}}}],["ec.components/ui/src/pop/pop.compon",{"_index":510,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/UploadComponent.html":{}}}],["ec.components/ui/src/pop/pop.servic",{"_index":511,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["ec.components/ui/src/symbol/symbol.servic",{"_index":921,"title":{},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["ec.components/ui/src/ui.modul",{"_index":608,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{}}}],["ec.components/uidemo",{"_index":4844,"title":{},"body":{"additional-documentation/ui.html":{}}}],["ec.list",{"_index":2683,"title":{},"body":{"components/MockupComponent.html":{}}}],["ec.list.card",{"_index":2691,"title":{},"body":{"components/MockupComponent.html":{}}}],["ec.list.simpl",{"_index":2692,"title":{},"body":{"components/MockupComponent.html":{}}}],["ec.sdk",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{},"classes/Field.html":{},"injectables/SdkService.html":{},"changelog.html":{},"dependencies.html":{}}}],["ec.sdk/lib/account",{"_index":3489,"title":{},"body":{"injectables/SdkService.html":{}}}],["ec.sdk/lib/cor",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/datamanag",{"_index":3491,"title":{},"body":{"injectables/SdkService.html":{}}}],["ec.sdk/lib/publicapi",{"_index":410,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{}}}],["ec.sdk/lib/resources/accounts/accountresourc",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/resources/datamanager/datamanagerresourc",{"_index":354,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/resources/datamanager/modelresourc",{"_index":1917,"title":{},"body":{"injectables/HistoryService.html":{}}}],["ec.sdk/lib/resources/listresourc",{"_index":1406,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetlist",{"_index":1641,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetresourc",{"_index":1643,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/entrylist",{"_index":1035,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/resources/publicapi/entryresourc",{"_index":1034,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetlist",{"_index":1645,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetresourc",{"_index":408,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/resourc",{"_index":3166,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{}}}],["ec.sdk/lib/sess",{"_index":3492,"title":{},"body":{"injectables/SdkService.html":{}}}],["ecasset",{"_index":367,"title":{},"body":{"directives/AssetDirective.html":{},"changelog.html":{}}}],["ecasset]'},{'nam",{"_index":298,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecdropzon",{"_index":1308,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ecdropzone]'},{'nam",{"_index":300,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecentri",{"_index":1378,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"changelog.html":{}}}],["ecentries]'},{'nam",{"_index":302,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecentry]'},{'nam",{"_index":304,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecfocu",{"_index":1740,"title":{},"body":{"directives/FocusDirective.html":{}}}],["ecfocus]'},{'nam",{"_index":306,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecicon",{"_index":1970,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ecimag",{"_index":1979,"title":{},"body":{"directives/ImageDirective.html":{}}}],["ecimage]'},{'nam",{"_index":309,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecpublicasset",{"_index":4060,"title":{},"body":{"changelog.html":{}}}],["ecvc",{"_index":3843,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["edg",{"_index":1213,"title":{},"body":{"interfaces/Day.html":{}}}],["edit",{"_index":435,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/ToolbarComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["editfilt",{"_index":2213,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["editfilter(pop",{"_index":2221,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["editor",{"_index":13,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["editor#mediumeditor",{"_index":2575,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor'},{'nam",{"_index":257,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["editor,[ec",{"_index":219,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["editor.addbutton('imag",{"_index":4700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor.addbutton('youtub",{"_index":4680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor.caret?.flow?.typ",{"_index":3863,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["editor.caret?.phrasing?.typ",{"_index":3864,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["editor.compon",{"_index":2590,"title":{},"body":{"modules/MediumModule.html":{}}}],["editor.component.html",{"_index":2554,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.scss",{"_index":2553,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.t",{"_index":2549,"title":{},"body":{"components/MediumEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:35",{"_index":2557,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":2559,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":2560,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":2561,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":2568,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:45",{"_index":2572,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":2569,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":2571,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":2564,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":2562,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:68",{"_index":2567,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:75",{"_index":2570,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:78",{"_index":2565,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:82",{"_index":2566,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.destroy",{"_index":3823,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor.getcont",{"_index":3807,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor.insertcont",{"_index":4699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor.on('chang",{"_index":164,"title":{},"body":{"components/AceComponent.html":{}}}],["editor.setcontent(this.valu",{"_index":2583,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["editor.setvalue(this.valu",{"_index":180,"title":{},"body":{"components/AceComponent.html":{}}}],["editor.windowmanager.open",{"_index":4683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor/dist/js/medium",{"_index":2573,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor/editor.compon",{"_index":3856,"title":{},"body":{"components/ToolbarComponent.html":{},"modules/VcModule.html":{}}}],["editor/src/medium",{"_index":2548,"title":{},"body":{"components/MediumEditorComponent.html":{},"coverage.html":{}}}],["editor/src/medium.module.t",{"_index":2589,"title":{},"body":{"modules/MediumModule.html":{}}}],["editor?.caret?.phrasing?.typ",{"_index":3861,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["editor[0",{"_index":3814,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor]'},{'nam",{"_index":220,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["editorcompon",{"_index":217,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/VcModule.html":{},"coverage.html":{},"overview.html":{}}}],["editorset",{"_index":3804,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ein",{"_index":3086,"title":{},"body":{"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["einfach",{"_index":4650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["einfügen",{"_index":4684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eingab",{"_index":4392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eingeloggt",{"_index":591,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["einleitung",{"_index":4663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eject",{"_index":4564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["el",{"_index":1317,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{},"components/TabComponent.html":{}}}],["el.tag",{"_index":3862,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["element",{"_index":108,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["elementref",{"_index":104,"title":{},"body":{"components/AceComponent.html":{},"directives/DropzoneDirective.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["elimin",{"_index":4842,"title":{},"body":{"additional-documentation/ui.html":{}}}],["email",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["emailavail",{"_index":2527,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emaillabel",{"_index":2479,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["emailplacehold",{"_index":2480,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["emailunavail",{"_index":4387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailvalid",{"_index":4253,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["embed",{"_index":1353,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["embedd",{"_index":1947,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["emit",{"_index":476,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["emit(host",{"_index":2840,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["emit(notif",{"_index":2900,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["emitt",{"_index":474,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/NotificationsService.html":{}}}],["emoji",{"_index":4720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emojiicon",{"_index":1949,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/icons.html":{}}}],["empti",{"_index":464,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ListConfig.html":{},"components/MediumEditorComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["en",{"_index":3690,"title":{},"body":{"injectables/SymbolService.html":{}}}],["enabl",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{},"index.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["enableupd",{"_index":1893,"title":{},"body":{"injectables/HistoryService.html":{}}}],["enableupdates(resourc",{"_index":1901,"title":{},"body":{"injectables/HistoryService.html":{}}}],["encapsul",{"_index":2112,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["end",{"_index":1180,"title":{},"body":{"interfaces/Day.html":{},"index.html":{}}}],["endless",{"_index":1383,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["enforc",{"_index":4766,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["enhanc",{"_index":3683,"title":{},"body":{"injectables/SymbolService.html":{}}}],["enough",{"_index":4746,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["enrich",{"_index":3171,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ensur",{"_index":3079,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["enter",{"_index":3547,"title":{},"body":{"components/SearchbarComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["entiti",{"_index":2095,"title":{},"body":{"interfaces/ItemConfig.html":{},"additional-documentation/core-classes/item.html":{}}}],["entri",{"_index":210,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/data.html":{}}}],["entries/entries.direct",{"_index":1093,"title":{},"body":{"modules/DataModule.html":{}}}],["entriesdirect",{"_index":301,"title":{"directives/EntriesDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entry.del().then((r",{"_index":1072,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["entry.getimagethumburl(properti",{"_index":3889,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.gettitle(properti",{"_index":3900,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.sav",{"_index":1046,"title":{},"body":{"injectables/CrudService.html":{},"injectables/SymbolPipe.html":{},"interfaces/Update.html":{}}}],["entry.save().then((_entri",{"_index":1060,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["entry/entry.direct",{"_index":1098,"title":{},"body":{"modules/DataModule.html":{}}}],["entry[key",{"_index":1056,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["entrycompon",{"_index":327,"title":{},"body":{"modules/AceModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["entrydirect",{"_index":303,"title":{"directives/EntryDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryformcompon",{"_index":221,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryformcomponent.deleteentri",{"_index":4076,"title":{},"body":{"changelog.html":{}}}],["entryid",{"_index":1429,"title":{},"body":{"directives/EntryDirective.html":{},"injectables/ResourceService.html":{}}}],["entrylist",{"_index":907,"title":{},"body":{"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["entrylist(this.model",{"_index":1515,"title":{},"body":{"components/EntryListComponent.html":{}}}],["entrylistcompon",{"_index":223,"title":{"components/EntryListComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrypop",{"_index":868,"title":{},"body":{"components/CrudComponent.html":{}}}],["entrypopcompon",{"_index":225,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryresourc",{"_index":1017,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{}}}],["entryselectcompon",{"_index":226,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["env",{"_index":3490,"title":{},"body":{"injectables/SdkService.html":{}}}],["env=prod",{"_index":4328,"title":{},"body":{"index.html":{}}}],["env=stag",{"_index":4329,"title":{},"body":{"index.html":{}}}],["envelop",{"_index":4456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environ",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/SdkService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["environment.clientid",{"_index":3506,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.datamanagerid",{"_index":3509,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.environ",{"_index":3516,"title":{},"body":{"injectables/SdkService.html":{}}}],["environments/environ",{"_index":4754,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["equal",{"_index":938,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["equalis",{"_index":4457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eras",{"_index":4458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erhalten",{"_index":3090,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["err",{"_index":953,"title":{},"body":{"components/CrudComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["err.messag",{"_index":2529,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["error",{"_index":563,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["error'},{'nam",{"_index":228,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["error('cannot",{"_index":420,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{}}}],["error('get",{"_index":3498,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('no",{"_index":3493,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('th",{"_index":3696,"title":{},"body":{"injectables/SymbolService.html":{}}}],["error(`cannot",{"_index":2990,"title":{},"body":{"classes/Pagination.html":{}}}],["error.cod",{"_index":1531,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.code}}{{error.datapath}}{{error?.message}}{{error.detail",{"_index":1535,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":1519,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.datapath",{"_index":1532,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.detail",{"_index":1534,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.messag",{"_index":2085,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["error/error.compon",{"_index":2885,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["error?.messag",{"_index":1533,"title":{},"body":{"components/ErrorComponent.html":{}}}],["errorcompon",{"_index":227,"title":{"components/ErrorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormessag",{"_index":2474,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["errors'},{'nam",{"_index":236,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["errors.compon",{"_index":2092,"title":{},"body":{"modules/IoModule.html":{}}}],["errors.component.html",{"_index":2073,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.scss",{"_index":2072,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.t",{"_index":2069,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["errors.component.ts:13",{"_index":2075,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:15",{"_index":2079,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:19",{"_index":2076,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors/input",{"_index":2068,"title":{},"body":{"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["errs.push",{"_index":2084,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["erstellt",{"_index":4792,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["es2015",{"_index":4331,"title":{},"body":{"index.html":{}}}],["es6",{"_index":1134,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{}}}],["escap",{"_index":3126,"title":{},"body":{"injectables/PopService.html":{}}}],["etc",{"_index":1553,"title":{},"body":{"classes/Field.html":{},"components/ListItemsComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["euro",{"_index":4538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["even",{"_index":977,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["event",{"_index":385,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["event.key",{"_index":3133,"title":{},"body":{"injectables/PopService.html":{}}}],["event.keycod",{"_index":3131,"title":{},"body":{"injectables/PopService.html":{}}}],["eventemitt",{"_index":386,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/core-classes.html":{}}}],["eventemitter.t",{"_index":852,"title":{},"body":{"classes/Config.html":{}}}],["eventsourc",{"_index":1891,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventu",{"_index":3963,"title":{},"body":{"components/UploadComponent.html":{},"index.html":{}}}],["everyth",{"_index":2697,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["everytim",{"_index":1033,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["exact",{"_index":1142,"title":{},"body":{"pipes/DatetimePipe.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"injectables/TypeConfigService.html":{}}}],["exampl",{"_index":7,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["exclud",{"_index":4346,"title":{},"body":{"index.html":{}}}],["execut",{"_index":4356,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1029,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["expand",{"_index":4459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect",{"_index":139,"title":{},"body":{"components/AceComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"interfaces/Symbol.html":{},"miscellaneous/variables.html":{}}}],["experiment",{"_index":2206,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["explicitli",{"_index":4345,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["export",{"_index":145,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["exporta",{"_index":411,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["expos",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{}}}],["exposur",{"_index":4460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extend",{"_index":18,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FormConfig.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"classes/ResourceForm.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["extens",{"_index":430,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FormConfig.html":{},"classes/ResourceForm.html":{}}}],["extensions/modes/them",{"_index":4851,"title":{},"body":{"additional-documentation/ace.html":{}}}],["extern",{"_index":987,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Pagination.html":{}}}],["extra",{"_index":432,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"additional-documentation/core-classes/form.html":{}}}],["extract",{"_index":1796,"title":{},"body":{"injectables/FormService.html":{}}}],["ey",{"_index":4468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f.name",{"_index":3985,"title":{},"body":{"components/UploadComponent.html":{}}}],["f]{12}$/i",{"_index":3178,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["f]{3",{"_index":3176,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["f]{4",{"_index":3174,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["f]{8",{"_index":3173,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["facebook",{"_index":4576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factori",{"_index":4583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fail",{"_index":575,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Collection.html":{},"index.html":{}}}],["failiur",{"_index":2853,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["faktor",{"_index":4796,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["fall",{"_index":988,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fallback",{"_index":2134,"title":{},"body":{"components/ListComponent.html":{}}}],["fals",{"_index":415,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"modules/NotificationsModule.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["fancier",{"_index":3831,"title":{},"body":{"components/ToggleComponent.html":{}}}],["fax",{"_index":4584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fb",{"_index":2487,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["featur",{"_index":2843,"title":{},"body":{"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["feature=oembed&rel=0",{"_index":4698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fehler",{"_index":2837,"title":{},"body":{"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["feld",{"_index":4390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff5353",{"_index":4646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffff8d",{"_index":4647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":3172,"title":{},"body":{"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["ffnungszeiten",{"_index":4811,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["field",{"_index":41,"title":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"directives/SlotHostDirective.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["field'",{"_index":1572,"title":{},"body":{"classes/Field.html":{}}}],["field('nam",{"_index":1596,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.compon",{"_index":1355,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["field.display(nam",{"_index":1604,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.form",{"_index":1805,"title":{},"body":{"injectables/FormService.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["field.group(nam",{"_index":1605,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.label",{"_index":2243,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.maxitems||10",{"_index":1301,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["field.properti",{"_index":2244,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.queryfilt",{"_index":1504,"title":{},"body":{"components/EntryListComponent.html":{}}}],["field.queryfilter(valu",{"_index":1505,"title":{},"body":{"components/EntryListComponent.html":{}}}],["field.requir",{"_index":1816,"title":{},"body":{"injectables/FormService.html":{}}}],["field.resolve({value:{name:'bobbi",{"_index":1602,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.sort(nam",{"_index":1607,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.title).filter(field",{"_index":3199,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["field.typ",{"_index":361,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["field.valid",{"_index":1800,"title":{},"body":{"injectables/FormService.html":{}}}],["field.validate(control.valu",{"_index":1819,"title":{},"body":{"injectables/FormService.html":{}}}],["field[0",{"_index":3200,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["fieldconfig",{"_index":1624,"title":{"interfaces/FieldConfig.html":{}},"body":{"interfaces/FieldConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"additional-documentation/core-classes/item.html":{}}}],["fieldconfig).then((field",{"_index":2791,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[properti",{"_index":2769,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfigproperti",{"_index":1537,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/ResourceForm.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"additional-documentation/core-classes/field.html":{}}}],["fieldfilt",{"_index":1483,"title":{},"body":{"components/EntryListComponent.html":{}}}],["fieldhost",{"_index":1360,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldhostdirect",{"_index":1367,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldlabel",{"_index":2214,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["fieldlabel(field",{"_index":2224,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["fieldnam",{"_index":1630,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["fields.filter((field",{"_index":4007,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pip",{"_index":1770,"title":{},"body":{"modules/FormModule.html":{}}}],["fields.pipe.t",{"_index":4002,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["fields.pipe.ts:10",{"_index":4005,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fieldvalid",{"_index":2518,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fieldvalidators.email",{"_index":2526,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["file.servic",{"_index":517,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/FilesModule.html":{},"components/UploadComponent.html":{}}}],["fileinput",{"_index":3924,"title":{},"body":{"components/UploadComponent.html":{}}}],["filelist",{"_index":1661,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["filenam",{"_index":1639,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["fileopt",{"_index":1627,"title":{"interfaces/FileOptions.html":{}},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"coverage.html":{}}}],["files.length",{"_index":1662,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["files/files.modul",{"_index":1099,"title":{},"body":{"modules/DataModule.html":{}}}],["fileservic",{"_index":460,"title":{"injectables/FileService.html":{}},"body":{"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filesmodul",{"_index":1079,"title":{"modules/FilesModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filestoupload",{"_index":3925,"title":{},"body":{"components/UploadComponent.html":{}}}],["fill",{"_index":4597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill(0",{"_index":1240,"title":{},"body":{"interfaces/Day.html":{}}}],["filter",{"_index":1010,"title":{},"body":{"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/list.html":{}}}],["filter((item",{"_index":3644,"title":{},"body":{"classes/Sorter.html":{}}}],["filter(properti",{"_index":1477,"title":{},"body":{"components/EntryListComponent.html":{},"injectables/ModelConfigService.html":{}}}],["filter(rout",{"_index":2652,"title":{},"body":{"components/MenuComponent.html":{}}}],["filter[key",{"_index":1042,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["filterlist",{"_index":3533,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["filterlist(valu",{"_index":3552,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["filteroper",{"_index":1538,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{}}}],["filteropt",{"_index":1391,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["filterpopclass",{"_index":1539,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["find",{"_index":168,"title":{},"body":{"components/AceComponent.html":{},"injectables/SymbolService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["finish",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["fire",{"_index":384,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["first",{"_index":490,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["fit",{"_index":1026,"title":{},"body":{"injectables/CrudService.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fix",{"_index":4077,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["flag",{"_index":781,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"injectables/NotificationsService.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["flash",{"_index":4462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flat",{"_index":4314,"title":{},"body":{"index.html":{}}}],["flexibl",{"_index":2148,"title":{},"body":{"components/ListComponent.html":{},"changelog.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["flip",{"_index":1325,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/LoginFormComponent.html":{},"injectables/SdkService.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":4784,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["fn",{"_index":89,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["focu",{"_index":1734,"title":{"interfaces/Focus.html":{}},"body":{"interfaces/Focus.html":{},"components/SearchbarComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["focus",{"_index":3558,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["focus/focus.direct",{"_index":3991,"title":{},"body":{"modules/UtilityModule.html":{}}}],["focusdirect",{"_index":305,"title":{"directives/FocusDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["focusev",{"_index":1736,"title":{},"body":{"interfaces/Focus.html":{},"components/SearchbarComponent.html":{}}}],["focusout",{"_index":3848,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["focusout(",{"_index":3852,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["folder",{"_index":4114,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["follow",{"_index":1960,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["font",{"_index":3659,"title":{},"body":{"interfaces/Symbol.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":3111,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["forcereload",{"_index":1704,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["foreach((field",{"_index":1806,"title":{},"body":{"injectables/FormService.html":{}}}],["forecolor",{"_index":4676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forenviron",{"_index":4760,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["forenvironment(environ",{"_index":1106,"title":{},"body":{"modules/DataModule.html":{}}}],["forev",{"_index":2809,"title":{},"body":{"classes/Notification.html":{}}}],["form",{"_index":112,"title":{"additional-documentation/core-classes/form.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/form.html":{}}}],["form'",{"_index":2041,"title":{},"body":{"components/InputComponent.html":{}}}],["form'},{'nam",{"_index":222,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["form(nul",{"_index":4890,"title":{},"body":{"additional-documentation/core-classes/form.html":{}}}],["form.compon",{"_index":174,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FormModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"modules/UtilityModule.html":{},"changelog.html":{}}}],["form.component.html",{"_index":2473,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.scss",{"_index":2472,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.t",{"_index":2468,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:18",{"_index":2514,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:20",{"_index":2517,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:22",{"_index":2513,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:24",{"_index":2504,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:26",{"_index":2502,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:28",{"_index":2496,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:30",{"_index":2501,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:32",{"_index":2492,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:34",{"_index":2494,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:36",{"_index":2498,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:38",{"_index":2499,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:40",{"_index":2490,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:42",{"_index":2489,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:44",{"_index":2486,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:51",{"_index":2509,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:59",{"_index":2512,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:67",{"_index":2506,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:72",{"_index":2510,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.fields.filter((field",{"_index":1804,"title":{},"body":{"injectables/FormService.html":{}}}],["form.servic",{"_index":1769,"title":{},"body":{"modules/FormModule.html":{}}}],["form.t",{"_index":3368,"title":{},"body":{"classes/ResourceForm.html":{},"coverage.html":{}}}],["form.ts:11",{"_index":3374,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form.ts:12",{"_index":3375,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form.ts:13",{"_index":3376,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form.ts:17",{"_index":3381,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form.ts:8",{"_index":3373,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form/admin",{"_index":331,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"modules/DataModule.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/default",{"_index":1094,"title":{},"body":{"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/entri",{"_index":911,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"coverage.html":{}}}],["form/form.compon",{"_index":2235,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["form/form.modul",{"_index":2271,"title":{},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["form/login",{"_index":2467,"title":{},"body":{"components/LoginFormComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{}}}],["form/resourc",{"_index":3332,"title":{},"body":{"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["form:11",{"_index":3378,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form:13",{"_index":3377,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form:31",{"_index":3384,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form:49",{"_index":3386,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form:54",{"_index":3388,"title":{},"body":{"classes/ResourceForm.html":{}}}],["format",{"_index":1159,"title":{},"body":{"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["formattedtext",{"_index":3886,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["formbuild",{"_index":2485,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formcompon",{"_index":229,"title":{"additional-documentation/ui/formcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["formcomponent#input",{"_index":2042,"title":{},"body":{"components/InputComponent.html":{}}}],["formcomponent.submit",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["formconfig",{"_index":1749,"title":{"interfaces/FormConfig.html":{}},"body":{"interfaces/FormConfig.html":{},"classes/ResourceForm.html":{},"coverage.html":{}}}],["formcontrol",{"_index":122,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/LocationPickerComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["formcontrol(form.getvalue(field.properti",{"_index":1809,"title":{},"body":{"injectables/FormService.html":{}}}],["formdata",{"_index":1659,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["former",{"_index":4068,"title":{},"body":{"changelog.html":{}}}],["formgroup",{"_index":127,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{}}}],["formgroup(control",{"_index":1814,"title":{},"body":{"injectables/FormService.html":{}}}],["formmodul",{"_index":1753,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["formservic",{"_index":1766,"title":{"injectables/FormService.html":{}},"body":{"modules/FormModule.html":{},"injectables/FormService.html":{},"coverage.html":{},"overview.html":{}}}],["formsmodul",{"_index":1086,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{}}}],["forwardref",{"_index":131,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["found",{"_index":562,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["foundat",{"_index":4857,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["fourth",{"_index":4289,"title":{},"body":{"index.html":{}}}],["fox",{"_index":2687,"title":{},"body":{"components/MockupComponent.html":{}}}],["frage",{"_index":4667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frame",{"_index":4463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frompromis",{"_index":1847,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["frompromise(this.maploader.load",{"_index":1867,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["fromsearch",{"_index":2404,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["front",{"_index":4493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fruit",{"_index":2152,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["früchte",{"_index":4900,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["full",{"_index":480,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["fullscreen",{"_index":4624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fun",{"_index":4770,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["function",{"_index":614,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{}}}],["fundament",{"_index":759,"title":{},"body":{"classes/Collection.html":{}}}],["further",{"_index":2806,"title":{},"body":{"classes/Notification.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{},"index.html":{}}}],["g",{"_index":4723,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["gener",{"_index":670,"title":{},"body":{"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"components/SearchbarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["generateconfig",{"_index":2702,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generateconfig(model",{"_index":2710,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generatefieldconfig",{"_index":2703,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generatefieldconfig(model",{"_index":2712,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["geo",{"_index":2407,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["geocod",{"_index":1823,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode.servic",{"_index":2383,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["geocodelatlng",{"_index":1825,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodelatlng(geocod",{"_index":1836,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocoder.geocod",{"_index":1872,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservic",{"_index":1820,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["get",{"_index":2802,"title":{"changelog.html":{},"index.html":{}},"body":{"classes/Notification.html":{},"index.html":{},"additional-documentation/core-classes/list.html":{}}}],["get(nam",{"_index":3677,"title":{},"body":{"injectables/SymbolService.html":{}}}],["get(properti",{"_index":2717,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["get(relationnam",{"_index":3152,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["get(typ",{"_index":3878,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["getaccount",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getaccount(api",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getalgorithm",{"_index":3621,"title":{},"body":{"classes/Sorter.html":{}}}],["getalgorithm(item",{"_index":3626,"title":{},"body":{"classes/Sorter.html":{}}}],["getallowedmodelmethod",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedmodelmethods(model",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethod",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethods(rel",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{}}}],["getapi",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getapi(email",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcolor",{"_index":2598,"title":{},"body":{"components/MenuComponent.html":{}}}],["getcolor(level",{"_index":2629,"title":{},"body":{"components/MenuComponent.html":{}}}],["getconfig",{"_index":3163,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["getdaycolor(_mo",{"_index":1223,"title":{},"body":{"interfaces/Day.html":{}}}],["geterror",{"_index":2074,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["getfield",{"_index":3370,"title":{},"body":{"classes/ResourceForm.html":{}}}],["getfield(properti",{"_index":3385,"title":{},"body":{"classes/ResourceForm.html":{}}}],["getformdata",{"_index":1707,"title":{},"body":{"injectables/FileService.html":{}}}],["getformdata(fil",{"_index":1660,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["getgroup",{"_index":1787,"title":{},"body":{"injectables/FormService.html":{}}}],["getgroup(form",{"_index":1792,"title":{},"body":{"injectables/FormService.html":{}}}],["getgrouprel",{"_index":446,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["getitemcolor",{"_index":2599,"title":{},"body":{"components/MenuComponent.html":{}}}],["getitemcolor(item",{"_index":2631,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlevel",{"_index":2600,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlevel(level",{"_index":2633,"title":{},"body":{"components/MenuComponent.html":{}}}],["getmonth(day",{"_index":1235,"title":{},"body":{"interfaces/Day.html":{}}}],["getnearestaddress",{"_index":1826,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getnearestaddress(loc",{"_index":1841,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getpag",{"_index":2933,"title":{},"body":{"classes/Pagination.html":{}}}],["getpath",{"_index":2601,"title":{},"body":{"components/MenuComponent.html":{}}}],["getpath(item",{"_index":2636,"title":{},"body":{"components/MenuComponent.html":{}}}],["getpermiss",{"_index":2892,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getplacehold",{"_index":1545,"title":{},"body":{"classes/Field.html":{}}}],["getpopclass",{"_index":871,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["getroot",{"_index":3484,"title":{},"body":{"injectables/SdkService.html":{}}}],["getschema",{"_index":3454,"title":{},"body":{"injectables/SdkService.html":{}}}],["getschema(model",{"_index":3461,"title":{},"body":{"injectables/SdkService.html":{}}}],["getter",{"_index":841,"title":{},"body":{"classes/Config.html":{},"injectables/SdkService.html":{},"additional-documentation/core-classes/form.html":{}}}],["getvalid",{"_index":1788,"title":{},"body":{"injectables/FormService.html":{}}}],["getvalidators(field",{"_index":1794,"title":{},"body":{"injectables/FormService.html":{}}}],["getvalu",{"_index":3371,"title":{},"body":{"classes/ResourceForm.html":{}}}],["getvalue(properti",{"_index":3387,"title":{},"body":{"classes/ResourceForm.html":{}}}],["github",{"_index":4598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["give",{"_index":1025,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["given",{"_index":75,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["glass",{"_index":4570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["global",{"_index":2300,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["globalload",{"_index":2306,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["globe",{"_index":4486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glue",{"_index":4599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glyph",{"_index":3660,"title":{},"body":{"interfaces/Symbol.html":{}}}],["go",{"_index":4360,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["googl",{"_index":1822,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["google.maps.geocod",{"_index":1879,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.places.autocomplete(el",{"_index":1853,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["googlemap",{"_index":2436,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["gp",{"_index":4487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradient",{"_index":4464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":2899,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["graph",{"_index":4422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":4639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":42,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["group.addcontrol(field.properti",{"_index":1815,"title":{},"body":{"injectables/FormService.html":{}}}],["group.nam",{"_index":3224,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["group.pip",{"_index":2273,"title":{},"body":{"modules/ListModule.html":{}}}],["group.valu",{"_index":1517,"title":{},"body":{"components/EntryListComponent.html":{},"components/ListComponent.html":{}}}],["groupchang",{"_index":443,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/UploadComponent.html":{}}}],["groupdat",{"_index":3870,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["groupid",{"_index":3306,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["groupnam",{"_index":2684,"title":{},"body":{"components/MockupComponent.html":{}}}],["grouppip",{"_index":1141,"title":{"pipes/GroupPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"modules/ListModule.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":1387,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["größer",{"_index":4797,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["guard",{"_index":559,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.servic",{"_index":612,"title":{},"body":{"modules/AuthModule.html":{}}}],["guard.service.t",{"_index":558,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["guard.service.ts:12",{"_index":572,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.service.ts:17",{"_index":573,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guid",{"_index":4291,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["h",{"_index":2158,"title":{},"body":{"components/ListComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["h2",{"_index":4655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h3",{"_index":4656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h4",{"_index":4658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h5",{"_index":4660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haben",{"_index":3084,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["hacki",{"_index":2066,"title":{},"body":{"components/InputComponent.html":{}}}],["halfr",{"_index":1916,"title":{},"body":{"injectables/HistoryService.html":{}}}],["hamburg",{"_index":4497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hand",{"_index":4449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handl",{"_index":433,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListComponent.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["handler",{"_index":2131,"title":{},"body":{"components/ListComponent.html":{}}}],["happen",{"_index":1037,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["harri",{"_index":4489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["has(item",{"_index":789,"title":{},"body":{"classes/Collection.html":{}}}],["hasactivepath",{"_index":2602,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasactivepath(item",{"_index":2638,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasal",{"_index":763,"title":{},"body":{"classes/Collection.html":{}}}],["hasall(item",{"_index":792,"title":{},"body":{"classes/Collection.html":{}}}],["hasentri",{"_index":3202,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["hash",{"_index":4465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hasmethod",{"_index":872,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["hasmethod(method",{"_index":894,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["haspassword",{"_index":3215,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["haspendingemail",{"_index":3217,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["have",{"_index":335,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/LoaderService.html":{}}}],["header",{"_index":1182,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["header'},{'nam",{"_index":239,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["header.compon",{"_index":2274,"title":{},"body":{"modules/ListModule.html":{}}}],["header.component.html",{"_index":2211,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.scss",{"_index":2210,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.t",{"_index":2209,"title":{},"body":{"components/ListHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:16",{"_index":2216,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:18",{"_index":2217,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:20",{"_index":2232,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:22",{"_index":2228,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:25",{"_index":2222,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:31",{"_index":2219,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:35",{"_index":2227,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:39",{"_index":2225,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header/list",{"_index":2208,"title":{},"body":{"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["headlin",{"_index":2812,"title":{},"body":{"classes/Notification.html":{}}}],["health",{"_index":4466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heart",{"_index":4567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heatmap",{"_index":1173,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap'},{'nam",{"_index":231,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["heatmapcompon",{"_index":230,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":2151,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["help",{"_index":2037,"title":{},"body":{"components/InputComponent.html":{},"index.html":{}}}],["helper",{"_index":1394,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["here",{"_index":2303,"title":{},"body":{"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["hexcolor",{"_index":3141,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["hidden",{"_index":1540,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["hide",{"_index":449,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["hidefirstlast",{"_index":3055,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hidepag",{"_index":3056,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hidepagin",{"_index":2195,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["high",{"_index":4544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["higher",{"_index":2159,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["highlight",{"_index":4469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hint",{"_index":4856,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["histori",{"_index":1913,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{}}}],["historyservic",{"_index":1082,"title":{"injectables/HistoryService.html":{}},"body":{"modules/DataModule.html":{},"injectables/HistoryService.html":{},"coverage.html":{},"overview.html":{}}}],["hochladen",{"_index":539,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["hold",{"_index":333,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MockupComponent.html":{},"injectables/PopService.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{}}}],["holder",{"_index":1447,"title":{},"body":{"components/EntryListComponent.html":{}}}],["home",{"_index":4514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hook",{"_index":172,"title":{},"body":{"components/AceComponent.html":{},"injectables/ResourceConfig.html":{}}}],["hook.method",{"_index":3204,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["horizont",{"_index":4419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":312,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["host.direct",{"_index":1368,"title":{},"body":{"components/DynamicSlotComponent.html":{},"modules/IoModule.html":{}}}],["host.directive.t",{"_index":3611,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["host.directive.ts:11",{"_index":3616,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["host.directive.ts:9",{"_index":3614,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["hostbind",{"_index":1310,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostbinding('class.i",{"_index":1330,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlisten",{"_index":1312,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ToolbarComponent.html":{}}}],["hostlistener('click",{"_index":3857,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["hostlistener('dragleav",{"_index":1341,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('dragov",{"_index":1331,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('drop",{"_index":1336,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('focusout",{"_index":3860,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["hour",{"_index":4815,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["hourglass",{"_index":4470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hours.component.html",{"_index":4816,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["hours.component.scss",{"_index":4817,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["hover",{"_index":2595,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverdelay",{"_index":2607,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem",{"_index":2603,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem(item",{"_index":2641,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverout",{"_index":2604,"title":{},"body":{"components/MenuComponent.html":{}}}],["html",{"_index":183,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchbarComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["html.pipe",{"_index":3999,"title":{},"body":{"modules/VcModule.html":{}}}],["html.pipe.t",{"_index":3436,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["html.pipe.ts:10",{"_index":3442,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["http",{"_index":4767,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["http://localhost:4200",{"_index":4321,"title":{},"body":{"index.html":{}}}],["https://angular.io/guide/dynam",{"_index":3612,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["https://blog.thoughtram.io/angular/2016/07/27/custom",{"_index":4821,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["https://components.entrecode.d",{"_index":4292,"title":{},"body":{"index.html":{}}}],["https://components.entrecode.de/auth/auth",{"_index":2445,"title":{},"body":{"components/LoginComponent.html":{}}}],["https://components.entrecode.de/data/crud",{"_index":862,"title":{},"body":{"components/CrudComponent.html":{}}}],["https://components.entrecode.de/data/entri",{"_index":1377,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{}}}],["https://components.entrecode.de/misc/ac",{"_index":17,"title":{},"body":{"components/AceComponent.html":{}}}],["https://components.entrecode.de/misc/medium",{"_index":2551,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["https://components.entrecode.de/misc/tinymc",{"_index":3767,"title":{},"body":{"components/TinymceComponent.html":{}}}],["https://components.entrecode.de/ui/datetim",{"_index":1109,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["https://components.entrecode.de/ui/list/bas",{"_index":2109,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/list/transform",{"_index":2111,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/load",{"_index":2282,"title":{},"body":{"components/LoaderComponent.html":{}}}],["https://components.entrecode.de/ui/login",{"_index":2471,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["https://components.entrecode.de/ui/notif",{"_index":2820,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["https://components.entrecode.de/ui/pop",{"_index":3100,"title":{},"body":{"components/PopComponent.html":{}}}],["https://components.entrecode.de/ui/tab",{"_index":3727,"title":{},"body":{"components/TabsComponent.html":{}}}],["https://doc.entrecode.de/en/develop/resources/dm",{"_index":3253,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["https://docs.npmjs.com/cli/access#detail",{"_index":4837,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["https://entrecode.de/schema/dm",{"_index":3264,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["https://entrecode.github.io/ec.compon",{"_index":4290,"title":{},"body":{"index.html":{}}}],["https://entrecode.github.io/ec.sdk/#api",{"_index":1463,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["https://entrecode.github.io/ec.sdk/#environ",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["https://github.com/ajaxorg/ac",{"_index":148,"title":{},"body":{"components/AceComponent.html":{}}}],["https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4",{"_index":1813,"title":{},"body":{"injectables/FormService.html":{}}}],["https://github.com/auth0/angular2",{"_index":616,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://github.com/mishoo/uglifyjs2/issues/659",{"_index":4335,"title":{},"body":{"index.html":{}}}],["https://icons.entrecode.de/ec",{"_index":4634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://localhost:4200",{"_index":4773,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["https://localhost:4200/muffin",{"_index":4783,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["https://www.youtube.com/emb",{"_index":4696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https?:\\/\\/(?:[a",{"_index":4690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["human",{"_index":1591,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/core-classes/field.html":{}}}],["höhe",{"_index":4894,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["höher",{"_index":4895,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["i+1",{"_index":3044,"title":{},"body":{"components/PaginationComponent.html":{}}}],["icon",{"_index":1541,"title":{"additional-documentation/ui/icons.html":{}},"body":{"classes/Field.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/icons.html":{}}}],["icon'},{'nam",{"_index":233,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["icon.compon",{"_index":1968,"title":{},"body":{"modules/IconModule.html":{}}}],["icon.component.html",{"_index":1939,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.cont",{"_index":1962,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.servic",{"_index":1954,"title":{},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{}}}],["icon/icon.modul",{"_index":1778,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{}}}],["iconcompon",{"_index":232,"title":{"components/IconComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconmodul",{"_index":1763,"title":{"modules/IconModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["icons.t",{"_index":4234,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["iconservic",{"_index":1941,"title":{"injectables/IconService.html":{}},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/icons.html":{}}}],["id",{"_index":366,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["idea",{"_index":2147,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["identifi",{"_index":1932,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"coverage.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["identifierpattern",{"_index":2097,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["ids.push(asset",{"_index":1685,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["ifram",{"_index":187,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["ignor",{"_index":1635,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["ignoredupl",{"_index":1631,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["imag",{"_index":1974,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["image/image.direct",{"_index":1732,"title":{},"body":{"modules/FilesModule.html":{}}}],["imagedirect",{"_index":307,"title":{"directives/ImageDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["images",{"_index":3258,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["img",{"_index":308,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["img'",{"_index":1975,"title":{},"body":{"directives/ImageDirective.html":{}}}],["immedi",{"_index":378,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/SearchbarComponent.html":{}}}],["immut",{"_index":1021,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["immuta",{"_index":3151,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["implement",{"_index":15,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchbarComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["impli",{"_index":4312,"title":{},"body":{"index.html":{}}}],["import",{"_index":60,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["impressum",{"_index":4361,"title":{},"body":{"index.html":{}}}],["improv",{"_index":4125,"title":{},"body":{"changelog.html":{}}}],["inbox",{"_index":4472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includ",{"_index":1637,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/core-classes/form.html":{}}}],["includeassetidinpath",{"_index":1632,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["incom",{"_index":3438,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{}}}],["incompat",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["increas",{"_index":4475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indent",{"_index":4473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":32,"title":{"index.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/selection.html":{}}}],["index(item",{"_index":795,"title":{},"body":{"classes/Collection.html":{}}}],["index.html",{"_index":1948,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ace.html":{}}}],["index.t",{"_index":4316,"title":{},"body":{"index.html":{}}}],["indic",{"_index":1634,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["infin",{"_index":4476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["inform",{"_index":2229,"title":{},"body":{"components/ListHeaderComponent.html":{},"classes/Notification.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes.html":{}}}],["inhabit",{"_index":2101,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["inherit",{"_index":123,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/OutputComponent.html":{},"classes/ResourceForm.html":{},"additional-documentation/ui.html":{}}}],["init",{"_index":45,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"components/MediumEditorComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes/form.html":{}}}],["init(environ",{"_index":3465,"title":{},"body":{"injectables/SdkService.html":{}}}],["initfilt",{"_index":1451,"title":{},"body":{"components/EntryListComponent.html":{}}}],["initfilterqueri",{"_index":1452,"title":{},"body":{"components/EntryListComponent.html":{}}}],["initfilterquery(fieldfilt",{"_index":1480,"title":{},"body":{"components/EntryListComponent.html":{}}}],["initi",{"_index":119,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{}}}],["initmethod",{"_index":3309,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["inittab",{"_index":3731,"title":{},"body":{"components/TabsComponent.html":{}}}],["inject",{"_index":373,"title":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["inject('environ",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["inlin",{"_index":4665,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/ui.html":{}}}],["input",{"_index":35,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["input#id",{"_index":4037,"title":{},"body":{"changelog.html":{}}}],["input'",{"_index":1122,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["input'},{'nam",{"_index":234,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["input('config",{"_index":2165,"title":{},"body":{"components/ListComponent.html":{}}}],["input.compon",{"_index":173,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["input.component.html",{"_index":344,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["input.component.scss",{"_index":4805,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["input.component.t",{"_index":332,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["input.component.ts:10",{"_index":1284,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input.component.ts:12",{"_index":1294,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:13",{"_index":349,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["input.component.ts:14",{"_index":350,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultInputComponent.html":{}}}],["input.component.ts:16",{"_index":1295,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:18",{"_index":1293,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:9",{"_index":1283,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input/default",{"_index":353,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["input/input.compon",{"_index":2091,"title":{},"body":{"modules/IoModule.html":{}}}],["input/output",{"_index":4119,"title":{},"body":{"changelog.html":{},"additional-documentation/data.html":{}}}],["input[type=fil",{"_index":3951,"title":{},"body":{"components/UploadComponent.html":{}}}],["inputcompon",{"_index":110,"title":{"components/InputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["inputcomponent;and",{"_index":4826,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["inputerrorscompon",{"_index":235,"title":{"components/InputErrorsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputs/output",{"_index":4089,"title":{},"body":{"changelog.html":{}}}],["inputthi",{"_index":4803,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["insid",{"_index":434,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["inspir",{"_index":3340,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["instagram",{"_index":4604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instal",{"_index":4722,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{}}}],["instanc",{"_index":72,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["instanceof",{"_index":2007,"title":{},"body":{"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/TabsComponent.html":{}}}],["instanti",{"_index":4888,"title":{},"body":{"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["instead",{"_index":2856,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes.html":{}}}],["integr",{"_index":4833,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["interact",{"_index":2888,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["interfac",{"_index":961,"title":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["interfer",{"_index":2321,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["intern",{"_index":990,"title":{},"body":{"interfaces/CrudConfig.html":{},"miscellaneous/variables.html":{}}}],["intersect",{"_index":4480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intial",{"_index":2039,"title":{},"body":{"components/InputComponent.html":{}}}],["intl.collator(undefin",{"_index":3634,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/variables.html":{}}}],["introduct",{"_index":4852,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["invalid",{"_index":2690,"title":{},"body":{"components/MockupComponent.html":{},"injectables/TypeConfigService.html":{}}}],["invert",{"_index":4050,"title":{},"body":{"changelog.html":{}}}],["invit",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["invok",{"_index":2100,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/core-classes/item.html":{}}}],["io/io.modul",{"_index":1771,"title":{},"body":{"modules/FormModule.html":{},"modules/UtilityModule.html":{}}}],["iomodul",{"_index":1761,"title":{"modules/IoModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["isact",{"_index":2605,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{}}}],["isactive(item",{"_index":2644,"title":{},"body":{"components/MenuComponent.html":{}}}],["isactive(pag",{"_index":2949,"title":{},"body":{"classes/Pagination.html":{}}}],["isempti",{"_index":764,"title":{},"body":{"classes/Collection.html":{}}}],["isend",{"_index":1246,"title":{},"body":{"interfaces/Day.html":{}}}],["isfirst",{"_index":1379,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isimmutableproperti",{"_index":1005,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{}}}],["isimmutableproperty(key",{"_index":1019,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["islast",{"_index":1380,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isnewasset",{"_index":1708,"title":{},"body":{"injectables/FileService.html":{}}}],["isnewasset(asset",{"_index":1649,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["iso",{"_index":4112,"title":{},"body":{"changelog.html":{}}}],["isselect",{"_index":2606,"title":{},"body":{"components/MenuComponent.html":{}}}],["isselected(_mo",{"_index":1272,"title":{},"body":{"interfaces/Day.html":{}}}],["isselected(item",{"_index":2646,"title":{},"body":{"components/MenuComponent.html":{}}}],["isstart",{"_index":1244,"title":{},"body":{"interfaces/Day.html":{}}}],["issystemproperti",{"_index":2704,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["issystemproperty(properti",{"_index":2722,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["ist",{"_index":2831,"title":{},"body":{"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["isvis",{"_index":3000,"title":{},"body":{"components/PaginationComponent.html":{}}}],["isvisible(pag",{"_index":3004,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ital",{"_index":4481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item",{"_index":43,"title":{"additional-documentation/core-classes/item.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["item'",{"_index":2251,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["item(",{"_index":3943,"title":{},"body":{"components/UploadComponent.html":{}}}],["item('a",{"_index":4860,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["item(1",{"_index":4884,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["item(asset",{"_index":1671,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["item(assets[0",{"_index":1668,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["item(resourc",{"_index":3393,"title":{},"body":{"classes/ResourceForm.html":{}}}],["item.config.fields[property].form",{"_index":940,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.fields[property].list",{"_index":939,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.onsav",{"_index":3420,"title":{},"body":{"injectables/ResourceService.html":{}}}],["item.data?.titl",{"_index":2676,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.deleteimmutableproperties(valu",{"_index":3422,"title":{},"body":{"injectables/ResourceService.html":{}}}],["item.getbodi",{"_index":945,"title":{},"body":{"components/CrudComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{}}}],["item.group(properti",{"_index":1888,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["item.id",{"_index":947,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{}}}],["item.path",{"_index":2674,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.sav",{"_index":4882,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["item.sort(properti",{"_index":3642,"title":{},"body":{"classes/Sorter.html":{}}}],["item/item",{"_index":1752,"title":{},"body":{"interfaces/FormConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["item?.display(field.properti",{"_index":1290,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["item?.display(field.property)?.length",{"_index":1303,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["itemconfig",{"_index":1751,"title":{"interfaces/ItemConfig.html":{}},"body":{"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"classes/ResourceForm.html":{},"coverage.html":{},"additional-documentation/core-classes/item.html":{}}}],["items'},{'nam",{"_index":241,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["items.compon",{"_index":2275,"title":{},"body":{"modules/ListModule.html":{}}}],["items.component.html",{"_index":2250,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.scss",{"_index":2249,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.t",{"_index":2246,"title":{},"body":{"components/ListItemsComponent.html":{},"coverage.html":{}}}],["items.component.ts:15",{"_index":2255,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:17",{"_index":2256,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:19",{"_index":2254,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:21",{"_index":2257,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:23",{"_index":2258,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:26",{"_index":2260,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:33",{"_index":2259,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.filter((item",{"_index":1887,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["items.foreach((item",{"_index":818,"title":{},"body":{"classes/Collection.html":{}}}],["items.length",{"_index":833,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{}}}],["items.pip",{"_index":1780,"title":{},"body":{"modules/FormModule.html":{}}}],["items.pipe.t",{"_index":2541,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["items.pipe.ts:8",{"_index":2545,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["items.reduce((ha",{"_index":824,"title":{},"body":{"classes/Collection.html":{}}}],["items.revers",{"_index":3656,"title":{},"body":{"classes/Sorter.html":{}}}],["items.slice((this.config.pag",{"_index":2992,"title":{},"body":{"classes/Pagination.html":{}}}],["items.sort((a",{"_index":3651,"title":{},"body":{"classes/Sorter.html":{}}}],["items/list",{"_index":2245,"title":{},"body":{"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["itemwidth",{"_index":3029,"title":{},"body":{"components/PaginationComponent.html":{}}}],["itemwidth}px",{"_index":3040,"title":{},"body":{"components/PaginationComponent.html":{}}}],["iter",{"_index":2077,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/core-classes/form.html":{}}}],["itself",{"_index":1548,"title":{},"body":{"classes/Field.html":{},"components/NotificationsComponent.html":{},"components/TabComponent.html":{}}}],["ja",{"_index":4897,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["javascript",{"_index":57,"title":{},"body":{"components/AceComponent.html":{}}}],["join",{"_index":3205,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["js",{"_index":4270,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{}}}],["json.parse(e.data",{"_index":1931,"title":{},"body":{"injectables/HistoryService.html":{}}}],["json.stringify(json",{"_index":3255,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["json.stringify(valu",{"_index":3902,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["jsoneditorcompon",{"_index":4824,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["json}}todo",{"_index":4846,"title":{},"body":{"additional-documentation/ui/selectcomponent.html":{}}}],["justifi",{"_index":4399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt/issues/305",{"_index":617,"title":{},"body":{"modules/AuthModule.html":{}}}],["kann",{"_index":585,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["karma",{"_index":4357,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1257,"title":{},"body":{"interfaces/Day.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputErrorsComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["keeppopopen",{"_index":972,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["key",{"_index":843,"title":{},"body":{"classes/Config.html":{},"injectables/CrudService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"interfaces/ListConfig.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{}}}],["key[0",{"_index":1063,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["keydown",{"_index":3127,"title":{},"body":{"injectables/PopService.html":{},"components/SearchbarComponent.html":{}}}],["keyup",{"_index":3530,"title":{},"body":{"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{}}}],["kind",{"_index":2299,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"classes/Sorter.html":{},"interfaces/WithLoader.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["kleiner",{"_index":4799,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["know",{"_index":1691,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{}}}],["known",{"_index":394,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{}}}],["kununu",{"_index":4594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kurz",{"_index":4394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":979,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/DefaultOutputComponent.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/LoginFormComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["label#for",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["landscap",{"_index":4511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["languag",{"_index":94,"title":{},"body":{"components/AceComponent.html":{},"injectables/ResourceConfig.html":{}}}],["laptop",{"_index":4482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":1160,"title":{},"body":{"interfaces/Day.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{}}}],["lat",{"_index":1880,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["later",{"_index":1352,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"interfaces/WithNotifications.html":{}}}],["latest",{"_index":3128,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop",{"_index":3135,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop.hid",{"_index":3137,"title":{},"body":{"injectables/PopService.html":{}}}],["latitud",{"_index":1861,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["lay",{"_index":4840,"title":{},"body":{"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["layer",{"_index":2716,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["layout",{"_index":1258,"title":{},"body":{"interfaces/Day.html":{}}}],["lead",{"_index":4100,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["leav",{"_index":4488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":893,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["legaci",{"_index":465,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{}}}],["legacyasset",{"_index":530,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["legend",{"_index":182,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"modules/UiModule.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"overview.html":{}}}],["lemontre",{"_index":2153,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["length",{"_index":827,"title":{},"body":{"classes/Collection.html":{}}}],["lerna",{"_index":4295,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["lerna.json",{"_index":4832,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["let",{"_index":4839,"title":{},"body":{"additional-documentation/ui.html":{}}}],["let'",{"_index":2918,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["letter",{"_index":997,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["level",{"_index":370,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"components/MenuComponent.html":{},"interfaces/Update.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["li",{"_index":3017,"title":{},"body":{"components/PaginationComponent.html":{}}}],["lib",{"_index":4333,"title":{},"body":{"index.html":{}}}],["librari",{"_index":2391,"title":{},"body":{"modules/LocationModule.html":{}}}],["light",{"_index":4644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lightbulb",{"_index":4483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["line",{"_index":170,"title":{},"body":{"components/AceComponent.html":{},"components/LoaderComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["line:direct",{"_index":1744,"title":{},"body":{"directives/FocusDirective.html":{}}}],["line:no",{"_index":2164,"title":{},"body":{"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["link",{"_index":3060,"title":{},"body":{"classes/PaginationConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["link_class_list",{"_index":4649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkedin",{"_index":4577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list",{"_index":194,"title":{"additional-documentation/core-classes/list.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["list#toggleselectmod",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["list'},{'nam",{"_index":224,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["list(this.collection.item",{"_index":2171,"title":{},"body":{"components/ListComponent.html":{}}}],["list(this.item",{"_index":2169,"title":{},"body":{"components/ListComponent.html":{}}}],["list.compon",{"_index":913,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"changelog.html":{}}}],["list.component.html",{"_index":2114,"title":{},"body":{"components/ListComponent.html":{}}}],["list.component.scss",{"_index":1448,"title":{},"body":{"components/EntryListComponent.html":{},"components/ListComponent.html":{}}}],["list.component.t",{"_index":1445,"title":{},"body":{"components/EntryListComponent.html":{},"coverage.html":{}}}],["list.component.ts:25",{"_index":1460,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:27",{"_index":1458,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:37",{"_index":1488,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:48",{"_index":1474,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:61",{"_index":1473,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.config.identifierpattern",{"_index":3555,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["list.config.label",{"_index":3554,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["list.t",{"_index":4178,"title":{},"body":{"coverage.html":{}}}],["list.ts/list.compon",{"_index":2974,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["list/entri",{"_index":912,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"coverage.html":{}}}],["list/list",{"_index":2975,"title":{},"body":{"classes/Pagination.html":{}}}],["list/list.modul",{"_index":3609,"title":{},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{}}}],["list/resourc",{"_index":1494,"title":{},"body":{"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["list/upload",{"_index":4024,"title":{},"body":{"changelog.html":{}}}],["listcompon",{"_index":237,"title":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["listconfig",{"_index":965,"title":{"interfaces/ListConfig.html":{}},"body":{"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"coverage.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["listen",{"_index":2818,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/PopService.html":{}}}],["listheadercompon",{"_index":238,"title":{"components/ListHeaderComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listitemscompon",{"_index":240,"title":{"components/ListItemsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["listmodul",{"_index":2264,"title":{"modules/ListModule.html":{}},"body":{"modules/ListModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["listresourc",{"_index":1453,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["liter",{"_index":837,"title":{},"body":{"classes/Config.html":{},"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"miscellaneous/variables.html":{}}}],["live",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["lng",{"_index":1882,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["load",{"_index":365,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"directives/SlotHostDirective.html":{},"interfaces/WithLoader.html":{},"miscellaneous/functions.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["load(config",{"_index":2954,"title":{},"body":{"classes/Pagination.html":{}}}],["load(id",{"_index":388,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["loadcompon",{"_index":1361,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loadcomponent(compon",{"_index":1363,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loadentri",{"_index":873,"title":{},"body":{"components/CrudComponent.html":{}}}],["loadentry(item",{"_index":896,"title":{},"body":{"components/CrudComponent.html":{}}}],["loader",{"_index":869,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"directives/SlotHostDirective.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["loader'",{"_index":2298,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'nam",{"_index":243,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["loader.compon",{"_index":2337,"title":{},"body":{"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"interfaces/WithLoader.html":{}}}],["loader.component.html",{"_index":2284,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":2283,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.interfac",{"_index":2522,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loader.interface.t",{"_index":4009,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["loader.servic",{"_index":2338,"title":{},"body":{"modules/LoaderModule.html":{}}}],["loader.wait(promis",{"_index":2344,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loader/loader.compon",{"_index":2520,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loader/loader.modul",{"_index":1777,"title":{},"body":{"modules/FormModule.html":{},"modules/UiModule.html":{}}}],["loader/with",{"_index":2521,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loadercompon",{"_index":242,"title":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["loadermodul",{"_index":1764,"title":{"modules/LoaderModule.html":{}},"body":{"modules/FormModule.html":{},"modules/LoaderModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["loaderservic",{"_index":876,"title":{"injectables/LoaderService.html":{}},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["loaderth",{"_index":2302,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["local",{"_index":2301,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SymbolService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["localload",{"_index":2308,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["locat",{"_index":245,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["location.latitud",{"_index":1881,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location.longitud",{"_index":1883,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location/map",{"_index":2380,"title":{},"body":{"modules/LocationModule.html":{}}}],["location_compon",{"_index":2381,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["locationmapcompon",{"_index":244,"title":{"components/LocationMapComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["locationmodul",{"_index":2373,"title":{"modules/LocationModule.html":{}},"body":{"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationpickercompon",{"_index":247,"title":{"components/LocationPickerComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["locationsearchcompon",{"_index":249,"title":{"components/LocationSearchComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["lock",{"_index":3080,"title":{},"body":{"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["lockform",{"_index":3070,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["log",{"_index":1946,"title":{},"body":{"components/IconComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["logic",{"_index":4820,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{}}}],["login",{"_index":254,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["login'",{"_index":2515,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["login'},{'nam",{"_index":252,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["login(undefin",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login(valu",{"_index":2505,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["login.component.html",{"_index":2446,"title":{},"body":{"components/LoginComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["login.component.t",{"_index":4786,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["login/login.compon",{"_index":611,"title":{},"body":{"modules/AuthModule.html":{}}}],["login/signup",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["logincompon",{"_index":251,"title":{"components/LoginComponent.html":{},"additional-documentation/ui/logincomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["loginformcompon",{"_index":253,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(api",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":2204,"title":{},"body":{"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["longitud",{"_index":1863,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["look",{"_index":2798,"title":{},"body":{"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/list.html":{}}}],["lookup",{"_index":1840,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["loop",{"_index":4477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["low",{"_index":4545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lower",{"_index":2161,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["lvl1",{"_index":978,"title":{},"body":{"interfaces/CrudConfig.html":{},"changelog.html":{}}}],["löschen",{"_index":3346,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["machin",{"_index":4410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mail",{"_index":2491,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{}}}],["main",{"_index":2146,"title":{},"body":{"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["mainli",{"_index":4858,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["major",{"_index":4853,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["make",{"_index":61,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"components/LoaderComponent.html":{},"interfaces/Update.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["man",{"_index":4582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manag",{"_index":4298,"title":{},"body":{"index.html":{}}}],["mani",{"_index":985,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["manual",{"_index":3775,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ace.html":{}}}],["map",{"_index":850,"title":{},"body":{"classes/Config.html":{},"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/MenuComponent.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["map'},{'nam",{"_index":246,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["map((d",{"_index":1241,"title":{},"body":{"interfaces/Day.html":{}}}],["map((dat",{"_index":1243,"title":{},"body":{"interfaces/Day.html":{}}}],["map((method",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["map(field",{"_index":3198,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map(hook",{"_index":3203,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map(item",{"_index":3643,"title":{},"body":{"classes/Sorter.html":{}}}],["map(p",{"_index":3260,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map(polici",{"_index":3207,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map.compon",{"_index":2384,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["map.component.html",{"_index":2348,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.scss",{"_index":2347,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.t",{"_index":2346,"title":{},"body":{"components/LocationMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:12",{"_index":2355,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:14",{"_index":2357,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:16",{"_index":2359,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:18",{"_index":2358,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:24",{"_index":2364,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:31",{"_index":2361,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.valu",{"_index":2426,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["mapload",{"_index":1832,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["mapsapiload",{"_index":1829,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["mark",{"_index":1175,"title":{},"body":{"interfaces/Day.html":{},"miscellaneous/variables.html":{}}}],["marker",{"_index":2356,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend",{"_index":2349,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend(coord",{"_index":2360,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markup",{"_index":3110,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["match",{"_index":315,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["match.length",{"_index":2759,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["match[1",{"_index":2760,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["match[3",{"_index":2761,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["matches(chang",{"_index":1023,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["math.abs(curr",{"_index":3041,"title":{},"body":{"components/PaginationComponent.html":{}}}],["math.max(0",{"_index":3032,"title":{},"body":{"components/PaginationComponent.html":{}}}],["math.min(this.getpag",{"_index":2994,"title":{},"body":{"classes/Pagination.html":{}}}],["math.min(transl",{"_index":3034,"title":{},"body":{"components/PaginationComponent.html":{}}}],["matter",{"_index":4752,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["max",{"_index":1779,"title":{},"body":{"modules/FormModule.html":{},"components/PaginationComponent.html":{}}}],["maxcolumn",{"_index":2196,"title":{},"body":{"interfaces/ListConfig.html":{},"changelog.html":{}}}],["maxim",{"_index":2202,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["maximum",{"_index":1567,"title":{},"body":{"classes/Field.html":{},"changelog.html":{}}}],["maxitem",{"_index":1542,"title":{},"body":{"classes/Field.html":{},"pipes/MaxItemsPipe.html":{},"changelog.html":{}}}],["maxitemspip",{"_index":1759,"title":{"pipes/MaxItemsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/MaxItemsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["mean",{"_index":4051,"title":{},"body":{"changelog.html":{},"additional-documentation/ui.html":{}}}],["meant",{"_index":126,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"injectables/ResourceService.html":{},"components/TabComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["measur",{"_index":4491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":4681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["medium",{"_index":256,"title":{"additional-documentation/medium.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/medium.html":{}}}],["mediumeditor",{"_index":2558,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditor(this.container.nativeel",{"_index":2578,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditorcompon",{"_index":255,"title":{"components/MediumEditorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mediummodul",{"_index":2584,"title":{"modules/MediumModule.html":{}},"body":{"modules/MediumModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/medium.html":{}}}],["megaphon",{"_index":4525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":4825,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["menu",{"_index":2592,"title":{},"body":{"components/MenuComponent.html":{},"additional-documentation/ui.html":{}}}],["menu,[ec",{"_index":259,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["menu.component.html",{"_index":2594,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":2593,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/menu.compon",{"_index":3992,"title":{},"body":{"modules/UtilityModule.html":{}}}],["menu]'},{'nam",{"_index":260,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["menubar",{"_index":4618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menucompon",{"_index":258,"title":{"components/MenuComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["merg",{"_index":847,"title":{},"body":{"classes/Config.html":{},"components/CrudComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{}}}],["merge(route.data",{"_index":928,"title":{},"body":{"components/CrudComponent.html":{}}}],["messag",{"_index":564,"title":{},"body":{"injectables/AuthGuard.html":{},"components/ErrorComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["message.clos",{"_index":2924,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["met",{"_index":4812,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["method",{"_index":44,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["middl",{"_index":3011,"title":{},"body":{"components/PaginationComponent.html":{},"miscellaneous/variables.html":{}}}],["migrat",{"_index":4022,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":3065,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["minlength",{"_index":4393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minor",{"_index":4653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minu",{"_index":4492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellan",{"_index":4283,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":4340,"title":{},"body":{"index.html":{}}}],["mit",{"_index":3087,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["mkdir",{"_index":4828,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["mmmm",{"_index":1184,"title":{},"body":{"interfaces/Day.html":{}}}],["mobil",{"_index":4494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockup",{"_index":2680,"title":{},"body":{"components/MockupComponent.html":{}}}],["mockup'},{'nam",{"_index":262,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["mockup.component.html",{"_index":2682,"title":{},"body":{"components/MockupComponent.html":{}}}],["mockup.component.scss",{"_index":2681,"title":{},"body":{"components/MockupComponent.html":{}}}],["mockup/mockup.compon",{"_index":3993,"title":{},"body":{"modules/UtilityModule.html":{}}}],["mockupcompon",{"_index":261,"title":{"components/MockupComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["modal",{"_index":3108,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["mode",{"_index":53,"title":{},"body":{"components/AceComponent.html":{},"interfaces/CrudConfig.html":{}}}],["model",{"_index":103,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["model'",{"_index":2694,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{}}}],["model.field",{"_index":846,"title":{},"body":{"classes/Config.html":{}}}],["modelchang",{"_index":2556,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["modelconfig",{"_index":1456,"title":{"interfaces/ModelConfig.html":{}},"body":{"components/EntryListComponent.html":{},"interfaces/ModelConfig.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/data.html":{}}}],["modelconfig.get(&#39;muffin&#39",{"_index":2720,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.get('muffin",{"_index":2737,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set(&#39;muffin&#39",{"_index":2730,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set('muffin",{"_index":2739,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigservic",{"_index":1083,"title":{"injectables/ModelConfigService.html":{}},"body":{"modules/DataModule.html":{},"components/EntryListComponent.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["modelconfigur",{"_index":2792,"title":{"interfaces/ModelConfiguration.html":{}},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["modelid",{"_index":3196,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["modelist.j",{"_index":150,"title":{},"body":{"components/AceComponent.html":{}}}],["modellistcompon",{"_index":4054,"title":{},"body":{"changelog.html":{}}}],["modelresourc",{"_index":1902,"title":{},"body":{"injectables/HistoryService.html":{}}}],["modern",{"_index":4617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modifi",{"_index":996,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["modified'].indexof(key",{"_index":1064,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["modul",{"_index":316,"title":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"modules.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["module'",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["modules.sh",{"_index":4311,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["modulewithprovid",{"_index":603,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{}}}],["moment",{"_index":1133,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["moment'",{"_index":1255,"title":{},"body":{"interfaces/Day.html":{}}}],["moment().startof('day').diff(d",{"_index":1254,"title":{},"body":{"interfaces/Day.html":{}}}],["moment(new",{"_index":3897,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(valu",{"_index":1151,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format('yyyi",{"_index":4793,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["moment(value).format(format",{"_index":3913,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).format(pattern",{"_index":1155,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format(this.symbol.resolve('moment.format.month",{"_index":3915,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).isvalid",{"_index":3894,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.d",{"_index":3876,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.month",{"_index":3881,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.tim",{"_index":3877,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.locale('d",{"_index":4788,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["moment.mo",{"_index":1118,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["money",{"_index":4495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["monorepo",{"_index":4297,"title":{},"body":{"index.html":{}}}],["month",{"_index":1157,"title":{},"body":{"interfaces/Day.html":{}}}],["month'},{'nam",{"_index":264,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["month.compon",{"_index":4057,"title":{},"body":{"changelog.html":{}}}],["month.component.html",{"_index":1170,"title":{},"body":{"interfaces/Day.html":{}}}],["month.component.scss",{"_index":1169,"title":{},"body":{"interfaces/Day.html":{}}}],["monthcompon",{"_index":263,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["monthformat",{"_index":1183,"title":{},"body":{"interfaces/Day.html":{}}}],["more",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/collection.html":{}}}],["mouseout",{"_index":2624,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseov",{"_index":2617,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseover(day",{"_index":1221,"title":{},"body":{"interfaces/Day.html":{}}}],["mouseup(day",{"_index":1220,"title":{},"body":{"interfaces/Day.html":{}}}],["move",{"_index":4067,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ms",{"_index":2021,"title":{},"body":{"components/InputComponent.html":{},"classes/Notification.html":{}}}],["much",{"_index":4121,"title":{},"body":{"changelog.html":{}}}],["muffin",{"_index":2721,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["muffin.entry?.nam",{"_index":1440,"title":{},"body":{"directives/EntryDirective.html":{}}}],["muffin.nam",{"_index":1405,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["muffincompon",{"_index":2846,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["muffins/muffins.compon",{"_index":4782,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinsadd",{"_index":4777,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinscompon",{"_index":4781,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["multi",{"_index":144,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["multipl",{"_index":1585,"title":{},"body":{"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["music",{"_index":4496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mustreload",{"_index":874,"title":{},"body":{"components/CrudComponent.html":{}}}],["mustreload(item",{"_index":899,"title":{},"body":{"components/CrudComponent.html":{}}}],["myapp",{"_index":2304,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["myasset.asset?.assetid",{"_index":399,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.cr",{"_index":404,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.files?.length",{"_index":406,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.tag",{"_index":403,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.titl",{"_index":401,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.typ",{"_index":405,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myclient",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{}}}],["mycompon",{"_index":2828,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["myimage.asset?.assetid",{"_index":1998,"title":{},"body":{"directives/ImageDirective.html":{}}}],["n",{"_index":4883,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["n.resolv",{"_index":4887,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["n.save",{"_index":4886,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["nach",{"_index":4902,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["name",{"_index":87,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["name[0].touppercas",{"_index":4791,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["namespac",{"_index":1851,"title":{},"body":{"injectables/GeocodeService.html":{},"miscellaneous/variables.html":{}}}],["nativ",{"_index":1991,"title":{},"body":{"directives/ImageDirective.html":{}}}],["natur",{"_index":3632,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["navig",{"_index":3528,"title":{},"body":{"components/SearchbarComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["navigationend",{"_index":3743,"title":{},"body":{"components/TabsComponent.html":{}}}],["nearest",{"_index":1843,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["need",{"_index":2855,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SearchbarComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ace.html":{}}}],["nein",{"_index":4898,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["nest",{"_index":502,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["nestedcrudconfig",{"_index":3867,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["nestedpopclass",{"_index":973,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["new",{"_index":71,"title":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["newdat",{"_index":1275,"title":{},"body":{"interfaces/Day.html":{}}}],["newdate.isbetween(this.timespan[0",{"_index":1277,"title":{},"body":{"interfaces/Day.html":{}}}],["newhistori",{"_index":1929,"title":{},"body":{"injectables/HistoryService.html":{}}}],["newtimespan",{"_index":1203,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan.revers",{"_index":1208,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[0].isafter(newtimespan[1",{"_index":1207,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[this.dragged.first",{"_index":1205,"title":{},"body":{"interfaces/Day.html":{}}}],["next",{"_index":499,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"directives/FocusDirective.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"miscellaneous/variables.html":{}}}],["next/prev",{"_index":3550,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["ng",{"_index":4318,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["ng_value_accessor",{"_index":133,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["ngaftercontentinit",{"_index":3732,"title":{},"body":{"components/TabsComponent.html":{}}}],["ngafterviewinit",{"_index":1737,"title":{},"body":{"interfaces/Focus.html":{},"components/LocationSearchComponent.html":{},"components/PaginationComponent.html":{},"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{}}}],["ngif",{"_index":471,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["ngmodel",{"_index":4083,"title":{},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["ngmodul",{"_index":328,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["ngonchang",{"_index":46,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{}}}],["ngonchanges(chang",{"_index":1226,"title":{},"body":{"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{}}}],["ngondestroy",{"_index":2555,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ngoninit",{"_index":47,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ngx",{"_index":606,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/SelectModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["ngzone",{"_index":1830,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationSearchComponent.html":{}}}],["nicht",{"_index":586,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["niedrig",{"_index":4896,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["noapi",{"_index":3455,"title":{},"body":{"injectables/SdkService.html":{}}}],["noapi(api",{"_index":3468,"title":{},"body":{"injectables/SdkService.html":{}}}],["noclientid",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{}}}],["noconflict/ace.j",{"_index":137,"title":{},"body":{"components/AceComponent.html":{}}}],["noconflict/ace.js';when",{"_index":4850,"title":{},"body":{"additional-documentation/ace.html":{}}}],["node_modul",{"_index":4302,"title":{},"body":{"index.html":{}}}],["node_modules/@ec.components/**/*.spec.t",{"_index":4353,"title":{},"body":{"index.html":{}}}],["node_modules/@ec.components/**/*.t",{"_index":4354,"title":{},"body":{"index.html":{}}}],["node_modules/@ec.components/data/src/auth/auth.service.t",{"_index":4338,"title":{},"body":{"index.html":{}}}],["non",{"_index":3684,"title":{},"body":{"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}}}],["none",{"_index":2252,"title":{},"body":{"components/ListItemsComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["normal",{"_index":431,"title":{},"body":{"components/AssetListPopComponent.html":{},"directives/DropzoneDirective.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":3062,"title":{},"body":{"classes/PaginationConfig.html":{},"miscellaneous/variables.html":{}}}],["noth",{"_index":3658,"title":{},"body":{"interfaces/Symbol.html":{}}}],["notif",{"_index":570,"title":{"classes/Notification.html":{}},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notification(notif",{"_index":2911,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notification.append",{"_index":2867,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.append.push(notif",{"_index":2868,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.component.t",{"_index":2857,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notification.error",{"_index":2815,"title":{},"body":{"classes/Notification.html":{}}}],["notification.hid",{"_index":2862,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.host",{"_index":2872,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.messag",{"_index":2865,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.replac",{"_index":2869,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.length",{"_index":2870,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.push(notif",{"_index":2871,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.sticki",{"_index":2874,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.tim",{"_index":2875,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.titl",{"_index":2864,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationcompon",{"_index":2795,"title":{},"body":{"classes/Notification.html":{}}}],["notifications'},{'nam",{"_index":266,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["notifications.compon",{"_index":2814,"title":{},"body":{"classes/Notification.html":{},"modules/NotificationsModule.html":{}}}],["notifications.component.html",{"_index":2822,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":2821,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.interfac",{"_index":923,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/UploadComponent.html":{}}}],["notifications.interface.t",{"_index":4012,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["notifications.servic",{"_index":2858,"title":{},"body":{"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{}}}],["notifications/notifications.modul",{"_index":3920,"title":{},"body":{"modules/UiModule.html":{}}}],["notificationscompon",{"_index":265,"title":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notificationservic",{"_index":877,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notificationservice.$emitt",{"_index":2819,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationsmodul",{"_index":2878,"title":{"modules/NotificationsModule.html":{}},"body":{"modules/NotificationsModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationsservic",{"_index":571,"title":{"injectables/NotificationsService.html":{}},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["now",{"_index":3476,"title":{},"body":{"injectables/SdkService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{}}}],["npm",{"_index":4300,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{}}}],["nr",{"_index":4876,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["nth",{"_index":2543,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["null",{"_index":822,"title":{},"body":{"classes/Collection.html":{},"injectables/CrudService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":382,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["numbers.add(4",{"_index":783,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.addall([5",{"_index":786,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has(2",{"_index":791,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has([1,2",{"_index":794,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.remove(4",{"_index":800,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.removeal",{"_index":803,"title":{},"body":{"classes/Collection.html":{}}}],["numer",{"_index":3635,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/variables.html":{}}}],["numlist",{"_index":4678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oauth",{"_index":3230,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object",{"_index":436,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["object.assign",{"_index":848,"title":{},"body":{"classes/Config.html":{},"modules/DataModule.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/TinymceComponent.html":{}}}],["object.assign(componentref.inst",{"_index":1375,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["object.assign(config",{"_index":2755,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["object.assign(entri",{"_index":1057,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["object.assign(resourc",{"_index":3429,"title":{},"body":{"injectables/ResourceService.html":{}}}],["object.assign(thi",{"_index":1618,"title":{},"body":{"classes/Field.html":{},"classes/Notification.html":{},"classes/PaginationConfig.html":{}}}],["object.assign(this.config",{"_index":1513,"title":{},"body":{"components/EntryListComponent.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{}}}],["object.assign(this.config[key][properti",{"_index":856,"title":{},"body":{"classes/Config.html":{}}}],["object.assign(this.stringfield('model",{"_index":3197,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.assign(this.stringfield('nam",{"_index":3185,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.assign(this.tagsfield('right",{"_index":3193,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.assign(this.types[typ",{"_index":3911,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["object.keys(defaultconfig).foreach(properti",{"_index":2754,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(filt",{"_index":1039,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(item.config.fields).reduce((equ",{"_index":937,"title":{},"body":{"components/CrudComponent.html":{}}}],["object.keys(permiss",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{}}}],["object.keys(schema.properti",{"_index":2767,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(this.config[relationnam",{"_index":3170,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.keys(this.control.errors).reduce((err",{"_index":2080,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["object.keys(this.sets).length",{"_index":3693,"title":{},"body":{"injectables/SymbolService.html":{}}}],["object.keys(value).foreach((key",{"_index":1054,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(variables).foreach((key",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["observ",{"_index":486,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"injectables/GeocodeService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/core-classes.html":{}}}],["observable(observ",{"_index":1852,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observable.throw(err",{"_index":2532,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["observeel",{"_index":1827,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observeelement(el",{"_index":1844,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complet",{"_index":1866,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(coord",{"_index":1865,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["obsolet",{"_index":2852,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["ok",{"_index":1874,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["old",{"_index":1053,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["oldvalu",{"_index":1052,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["oldvalues[key",{"_index":1055,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["omit",{"_index":169,"title":{},"body":{"components/AceComponent.html":{},"injectables/ModelConfigService.html":{}}}],["omittedfield",{"_index":2700,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["on",{"_index":1470,"title":{},"body":{"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["onchang",{"_index":21,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{}}}],["onclick",{"_index":4682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ondestroy",{"_index":2552,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ondragleave(",{"_index":1342,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondragover(",{"_index":1332,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondrop(",{"_index":1337,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["onsav",{"_index":2098,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/core-classes/item.html":{}}}],["onsubmit",{"_index":2475,"title":{},"body":{"components/LoginFormComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":976,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["openid",{"_index":3220,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["openinghour",{"_index":4810,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["openinghourscompon",{"_index":4818,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["oper",{"_index":1479,"title":{},"body":{"components/EntryListComponent.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"injectables/ModelConfigService.html":{},"classes/Sorter.html":{},"interfaces/WithLoader.html":{}}}],["optim",{"_index":4031,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":88,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/selection.html":{}}}],["options](https://github.com/yabwe/medium",{"_index":2574,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["order",{"_index":4855,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["origin",{"_index":3389,"title":{},"body":{"classes/ResourceForm.html":{}}}],["other",{"_index":2223,"title":{},"body":{"components/ListHeaderComponent.html":{},"classes/Notification.html":{}}}],["otherwis",{"_index":1030,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["ouput",{"_index":2027,"title":{},"body":{"components/InputComponent.html":{}}}],["out",{"_index":325,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"components/ToolbarComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["outbox",{"_index":4498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["outdir",{"_index":4348,"title":{},"body":{"index.html":{}}}],["outlin",{"_index":4568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["output",{"_index":371,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/list.html":{}}}],["output'},{'nam",{"_index":211,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["output('toggl",{"_index":3114,"title":{},"body":{"components/PopComponent.html":{}}}],["output.compon",{"_index":1095,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["output.component.html",{"_index":1286,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.scss",{"_index":1298,"title":{},"body":{"components/DefaultOutputComponent.html":{},"components/OutputComponent.html":{}}}],["output.component.t",{"_index":1285,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["output.component.ts:12",{"_index":1287,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{}}}],["output.component.ts:13",{"_index":1299,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["output.component.ts:14",{"_index":1288,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{}}}],["output.component.ts:15",{"_index":1300,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["output/default",{"_index":1297,"title":{},"body":{"components/DefaultOutputComponent.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["output/output.compon",{"_index":2090,"title":{},"body":{"modules/IoModule.html":{}}}],["outputcompon",{"_index":267,"title":{"components/OutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["outsid",{"_index":102,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"directives/SlotHostDirective.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["over",{"_index":2078,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["overrid",{"_index":1487,"title":{},"body":{"components/EntryListComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/core-classes/selection.html":{}}}],["overridden",{"_index":2533,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["overriden",{"_index":2699,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SymbolService.html":{}}}],["overview",{"_index":4365,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/ui.html":{},"additional-documentation/data.html":{}}}],["overwritten",{"_index":2507,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["p",{"_index":4662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img",{"_index":4671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p.method",{"_index":3261,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["packag",{"_index":4016,"title":{"dependencies.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{}}}],["package.json",{"_index":4762,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["packages/.../ace.component.t",{"_index":4371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../auth.module.t",{"_index":4284,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../ec",{"_index":4374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../editor.component.t",{"_index":4373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../email",{"_index":4376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../email.validator.t",{"_index":4377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../emoji",{"_index":4378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../errors.t",{"_index":4372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../field",{"_index":4379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../geocode.service.t",{"_index":4380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../location.module.t",{"_index":4381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../notifications.service.t",{"_index":4382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../sorter.t",{"_index":4285,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/.../tinymc",{"_index":4375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/ace/src/ace.component.t",{"_index":9,"title":{},"body":{"components/AceComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ace/src/ace.component.ts:103",{"_index":100,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:113",{"_index":115,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:117",{"_index":82,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:121",{"_index":90,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:26",{"_index":109,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:30",{"_index":120,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:34",{"_index":117,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:36",{"_index":111,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:40",{"_index":107,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:44",{"_index":67,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:48",{"_index":68,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:51",{"_index":69,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:76",{"_index":92,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:85",{"_index":97,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:94",{"_index":80,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:98",{"_index":78,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.module.t",{"_index":326,"title":{},"body":{"modules/AceModule.html":{}}}],["packages/cor",{"_index":4317,"title":{},"body":{"index.html":{}}}],["packages/core/src/collection/collection.t",{"_index":757,"title":{},"body":{"classes/Collection.html":{},"coverage.html":{}}}],["packages/core/src/collection/collection.ts:107",{"_index":799,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:11",{"_index":773,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:124",{"_index":802,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:13",{"_index":776,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:139",{"_index":805,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:15",{"_index":768,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:152",{"_index":797,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:32",{"_index":796,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:43",{"_index":790,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:54",{"_index":793,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:72",{"_index":780,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:90",{"_index":785,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/config/config.t",{"_index":835,"title":{},"body":{"classes/Config.html":{},"coverage.html":{}}}],["packages/core/src/config/config.ts:13",{"_index":840,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/config/config.ts:5",{"_index":838,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/config/field",{"_index":1625,"title":{},"body":{"interfaces/FieldConfig.html":{},"coverage.html":{}}}],["packages/core/src/field/field.t",{"_index":1536,"title":{},"body":{"classes/Field.html":{},"coverage.html":{}}}],["packages/core/src/field/field.ts:11",{"_index":1559,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:13",{"_index":1576,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:15",{"_index":1579,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:17",{"_index":1577,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:19",{"_index":1564,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:21",{"_index":1569,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:23",{"_index":1570,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:25",{"_index":1565,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:27",{"_index":1551,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:29",{"_index":1555,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:31",{"_index":1556,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:33",{"_index":1578,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:35",{"_index":1549,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:37",{"_index":1563,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:39",{"_index":1575,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:41",{"_index":1550,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:43",{"_index":1566,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:45",{"_index":1561,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:47",{"_index":1547,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:59",{"_index":1580,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:7",{"_index":1573,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:9",{"_index":1571,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/form/form",{"_index":1750,"title":{},"body":{"interfaces/FormConfig.html":{},"coverage.html":{}}}],["packages/core/src/form/form.t",{"_index":4139,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/item/item",{"_index":2094,"title":{},"body":{"interfaces/ItemConfig.html":{},"coverage.html":{}}}],["packages/core/src/item/item.t",{"_index":4142,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/list/list",{"_index":2190,"title":{},"body":{"interfaces/ListConfig.html":{},"coverage.html":{}}}],["packages/core/src/list/list.t",{"_index":4146,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/pagination/pagination.t",{"_index":2931,"title":{},"body":{"classes/Pagination.html":{},"coverage.html":{}}}],["packages/core/src/pagination/pagination.ts:10",{"_index":2942,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:107",{"_index":2950,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:112",{"_index":2951,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:117",{"_index":2952,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:12",{"_index":2943,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:125",{"_index":2966,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:130",{"_index":2957,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:14",{"_index":2940,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:142",{"_index":2969,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:16",{"_index":2938,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:34",{"_index":2947,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:39",{"_index":2948,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:44",{"_index":2956,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:53",{"_index":2958,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:64",{"_index":2962,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:77",{"_index":2955,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:8",{"_index":2944,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:85",{"_index":2960,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:93",{"_index":2946,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:98",{"_index":2953,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/selection/selection.t",{"_index":4149,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/sorter/sorter.t",{"_index":3618,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/core/src/sorter/sorter.ts:25",{"_index":3625,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/sorter/sorter.ts:32",{"_index":3627,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/sorter/sorter.ts:62",{"_index":3630,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/data/src/auth/auth",{"_index":557,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["packages/data/src/auth/auth.module.t",{"_index":600,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/data/src/auth/auth.service.t",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["packages/data/src/auth/auth.service.ts:114",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:136",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:148",{"_index":673,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:158",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:172",{"_index":674,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:26",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:33",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:47",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:59",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:68",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:75",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:83",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/email",{"_index":4156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/data/src/auth/errors.t",{"_index":4158,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/data/src/auth/login/login.component.t",{"_index":2442,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["packages/data/src/auth/login/login.component.ts:20",{"_index":2450,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:22",{"_index":2451,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:24",{"_index":2455,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:26",{"_index":2448,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:28",{"_index":2454,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:29",{"_index":2456,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:30",{"_index":2457,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:33",{"_index":2452,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/password",{"_index":3066,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud",{"_index":962,"title":{},"body":{"interfaces/CrudConfig.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud.component.t",{"_index":857,"title":{},"body":{"components/CrudComponent.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud.component.ts:113",{"_index":904,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:125",{"_index":890,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:36",{"_index":885,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:38",{"_index":884,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:40",{"_index":886,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:42",{"_index":906,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:44",{"_index":905,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:46",{"_index":908,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:48",{"_index":888,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:50",{"_index":889,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:52",{"_index":881,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:59",{"_index":910,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:60",{"_index":909,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:71",{"_index":902,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:79",{"_index":895,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:84",{"_index":900,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:91",{"_index":897,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.service.t",{"_index":995,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud.service.ts:112",{"_index":1018,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:29",{"_index":1006,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:36",{"_index":1024,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:42",{"_index":1008,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:50",{"_index":1028,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:63",{"_index":1032,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:78",{"_index":1020,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:84",{"_index":1012,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:99",{"_index":1015,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/data.module.t",{"_index":1085,"title":{},"body":{"modules/DataModule.html":{}}}],["packages/data/src/entri",{"_index":330,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/EntryListComponent.html":{},"coverage.html":{}}}],["packages/data/src/entries/entries.directive.t",{"_index":1376,"title":{},"body":{"directives/EntriesDirective.html":{},"coverage.html":{}}}],["packages/data/src/entries/entries.directive.ts:100",{"_index":1393,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:21",{"_index":1404,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:23",{"_index":1390,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:25",{"_index":1392,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:27",{"_index":1388,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:29",{"_index":1385,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:31",{"_index":1389,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:33",{"_index":1403,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:34",{"_index":1384,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:41",{"_index":1399,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:54",{"_index":1397,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:63",{"_index":1402,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:74",{"_index":1398,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:81",{"_index":1400,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:88",{"_index":1396,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:92",{"_index":1395,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entry/entry.directive.t",{"_index":1428,"title":{},"body":{"directives/EntryDirective.html":{},"coverage.html":{}}}],["packages/data/src/entry/entry.directive.ts:18",{"_index":1439,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:20",{"_index":1432,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:22",{"_index":1435,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:24",{"_index":1431,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:26",{"_index":1433,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:28",{"_index":1436,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:30",{"_index":1434,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:32",{"_index":1430,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:39",{"_index":1438,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:47",{"_index":1437,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/files/asset",{"_index":426,"title":{},"body":{"components/AssetListPopComponent.html":{},"coverage.html":{}}}],["packages/data/src/files/asset/asset.directive.t",{"_index":364,"title":{},"body":{"directives/AssetDirective.html":{},"coverage.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:13",{"_index":395,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:15",{"_index":377,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:17",{"_index":381,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:19",{"_index":380,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:21",{"_index":383,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:23",{"_index":376,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:25",{"_index":387,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:27",{"_index":372,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:30",{"_index":396,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:34",{"_index":393,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:45",{"_index":389,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/assetgroup",{"_index":540,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"coverage.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.t",{"_index":1305,"title":{},"body":{"directives/DropzoneDirective.html":{},"coverage.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:11",{"_index":1319,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:13",{"_index":1327,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:24",{"_index":1329,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:37",{"_index":1324,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:46",{"_index":1316,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:7",{"_index":1321,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:9",{"_index":1320,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/file.service.t",{"_index":1628,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["packages/data/src/files/file.service.ts:115",{"_index":1719,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:148",{"_index":1716,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:185",{"_index":1713,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:49",{"_index":1720,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:51",{"_index":1712,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:61",{"_index":1715,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:74",{"_index":1714,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:94",{"_index":1718,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/files.module.t",{"_index":1726,"title":{},"body":{"modules/FilesModule.html":{}}}],["packages/data/src/files/image/image.directive.t",{"_index":1973,"title":{},"body":{"directives/ImageDirective.html":{},"coverage.html":{}}}],["packages/data/src/files/image/image.directive.ts:15",{"_index":1988,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:17",{"_index":1986,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:19",{"_index":1983,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:21",{"_index":1982,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:23",{"_index":1997,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:28",{"_index":1992,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:40",{"_index":1989,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:44",{"_index":1996,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:61",{"_index":1994,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/upload/upload.component.t",{"_index":3922,"title":{},"body":{"components/UploadComponent.html":{},"coverage.html":{}}}],["packages/data/src/files/upload/upload.component.ts:100",{"_index":3947,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:132",{"_index":3942,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:18",{"_index":3949,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:19",{"_index":3954,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:20",{"_index":3952,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:22",{"_index":3934,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:24",{"_index":3932,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:26",{"_index":3930,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:28",{"_index":3931,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:30",{"_index":3933,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:37",{"_index":3929,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:39",{"_index":3937,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:41",{"_index":3935,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:43",{"_index":3950,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:45",{"_index":3953,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:47",{"_index":3928,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:56",{"_index":3945,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:66",{"_index":3944,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:72",{"_index":3939,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:80",{"_index":3940,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:87",{"_index":3948,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/model",{"_index":2693,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["packages/data/src/resourc",{"_index":3139,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"coverage.html":{}}}],["packages/data/src/resource/resource.module.t",{"_index":3399,"title":{},"body":{"modules/ResourceModule.html":{}}}],["packages/data/src/sdk/history.service.t",{"_index":1889,"title":{},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["packages/data/src/sdk/history.service.ts:14",{"_index":1912,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:16",{"_index":1895,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:19",{"_index":1911,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:20",{"_index":1910,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:21",{"_index":1915,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:22",{"_index":1914,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:24",{"_index":1907,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:40",{"_index":1897,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:50",{"_index":1903,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/sdk.module.t",{"_index":3448,"title":{},"body":{"modules/SdkModule.html":{}}}],["packages/data/src/sdk/sdk.service.t",{"_index":3450,"title":{},"body":{"injectables/SdkService.html":{},"coverage.html":{}}}],["packages/data/src/sdk/sdk.service.ts:100",{"_index":3471,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:110",{"_index":3462,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:121",{"_index":3459,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:133",{"_index":3469,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:30",{"_index":3475,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:32",{"_index":3480,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:33",{"_index":3485,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:43",{"_index":3482,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:45",{"_index":3474,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:47",{"_index":3473,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:49",{"_index":3486,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:56",{"_index":3488,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:61",{"_index":3477,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:63",{"_index":3483,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:65",{"_index":3481,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:72",{"_index":3458,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:75",{"_index":3478,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:80",{"_index":3466,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/location/src/geocode.service.t",{"_index":1821,"title":{},"body":{"injectables/GeocodeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/location/src/geocode.service.ts:12",{"_index":1831,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:18",{"_index":1845,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:43",{"_index":1834,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:49",{"_index":1837,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:62",{"_index":1842,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/loc",{"_index":2345,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["packages/location/src/location.module.t",{"_index":2379,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/medium",{"_index":2547,"title":{},"body":{"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["packages/tinymce/src/tinymce.module.t",{"_index":3828,"title":{},"body":{"modules/TinymceModule.html":{}}}],["packages/tinymce/src/tinymce/tinymc",{"_index":4217,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.t",{"_index":3765,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:108",{"_index":3781,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:117",{"_index":3784,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:127",{"_index":3787,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:129",{"_index":3782,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:133",{"_index":3783,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:53",{"_index":3788,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:55",{"_index":3786,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:57",{"_index":3785,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:59",{"_index":3789,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:61",{"_index":3777,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:63",{"_index":3778,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:65",{"_index":3779,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:67",{"_index":3772,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:83",{"_index":3780,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/ui/src/form/datetime/calendar.component.t",{"_index":4221,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/datetime/daterange.component.t",{"_index":4224,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/datetime/datetime.component.t",{"_index":1107,"title":{},"body":{"components/DatetimeComponent.html":{},"coverage.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:25",{"_index":1119,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:27",{"_index":1121,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:29",{"_index":1127,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:31",{"_index":1130,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:33",{"_index":1120,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:35",{"_index":1123,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:38",{"_index":1126,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:43",{"_index":1128,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:47",{"_index":1124,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:52",{"_index":1125,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.pipe.t",{"_index":1140,"title":{},"body":{"pipes/DatetimePipe.html":{},"coverage.html":{}}}],["packages/ui/src/form/datetime/datetime.pipe.ts:12",{"_index":1147,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["packages/ui/src/form/datetime/heatmap.component.t",{"_index":4227,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/datetime/month.component.t",{"_index":1156,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["packages/ui/src/form/default",{"_index":1291,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/form/form.component.t",{"_index":4231,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/form.module.t",{"_index":1767,"title":{},"body":{"modules/FormModule.html":{}}}],["packages/ui/src/form/form.service.t",{"_index":1784,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["packages/ui/src/form/form.service.ts:18",{"_index":1793,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:31",{"_index":1791,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:38",{"_index":1795,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:50",{"_index":1799,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/max",{"_index":2540,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/form/toggle/toggle.component.t",{"_index":3830,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:20",{"_index":3841,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:22",{"_index":3834,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:25",{"_index":3838,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:30",{"_index":3839,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:34",{"_index":3840,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:37",{"_index":3835,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:41",{"_index":3836,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/vis",{"_index":4001,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/icon/ec",{"_index":4233,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/icon/emoji",{"_index":4235,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/icon/icon.component.t",{"_index":1936,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["packages/ui/src/icon/icon.component.ts:13",{"_index":1943,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/icon/icon.component.ts:15",{"_index":1942,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/icon/icon.component.ts:19",{"_index":1944,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/icon/icon.module.t",{"_index":1967,"title":{},"body":{"modules/IconModule.html":{}}}],["packages/ui/src/icon/icon.service.t",{"_index":1969,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{}}}],["packages/ui/src/icon/icon.service.ts:9",{"_index":1971,"title":{},"body":{"injectables/IconService.html":{}}}],["packages/ui/src/io/dynam",{"_index":1343,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/input",{"_index":2067,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/input/input.component.t",{"_index":2015,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/input/input.component.ts:23",{"_index":2024,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:25",{"_index":2020,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:27",{"_index":2029,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:29",{"_index":2022,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:31",{"_index":2023,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:33",{"_index":2026,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:35",{"_index":2025,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:37",{"_index":2018,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:40",{"_index":2035,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:42",{"_index":2030,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:73",{"_index":2033,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:79",{"_index":2043,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:83",{"_index":2031,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:87",{"_index":2032,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/io.module.t",{"_index":2089,"title":{},"body":{"modules/IoModule.html":{}}}],["packages/ui/src/io/output/output.component.t",{"_index":2926,"title":{},"body":{"components/OutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/output/output.component.ts:15",{"_index":2927,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/io/output/output.component.ts:17",{"_index":2928,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/io/output/output.component.ts:21",{"_index":2929,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/io/slot",{"_index":3610,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["packages/ui/src/list/group.pipe.t",{"_index":1884,"title":{},"body":{"pipes/GroupPipe.html":{},"coverage.html":{}}}],["packages/ui/src/list/group.pipe.ts:10",{"_index":1886,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["packages/ui/src/list/list",{"_index":2207,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/list.component.t",{"_index":2108,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/list.component.ts:100",{"_index":2141,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:24",{"_index":2145,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:27",{"_index":2121,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:29",{"_index":2122,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:31",{"_index":2120,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:33",{"_index":2125,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:35",{"_index":2126,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:37",{"_index":2127,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:39",{"_index":2128,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:41",{"_index":2123,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:43",{"_index":2124,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:47",{"_index":2136,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:68",{"_index":2130,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:76",{"_index":2143,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:82",{"_index":2139,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:90",{"_index":2140,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.module.t",{"_index":2270,"title":{},"body":{"modules/ListModule.html":{}}}],["packages/ui/src/list/pagination/pagin",{"_index":3054,"title":{},"body":{"classes/PaginationConfig.html":{},"coverage.html":{}}}],["packages/ui/src/list/pagination/pagination.component.t",{"_index":2996,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:16",{"_index":3003,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:18",{"_index":3014,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:20",{"_index":3018,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:22",{"_index":3016,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:24",{"_index":3002,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:28",{"_index":3009,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:33",{"_index":3008,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:45",{"_index":3006,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:50",{"_index":3010,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:64",{"_index":3005,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:69",{"_index":3013,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.t",{"_index":3525,"title":{},"body":{"components/SearchbarComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:108",{"_index":3549,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:19",{"_index":3544,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:21",{"_index":3542,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:23",{"_index":3546,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:25",{"_index":3545,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:27",{"_index":3539,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:29",{"_index":3562,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:31",{"_index":3541,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:33",{"_index":3563,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:35",{"_index":3564,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:37",{"_index":3543,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:39",{"_index":3537,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:41",{"_index":3566,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:66",{"_index":3551,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:71",{"_index":3560,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:78",{"_index":3557,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:87",{"_index":3553,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/loader/loader.component.t",{"_index":2278,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["packages/ui/src/loader/loader.component.ts:14",{"_index":2296,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:16",{"_index":2297,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:18",{"_index":2289,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:25",{"_index":2291,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:31",{"_index":2290,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:38",{"_index":2293,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.module.t",{"_index":2336,"title":{},"body":{"modules/LoaderModule.html":{}}}],["packages/ui/src/loader/loader.service.t",{"_index":2339,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["packages/ui/src/loader/loader.service.ts:11",{"_index":2341,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/loader/loader.service.ts:16",{"_index":2342,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/loader/loader.service.ts:8",{"_index":2343,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/loader/with",{"_index":4008,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/error/error.component.t",{"_index":1518,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:12",{"_index":1521,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:18",{"_index":1523,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:22",{"_index":1522,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:26",{"_index":1524,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/notification.t",{"_index":2794,"title":{},"body":{"classes/Notification.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/notification.ts:10",{"_index":2803,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:12",{"_index":2810,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:14",{"_index":2807,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:16",{"_index":2813,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:18",{"_index":2800,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:20",{"_index":2801,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:22",{"_index":2799,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:24",{"_index":2797,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:6",{"_index":2811,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:8",{"_index":2804,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notifications.component.t",{"_index":2817,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/notifications.component.ts:20",{"_index":2824,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/notifications/notifications.component.ts:22",{"_index":2823,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/notifications/notifications.module.t",{"_index":2884,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["packages/ui/src/notifications/notifications.service.t",{"_index":2887,"title":{},"body":{"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:22",{"_index":2905,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:24",{"_index":2907,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:26",{"_index":2894,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:34",{"_index":2901,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:45",{"_index":2903,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:58",{"_index":2896,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/with",{"_index":4011,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["packages/ui/src/pop/pop.component.t",{"_index":3096,"title":{},"body":{"components/PopComponent.html":{},"coverage.html":{}}}],["packages/ui/src/pop/pop.component.ts:18",{"_index":3102,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:20",{"_index":3103,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:23",{"_index":3104,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:25",{"_index":3101,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:31",{"_index":3107,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:43",{"_index":3106,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:52",{"_index":3105,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.module.t",{"_index":3124,"title":{},"body":{"modules/PopModule.html":{}}}],["packages/ui/src/pop/pop.service.t",{"_index":3125,"title":{},"body":{"injectables/PopService.html":{},"coverage.html":{}}}],["packages/ui/src/pop/pop.service.ts:9",{"_index":3129,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/select/select.component.t",{"_index":4245,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/select/select.module.t",{"_index":3608,"title":{},"body":{"modules/SelectModule.html":{}}}],["packages/ui/src/symbol/symbol.interface.t",{"_index":3657,"title":{},"body":{"interfaces/Symbol.html":{},"coverage.html":{}}}],["packages/ui/src/symbol/symbol.module.t",{"_index":3663,"title":{},"body":{"modules/SymbolModule.html":{}}}],["packages/ui/src/symbol/symbol.pipe.t",{"_index":3667,"title":{},"body":{"injectables/SymbolPipe.html":{},"coverage.html":{}}}],["packages/ui/src/symbol/symbol.pipe.ts:21",{"_index":3669,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["packages/ui/src/symbol/symbol.service.t",{"_index":3673,"title":{},"body":{"injectables/SymbolService.html":{},"coverage.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:10",{"_index":3691,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:12",{"_index":3676,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:18",{"_index":3686,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:23",{"_index":3688,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:31",{"_index":3678,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:36",{"_index":3680,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:46",{"_index":3682,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:9",{"_index":3689,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/ui.module.t",{"_index":3919,"title":{},"body":{"modules/UiModule.html":{}}}],["packages/ui/src/utility/focus/focus.directive.t",{"_index":1739,"title":{},"body":{"directives/FocusDirective.html":{},"coverage.html":{}}}],["packages/ui/src/utility/focus/focus.directive.ts:13",{"_index":1742,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/utility/focus/focus.directive.ts:8",{"_index":1741,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/utility/focus/focus.interface.t",{"_index":1735,"title":{},"body":{"interfaces/Focus.html":{},"coverage.html":{}}}],["packages/ui/src/utility/focus/focus.interface.ts:6",{"_index":1738,"title":{},"body":{"interfaces/Focus.html":{}}}],["packages/ui/src/utility/login",{"_index":2466,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/menu/menu.component.t",{"_index":2591,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:102",{"_index":2637,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:15",{"_index":2622,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:17",{"_index":2621,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:19",{"_index":2623,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:21",{"_index":2620,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:23",{"_index":2616,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:25",{"_index":2626,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:27",{"_index":2619,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:29",{"_index":2649,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:31",{"_index":2610,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:38",{"_index":2648,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:47",{"_index":2639,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:52",{"_index":2647,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:58",{"_index":2645,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:63",{"_index":2634,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:68",{"_index":2630,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:73",{"_index":2632,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:78",{"_index":2642,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:88",{"_index":2627,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:95",{"_index":2643,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/mockup/mockup.component.t",{"_index":2677,"title":{},"body":{"components/MockupComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/tab/tab.component.t",{"_index":3706,"title":{},"body":{"components/TabComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:12",{"_index":3713,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:14",{"_index":3715,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:16",{"_index":3714,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:18",{"_index":3716,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:20",{"_index":3717,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:22",{"_index":3711,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:25",{"_index":3721,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:28",{"_index":3718,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:33",{"_index":3719,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.t",{"_index":3725,"title":{},"body":{"components/TabsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:15",{"_index":3742,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:17",{"_index":3734,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:28",{"_index":3740,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:39",{"_index":3735,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:49",{"_index":3736,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:54",{"_index":3738,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/utility.module.t",{"_index":3990,"title":{},"body":{"modules/UtilityModule.html":{}}}],["packages/ui/src/utility/validators/email.validator.t",{"_index":4252,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/utility/validators/field",{"_index":4254,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/vc/src/editor/editor.component.t",{"_index":4256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/vc/src/saf",{"_index":3435,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["packages/vc/src/toolbar/toolbar.component.t",{"_index":3842,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["packages/vc/src/toolbar/toolbar.component.ts:13",{"_index":3849,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["packages/vc/src/toolbar/toolbar.component.ts:17",{"_index":3851,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["packages/vc/src/toolbar/toolbar.component.ts:24",{"_index":3855,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["packages/vc/src/toolbar/toolbar.component.ts:29",{"_index":3853,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["packages/vc/src/vc.module.t",{"_index":3998,"title":{},"body":{"modules/VcModule.html":{}}}],["pad",{"_index":4453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page",{"_index":577,"title":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}},"body":{"injectables/AuthGuard.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["page!==1",{"_index":1411,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["pagecontain",{"_index":2999,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagin",{"_index":2201,"title":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}},"body":{"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["pagination'},{'nam",{"_index":269,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["pagination.component.html",{"_index":2998,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.component.scss",{"_index":2997,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.first",{"_index":3042,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.getpag",{"_index":2972,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["pagination.last",{"_index":3046,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.next",{"_index":3045,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.of",{"_index":3049,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.params().from",{"_index":3047,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.params().to",{"_index":3048,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.params().tot",{"_index":3050,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.prev",{"_index":3043,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.s",{"_index":3053,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.settotal(50",{"_index":2971,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["pagination/pagin",{"_index":2163,"title":{},"body":{"components/ListComponent.html":{}}}],["pagination/pagination.compon",{"_index":2276,"title":{},"body":{"modules/ListModule.html":{}}}],["paginationcompon",{"_index":268,"title":{"components/PaginationComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginationconfig",{"_index":2119,"title":{"classes/PaginationConfig.html":{}},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"changelog.html":{},"coverage.html":{}}}],["paginationconfig(this.config",{"_index":3023,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paint",{"_index":4499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["palett",{"_index":4443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paperclip",{"_index":4503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paperplan",{"_index":4504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paragraph",{"_index":4505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":2934,"title":{},"body":{"classes/Pagination.html":{},"classes/Sorter.html":{}}}],["paramet",{"_index":86,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":814,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/collection.html":{}}}],["parent.getpath(item",{"_index":2658,"title":{},"body":{"components/MenuComponent.html":{}}}],["parent=0",{"_index":2635,"title":{},"body":{"components/MenuComponent.html":{}}}],["pars",{"_index":2726,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["parsetyp",{"_index":2705,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["parsetype(typ",{"_index":2724,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["part",{"_index":470,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["pass",{"_index":1904,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/item.html":{}}}],["password",{"_index":271,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["passwordlabel",{"_index":2481,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["passwordplacehold",{"_index":2482,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["passwordresetcompon",{"_index":270,"title":{"components/PasswordResetComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["passwort",{"_index":2497,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{}}}],["past",{"_index":3531,"title":{},"body":{"components/SearchbarComponent.html":{},"miscellaneous/variables.html":{}}}],["paste_as_text",{"_index":4636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":1496,"title":{},"body":{"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ItemConfig.html":{},"components/MenuComponent.html":{},"components/TabsComponent.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["paths[paths.length",{"_index":3752,"title":{},"body":{"components/TabsComponent.html":{}}}],["pattern",{"_index":1145,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["pattern[0",{"_index":1154,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["paus",{"_index":4565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pen",{"_index":4507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pencil",{"_index":4428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pend",{"_index":3228,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{}}}],["per",{"_index":2205,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["percent",{"_index":4508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["peripher",{"_index":2248,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["permiss",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceConfig.html":{},"changelog.html":{}}}],["permissions[method",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["pflichtfeld",{"_index":4391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phone",{"_index":3892,"title":{},"body":{"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["photo",{"_index":4510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pick",{"_index":463,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/LocationPickerComponent.html":{}}}],["picker",{"_index":2393,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker'},{'nam",{"_index":248,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["picker.compon",{"_index":2385,"title":{},"body":{"modules/LocationModule.html":{}}}],["picker.component.html",{"_index":2395,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.scss",{"_index":2394,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.t",{"_index":2392,"title":{},"body":{"components/LocationPickerComponent.html":{},"coverage.html":{}}}],["picker.component.ts:24",{"_index":2400,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:26",{"_index":2401,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:28",{"_index":2410,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:30",{"_index":2412,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:32",{"_index":2399,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:35",{"_index":2409,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:41",{"_index":2405,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:56",{"_index":2408,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:62",{"_index":2406,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:78",{"_index":2411,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:80",{"_index":2402,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:84",{"_index":2403,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["pictur",{"_index":4513,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["pie",{"_index":4423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pin",{"_index":4432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":1138,"title":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/SafeHtmlPipe.html":{},"pipes/VisibleFieldsPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(distinctuntilchang",{"_index":3577,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["pipe(switchmap",{"_index":1868,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["pipetransform",{"_index":1149,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["place",{"_index":1856,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/NotificationsComponent.html":{},"components/TabComponent.html":{},"index.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["place.geometri",{"_index":1859,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lat",{"_index":1862,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lng",{"_index":1864,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["placehold",{"_index":545,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/DatetimeComponent.html":{},"classes/Field.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PasswordResetComponent.html":{},"components/SearchbarComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["plan",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"miscellaneous/variables.html":{}}}],["platform",{"_index":3241,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["platformid",{"_index":3242,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["platformtyp",{"_index":3244,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["play",{"_index":4566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pleas",{"_index":4342,"title":{},"body":{"index.html":{}}}],["plot",{"_index":4426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plug",{"_index":2279,"title":{},"body":{"components/LoaderComponent.html":{}}}],["plugin",{"_index":4622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point",{"_index":4436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["polici",{"_index":3206,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["policy.method",{"_index":3208,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["pop",{"_index":429,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["pop'},{'nam",{"_index":195,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["pop.compon",{"_index":920,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{}}}],["pop.component.html",{"_index":442,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.scss",{"_index":441,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.t",{"_index":428,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/ResourceDeletePopComponent.html":{},"coverage.html":{}}}],["pop.component.ts:21",{"_index":3354,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:23",{"_index":3349,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:25",{"_index":3348,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:26",{"_index":468,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:27",{"_index":3347,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:28",{"_index":469,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:29",{"_index":3355,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:30",{"_index":466,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:32",{"_index":475,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:34",{"_index":477,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:36",{"_index":498,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:38",{"_index":496,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:40",{"_index":461,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:46",{"_index":501,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:51",{"_index":488,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:56",{"_index":3351,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:63",{"_index":483,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:74",{"_index":485,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:84",{"_index":479,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.hid",{"_index":2240,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["pop.servic",{"_index":3113,"title":{},"body":{"components/PopComponent.html":{},"modules/PopModule.html":{}}}],["pop.toggl",{"_index":2238,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["pop/asset",{"_index":427,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["pop/entri",{"_index":919,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"coverage.html":{}}}],["pop/pop.compon",{"_index":2234,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["pop/pop.modul",{"_index":1768,"title":{},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{}}}],["pop/resourc",{"_index":3331,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["pop_dialog",{"_index":3293,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["pop_draw",{"_index":892,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{}}}],["pop_fullscreen",{"_index":3884,"title":{},"body":{"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["pop_toast",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["popclass",{"_index":974,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/TypeConfigService.html":{}}}],["popcompon",{"_index":273,"title":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["popcomponent:18",{"_index":472,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:20",{"_index":473,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:23",{"_index":478,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:25",{"_index":504,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:31",{"_index":494,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:43",{"_index":492,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popcomponent:52",{"_index":489,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["popmodul",{"_index":1762,"title":{"modules/PopModule.html":{}},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["popservic",{"_index":457,"title":{"injectables/PopService.html":{}},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"coverage.html":{},"overview.html":{}}}],["popth",{"_index":3112,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["popul",{"_index":3379,"title":{},"body":{"classes/ResourceForm.html":{}}}],["portrait",{"_index":4512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["posit",{"_index":2368,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["possess",{"_index":1462,"title":{},"body":{"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["possibl",{"_index":438,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/LoginFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["post",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["potter",{"_index":4490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["power",{"_index":4515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preced",{"_index":2851,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["prefer",{"_index":4102,"title":{},"body":{"changelog.html":{}}}],["prefil",{"_index":3156,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/SearchbarComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/core-classes/form.html":{}}}],["prefill:'bobbi",{"_index":4891,"title":{},"body":{"additional-documentation/core-classes/form.html":{}}}],["prefix",{"_index":4731,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["prepend",{"_index":2771,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["prepublish",{"_index":4306,"title":{},"body":{"index.html":{}}}],["prequisit",{"_index":4721,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["present",{"_index":73,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthGuard.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{}}}],["preserv",{"_index":1638,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["preservefilenam",{"_index":1633,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["press",{"_index":3317,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/SearchbarComponent.html":{}}}],["pretti",{"_index":2065,"title":{},"body":{"components/InputComponent.html":{}}}],["prev",{"_index":1381,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{},"miscellaneous/variables.html":{}}}],["prevent",{"_index":3561,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["preventdefault",{"_index":3534,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["preventdefault(",{"_index":3559,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["preview",{"_index":3248,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["previou",{"_index":2142,"title":{},"body":{"components/ListComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["price",{"_index":4556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primit",{"_index":2105,"title":{},"body":{"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["primitive.resolv",{"_index":4861,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["primitv",{"_index":4814,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["printer",{"_index":4516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["privat",{"_index":520,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["process",{"_index":3776,"title":{},"body":{"components/TinymceComponent.html":{}}}],["prod",{"_index":4745,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["product",{"_index":4748,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["profil",{"_index":4596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["programmat",{"_index":2102,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["project",{"_index":4020,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["promis",{"_index":116,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["promise((resolv",{"_index":1870,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["promise.all(this.stack.item",{"_index":2329,"title":{},"body":{"components/LoaderComponent.html":{}}}],["promise.reject('api_not_found",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject('cannot",{"_index":417,"title":{},"body":{"directives/AssetDirective.html":{}}}],["promise.reject('desktop",{"_index":2919,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["promise.reject('fehl",{"_index":2836,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["promise.reject('getaccount",{"_index":3523,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('getschema",{"_index":3520,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('no_api_found",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject(`ecimag",{"_index":2005,"title":{},"body":{"directives/ImageDirective.html":{}}}],["promise.reject(err",{"_index":1051,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["promise.reject(this.noclientid",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolv",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{}}}],["promise.resolve().then",{"_index":941,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(>asset",{"_index":1689,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(['get",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(api",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(config",{"_index":2789,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["promise.resolve(item.config.onsave(item",{"_index":3421,"title":{},"body":{"injectables/ResourceService.html":{}}}],["promise.resolve(method",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(result",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(results.concat(method",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(this.editor",{"_index":155,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["promise.resolve(valu",{"_index":2534,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["propag",{"_index":1129,"title":{},"body":{"components/DatetimeComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["propagatechang",{"_index":36,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["proper",{"_index":2714,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["properli",{"_index":4785,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["properti",{"_index":33,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["properties.foreach(properti",{"_index":2772,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["property.can",{"_index":4344,"title":{},"body":{"index.html":{}}}],["property.interfac",{"_index":1617,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["property.interface.t",{"_index":4136,"title":{},"body":{"coverage.html":{}}}],["property.split",{"_index":1500,"title":{},"body":{"components/EntryListComponent.html":{}}}],["property[0",{"_index":2741,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["protect",{"_index":760,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"classes/Pagination.html":{}}}],["prototyp",{"_index":2679,"title":{},"body":{"components/MockupComponent.html":{}}}],["protractor",{"_index":4359,"title":{},"body":{"index.html":{}}}],["provd",{"_index":2253,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["provid",{"_index":23,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["pseudo",{"_index":3556,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["public",{"_index":39,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["publicapi",{"_index":375,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{}}}],["publicapi(shortid",{"_index":3515,"title":{},"body":{"injectables/SdkService.html":{}}}],["publicassetlist",{"_index":1644,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["publicassetresourc",{"_index":407,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["publicassetright",{"_index":3190,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["publicservic",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":4303,"title":{"additional-documentation/project-setup-tutorial/publishing.html":{}},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["push",{"_index":2902,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["put",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"injectables/HistoryService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"changelog.html":{}}}],["qb1mro56u5katpx9j8o4",{"_index":2390,"title":{},"body":{"modules/LocationModule.html":{}}}],["qr",{"_index":4517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quellenangab",{"_index":4664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queri",{"_index":2197,"title":{},"body":{"interfaces/ListConfig.html":{},"components/SearchbarComponent.html":{}}}],["queryfilt",{"_index":3890,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["querylist",{"_index":2230,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/PaginationComponent.html":{},"components/TabsComponent.html":{}}}],["question",{"_index":4479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quick",{"_index":964,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["quickli",{"_index":4776,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["quot",{"_index":4518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rack",{"_index":1356,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.compon",{"_index":2093,"title":{},"body":{"modules/IoModule.html":{}}}],["rack.component.html",{"_index":1347,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.component.t",{"_index":1345,"title":{},"body":{"components/DynamicRackComponent.html":{},"coverage.html":{}}}],["rack.component.ts:10",{"_index":1350,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack/dynam",{"_index":1344,"title":{},"body":{"components/DynamicRackComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["ramp",{"_index":4539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rang",{"_index":3057,"title":{},"body":{"classes/PaginationConfig.html":{},"changelog.html":{}}}],["raw",{"_index":1146,"title":{},"body":{"pipes/DatetimePipe.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{}}}],["rawfilt",{"_index":2749,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["rc.0",{"_index":4294,"title":{},"body":{"index.html":{}}}],["re",{"_index":79,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["react",{"_index":566,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["reactiv",{"_index":2550,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["reactiveformsmodul",{"_index":604,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{}}}],["read",{"_index":991,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/ImageDirective.html":{},"miscellaneous/variables.html":{}}}],["readabl",{"_index":1592,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["readi",{"_index":37,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{}}}],["readm",{"_index":363,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Collection.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"index.html":{}}}],["readonli",{"_index":546,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/ItemConfig.html":{},"components/LocationMapComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"changelog.html":{}}}],["recent",{"_index":2516,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["recogn",{"_index":4904,"title":{},"body":{"additional-documentation/core-classes/selection.html":{}}}],["recommend",{"_index":2844,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["reconstruct",{"_index":2137,"title":{},"body":{"components/ListComponent.html":{}}}],["recycl",{"_index":4602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirect",{"_index":568,"title":{},"body":{"injectables/AuthGuard.html":{},"components/LoginComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["redo",{"_index":4592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reduce((a",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{}}}],["reduce((ha",{"_index":3641,"title":{},"body":{"classes/Sorter.html":{}}}],["reduce((match",{"_index":1040,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["redund",{"_index":4843,"title":{},"body":{"additional-documentation/ui.html":{}}}],["refactor",{"_index":4093,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":2036,"title":{},"body":{"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["referenc",{"_index":4808,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["reflect",{"_index":1174,"title":{},"body":{"interfaces/Day.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":4429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regex",{"_index":3147,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["regexp",{"_index":2099,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ResourceConfig.html":{}}}],["regist",{"_index":83,"title":{},"body":{"components/AceComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"injectables/LoaderService.html":{},"injectables/SymbolService.html":{},"components/ToggleComponent.html":{}}}],["registeronchang",{"_index":48,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["registeronchange(fn",{"_index":81,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["registerontouch",{"_index":49,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["registri",{"_index":1937,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{},"injectables/SymbolService.html":{},"additional-documentation/ui/icons.html":{}}}],["regular",{"_index":4006,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["reject",{"_index":1871,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["reject(statu",{"_index":1876,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["rel",{"_index":1278,"title":{},"body":{"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/TabComponent.html":{},"index.html":{}}}],["relat",{"_index":481,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"modules/LocationModule.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{}}}],["relationnam",{"_index":3154,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["relativeto",{"_index":3763,"title":{},"body":{"components/TabsComponent.html":{}}}],["releas",{"_index":4127,"title":{},"body":{"changelog.html":{}}}],["relev",{"_index":338,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["reli",{"_index":4813,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["reload",{"_index":898,"title":{},"body":{"components/CrudComponent.html":{},"index.html":{}}}],["remain",{"_index":982,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["remov",{"_index":491,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"changelog.html":{}}}],["remove(item",{"_index":798,"title":{},"body":{"classes/Collection.html":{}}}],["removeal",{"_index":765,"title":{},"body":{"classes/Collection.html":{}}}],["removeall(item",{"_index":801,"title":{},"body":{"classes/Collection.html":{}}}],["removefilt",{"_index":2215,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["removefilter(properti",{"_index":2226,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["removeformat",{"_index":4679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["renam",{"_index":2107,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["renamend",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":859,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["renew",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["repeat",{"_index":4554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replac",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/SymbolService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["replacewith",{"_index":766,"title":{},"body":{"classes/Collection.html":{}}}],["replacewith(item",{"_index":804,"title":{},"body":{"classes/Collection.html":{}}}],["repli",{"_index":4669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositori",{"_index":4296,"title":{},"body":{"index.html":{}}}],["repres",{"_index":1162,"title":{},"body":{"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["request",{"_index":1984,"title":{},"body":{"directives/ImageDirective.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{}}}],["requir",{"_index":334,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"classes/Field.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/ResourceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["reset",{"_index":324,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"components/LoginFormComponent.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"components/PasswordResetComponent.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"changelog.html":{},"overview.html":{}}}],["reset'},{'nam",{"_index":272,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["reset.compon",{"_index":610,"title":{},"body":{"modules/AuthModule.html":{}}}],["reset.component.html",{"_index":3069,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.t",{"_index":3067,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset.component.ts:14",{"_index":3078,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:16",{"_index":3077,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:18",{"_index":3072,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:20",{"_index":3073,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:22",{"_index":3074,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:24",{"_index":3071,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:26",{"_index":3076,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:29",{"_index":3075,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset/password",{"_index":609,"title":{},"body":{"modules/AuthModule.html":{},"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["resetpassword",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(email",{"_index":675,"title":{},"body":{"injectables/AuthService.html":{}}}],["resiz",{"_index":4620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolv",{"_index":118,"title":{},"body":{"components/AceComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["resolve(nam",{"_index":3679,"title":{},"body":{"injectables/SymbolService.html":{}}}],["resolve(result",{"_index":1875,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["resolveasset",{"_index":1709,"title":{},"body":{"injectables/FileService.html":{}}}],["resolveassets(asset",{"_index":1682,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["resolved.find((resourc",{"_index":1701,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["resolvedapi",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvevari",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvevariables(str",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{}}}],["resourc",{"_index":275,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["resource.assetid",{"_index":1702,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["resource.del().then((r",{"_index":3433,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resource.delete.no",{"_index":3367,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["resource.delete.quest",{"_index":3365,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["resource.delete.y",{"_index":3366,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["resource.newhistori",{"_index":1928,"title":{},"body":{"injectables/HistoryService.html":{}}}],["resource.sav",{"_index":3423,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resource.save().then((_resourc",{"_index":3430,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resource/resource.modul",{"_index":1102,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{}}}],["resource[key",{"_index":3428,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resourceconfig",{"_index":648,"title":{"injectables/ResourceConfig.html":{}},"body":{"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["resourcecrudcompon",{"_index":274,"title":{"components/ResourceCrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["resourcedeletepopcompon",{"_index":276,"title":{"components/ResourceDeletePopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceform",{"_index":3167,"title":{"classes/ResourceForm.html":{}},"body":{"injectables/ResourceConfig.html":{},"classes/ResourceForm.html":{},"coverage.html":{}}}],["resourceformcompon",{"_index":278,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelist",{"_index":1476,"title":{},"body":{"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"changelog.html":{},"coverage.html":{}}}],["resourcelistcompon",{"_index":279,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelistcomponent:105",{"_index":1484,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:114",{"_index":1478,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:118",{"_index":1482,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:22",{"_index":1490,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:24",{"_index":1466,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:26",{"_index":1471,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:28",{"_index":1489,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:30",{"_index":1464,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:32",{"_index":1469,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:34",{"_index":1467,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:36",{"_index":1472,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:45",{"_index":1491,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:57",{"_index":1475,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcelistcomponent:78",{"_index":1485,"title":{},"body":{"components/EntryListComponent.html":{}}}],["resourcemodul",{"_index":1080,"title":{"modules/ResourceModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules.html":{},"overview.html":{}}}],["resourcepopcompon",{"_index":280,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["resourceselectcompon",{"_index":281,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceservic",{"_index":1457,"title":{"injectables/ResourceService.html":{}},"body":{"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["respons",{"_index":1680,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["response['getallitem",{"_index":1679,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["rest",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/ui/icons.html":{}}}],["result",{"_index":314,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["results.length",{"_index":2424,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["results.push(method",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{}}}],["results[0].formatted_address",{"_index":2425,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["retriev",{"_index":2719,"title":{},"body":{"injectables/ModelConfigService.html":{},"classes/Pagination.html":{}}}],["return",{"_index":76,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["revers",{"_index":1838,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"classes/Sorter.html":{}}}],["right",{"_index":3192,"title":{},"body":{"injectables/ResourceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":340,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{}}}],["roleid",{"_index":3288,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["roll",{"_index":4502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":359,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"injectables/SdkService.html":{}}}],["rotat",{"_index":4558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rout",{"_index":560,"title":{"additional-documentation/project-setup-tutorial/routes.html":{}},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["route.data",{"_index":2655,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.data.hidden",{"_index":2656,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.param",{"_index":929,"title":{},"body":{"components/CrudComponent.html":{}}}],["route.params.subscrib",{"_index":1498,"title":{},"body":{"components/EntryListComponent.html":{}}}],["route.path",{"_index":2653,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.path.indexof",{"_index":2654,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.queryparam",{"_index":930,"title":{},"body":{"components/CrudComponent.html":{}}}],["router",{"_index":870,"title":{},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["routermodul",{"_index":1087,"title":{},"body":{"modules/DataModule.html":{},"modules/UtilityModule.html":{}}}],["routing.module.t",{"_index":4780,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["rss",{"_index":4526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ruler",{"_index":4520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1589,"title":{},"body":{"classes/Field.html":{},"classes/ResourceForm.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes/field.html":{}}}],["rxj",{"_index":4275,"title":{},"body":{"dependencies.html":{},"additional-documentation/core-classes.html":{}}}],["rxjs/add/operator/debouncetim",{"_index":1166,"title":{},"body":{"interfaces/Day.html":{},"components/TinymceComponent.html":{}}}],["rxjs/add/operator/filt",{"_index":1036,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxjs/add/operator/switchmap",{"_index":917,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["rxjs/observ",{"_index":815,"title":{},"body":{"classes/Collection.html":{},"injectables/CrudService.html":{},"injectables/GeocodeService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxjs/observable/frompromis",{"_index":1848,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["rxjs/observable/merg",{"_index":918,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["rxjs/oper",{"_index":1850,"title":{},"body":{"injectables/GeocodeService.html":{},"components/SearchbarComponent.html":{}}}],["rxjs/subject",{"_index":512,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{}}}],["safe",{"_index":3439,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"modules/VcModule.html":{}}}],["safehtml",{"_index":3441,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["safehtmlpip",{"_index":3434,"title":{"pipes/SafeHtmlPipe.html":{}},"body":{"pipes/SafeHtmlPipe.html":{},"modules/VcModule.html":{},"coverage.html":{},"overview.html":{}}}],["samantha",{"_index":2686,"title":{},"body":{"components/MockupComponent.html":{}}}],["same",{"_index":774,"title":{},"body":{"classes/Collection.html":{},"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"components/MenuComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/core-classes/selection.html":{}}}],["sandbox.scss",{"_index":4742,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["sanit",{"_index":3444,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["save",{"_index":984,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/ItemConfig.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["save(item",{"_index":3414,"title":{},"body":{"injectables/ResourceService.html":{}}}],["save(model",{"_index":1027,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["save(valu",{"_index":3380,"title":{},"body":{"classes/ResourceForm.html":{}}}],["savethi",{"_index":4736,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["scaffold",{"_index":4323,"title":{},"body":{"index.html":{}}}],["scale",{"_index":4424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema",{"_index":2698,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{}}}],["schema'",{"_index":2727,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.allof[1",{"_index":2766,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.properties[properti",{"_index":2778,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.properties[property].readonli",{"_index":2780,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.properties[property].titl",{"_index":2776,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.required.indexof(properti",{"_index":2781,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schemarequest",{"_index":3452,"title":{},"body":{"injectables/SdkService.html":{}}}],["schon",{"_index":4388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scissor",{"_index":4521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":4829,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["screen",{"_index":4445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script",{"_index":4301,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["scripts:npm",{"_index":4307,"title":{},"body":{"index.html":{}}}],["scssmake",{"_index":4732,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["sdk",{"_index":345,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["sdk.api",{"_index":374,"title":{},"body":{"directives/AssetDirective.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{}}}],["sdk.servic",{"_index":3449,"title":{},"body":{"modules/SdkModule.html":{}}}],["sdk/history.servic",{"_index":1103,"title":{},"body":{"modules/DataModule.html":{}}}],["sdk/sdk.modul",{"_index":1104,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{}}}],["sdk/sdk.servic",{"_index":409,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["sdkmodul",{"_index":1081,"title":{"modules/SdkModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules.html":{},"overview.html":{}}}],["sdkservic",{"_index":348,"title":{"injectables/SdkService.html":{}},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/data.html":{}}}],["sdkservice#api",{"_index":2449,"title":{},"body":{"components/LoginComponent.html":{}}}],["sdkservice.readi",{"_index":4078,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":1552,"title":{},"body":{"classes/Field.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/SearchbarComponent.html":{}}}],["search'},{'nam",{"_index":250,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["search.compon",{"_index":2386,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["search.component.html",{"_index":2429,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.t",{"_index":2427,"title":{},"body":{"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:13",{"_index":2432,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:15",{"_index":2435,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:17",{"_index":2431,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:25",{"_index":2433,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:31",{"_index":2434,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["searchbar",{"_index":444,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/GeocodeService.html":{},"interfaces/ItemConfig.html":{},"components/LocationSearchComponent.html":{},"components/SearchbarComponent.html":{}}}],["searchbar'},{'nam",{"_index":283,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["searchbar.component.html",{"_index":3529,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["searchbar/searchbar.compon",{"_index":2277,"title":{},"body":{"modules/ListModule.html":{}}}],["searchbarcompon",{"_index":282,"title":{"components/SearchbarComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchinput",{"_index":2430,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["second",{"_index":2157,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["section",{"_index":3109,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["see",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["sein",{"_index":4801,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["seit",{"_index":584,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["sekundär",{"_index":4652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":447,"title":{"additional-documentation/core-classes/selection.html":{}},"body":{"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationSearchComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/selection.html":{}}}],["select'},{'nam",{"_index":197,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["select($ev",{"_index":484,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["select(item",{"_index":3324,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["select(pag",{"_index":2959,"title":{},"body":{"classes/Pagination.html":{}}}],["select(tab",{"_index":3737,"title":{},"body":{"components/TabsComponent.html":{}}}],["select.compon",{"_index":1097,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{}}}],["select.component.html",{"_index":543,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.t",{"_index":542,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:10",{"_index":552,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:11",{"_index":549,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:12",{"_index":550,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:13",{"_index":551,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:14",{"_index":553,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:15",{"_index":548,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:18",{"_index":555,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:21",{"_index":554,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.emit(item",{"_index":2133,"title":{},"body":{"components/ListComponent.html":{}}}],["select/asset",{"_index":1729,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["select/assetgroup",{"_index":541,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["select/entri",{"_index":1096,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["select/resourc",{"_index":3401,"title":{},"body":{"modules/ResourceModule.html":{},"coverage.html":{}}}],["select/select.modul",{"_index":3921,"title":{},"body":{"modules/UiModule.html":{}}}],["selectbyurl",{"_index":3733,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectbyurl(url",{"_index":3739,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectcompon",{"_index":284,"title":{"additional-documentation/ui/selectcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selectday(_mo",{"_index":1266,"title":{},"body":{"interfaces/Day.html":{}}}],["selectentri",{"_index":875,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectentry(item",{"_index":903,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectindex",{"_index":2115,"title":{},"body":{"components/ListComponent.html":{}}}],["selectindex(index",{"_index":2138,"title":{},"body":{"components/ListComponent.html":{}}}],["selection.compon",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["selection.select(upload.item",{"_index":3979,"title":{},"body":{"components/UploadComponent.html":{}}}],["selection.toggl",{"_index":2135,"title":{},"body":{"components/ListComponent.html":{}}}],["selection.toggleall(upload.item",{"_index":3980,"title":{},"body":{"components/UploadComponent.html":{}}}],["selectmod",{"_index":2198,"title":{},"body":{"interfaces/ListConfig.html":{},"changelog.html":{}}}],["selectmodul",{"_index":3602,"title":{"modules/SelectModule.html":{}},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["selectnext",{"_index":2116,"title":{},"body":{"components/ListComponent.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["selectprev",{"_index":2117,"title":{},"body":{"components/ListComponent.html":{}}}],["selectupload",{"_index":3927,"title":{},"body":{"components/UploadComponent.html":{}}}],["selectupload(upload",{"_index":3941,"title":{},"body":{"components/UploadComponent.html":{}}}],["send",{"_index":3068,"title":{},"body":{"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["sensit",{"_index":3636,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/variables.html":{}}}],["sent",{"_index":3081,"title":{},"body":{"components/PasswordResetComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["serial",{"_index":3382,"title":{},"body":{"classes/ResourceForm.html":{}}}],["serv",{"_index":4319,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes.html":{}}}],["server",{"_index":3726,"title":{},"body":{"components/TabsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["servic",{"_index":462,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"modules/LocationModule.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["session",{"_index":3453,"title":{},"body":{"injectables/SdkService.html":{}}}],["session(environment.environ",{"_index":3505,"title":{},"body":{"injectables/SdkService.html":{}}}],["set",{"_index":74,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["set([this.config.s",{"_index":2977,"title":{},"body":{"classes/Pagination.html":{}}}],["set(properti",{"_index":2728,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["set(symbol",{"_index":3681,"title":{},"body":{"injectables/SymbolService.html":{}}}],["set(typ",{"_index":3882,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["setapi(api",{"_index":3487,"title":{},"body":{"injectables/SdkService.html":{}}}],["setclientid",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["setdate(d",{"_index":1260,"title":{},"body":{"interfaces/Day.html":{}}}],["setemptystringstonul",{"_index":3405,"title":{},"body":{"injectables/ResourceService.html":{}}}],["setgroup",{"_index":448,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/UploadComponent.html":{}}}],["setgroup(group",{"_index":487,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/UploadComponent.html":{}}}],["setmod",{"_index":50,"title":{},"body":{"components/AceComponent.html":{}}}],["setmode(mod",{"_index":91,"title":{},"body":{"components/AceComponent.html":{}}}],["setter",{"_index":842,"title":{},"body":{"classes/Config.html":{}}}],["setthem",{"_index":51,"title":{},"body":{"components/AceComponent.html":{}}}],["settheme(them",{"_index":96,"title":{},"body":{"components/AceComponent.html":{}}}],["settimeout",{"_index":2670,"title":{},"body":{"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{}}}],["settimeout(resolv",{"_index":2311,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["settings.t",{"_index":4218,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["settot",{"_index":2935,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(itemcount",{"_index":2991,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(tot",{"_index":2961,"title":{},"body":{"classes/Pagination.html":{}}}],["setup",{"_index":4095,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["seturl",{"_index":1980,"title":{},"body":{"directives/ImageDirective.html":{}}}],["seturl(url",{"_index":1993,"title":{},"body":{"directives/ImageDirective.html":{}}}],["setvalu",{"_index":2350,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["setvalue(valu",{"_index":2363,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["share",{"_index":4524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shear",{"_index":4529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shift",{"_index":4586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shoot",{"_index":4337,"title":{},"body":{"index.html":{}}}],["shop",{"_index":4530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["short",{"_index":3472,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["shorthand",{"_index":4733,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["shortid",{"_index":2787,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["show",{"_index":437,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceDeletePopComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["showerror",{"_index":2476,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["showerror(err",{"_index":2511,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["showhead",{"_index":2118,"title":{},"body":{"components/ListComponent.html":{}}}],["showlabel",{"_index":2483,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["shown",{"_index":565,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"components/IconComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["shownotif",{"_index":2829,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["showrawvalu",{"_index":2397,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["shrink",{"_index":4535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sie",{"_index":589,"title":{},"body":{"injectables/AuthGuard.html":{},"components/PasswordResetComponent.html":{}}}],["sign",{"_index":4407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signal",{"_index":4527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signup",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(undefin",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{}}}],["silent",{"_index":4013,"title":{},"body":{"interfaces/WithNotifications.html":{},"miscellaneous/variables.html":{}}}],["simi",{"_index":851,"title":{},"body":{"classes/Config.html":{}}}],["simibug",{"_index":1407,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["similar",{"_index":1509,"title":{},"body":{"components/EntryListComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/LoginComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{}}}],["simpl",{"_index":2826,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["sind",{"_index":590,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["singl",{"_index":397,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{},"classes/ResourceForm.html":{}}}],["singleton",{"_index":3619,"title":{},"body":{"classes/Sorter.html":{}}}],["site",{"_index":2317,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["situat",{"_index":3866,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["size",{"_index":1693,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/ListConfig.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["skin",{"_index":4621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skip",{"_index":1465,"title":{},"body":{"components/EntryListComponent.html":{}}}],["skull",{"_index":4540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice",{"_index":2542,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"classes/Pagination.html":{}}}],["slice(item",{"_index":2965,"title":{},"body":{"classes/Pagination.html":{}}}],["slider",{"_index":4523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slot",{"_index":311,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["slot'},{'nam",{"_index":216,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["slot.compon",{"_index":2045,"title":{},"body":{"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{}}}],["slot.component.html",{"_index":1359,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["slot.component.t",{"_index":1358,"title":{},"body":{"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["slot.component.ts:11",{"_index":1362,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:18",{"_index":1365,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot/dynam",{"_index":1357,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"coverage.html":{}}}],["slothostdirect",{"_index":310,"title":{"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["small",{"_index":4541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smaller",{"_index":4616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smiley",{"_index":4587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smoother",{"_index":3063,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["soeben",{"_index":3085,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["solo",{"_index":1454,"title":{},"body":{"components/EntryListComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/core-classes/selection.html":{}}}],["somemodul",{"_index":1951,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["someth",{"_index":3565,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["somewher",{"_index":140,"title":{},"body":{"components/AceComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["soon",{"_index":362,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{}}}],["sophist",{"_index":758,"title":{},"body":{"classes/Collection.html":{},"index.html":{},"additional-documentation/core-classes/collection.html":{}}}],["sort",{"_index":1601,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["sort(((a",{"_index":2980,"title":{},"body":{"classes/Pagination.html":{}}}],["sort(item",{"_index":3629,"title":{},"body":{"classes/Sorter.html":{}}}],["sortabl",{"_index":1543,"title":{},"body":{"classes/Field.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["sortbi",{"_index":2199,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["sortboolean",{"_index":3624,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortboolean(a",{"_index":3640,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorter",{"_index":3617,"title":{"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}},"body":{"classes/Sorter.html":{},"coverage.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["sortierenfor",{"_index":4903,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["sortnumb",{"_index":3623,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortnumber(a",{"_index":3639,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sortstr",{"_index":3622,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortstring(a",{"_index":3637,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorttyp",{"_index":3620,"title":{},"body":{"classes/Sorter.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{}}}],["source.addeventlistener('entrycr",{"_index":1934,"title":{},"body":{"injectables/HistoryService.html":{}}}],["source.addeventlistener('entryupd",{"_index":1930,"title":{},"body":{"injectables/HistoryService.html":{}}}],["space",{"_index":4506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["span",{"_index":1176,"title":{},"body":{"interfaces/Day.html":{}}}],["spanchang",{"_index":1187,"title":{},"body":{"interfaces/Day.html":{}}}],["spancolor",{"_index":1177,"title":{},"body":{"interfaces/Day.html":{}}}],["speaker",{"_index":4542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speakingurl",{"_index":4809,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["spec.t",{"_index":4352,"title":{},"body":{"index.html":{}}}],["specif",{"_index":1582,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["specifi",{"_index":93,"title":{},"body":{"components/AceComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{}}}],["spell",{"_index":4546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spray",{"_index":4547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["squar",{"_index":1987,"title":{},"body":{"directives/ImageDirective.html":{},"miscellaneous/variables.html":{}}}],["src",{"_index":1978,"title":{},"body":{"directives/ImageDirective.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ace.html":{}}}],["src/app/app",{"_index":4779,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/app/app.component.html",{"_index":4768,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/app.modul",{"_index":4753,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/muffins/muffins.component.html",{"_index":4778,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/environ",{"_index":4744,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.prod.t",{"_index":4750,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.t",{"_index":4747,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/packag",{"_index":4288,"title":{},"body":{"index.html":{}}}],["ssl",{"_index":4761,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ssl\",without",{"_index":4763,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["stack",{"_index":2285,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"index.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["stackoverflow",{"_index":4593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stage",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["stand",{"_index":844,"title":{},"body":{"classes/Config.html":{}}}],["star",{"_index":4569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":1117,"title":{"changelog.html":{},"index.html":{}},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"pipes/MaxItemsPipe.html":{},"components/TabComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["startnow",{"_index":4772,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["state",{"_index":998,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListHeaderComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["statement",{"_index":4130,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1105,"title":{},"body":{"modules/DataModule.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["statu",{"_index":1873,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{}}}],["stay",{"_index":2808,"title":{},"body":{"classes/Notification.html":{},"injectables/SymbolService.html":{},"changelog.html":{}}}],["sticki",{"_index":955,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["still",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["stop",{"_index":2295,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":1908,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{},"index.html":{}}}],["strategy=endless",{"_index":1412,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["stream",{"_index":1899,"title":{},"body":{"injectables/HistoryService.html":{},"dependencies.html":{}}}],["strike",{"_index":4548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":65,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/list.html":{}}}],["string,valu",{"_index":1481,"title":{},"body":{"components/EntryListComponent.html":{}}}],["string.replac",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{}}}],["stringfield",{"_index":3142,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["stringfield(label",{"_index":3158,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["structur",{"_index":1586,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["stuff",{"_index":2281,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["style",{"_index":2678,"title":{},"body":{"components/MockupComponent.html":{},"components/PopComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["style_format",{"_index":4654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles.scss",{"_index":4738,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["styleselect",{"_index":4675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":28,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["sub",{"_index":845,"title":{},"body":{"classes/Config.html":{}}}],["subbranch",{"_index":2104,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["subclass",{"_index":2508,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["subfold",{"_index":4315,"title":{},"body":{"index.html":{}}}],["subject",{"_index":497,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"additional-documentation/core-classes.html":{}}}],["submenu",{"_index":2611,"title":{},"body":{"components/MenuComponent.html":{}}}],["submit",{"_index":2470,"title":{},"body":{"components/LoginFormComponent.html":{},"changelog.html":{}}}],["subscrib",{"_index":931,"title":{},"body":{"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LocationSearchComponent.html":{},"components/PaginationComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["subscribe((",{"_index":3572,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["subscribe((chang",{"_index":2058,"title":{},"body":{"components/InputComponent.html":{}}}],["subscribe((day",{"_index":1192,"title":{},"body":{"interfaces/Day.html":{}}}],["subscribe((ev",{"_index":1746,"title":{},"body":{"directives/FocusDirective.html":{}}}],["subscribe((upd",{"_index":1507,"title":{},"body":{"components/EntryListComponent.html":{}}}],["subscribe(editor",{"_index":3806,"title":{},"body":{"components/TinymceComponent.html":{}}}],["subscribe(timespan",{"_index":1195,"title":{},"body":{"interfaces/Day.html":{}}}],["subscribe(valu",{"_index":3578,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["subscript",{"_index":4549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["substract",{"_index":4550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subtract(weeksbefor",{"_index":1238,"title":{},"body":{"interfaces/Day.html":{}}}],["succes",{"_index":2503,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["success",{"_index":2444,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["success/error",{"_index":2842,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["successfulli",{"_index":983,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["such",{"_index":1587,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["suitabl",{"_index":1593,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["sunni",{"_index":4551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super",{"_index":356,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["super(bodi",{"_index":3390,"title":{},"body":{"classes/ResourceForm.html":{}}}],["super(loaderservic",{"_index":1497,"title":{},"body":{"components/EntryListComponent.html":{}}}],["super(popservic",{"_index":521,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["super(sdk",{"_index":1999,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.load",{"_index":1990,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.load(id).then(this.use.bind(thi",{"_index":2003,"title":{},"body":{"directives/ImageDirective.html":{}}}],["superscript",{"_index":4552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":186,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"modules.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["sure",{"_index":62,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"components/LoaderComponent.html":{},"interfaces/Update.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["svg",{"_index":4363,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":981,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoaderComponent.html":{},"components/SearchbarComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["switchmap",{"_index":1849,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["symbol",{"_index":878,"title":{"interfaces/Symbol.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["symbol.cont",{"_index":3701,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbol.interfac",{"_index":3671,"title":{},"body":{"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{}}}],["symbol.nam",{"_index":3699,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbol.pip",{"_index":3666,"title":{},"body":{"modules/SymbolModule.html":{}}}],["symbol.servic",{"_index":3664,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"changelog.html":{}}}],["symbol/symbol.interfac",{"_index":1955,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{}}}],["symbol/symbol.modul",{"_index":1781,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["symbol/symbol.servic",{"_index":1972,"title":{},"body":{"injectables/IconService.html":{},"components/InputErrorsComponent.html":{}}}],["symbolmodul",{"_index":1765,"title":{"modules/SymbolModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["symbolpip",{"_index":3665,"title":{"injectables/SymbolPipe.html":{}},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"coverage.html":{}}}],["symbols.map(symbol",{"_index":3702,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservic",{"_index":879,"title":{"injectables/SymbolService.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"injectables/IconService.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["symbolservice.resolv",{"_index":3670,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["symlink",{"_index":4299,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["symlinks.sh",{"_index":4310,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["sync",{"_index":3209,"title":{},"body":{"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["synchron",{"_index":4555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":1022,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["t",{"_index":775,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{}}}],["t\\=(?:[0",{"_index":4694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tab",{"_index":3707,"title":{},"body":{"components/TabComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["tab'",{"_index":3712,"title":{},"body":{"components/TabComponent.html":{}}}],["tab'},{'nam",{"_index":286,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["tab.activ",{"_index":3761,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.component.html",{"_index":3709,"title":{},"body":{"components/TabComponent.html":{}}}],["tab.component.scss",{"_index":3708,"title":{},"body":{"components/TabComponent.html":{}}}],["tab.el.nativeelement.getattribute('select",{"_index":3756,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.label",{"_index":3764,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.par",{"_index":3755,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.rout",{"_index":3751,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab/tab.compon",{"_index":3744,"title":{},"body":{"components/TabsComponent.html":{},"modules/UtilityModule.html":{}}}],["tabcompon",{"_index":285,"title":{"components/TabComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["tabl",{"_index":1168,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["table_class_list",{"_index":4640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table_default_attribut",{"_index":4638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table_toolbar",{"_index":4637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":4258,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":4572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabs'},{'nam",{"_index":288,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["tabs.component.html",{"_index":3730,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs.component.scss",{"_index":3729,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs/tabs.compon",{"_index":3722,"title":{},"body":{"components/TabComponent.html":{},"modules/UtilityModule.html":{}}}],["tabscompon",{"_index":287,"title":{"components/TabsComponent.html":{},"additional-documentation/ui/tabscomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":402,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Field.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["tagsfield",{"_index":3143,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["tagsfield(label",{"_index":3160,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["take",{"_index":858,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/core-classes.html":{}}}],["tank",{"_index":4557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tap",{"_index":4450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tape",{"_index":4435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":130,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ResourceConfig.html":{},"components/TinymceComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["target[0",{"_index":1502,"title":{},"body":{"components/EntryListComponent.html":{}}}],["target[1",{"_index":1503,"title":{},"body":{"components/EntryListComponent.html":{}}}],["targetid",{"_index":3304,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["targettyp",{"_index":3305,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["task",{"_index":4304,"title":{},"body":{"index.html":{}}}],["tbd",{"_index":4845,"title":{},"body":{"additional-documentation/ui.html":{},"additional-documentation/ui/formcomponent.html":{}}}],["tell",{"_index":1574,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["template::view",{"_index":3232,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["templateid",{"_index":3231,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["templateurl",{"_index":30,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["test",{"_index":3631,"title":{},"body":{"classes/Sorter.html":{},"changelog.html":{},"index.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["test.t",{"_index":4351,"title":{},"body":{"index.html":{}}}],["test@test.d",{"_index":2688,"title":{},"body":{"components/MockupComponent.html":{}}}],["text",{"_index":1304,"title":{},"body":{"components/DefaultOutputComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/Symbol.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["textarea",{"_index":3887,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["textbox",{"_index":4685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["textcolor",{"_index":4628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["textcolor_map",{"_index":4641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["that",{"_index":4771,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["theme",{"_index":54,"title":{},"body":{"components/AceComponent.html":{},"miscellaneous/variables.html":{}}}],["themelist.j",{"_index":151,"title":{},"body":{"components/AceComponent.html":{}}}],["then((_entri",{"_index":1049,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["then((_resourc",{"_index":3426,"title":{},"body":{"injectables/ResourceService.html":{}}}],["then((_upload",{"_index":3971,"title":{},"body":{"components/UploadComponent.html":{}}}],["then((asset",{"_index":423,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((assetlist",{"_index":1665,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((avail",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((config",{"_index":1512,"title":{},"body":{"components/EntryListComponent.html":{},"injectables/ModelConfigService.html":{}}}],["then((entri",{"_index":1070,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"interfaces/Update.html":{}}}],["then((loadedentri",{"_index":948,"title":{},"body":{"components/CrudComponent.html":{}}}],["then((method",{"_index":935,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["then((r",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginFormComponent.html":{}}}],["then((resolvedapi",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((resourc",{"_index":3432,"title":{},"body":{"injectables/ResourceService.html":{}}}],["then((respons",{"_index":1678,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((schema",{"_index":2765,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["then((upload",{"_index":1672,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((us",{"_index":2459,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{}}}],["then(_method",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(dmassetlist",{"_index":1695,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then(editor",{"_index":3813,"title":{},"body":{"components/TinymceComponent.html":{}}}],["then(list",{"_index":1415,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["then(r",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ResourceDeletePopComponent.html":{},"interfaces/Upload.html":{}}}],["then(resourc",{"_index":3392,"title":{},"body":{"classes/ResourceForm.html":{}}}],["then(result",{"_index":2423,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["then(sourc",{"_index":1923,"title":{},"body":{"injectables/HistoryService.html":{}}}],["then(this.seturl.bind(thi",{"_index":2012,"title":{},"body":{"directives/ImageDirective.html":{}}}],["therefor",{"_index":2103,"title":{},"body":{"interfaces/ItemConfig.html":{},"index.html":{}}}],["thin",{"_index":1446,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this._api",{"_index":3464,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.m",{"_index":3524,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then",{"_index":3500,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then(api",{"_index":3517,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.setclientid(environment.clientid",{"_index":3518,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._toggle.emit(vis",{"_index":3116,"title":{},"body":{"components/PopComponent.html":{}}}],["this.account",{"_index":3460,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.act",{"_index":1335,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["this.activated.next",{"_index":3723,"title":{},"body":{"components/TabComponent.html":{}}}],["this.add(item",{"_index":829,"title":{},"body":{"classes/Collection.html":{}}}],["this.addall(item",{"_index":834,"title":{},"body":{"classes/Collection.html":{}}}],["this.addsystempropertiestofieldconfig(fieldconfig",{"_index":2770,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.api",{"_index":358,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"classes/ResourceForm.html":{}}}],["this.apiresolv",{"_index":3501,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.app.tick",{"_index":3809,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.asset",{"_index":424,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.assetgroup",{"_index":528,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{}}}],["this.assetgroupid",{"_index":526,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/UploadComponent.html":{}}}],["this.assetgrouplistpromis",{"_index":1705,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.assetid",{"_index":413,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["this.auth.getallowedmodelmethods(this.model",{"_index":933,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.auth.getallowedresourcemethods(this.rel",{"_index":3337,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.auth.login",{"_index":2458,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.auth.resetpassword(this.email",{"_index":3082,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.autofocu",{"_index":3581,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.autoload",{"_index":414,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["this.bakery.bake().then",{"_index":2849,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.base64uuid",{"_index":3266,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.blockevent(",{"_index":3859,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.calendar.writevalue(valu",{"_index":1137,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["this.canalter(valu",{"_index":1280,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cel",{"_index":1233,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[0",{"_index":1211,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[this.cells.length",{"_index":1212,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cent",{"_index":2366,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.change.asobserv",{"_index":2941,"title":{},"body":{"classes/Pagination.html":{}}}],["this.change.emit(coord",{"_index":2441,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.change.emit(posit",{"_index":2372,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.change.emit(this.valu",{"_index":3808,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.change.next(this.config",{"_index":2988,"title":{},"body":{"classes/Pagination.html":{}}}],["this.changed.emit(chang",{"_index":2059,"title":{},"body":{"components/InputComponent.html":{}}}],["this.changes.asobserv",{"_index":1043,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.asobservable().filter((chang",{"_index":1044,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.next",{"_index":1061,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changespan.asobservable().debouncetime(800",{"_index":1194,"title":{},"body":{"interfaces/Day.html":{}}}],["this.changespan.next(this.timespan",{"_index":1210,"title":{},"body":{"interfaces/Day.html":{}}}],["this.checkpermission(`${model}:${method",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.checkpermission(`${this.resolvevariables(permissions[method",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.clean(oldvalu",{"_index":1062,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clean(valu",{"_index":1058,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clear",{"_index":3583,"title":{},"body":{"components/SearchbarComponent.html":{},"components/UploadComponent.html":{}}}],["this.collect",{"_index":2170,"title":{},"body":{"components/ListComponent.html":{}}}],["this.color",{"_index":1224,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors.length",{"_index":2666,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.colors[_moment.toisostr",{"_index":1225,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors[this.getlevel(level",{"_index":2665,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.columnclicked.emit($ev",{"_index":533,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.columnclicked.emit(item",{"_index":956,"title":{},"body":{"components/CrudComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.columnclicked.observers.length",{"_index":532,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(compon",{"_index":1371,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.componentinst",{"_index":2053,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance['writevalu",{"_index":2063,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance['writevalue'](valu",{"_index":2064,"title":{},"body":{"components/InputComponent.html":{}}}],["this.config",{"_index":958,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{}}}],["this.config.alwaysloadentri",{"_index":942,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.availables",{"_index":2995,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.fields[target[1",{"_index":1501,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.config.level",{"_index":944,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.method",{"_index":934,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.methods.indexof(method",{"_index":936,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.pag",{"_index":2982,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.popclass",{"_index":959,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.rang",{"_index":3033,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.config.s",{"_index":2979,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config[key",{"_index":854,"title":{},"body":{"classes/Config.html":{}}}],["this.config[key][properti",{"_index":855,"title":{},"body":{"classes/Config.html":{}}}],["this.config[relationnam",{"_index":3168,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.configinput",{"_index":2167,"title":{},"body":{"components/ListComponent.html":{}}}],["this.configure('model",{"_index":2738,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.container.nativeel",{"_index":3811,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.container.nativeelement.innerhtml",{"_index":2576,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.container.nativeelement.styl",{"_index":3038,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.control",{"_index":2049,"title":{},"body":{"components/InputComponent.html":{}}}],["this.control.errors[key",{"_index":2081,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.create(model",{"_index":1048,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["this.create(rel",{"_index":3425,"title":{},"body":{"injectables/ResourceService.html":{}}}],["this.createclicked.next",{"_index":3342,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.createclicked.observers.length",{"_index":3341,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.created(this.symbol.resolve('field.label.cr",{"_index":3194,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.crud.chang",{"_index":1506,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.crud.save(model",{"_index":2788,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.custom",{"_index":3965,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.dat",{"_index":1261,"title":{},"body":{"interfaces/Day.html":{}}}],["this.datamanag",{"_index":3513,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.datamanager.datamanager(this._api.datamanagerid",{"_index":3496,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.date.clone().add(valu",{"_index":1276,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dayclicked.emit(_mo",{"_index":1269,"title":{},"body":{"interfaces/Day.html":{}}}],["this.deactivated.next",{"_index":3724,"title":{},"body":{"components/TabComponent.html":{}}}],["this.defaultplacehold",{"_index":3569,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.defaulttim",{"_index":2925,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.delay",{"_index":3118,"title":{},"body":{"components/PopComponent.html":{}}}],["this.deleted.next(r",{"_index":3361,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.desktopnotification(inst",{"_index":2913,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.dis",{"_index":1333,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.disabledragend",{"_index":1218,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disabledragstart",{"_index":1217,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disableupdates(key",{"_index":1921,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.displaydate(tru",{"_index":3893,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.drag",{"_index":1198,"title":{},"body":{"interfaces/Day.html":{}}}],["this.drag.asobservable().debouncetime(100",{"_index":1191,"title":{},"body":{"interfaces/Day.html":{}}}],["this.drag.next(day",{"_index":1222,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.first",{"_index":1200,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.last",{"_index":1202,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dropday(day",{"_index":1193,"title":{},"body":{"interfaces/Day.html":{}}}],["this.ecasset",{"_index":412,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.ecdropzone.emit(",{"_index":1340,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.ecfocu",{"_index":1745,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.ecimag",{"_index":2000,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.ecimage.assetid",{"_index":2001,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.editor",{"_index":152,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.editor.buttons.image.onclick(tru",{"_index":3818,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.destroy",{"_index":2582,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.getcont",{"_index":2580,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.on('chang",{"_index":3820,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.on('dblclick",{"_index":3816,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.session.setmode('ace/mod",{"_index":177,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setcontent(this.valu",{"_index":3815,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.settheme('ace/them",{"_index":178,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setvalue(this.valu",{"_index":161,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.subscribe('editableinput",{"_index":2579,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.element.nativeelement.blur",{"_index":1748,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.element.nativeelement.focu",{"_index":1747,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.elementref.nativeelement.src",{"_index":2014,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.emitter.asobserv",{"_index":2906,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.emitter.next(inst",{"_index":2914,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.enableupdates(resourc",{"_index":1922,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.endless",{"_index":1408,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entri",{"_index":1443,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entryid",{"_index":1441,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entrylist",{"_index":1418,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.follownextlink().then(list",{"_index":1424,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.followprevlink().then(list",{"_index":1425,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.getallitem",{"_index":1419,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasfirstlink",{"_index":1427,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasnextlink",{"_index":1426,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrypop.edit(loadedentri",{"_index":949,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.environ",{"_index":3467,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.environment.clientid",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.error",{"_index":1527,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.cod",{"_index":1529,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.emit(err",{"_index":2531,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.error.messag",{"_index":1530,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.errormessag",{"_index":2528,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.ev",{"_index":3966,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.eventsources[key",{"_index":1924,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[key].clos",{"_index":1927,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[rel",{"_index":1920,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.fb.group",{"_index":2524,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.field",{"_index":2046,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["this.field.init",{"_index":2061,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.init(this.componentinst",{"_index":2062,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.input",{"_index":2052,"title":{},"body":{"components/InputComponent.html":{}}}],["this.fieldhost.viewcontainerref",{"_index":1372,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.fileinput",{"_index":3956,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.click",{"_index":3957,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.valu",{"_index":3962,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.assetgrouplist().then(assetgroup",{"_index":527,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{}}}],["this.fileservice.uploadassets(fil",{"_index":3969,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.uploadfiles(fil",{"_index":3970,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.filestoupload",{"_index":3964,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.filterlist(past",{"_index":3574,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.filterlist(valu",{"_index":3579,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.focusevent.emit(tru",{"_index":3582,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.form",{"_index":2523,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.get('password').setvalu",{"_index":2530,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.reset",{"_index":2538,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.valid",{"_index":2536,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.format",{"_index":1263,"title":{},"body":{"interfaces/Day.html":{}}}],["this.generatefieldconfig(model",{"_index":2790,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.geocodelatlng",{"_index":1878,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocodeservice.autocompleteaddress(this.searchinput.nativeel",{"_index":2440,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.geocodeservice.getnearestaddress(valu",{"_index":2422,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.get(model",{"_index":2762,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.get(model).field",{"_index":2763,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.get(nam",{"_index":3700,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.getaccount",{"_index":3511,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.getalgorithm(item",{"_index":3650,"title":{},"body":{"classes/Sorter.html":{}}}],["this.getapi(email",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getcolor(1",{"_index":2668,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getdaycolor(d",{"_index":1252,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getformdata(fil",{"_index":1664,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.getmonth(date.clon",{"_index":1265,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getmonth(this.date.clon",{"_index":1234,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getpag",{"_index":2993,"title":{},"body":{"classes/Pagination.html":{}}}],["this.getpath(item",{"_index":2660,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getpermission().then",{"_index":2922,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.getvalidators(field",{"_index":1807,"title":{},"body":{"injectables/FormService.html":{}}}],["this.group",{"_index":2048,"title":{},"body":{"components/InputComponent.html":{}}}],["this.group.get(this.field.properti",{"_index":2050,"title":{},"body":{"components/InputComponent.html":{}}}],["this.groupchanged.emit(group",{"_index":522,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/UploadComponent.html":{}}}],["this.groupchanged.emit(this.assetgroupid",{"_index":531,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.has(item",{"_index":825,"title":{},"body":{"classes/Collection.html":{}}}],["this.hexcolor",{"_index":3184,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.hid",{"_index":2330,"title":{},"body":{"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["this.host.nativeelement.classlist.add('i",{"_index":2323,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.host.nativeelement.classlist.remove('i",{"_index":2324,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.hov",{"_index":2662,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.hoverdelay",{"_index":2671,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.icon",{"_index":1956,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.get(this.nam",{"_index":1957,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.registri",{"_index":1961,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.set(emojiicon",{"_index":1953,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["this.iconservice.use(emojiicon",{"_index":1952,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["this.id",{"_index":1619,"title":{},"body":{"classes/Field.html":{}}}],["this.index(item",{"_index":821,"title":{},"body":{"classes/Collection.html":{}}}],["this.init",{"_index":179,"title":{},"body":{"components/AceComponent.html":{},"injectables/SdkService.html":{}}}],["this.initfilt",{"_index":1514,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.initfilterquery((properti",{"_index":1499,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.initmethod",{"_index":3335,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.inittab",{"_index":3759,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.input",{"_index":175,"title":{},"body":{"components/AceComponent.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.input.propagatechange(this.editor.getvalu",{"_index":176,"title":{},"body":{"components/AceComponent.html":{}}}],["this.input.propagatechange(this.valu",{"_index":4827,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.input.propagatechange(valu",{"_index":2419,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.isactive(item",{"_index":2667,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.isfirst",{"_index":2986,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isimmutableproperty(key",{"_index":1068,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.islast",{"_index":2985,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isnewasset(a",{"_index":1652,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.isnewasset(unresolv",{"_index":1687,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.isselected(item",{"_index":2663,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.issystemproperty(properti",{"_index":2768,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.item",{"_index":817,"title":{},"body":{"classes/Collection.html":{},"directives/EntriesDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/OutputComponent.html":{}}}],["this.item.getfield(this.properti",{"_index":2047,"title":{},"body":{"components/InputComponent.html":{}}}],["this.items.concat(item",{"_index":1420,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.filter((item",{"_index":1421,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.find((_item",{"_index":1422,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.indexof(item",{"_index":820,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.length",{"_index":828,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.push(item",{"_index":819,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(this.index(item",{"_index":830,"title":{},"body":{"classes/Collection.html":{}}}],["this.keyup.asobservable().debouncetime(this.debouncetim",{"_index":3576,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.label",{"_index":1622,"title":{},"body":{"classes/Field.html":{}}}],["this.level",{"_index":1442,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.list",{"_index":2168,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/SearchbarComponent.html":{}}}],["this.list.config",{"_index":2172,"title":{},"body":{"components/ListComponent.html":{},"components/SearchbarComponent.html":{}}}],["this.list.config.alwaysshowhead",{"_index":2181,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.disablehead",{"_index":2178,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.identifi",{"_index":3591,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.list.config.identifierpattern",{"_index":3588,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.list.config.label",{"_index":3587,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.list.config.selectmod",{"_index":2175,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.list.config.titl",{"_index":2180,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.fields.length",{"_index":2179,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.filter(properti",{"_index":2241,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.isempti",{"_index":2182,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.items.indexof(this.selection.items[0",{"_index":2186,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.items.length",{"_index":2189,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.items[index",{"_index":2183,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.list",{"_index":3585,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.list.list.filter(this.properti",{"_index":3592,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.list.load",{"_index":1508,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.list.pag",{"_index":2262,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.list.select",{"_index":3593,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.list.selection.isempti",{"_index":3600,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.list.selectnext",{"_index":3599,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.list.selectprev",{"_index":3596,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.load",{"_index":416,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"components/UploadComponent.html":{}}}],["this.loadcomponent(this.compon",{"_index":2051,"title":{},"body":{"components/InputComponent.html":{}}}],["this.loadcomponent(this.field.output",{"_index":2930,"title":{},"body":{"components/OutputComponent.html":{}}}],["this.loaded.emit(asset",{"_index":425,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.loaded.emit(entri",{"_index":1444,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.loader.wait(delet",{"_index":3363,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.loader.wait(login",{"_index":2465,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{}}}],["this.loader.wait(reset",{"_index":3095,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.loader.wait(this.promis",{"_index":1417,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.loaderservice.use(this.globalload",{"_index":2309,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.loaderservice.wait(load",{"_index":1935,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(new",{"_index":2310,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.loaderservice.wait(this.loadentry(item",{"_index":957,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.loaderservice.wait(this.promises[key",{"_index":1926,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(this.uploadpromis",{"_index":3977,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.localload",{"_index":2313,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.localloader.wait(new",{"_index":2314,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.lockform",{"_index":3091,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.login(this.form.valu",{"_index":2537,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.map.setvalue(valu",{"_index":2416,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.map.valu",{"_index":2420,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.maploader.load().then",{"_index":1877,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.matches(chang",{"_index":1045,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.mod",{"_index":156,"title":{},"body":{"components/AceComponent.html":{}}}],["this.model",{"_index":932,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.modelconfig.generateconfig(this.model",{"_index":1511,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.modelconfig.set('muffin",{"_index":4789,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.monthformat",{"_index":1189,"title":{},"body":{"interfaces/Day.html":{}}}],["this.mustreload(item",{"_index":943,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.nam",{"_index":1959,"title":{},"body":{"components/IconComponent.html":{}}}],["this.nestedcrudconfig",{"_index":3901,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.ngzone.run",{"_index":1855,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.noapi",{"_index":3497,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noapi(api",{"_index":3519,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noclientid",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.notif",{"_index":951,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.notifications.add(notif",{"_index":2873,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.emit",{"_index":582,"title":{},"body":{"injectables/AuthGuard.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.notifications.remove(notif",{"_index":2877,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.removeall(notification.hid",{"_index":2863,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.defaulttim",{"_index":2860,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.emit",{"_index":950,"title":{},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.notificationservice.emitter$.subscribe((notif",{"_index":2861,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.observeelement(el",{"_index":1869,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.omittedfields.indexof(properti",{"_index":2742,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.opt",{"_index":1414,"title":{},"body":{"directives/EntriesDirective.html":{},"components/MediumEditorComponent.html":{},"components/UploadComponent.html":{}}}],["this.options.pag",{"_index":1409,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.options.placehold",{"_index":2577,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.pag",{"_index":2983,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{}}}],["this.page.first.nativeelement.clientwidth",{"_index":3030,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagecontain",{"_index":3027,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagecontainer.nativeelement.styl",{"_index":3035,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pages.length",{"_index":2984,"title":{},"body":{"classes/Pagination.html":{}}}],["this.pagin",{"_index":3024,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagination.change$.subscribe((config",{"_index":3025,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagination.getpag",{"_index":3031,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.par",{"_index":2657,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getlevel(++level",{"_index":2664,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getpath(this.rout",{"_index":2675,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parsetype(schema.properties[property].titl",{"_index":2774,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.paste.asobserv",{"_index":3571,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.placehold",{"_index":1621,"title":{},"body":{"classes/Field.html":{},"components/MediumEditorComponent.html":{}}}],["this.pop",{"_index":3343,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.cr",{"_index":3344,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.edit(item.getbodi",{"_index":3338,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.hid",{"_index":3360,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{}}}],["this.pop.show",{"_index":3364,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{}}}],["this.pops.foreach((pop",{"_index":2239,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.popservice.stack.add(thi",{"_index":3117,"title":{},"body":{"components/PopComponent.html":{}}}],["this.popservice.stack.remove(thi",{"_index":3119,"title":{},"body":{"components/PopComponent.html":{}}}],["this.preventdefault(",{"_index":3575,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.promis",{"_index":421,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.promises[key",{"_index":1919,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.propagatechang",{"_index":181,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.propagatechange(chang",{"_index":2060,"title":{},"body":{"components/InputComponent.html":{}}}],["this.propagatechange(this.editor.getvalu",{"_index":166,"title":{},"body":{"components/AceComponent.html":{}}}],["this.propagatechange(this.valu",{"_index":2581,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.propagatechange(valu",{"_index":2418,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.properti",{"_index":1623,"title":{},"body":{"classes/Field.html":{},"components/InputComponent.html":{},"components/SearchbarComponent.html":{}}}],["this.property}_${date.now",{"_index":1620,"title":{},"body":{"classes/Field.html":{}}}],["this.queri",{"_index":3584,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.readi",{"_index":154,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["this.ready.then",{"_index":3495,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.ready.then((editor",{"_index":163,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.ready.then(editor",{"_index":3822,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.redirect.next",{"_index":592,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.registri",{"_index":3692,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry.find(symbol",{"_index":3698,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry.indexof(this.get(symbol.nam",{"_index":3703,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry.push(symbol",{"_index":3704,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry[index",{"_index":3705,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.rel",{"_index":3336,"title":{},"body":{"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{}}}],["this.remove(item",{"_index":831,"title":{},"body":{"classes/Collection.html":{}}}],["this.removeall(undefin",{"_index":832,"title":{},"body":{"classes/Collection.html":{}}}],["this.resourc",{"_index":3352,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.resourceconfig.get('dmasset",{"_index":1669,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get('legacyasset",{"_index":1681,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get(rel",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resourceconfig.get(relation).permiss",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resourceservice.chang",{"_index":1510,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.resourceservice.changes.next",{"_index":1674,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"interfaces/Upload.html":{}}}],["this.resourceservice.del(this.rel",{"_index":3358,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.resourceservice.save(thi",{"_index":3391,"title":{},"body":{"classes/ResourceForm.html":{}}}],["this.roots[this._api.datamanagerid",{"_index":3494,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.rout",{"_index":2650,"title":{},"body":{"components/MenuComponent.html":{},"components/TabsComponent.html":{}}}],["this.route.children",{"_index":2651,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.route.param",{"_index":3580,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.router.events.subscribe((ev",{"_index":3746,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.navigate(['profil",{"_index":4787,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["this.router.navigate([tab.rout",{"_index":3762,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.url",{"_index":2659,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.indexof(path",{"_index":2661,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.split('?')[0",{"_index":1900,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.sanitized.bypasssecuritytrusthtml(valu",{"_index":3445,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["this.schemarequests[model",{"_index":3521,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk",{"_index":1516,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.sdk.account",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.emailavail",{"_index":4705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.sdk.accounts.m",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.signup(email",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api",{"_index":418,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"components/UploadComponent.html":{}}}],["this.sdk.api.asset(unresolved[0]).then(asset",{"_index":1697,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.assetgrouplist",{"_index":1706,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.assetlist",{"_index":1699,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createasset(data",{"_index":1676,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createassets(data",{"_index":1677,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createentry(model",{"_index":1069,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["this.sdk.api.dmassetlist(assetgroupid",{"_index":1692,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.emailavailable(email",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.entry(this.model",{"_index":946,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntryDirective.html":{}}}],["this.sdk.api.entrylist(this.model",{"_index":1413,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.sdk.api.logout",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.m",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.signup(email",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.getschema(model",{"_index":2764,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.init",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then((us",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then(account",{"_index":3479,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk.ready.then(us",{"_index":581,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.sdk.root.then((root",{"_index":357,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["this.sdk.sess",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.session.logout().catch",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.us",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.search.clear",{"_index":2415,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.search.searchinput.nativeelement.valu",{"_index":2421,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.searchbar",{"_index":523,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.searchbar.clear",{"_index":524,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.searchbar.focusevent.emit(tru",{"_index":525,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.searchinput",{"_index":2438,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.searchinput.nativeelement.valu",{"_index":2439,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.select",{"_index":534,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{}}}],["this.select(match",{"_index":3753,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.select(tab",{"_index":3757,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(event.url",{"_index":3747,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(this.router.url",{"_index":3758,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selected.deactiv",{"_index":3760,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selected.emit(new",{"_index":3590,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.selected.emit(select",{"_index":2174,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selected.emit(this.list.selection.items[0",{"_index":3601,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.selected.startof('day').diff(_mo",{"_index":1273,"title":{},"body":{"interfaces/Day.html":{}}}],["this.selectindex(index",{"_index":2188,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.isempti",{"_index":2185,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.removeal",{"_index":2187,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.select(this.list.items[index",{"_index":2184,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.toggle($ev",{"_index":536,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.selection.toggle(item",{"_index":2176,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.selection.update$.subscribe((select",{"_index":2173,"title":{},"body":{"components/ListComponent.html":{}}}],["this.sess",{"_index":3504,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.session.setclientid(environment.clientid",{"_index":3507,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.set",{"_index":3812,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.setd",{"_index":1215,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(_mo",{"_index":1267,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(day.date.clone().subtract(1",{"_index":1214,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(mo",{"_index":1282,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.d",{"_index":1230,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.date.clone().add(valu",{"_index":1281,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.select",{"_index":1228,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setmode(this.mod",{"_index":157,"title":{},"body":{"components/AceComponent.html":{}}}],["this.sets[key",{"_index":3695,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.sets[object.keys(this.sets)[0",{"_index":3694,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.settheme(this.them",{"_index":159,"title":{},"body":{"components/AceComponent.html":{}}}],["this.settotal(tot",{"_index":2981,"title":{},"body":{"classes/Pagination.html":{}}}],["this.setvalue(posit",{"_index":2371,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.show",{"_index":2326,"title":{},"body":{"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["this.solo",{"_index":2177,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.sorttype[types[0",{"_index":3648,"title":{},"body":{"classes/Sorter.html":{}}}],["this.spanchanged.emit(this.timespan",{"_index":1196,"title":{},"body":{"interfaces/Day.html":{}}}],["this.stack.add(promis",{"_index":2325,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.stack.items.length",{"_index":3134,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.items[this.stack.items.length",{"_index":3136,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.remove(latestpop",{"_index":3138,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.removeal",{"_index":2331,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.stringfield(this.symbol.resolve('field.label.nam",{"_index":3213,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.submit",{"_index":2535,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.success.emit",{"_index":3092,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.success.emit(_upload",{"_index":3972,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.success.emit(r",{"_index":2539,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.success.emit(us",{"_index":2461,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol",{"_index":3195,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.group",{"_index":3222,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.haspendingemail",{"_index":3218,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.languag",{"_index":3219,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.st",{"_index":3225,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('app.field.label.app",{"_index":3240,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('asset.field.label.assetgroupid",{"_index":3254,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('asset.field.label.fil",{"_index":3251,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('asset.field.label.thumb",{"_index":3247,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('client.field.label.callbackurl",{"_index":3283,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('client.field.label.clientid",{"_index":3281,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmaccount.field.label.haspassword",{"_index":3227,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmaccount.field.label.pend",{"_index":3229,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.assetid",{"_index":3272,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.capt",{"_index":3274,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.dupl",{"_index":3275,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.fil",{"_index":3267,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.thumbnail",{"_index":3277,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.typ",{"_index":3279,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('error",{"_index":1528,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.symbol.resolve('error.delet",{"_index":3362,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.symbol.resolve('error.input",{"_index":2082,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.input.invalid",{"_index":2083,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.load",{"_index":954,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.symbol.resolve('error.upload",{"_index":3976,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve('field.creator.ecus",{"_index":3914,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('field.label.config",{"_index":3187,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.cr",{"_index":2746,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.descript",{"_index":3186,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.email",{"_index":3214,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.id",{"_index":2744,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.label",{"_index":3290,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.modifi",{"_index":2751,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.nam",{"_index":3289,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.password",{"_index":3216,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.shortid",{"_index":3239,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.titl",{"_index":3250,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.typ",{"_index":3301,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('login.error",{"_index":2463,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('login.success",{"_index":2460,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('moment.format.d",{"_index":1148,"title":{},"body":{"pipes/DatetimePipe.html":{},"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('moment.format.month",{"_index":1190,"title":{},"body":{"interfaces/Day.html":{}}}],["this.symbol.resolve('moment.format.tim",{"_index":3912,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('platform.field.label.platform",{"_index":3243,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('platform.field.label.platformtyp",{"_index":3245,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('role.field.label.account",{"_index":3291,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('role.field.label.addregist",{"_index":3295,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('role.field.label.addunregist",{"_index":3297,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('searchbar.placehold",{"_index":3570,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.symbol.resolve('success.delet",{"_index":3359,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.symbol.resolve('success.upload",{"_index":3973,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve('template.field.label.templ",{"_index":3233,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('template.field.label.vers",{"_index":3235,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve(nam",{"_index":3672,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["this.tab",{"_index":3748,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.find((tab",{"_index":3750,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.foreach((tab",{"_index":3754,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tagsfield(this.symbol.resolve('account.field.label.permiss",{"_index":3221,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('asset.field.label.tag",{"_index":3252,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('client.field.label.disablestrategi",{"_index":3287,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('client.field.label.tokenmethod",{"_index":3285,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('datamanager.field.label.publicassetright",{"_index":3191,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('field.label.local",{"_index":3189,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.them",{"_index":158,"title":{},"body":{"components/AceComponent.html":{}}}],["this.thumb",{"_index":2009,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.tim",{"_index":2859,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.timeout",{"_index":2669,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.timespan",{"_index":1209,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timespan[1",{"_index":1251,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timestamp",{"_index":2328,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.tot",{"_index":2987,"title":{},"body":{"classes/Pagination.html":{}}}],["this.translatecontain",{"_index":3026,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.tre",{"_index":2149,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["this.typ",{"_index":2816,"title":{},"body":{"classes/Notification.html":{}}}],["this.typeconfig.displayaccount",{"_index":2753,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.displayd",{"_index":2747,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["this.typeconfig.get(type.nam",{"_index":2782,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.groupd",{"_index":2748,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["this.types[typ",{"_index":3906,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.upd",{"_index":1526,"title":{},"body":{"components/ErrorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.update(model",{"_index":1047,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["this.update(rel",{"_index":3424,"title":{},"body":{"injectables/ResourceService.html":{}}}],["this.update.asobserv",{"_index":777,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(thi",{"_index":826,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(this.editor",{"_index":3821,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.updateaddress",{"_index":2417,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.upload(fil",{"_index":3967,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadfiles(e.target.fil",{"_index":3961,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromis",{"_index":3968,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromise.then",{"_index":3978,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploads.emit(upload",{"_index":1673,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.url",{"_index":2013,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.us",{"_index":3512,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.use(this.ecimag",{"_index":2002,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.use(this.sets[key",{"_index":3697,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.usedatamanager(environment.datamanagerid",{"_index":3510,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.usedesktopnotif",{"_index":2912,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.uselist(list",{"_index":1416,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.uuid",{"_index":3180,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.valu",{"_index":160,"title":{},"body":{"components/AceComponent.html":{},"components/LocationMapComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["this.vanishdelay",{"_index":2673,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.vis",{"_index":495,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["those",{"_index":1614,"title":{},"body":{"classes/Field.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/core-classes/field.html":{}}}],["thought",{"_index":4859,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["three",{"_index":2715,"title":{},"body":{"injectables/ModelConfigService.html":{},"index.html":{}}}],["through",{"_index":1905,"title":{},"body":{"injectables/HistoryService.html":{},"components/PasswordResetComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["throw",{"_index":419,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["thrown",{"_index":1525,"title":{},"body":{"components/ErrorComponent.html":{}}}],["thumb",{"_index":1981,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["thumbnail",{"_index":3276,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["thumbsiz",{"_index":3259,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["tick",{"_index":3774,"title":{},"body":{"components/TinymceComponent.html":{}}}],["ticket",{"_index":4585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":506,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["timeout",{"_index":2596,"title":{},"body":{"components/MenuComponent.html":{}}}],["timespan",{"_index":1164,"title":{},"body":{"interfaces/Day.html":{}}}],["timestamp",{"_index":2286,"title":{},"body":{"components/LoaderComponent.html":{}}}],["tinymc",{"_index":3766,"title":{"additional-documentation/tinymce.html":{}},"body":{"components/TinymceComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinymce.html":{}}}],["tinymce'},{'nam",{"_index":290,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["tinymce.component.html",{"_index":3769,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce.component.scss",{"_index":3768,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce.init",{"_index":3810,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autolink",{"_index":3799,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autores",{"_index":3794,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/cod",{"_index":3795,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/colorpick",{"_index":3803,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/contextmenu",{"_index":3801,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/fullscreen",{"_index":3791,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/link",{"_index":3796,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/list",{"_index":3800,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/past",{"_index":3792,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/t",{"_index":3797,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/templ",{"_index":3793,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/textcolor",{"_index":3802,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/visualblock",{"_index":3798,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/themes/modern",{"_index":3790,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/tinymce.compon",{"_index":3829,"title":{},"body":{"modules/TinymceModule.html":{}}}],["tinymcecompon",{"_index":289,"title":{"components/TinymceComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tinymcemodul",{"_index":3824,"title":{"modules/TinymceModule.html":{}},"body":{"modules/TinymceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinymce.html":{}}}],["titel",{"_index":2740,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["titel&#39",{"_index":2732,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["titl",{"_index":400,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/item.html":{}}}],["titlefield",{"_index":3201,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["today",{"_index":1161,"title":{},"body":{"interfaces/Day.html":{}}}],["todo",{"_index":167,"title":{},"body":{"components/AceComponent.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["togeth",{"_index":1594,"title":{},"body":{"classes/Field.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/field.html":{}}}],["toggl",{"_index":450,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ListItemsComponent.html":{},"components/PopComponent.html":{},"components/SearchbarComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["toggle'},{'nam",{"_index":292,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["toggle(resourc",{"_index":1906,"title":{},"body":{"injectables/HistoryService.html":{}}}],["toggle(vis",{"_index":493,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{}}}],["toggle.component.html",{"_index":3833,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle.component.scss",{"_index":3832,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle/toggle.compon",{"_index":1775,"title":{},"body":{"modules/FormModule.html":{}}}],["togglecompon",{"_index":291,"title":{"components/ToggleComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["token",{"_index":4751,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["tokenmethod",{"_index":3284,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["tommi",{"_index":4863,"title":{},"body":{"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{}}}],["tommy'item",{"_index":4868,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.display('nam",{"_index":4865,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.getvalue('nam",{"_index":4889,"title":{},"body":{"additional-documentation/core-classes/form.html":{}}}],["tommy.group('nam",{"_index":4866,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.resolve('nam",{"_index":4864,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.sort('nam",{"_index":4867,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tool",{"_index":3845,"title":{},"body":{"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["toolbar",{"_index":3844,"title":{},"body":{"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["toolbar'},{'nam",{"_index":294,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["toolbar.component.html",{"_index":3847,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":3846,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar/toolbar.compon",{"_index":4000,"title":{},"body":{"modules/VcModule.html":{}}}],["toolbarcompon",{"_index":293,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/VcModule.html":{},"coverage.html":{},"overview.html":{}}}],["toolbox",{"_index":4560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["top",{"_index":4071,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["total",{"_index":2932,"title":{},"body":{"classes/Pagination.html":{}}}],["totop",{"_index":4595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touch",{"_index":3837,"title":{},"body":{"components/ToggleComponent.html":{}}}],["tower",{"_index":4528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["track",{"_index":1890,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["tranform",{"_index":2110,"title":{},"body":{"components/ListComponent.html":{}}}],["transfer",{"_index":4451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transform",{"_index":1143,"title":{},"body":{"pipes/DatetimePipe.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["transform(array",{"_index":2544,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["transform(field",{"_index":4004,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["transform(item",{"_index":1885,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["transform(nam",{"_index":3668,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["transform(valu",{"_index":1144,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/SafeHtmlPipe.html":{}}}],["transform:translatex",{"_index":3036,"title":{},"body":{"components/PaginationComponent.html":{}}}],["translat",{"_index":3007,"title":{},"body":{"components/PaginationComponent.html":{},"injectables/SymbolPipe.html":{}}}],["translatecontain",{"_index":3001,"title":{},"body":{"components/PaginationComponent.html":{}}}],["translation}px",{"_index":3037,"title":{},"body":{"components/PaginationComponent.html":{}}}],["transpar",{"_index":4601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trash",{"_index":4412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["tree.display('fruit",{"_index":4901,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["tree.display('nam",{"_index":4899,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["tri",{"_index":2443,"title":{},"body":{"components/LoginComponent.html":{}}}],["trigger",{"_index":2132,"title":{},"body":{"components/ListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/SearchbarComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["troubl",{"_index":4336,"title":{},"body":{"index.html":{}}}],["true",{"_index":25,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["trust",{"_index":3437,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["ts",{"_index":3502,"title":{},"body":{"injectables/SdkService.html":{},"index.html":{}}}],["tsc/app",{"_index":4349,"title":{},"body":{"index.html":{}}}],["tsconfig",{"_index":4343,"title":{},"body":{"index.html":{}}}],["tsconfig.json",{"_index":4332,"title":{},"body":{"index.html":{}}}],["tslint:dis",{"_index":1743,"title":{},"body":{"directives/FocusDirective.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["turn",{"_index":1306,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{},"interfaces/ListConfig.html":{}}}],["tutori",{"_index":4096,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes.html":{}}}],["twitter",{"_index":4578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":4084,"title":{},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["type",{"_index":64,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["type'",{"_index":3865,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["type.match(/^(\\w*)()?/i",{"_index":2758,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["type.rel",{"_index":2779,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typeconfig",{"_index":1648,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{}}}],["typeconfigservic",{"_index":1084,"title":{"injectables/TypeConfigService.html":{}},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["typed.isvalid",{"_index":1152,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["typeof",{"_index":1653,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["types.length",{"_index":3647,"title":{},"body":{"classes/Sorter.html":{}}}],["types[0",{"_index":3649,"title":{},"body":{"classes/Sorter.html":{}}}],["typescript",{"_index":816,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes.html":{}}}],["typic",{"_index":2841,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["uglifyj",{"_index":4334,"title":{},"body":{"index.html":{}}}],["ui",{"_index":883,"title":{"additional-documentation/ui.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{},"components/ResourceCrudComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["ui/src/list/list.component.html",{"_index":1449,"title":{},"body":{"components/EntryListComponent.html":{}}}],["ui/src/list/searchbar/searchbar.compon",{"_index":513,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["uimodul",{"_index":599,"title":{"modules/UiModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["ul",{"_index":3019,"title":{},"body":{"components/PaginationComponent.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":1013,"title":{},"body":{"injectables/CrudService.html":{},"injectables/GeocodeService.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{}}}],["under",{"_index":1909,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/Symbol.html":{}}}],["underlin",{"_index":4561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undo",{"_index":4591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unexpect",{"_index":2777,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["ungültig",{"_index":3895,"title":{},"body":{"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["uniqu",{"_index":779,"title":{},"body":{"classes/Collection.html":{},"interfaces/Symbol.html":{}}}],["unit",{"_index":4355,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["unresolv",{"_index":1683,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["unresolved.length",{"_index":1688,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["untertitel",{"_index":4657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["until",{"_index":2294,"title":{},"body":{"components/LoaderComponent.html":{},"components/SearchbarComponent.html":{}}}],["up",{"_index":1001,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/item.html":{}}}],["updat",{"_index":500,"title":{"interfaces/Update.html":{}},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/selectcomponent.html":{}}}],["update(model",{"_index":1031,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["update(rel",{"_index":3417,"title":{},"body":{"injectables/ResourceService.html":{}}}],["updateaddress",{"_index":2396,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["updateon",{"_index":1810,"title":{},"body":{"injectables/FormService.html":{}}}],["updates",{"_index":2936,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{}}}],["updatesize(s",{"_index":2968,"title":{},"body":{"classes/Pagination.html":{}}}],["updatesize(valu",{"_index":3012,"title":{},"body":{"components/PaginationComponent.html":{}}}],["upload",{"_index":296,"title":{"interfaces/Upload.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["upload(fil",{"_index":3946,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.assetgroup",{"_index":3981,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.component.html",{"_index":3923,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.ignoredupl",{"_index":3984,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.includeassetidinpath",{"_index":3983,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.preservefilenam",{"_index":3982,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload/upload.compon",{"_index":1733,"title":{},"body":{"modules/FilesModule.html":{}}}],["uploadasset",{"_index":1710,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadassets(fil",{"_index":1717,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadcompon",{"_index":295,"title":{"components/UploadComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uploadfil",{"_index":1711,"title":{},"body":{"injectables/FileService.html":{},"components/UploadComponent.html":{}}}],["uploadfiles(fil",{"_index":1675,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["uploadpromis",{"_index":3926,"title":{},"body":{"components/UploadComponent.html":{}}}],["upon",{"_index":1002,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["url",{"_index":1977,"title":{},"body":{"directives/ImageDirective.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["url.split",{"_index":3749,"title":{},"body":{"components/TabsComponent.html":{}}}],["url/id",{"_index":4687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlexpir",{"_index":3256,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["us",{"_index":55,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["usag",{"_index":1595,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["use(asset",{"_index":1995,"title":{},"body":{"directives/ImageDirective.html":{}}}],["use(load",{"_index":2340,"title":{},"body":{"injectables/LoaderService.html":{}}}],["use(symbol",{"_index":3685,"title":{},"body":{"injectables/SymbolService.html":{}}}],["usedatamanag",{"_index":3456,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedatamanager(shortid",{"_index":3470,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedesktopnotif",{"_index":2886,"title":{},"body":{"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{}}}],["useexist",{"_index":143,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["uselegacyasset",{"_index":4019,"title":{},"body":{"changelog.html":{}}}],["uselist",{"_index":1382,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["uselist(entrylist",{"_index":1401,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["user",{"_index":561,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"miscellaneous/variables.html":{}}}],["users/kon/workspace/0.entrecode/nwb.admin/node_modules/@ec.components/data/src/auth/auth.service.t",{"_index":4339,"title":{},"body":{"index.html":{}}}],["uses",{"_index":3875,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["useset",{"_index":3675,"title":{},"body":{"injectables/SymbolService.html":{}}}],["useset(key",{"_index":3687,"title":{},"body":{"injectables/SymbolService.html":{}}}],["usevalu",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["utility/focus/focus.interfac",{"_index":3568,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["utility/utility.modul",{"_index":2272,"title":{},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["utilitymodul",{"_index":2269,"title":{"modules/UtilityModule.html":{}},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["uuid",{"_index":3144,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ux",{"_index":3064,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["v",{"_index":4589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":1544,"title":{},"body":{"classes/Field.html":{},"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"interfaces/Symbol.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["validatefactori",{"_index":1789,"title":{},"body":{"injectables/FormService.html":{}}}],["validatefactory(field",{"_index":1798,"title":{},"body":{"injectables/FormService.html":{}}}],["validationerror",{"_index":1801,"title":{},"body":{"injectables/FormService.html":{}}}],["validatorfn",{"_index":1797,"title":{},"body":{"injectables/FormService.html":{},"miscellaneous/variables.html":{}}}],["validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":4706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.push(this.validatefactory(field",{"_index":1818,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.push(validators.requir",{"_index":1817,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.requir",{"_index":2525,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["validators.t",{"_index":4255,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validators/field",{"_index":2519,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["valu",{"_index":38,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["value.hasownproperty(key",{"_index":1065,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["value.latitud",{"_index":3904,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.length",{"_index":1599,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceConfig.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["value.longitud",{"_index":3903,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.map(group",{"_index":3223,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["value.match(this.list.config.identifierpattern",{"_index":3589,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["value.nam",{"_index":3905,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.split",{"_index":3891,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.titl",{"_index":3292,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{}}}],["value.touppercas",{"_index":1598,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["value.url",{"_index":3268,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["value[key",{"_index":1066,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["values.map(valu",{"_index":3278,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["vanishdelay",{"_index":2608,"title":{},"body":{"components/MenuComponent.html":{}}}],["var",{"_index":188,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["variabl",{"_index":662,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/AuthService.html":{},"components/TabsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["variables[key",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["variou",{"_index":2280,"title":{},"body":{"components/LoaderComponent.html":{}}}],["vc",{"_index":218,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["vcmodul",{"_index":3994,"title":{"modules/VcModule.html":{}},"body":{"modules/VcModule.html":{},"modules.html":{},"overview.html":{}}}],["vector",{"_index":4559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vergeben",{"_index":4389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["verifi",{"_index":1858,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["versendet",{"_index":3083,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["version",{"_index":3234,"title":{},"body":{"injectables/ResourceConfig.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["versions:npm",{"_index":4308,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":4418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":567,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Config.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/TabsComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/list.html":{}}}],["viabl",{"_index":1611,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["video",{"_index":4562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":1172,"title":{},"body":{"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["viewchild",{"_index":106,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["viewchild('contain",{"_index":147,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{}}}],["viewchild('fileinput",{"_index":3955,"title":{},"body":{"components/UploadComponent.html":{}}}],["viewchild('filterform",{"_index":2237,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["viewchild('globalload",{"_index":2305,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["viewchild('localload",{"_index":2307,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["viewchild('pagecontain",{"_index":3021,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewchild('search",{"_index":2437,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["viewchild(calendarcompon",{"_index":1136,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["viewchild(entrylistcompon",{"_index":925,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(entrypopcompon",{"_index":926,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(loadercompon",{"_index":927,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["viewchild(locationmapcompon",{"_index":2413,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(locationsearchcompon",{"_index":2414,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(popcompon",{"_index":3356,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{}}}],["viewchild(resourcelistcompon",{"_index":3333,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(resourcepopcompon",{"_index":3334,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(searchbarcompon",{"_index":518,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["viewchild(slothostdirect",{"_index":1369,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewchildren",{"_index":2231,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/PaginationComponent.html":{}}}],["viewchildren('filterpop",{"_index":2236,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["viewchildren('pag",{"_index":3022,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewcontain",{"_index":3615,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["viewcontainerref",{"_index":1351,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/SlotHostDirective.html":{}}}],["viewcontainerref.clear",{"_index":1373,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewcontainerref.createcomponent(componentfactori",{"_index":1374,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewencapsul",{"_index":2162,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["viewencapsulation.non",{"_index":2113,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["visibl",{"_index":454,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"classes/Field.html":{},"modules/FormModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"changelog.html":{}}}],["visiblefield",{"_index":4003,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["visiblefieldspip",{"_index":1760,"title":{"pipes/VisibleFieldsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["visualblock",{"_index":4625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":77,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["volum",{"_index":4543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wait",{"_index":2287,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["wait(promis",{"_index":2292,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["wand",{"_index":4588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["want",{"_index":2038,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ace.html":{}}}],["war",{"_index":4385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warn",{"_index":1945,"title":{},"body":{"components/IconComponent.html":{}}}],["water",{"_index":4605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["way",{"_index":59,"title":{},"body":{"components/AceComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["week",{"_index":1132,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["weekday",{"_index":1113,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["wei",{"_index":4648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":4609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weiteren",{"_index":3088,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["well",{"_index":1346,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["werden",{"_index":588,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["wether",{"_index":1557,"title":{},"body":{"classes/Field.html":{}}}],["whenev",{"_index":2028,"title":{},"body":{"components/InputComponent.html":{}}}],["whistl",{"_index":4608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whiteboard",{"_index":4425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whole",{"_index":1613,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"injectables/ResourceConfig.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["whose",{"_index":1459,"title":{},"body":{"components/EntryListComponent.html":{},"components/PopComponent.html":{}}}],["width:${(1",{"_index":3039,"title":{},"body":{"components/PaginationComponent.html":{}}}],["wifi",{"_index":4441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wildcard",{"_index":1581,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["window",{"_index":2908,"title":{},"body":{"injectables/NotificationsService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["window.addeventlistener('keydown",{"_index":3130,"title":{},"body":{"injectables/PopService.html":{}}}],["window.notification(notification.titl",{"_index":2923,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.permiss",{"_index":2915,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.requestpermission().then((permiss",{"_index":2916,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["withload",{"_index":863,"title":{"interfaces/WithLoader.html":{}},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{}}}],["withnotif",{"_index":864,"title":{"interfaces/WithNotifications.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["without",{"_index":986,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/form.html":{}}}],["won't",{"_index":4765,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["wont",{"_index":2500,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["work",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["workaround",{"_index":138,"title":{},"body":{"components/AceComponent.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":11,"title":{},"body":{"components/AceComponent.html":{},"injectables/GeocodeService.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["wrapper",{"_index":4823,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/item.html":{}}}],["write",{"_index":101,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["writevalu",{"_index":52,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["writevalue(valu",{"_index":99,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["written",{"_index":4286,"title":{},"body":{"index.html":{}}}],["wrote",{"_index":4094,"title":{},"body":{"changelog.html":{}}}],["wurst",{"_index":4878,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["wurst'sav",{"_index":4881,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["x",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["x.ui",{"_index":4278,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["x.ui/src/_config",{"_index":4740,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x.ui/src/x.ui",{"_index":4741,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x1f3b5",{"_index":4717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4b0",{"_index":4711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4c5",{"_index":4714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4e7",{"_index":4718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4f7",{"_index":4715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f50d",{"_index":4719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f516",{"_index":4712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f5a5",{"_index":4716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f682;&#x1f683;&#x1f683;&#x1f683",{"_index":360,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["x1f68c",{"_index":4713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xing",{"_index":4579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xlcss/sass/xlcss.scss",{"_index":4739,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["xxxxxxxx",{"_index":4749,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["yarn",{"_index":4735,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ye",{"_index":392,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/EntryListComponent.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["yield",{"_index":1009,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["youtub",{"_index":4580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yt",{"_index":4686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yturl",{"_index":4689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yturl[1",{"_index":4697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yyyi",{"_index":1185,"title":{},"body":{"interfaces/Day.html":{}}}],["z",{"_index":2785,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["z0",{"_index":1656,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["z]+))?)/g.exec(yt",{"_index":4695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]+.)?)(?:youtu\\.?be(?:\\.com)?\\/)(?:embed\\/)?(?:(?:(?:(?:watch\\?)?(?:time_continue=(?:[0",{"_index":4691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]{2",{"_index":4710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["za",{"_index":1655,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["zone",{"_index":1307,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["zone.j",{"_index":4281,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":323,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["zurücksetzen",{"_index":3094,"title":{},"body":{"components/PasswordResetComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AceComponent.html":{"url":"components/AceComponent.html","title":"component - AceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ace/src/ace.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps ace editor as angular component. Implements ControlValueAccessor!\nhttps://components.entrecode.de/misc/ace\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-ace\n            \n\n            \n                styleUrls\n                ace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ace.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                input\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setMode\n                            \n                            \n                                setTheme\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mode\n                    \n                    \n                        mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:48\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            creates new ace instance if not present and sets mode and theme if given \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Re-inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setMode\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetMode(mode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Sets the editor mode to the specified language (after ace/mode/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTheme(theme: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Sets the editor theme to the specified theme (after ace/theme/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:40\n                            \n                        \n\n                \n                    \n                        container element for ace editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:26\n                            \n                        \n\n                \n                    \n                        The ace editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     InputComponent\n\n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:36\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:34\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:30\n                            \n                        \n\n                \n                    \n                        The current value of the editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ElementRef, ViewChild, Input, OnChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent } from '@ec.components/ui';\n// import 'ace-builds/src-noconflict/ace.js';\n\n/** Workaround that expects ace to be imported somewhere else... */\ndeclare const ace: any;\n/** Wraps ace editor as angular component. Implements ControlValueAccessor!\n *\n * https://components.entrecode.de/misc/ace\n*/\n@Component({\n    selector: 'ec-ace',\n    templateUrl: 'ace.component.html',\n    styleUrls: ['ace.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => AceComponent),\n            multi: true\n        }\n    ]\n})\nexport class AceComponent extends DefaultInputComponent implements ControlValueAccessor, OnInit, OnChanges {\n    /** The ace editor instance */\n    editor: any;\n    /**\n     * The current value of the editor\n     */\n    value = '';\n    /**\n     * Promise that resolves when the editor has been initialized.\n     */\n    ready: Promise;\n    /** Form input component */\n    input: InputComponent;\n    /**\n     * container element for ace editor\n     */\n    @ViewChild('container') container: ElementRef;\n    /**\n     * mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n     */\n    @Input() mode: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-modelist.js\n    /**\n     * theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n     */\n    @Input() theme: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-themelist.js\n\n    /** creates new ace instance if not present and sets mode and theme if given */\n    init() {\n        if (!this.editor) {\n            this.editor = ace.edit(this.container.nativeElement);\n        }\n        this.ready = Promise.resolve(this.editor);\n        if (this.mode) {\n            this.setMode(this.mode);\n        }\n        if (this.theme) {\n            this.setTheme(this.theme);\n        }\n        if (this.value) {\n            this.editor.setValue(this.value, 1);\n        }\n        this.ready.then((editor) => {\n            editor.on('change', (e) => {\n                this.propagateChange(this.editor.getValue());\n                // TODO: find a way to omit this line in custom components and hook to change from input.component or form.component\n                if (this.input) {\n                    this.input.propagateChange(this.editor.getValue());\n                }\n            });\n        });\n    }\n    /** Sets the editor mode to the specified language (after ace/mode/) */\n    setMode(mode: string) {\n        this.mode = mode;\n        if (!this.editor) {\n            return;\n        }\n        this.editor.session.setMode('ace/mode/' + this.mode);\n    }\n\n    /** Sets the editor theme to the specified theme (after ace/theme/) */\n    setTheme(theme: string) {\n        this.theme = theme;\n        if (!this.editor) {\n            return;\n        }\n        this.editor.setTheme('ace/theme/' + this.theme);\n    }\n\n    /** Inits the editor */\n    ngOnInit() {\n        this.init();\n    }\n    /** Re-inits the editor */\n    ngOnChanges() {\n        this.init();\n    }\n\n    /** writes value to editor on outside model change. */\n    writeValue(value: any) {\n        this.value = value || '';\n        if (!this.ready) {\n            return;\n        }\n        this.ready.then((editor) => {\n            editor.setValue(this.value, 1);\n        });\n    }\n\n    propagateChange = (_: any) => {\n    };\n\n    /** Registers change callback */\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() {\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AceModule.html":{"url":"modules/AceModule.html","title":"module - AceModule","body":"\n                   \n\n\n\n\n  Modules\n  AceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->AceComponent -->\n\n{\n    : , : (() => ), : true\n}->AceComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ace/src/ace.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AceComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AceComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AceComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { AceComponent } from './ace.component';\n\n@NgModule({\n    imports: [],\n    exports: [AceComponent],\n    declarations: [AceComponent],\n    entryComponents: [AceComponent],\n    providers: [],\n})\nexport class AceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminEntryInputComponent.html":{"url":"components/AdminEntryInputComponent.html","title":"component - AdminEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-form/admin-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that require having the DatamanagerResource as api.\nThis is currently relevant for account and role fields which come from the ec.api.\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./admin-entry-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     DataManagerResource\n\n                    \n                \n                    \n                        \n                            Type :     DataManagerResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { SdkService } from '@ec.components/data/src/sdk/sdk.service';\nimport { Component } from '@angular/core';\nimport { DefaultInputComponent } from '@ec.components/ui/src/form/default-input/default-input.component';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\n\n/** This component holds the input templates for all field types that require having the DatamanagerResource as api.\n * This is currently relevant for account and role fields which come from the ec.api.\n */\n@Component({\n    templateUrl: './admin-entry-input.component.html',\n})\nexport class AdminEntryInputComponent extends DefaultInputComponent {\n    api: DataManagerResource;\n    constructor(public sdk: SdkService) {\n        super();\n        this.sdk.root.then((root) => this.api = root);\n    }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AssetDirective.html":{"url":"directives/AssetDirective.html","title":"directive - AssetDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  AssetDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/asset/asset.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset by id to the template. \n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecAsset]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asset\n                            \n                            \n                                promise\n                            \n                            \n                                    Public\n                                sdk\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetId\n                            \n                            \n                                autoload\n                            \n                            \n                                ecAsset\n                            \n                            \n                                levels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/asset/asset.directive.ts:27\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The api to use. Defaults to sdk.api \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetId\n                    \n                    \n                        The asset id that should be loaded\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the asset be loaded immediately? Defaults to true \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ecAsset\n                    \n                    \n                        The asset id that should be loaded\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                    \n                        The levels to use. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:21\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                    \n                        Fires as soon as the asset has been loaded. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:25\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:45\n                            \n                        \n\n\n                \n                    \n                            Loads the asset. Can be called from template when using autoload=false \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:34\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the asset will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            asset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        asset:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:27\n                            \n                        \n\n                \n                    \n                        The current loaded asset \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:13\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ecAsset\nThis directive can be used to load a single asset directly from the template:\n\n  id: {{myAsset.asset?.assetID}}\n  title: {{myAsset.asset?.title}}\n  tags: {{myAsset.asset?.tags}}\n  created: {{myAsset.asset?.created}}\n  type: {{myAsset.asset?.type}}\n  files: {{myAsset.asset?.files?.length}}\n\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { SdkService } from '../../sdk/sdk.service';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\n\n/** Loads an public asset by id to the template. */\n@Directive({\n  selector: '[ecAsset]',\n  exportAs: 'ecAsset'\n})\nexport class AssetDirective implements OnChanges {\n  /** The loading promise */\n  promise: any;\n  /** The asset id that should be loaded*/\n  @Input() assetId: string;\n  /** The asset id that should be loaded*/\n  @Input() ecAsset: string;\n  /** Should the asset be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** The api to use. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Fires as soon as the asset has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The current loaded asset */\n  public asset: any;\n\n  /** Injects the sdk */\n  constructor(public sdk: SdkService) {\n  }\n\n  /** as soon as model and id are known, the asset will be loaded. */\n  ngOnChanges() {\n    if (this.ecAsset) {\n      this.assetId = this.ecAsset;\n    }\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the asset. Can be called from template when using autoload=false */\n  load(id?: string) {\n    this.assetId = id || this.assetId;\n    if (!this.assetId) {\n      return Promise.reject('cannot load asset: no assetId is set');\n    }\n    const api = this.api || this.sdk.api;\n    if (!api) {\n      throw new Error('cannot load asset: no api was set!');\n    }\n    this.promise = api.asset(this.assetId)\n      .then((asset) => {\n        this.asset = asset;\n        this.loaded.emit(asset);\n        return asset;\n      });\n    return this.promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetListPopComponent.html":{"url":"components/AssetListPopComponent.html","title":"component - AssetListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/files/asset-list-pop/asset-list-pop.component.ts\n\n\n    \n        Description\n    \n    \n        Entry Pop is an extension of Pop component to host an entry-form.\nYou can use it like a normal pop but with the extra handling of an entry form inside.\nYou can call edit with an entry object to edit an entry, or just call show.\nIt is also possible to bind an entry directly which will then be bound to the form.\n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-asset-list-pop\n            \n\n            \n                styleUrls\n                asset-list-pop.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./asset-list-pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assetGroups\n                            \n                            \n                                    Public\n                                groupChange\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                searchbar\n                            \n                            \n                                delay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGroupRelation\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                select\n                            \n                            \n                                setGroup\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                config\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                groupChanged\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, auth: AuthService, fileService: FileService, sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:40\n                            \n                        \n\n                \n                    \n                            Injects auth service and calls super constructor. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                        The assetGroupID that should be picked from. If empty, legacy assets are used \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        CrudConfig for customizing the entry-form and the pop.\n\n                            \n                            Type:    CrudConfig\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The used selection \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                    \n                        If true, .visible is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Event emitter on item selection \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                    \n                        Emits when the group changes \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        Emits the value of visible on change. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getGroupRelation\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetGroupRelation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Returns the full resource relation name based on the current assetGroupID  \n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            emits columnClicked event or toggles selection if no observers. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGroup(group: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Changes the assetGroupID to the given value, emits groupChange \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:52\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. First removes visible and after the delay it removes active. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:43\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. First sets active and after the delay it sets visible. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(visible: boolean, emit: boolean)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:31\n                            \n                        \n\n\n                \n                    \n                            Shows if not visible, hides if visible. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        visible\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                !this.visible\n                                                        \n\n                                                \n                                                \n                                                        emit\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            assetGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        assetGroups:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:38\n                            \n                        \n\n                \n                    \n                        The loaded assetGroups \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groupChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groupChange:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:36\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items update \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchbar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchbar:     SearchbarComponent\n\n                    \n                \n                    \n                        \n                            Type :     SearchbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:40\n                            \n                        \n\n                \n                    \n                        The nested searchbar \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:25\n                            \n                        \n\n                \n                    \n                        The amount of time between setting active and visible. Defaults to 0. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { Item, Selection } from '@ec.components/core';\nimport { SdkService } from '@ec.components/data';\nimport { PopComponent } from '@ec.components/ui/src/pop/pop.component';\nimport { PopService } from '@ec.components/ui/src/pop/pop.service';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { Subject } from 'rxjs/Subject';\nimport { SearchbarComponent } from '../../../../ui/src/list/searchbar/searchbar.component';\nimport { AuthService } from '../../auth/auth.service';\nimport { CrudConfig } from '../../crud/crud-config.interface';\nimport { FileService } from '../file.service';\n\n/** Entry Pop is an extension of Pop component to host an entry-form.\n * You can use it like a normal pop but with the extra handling of an entry form inside.\n * You can call edit with an entry object to edit an entry, or just call show.\n * It is also possible to bind an entry directly which will then be bound to the form.\n * */\n@Component({\n  selector: 'ec-asset-list-pop',\n  templateUrl: './asset-list-pop.component.html',\n  styleUrls: ['./asset-list-pop.component.scss']\n})\n\nexport class AssetListPopComponent extends PopComponent implements OnInit {\n  /** CrudConfig for customizing the entry-form and the pop.*/\n  @Input() config: CrudConfig = {};\n  /** The used selection */\n  @Input() selection: Selection;\n  /** The assetGroupID that should be picked from. If empty, legacy assets are used */\n  @Input() assetGroupID: string;\n  /** Event emitter on item selection */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  /** Emits when the group changes */\n  @Output() groupChanged: EventEmitter = new EventEmitter();\n  /** Subject that is nexted when the items update */\n  public groupChange: Subject = new Subject();\n  /** The loaded assetGroups */\n  public assetGroups: string[];\n  /** The nested searchbar */\n  @ViewChild(SearchbarComponent) searchbar: SearchbarComponent;\n\n  /** Injects auth service and calls super constructor. */\n  constructor(protected popService: PopService,\n    private auth: AuthService,\n    private fileService: FileService,\n    public sdk: SdkService) {\n    super(popService);\n  }\n\n  /** Changes the assetGroupID to the given value, emits groupChange */\n  setGroup(group) {\n    if (!group) {\n      return;\n    }\n    this.groupChanged.emit(group);\n    if (this.searchbar) {\n      this.searchbar.clear();\n      this.searchbar.focusEvent.emit(true);\n    }\n    this.assetGroupID = group;\n  }\n\n  ngOnInit() {\n    this.fileService.assetGroupList().then(assetGroups => {\n      this.assetGroups = assetGroups\n      /* if (!this.assetGroupID) {\n        this.assetGroupID = assetGroups[0] || 'legacyAsset';\n        this.groupChanged.emit(this.assetGroupID);\n      } */\n    });\n  }\n\n  /** emits columnClicked event or toggles selection if no observers. */\n  select($event) {\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit($event);\n    } else if (this.selection) {\n      console.log('selection', this.selection);\n      // this.selection.toggle($event);\n    }\n  }\n\n  /** Returns the full resource relation name based on the current assetGroupID  */\n  getGroupRelation() {\n    return !this.assetGroupID || this.assetGroupID === 'legacyAsset' ? 'legacyAsset'\n      : 'dmAsset.' + this.assetGroupID;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n\n      \n\n      \n        Drop to upload!\n      \n      \n        \n        Hochladen\n      \n      \n        \n        \n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Drop to upload!                            Hochladen                                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetgroupSelectComponent.html":{"url":"components/AssetgroupSelectComponent.html","title":"component - AssetgroupSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetgroupSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/files/assetgroup-select/assetgroup-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-assetgroup-select\n            \n\n\n\n\n            \n                templateUrl\n                ./assetgroup-select.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                assetGroups\n                            \n                            \n                                disableLegacy\n                            \n                            \n                                placeholder\n                            \n                            \n                                readOnly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroups\n                    \n                    \n                            \n                            Type:    string[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableLegacy\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        \n                            Default value: 'select assetgroup..'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileService:     FileService\n\n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FileService } from '..';\n\n@Component({\n    selector: 'ec-assetgroup-select',\n    templateUrl: './assetgroup-select.component.html',\n})\n\nexport class AssetgroupSelectComponent implements OnInit {\n    @Input() placeholder = 'select assetgroup..';\n    @Input() assetGroupID: string;\n    @Input() assetGroups: string[];\n    @Input() disableLegacy: boolean;\n    @Input() readOnly: boolean;\n    @Output() groupChanged: EventEmitter = new EventEmitter();\n\n    constructor(\n        public fileService: FileService\n    ) { }\n\n    ngOnInit() {\n        this.fileService.assetGroupList().then(assetGroups => this.assetGroups = assetGroups);\n    }\n}\n\n    \n\n    \n        \n    {{placeholder}}\n    {{assetGroup}}\n    legacy Assets\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{placeholder}}    {{assetGroup}}    legacy Assets'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetgroupSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/auth/auth-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                This guard can be used on routes that only can be activated when a user is present in the SdkService.\nIf no user is found, an error message is shown. You can then react via the redirect output. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/auth-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth-guard.service.ts:17\n                            \n                        \n\n\n                \n                    \n                            Checks if the sdk contains a user, if not an error message is shown. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        redirect:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/auth-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the user check fails. (Meant to be used for redirecting to another page e.g. login) \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { SdkService } from '@ec.components/data/src/sdk/sdk.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport { Subject } from 'rxjs/Subject';\n\n/** This guard can be used on routes that only can be activated when a user is present in the SdkService.\n * If no user is found, an error message is shown. You can then react via the redirect output. */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  /** Subject that is nexted when the user check fails. (Meant to be used for redirecting to another page e.g. login) */\n  redirect: Subject = new Subject();\n\n  constructor(private sdk: SdkService, private notifications: NotificationsService) {\n  }\n  /** Checks if the sdk contains a user, if not an error message is shown. */\n  canActivate() {\n    return this.sdk.ready.then(user => {\n      if (!!user) {\n        return true;\n      }\n      this.notifications.emit({\n        type: 'error',\n        title: 'Diese Seite kann nicht angezeigt werden.',\n        message: 'Sie sind nicht eingeloggt.'\n      });\n      this.redirect.next();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\n()\n\n()\n\nAuthModule -->\n\n()->AuthModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAuthModule -->\n\nAuthGuard->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/auth/auth.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for all auth related components and services. \n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                            \n                                PasswordResetComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuard\n                            \n                            \n                                     AuthService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ()\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                            \n                                    PasswordResetComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CookieModule } from 'ngx-cookie';\nimport { UiModule } from '@ec.components/ui/src/ui.module';\nimport { PasswordResetComponent } from './password-reset/password-reset.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './auth-guard.service';\nimport { AuthService } from './auth.service';\n\n/** loads CookieModule */\nexport function cookieFactory(): ModuleWithProviders {\n  // https://github.com/auth0/angular2-jwt/issues/305\n  return CookieModule.forRoot();\n}\n/** Module for all auth related components and services. */\n@NgModule({\n  declarations: [\n    PasswordResetComponent,\n    LoginComponent\n  ],\n  imports: [\n    cookieFactory(),\n    CommonModule,\n    ReactiveFormsModule,\n    UiModule\n  ],\n  exports: [\n    ReactiveFormsModule,\n    PasswordResetComponent,\n    LoginComponent,\n  ],\n  providers: [AuthGuard, AuthService]\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n{\nprovide: \"environment\",\nuseValue: {\ndatamanagerID: \"83cc6374\",\nenvironment: \"stage\",\nclientID: \"rest\"\n}\n}The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPermission\n                            \n                            \n                                getAccount\n                            \n                            \n                                getAllowedModelMethods\n                            \n                            \n                                getAllowedResourceMethods\n                            \n                            \n                                getApi\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                noClientID\n                            \n                            \n                                resetPassword\n                            \n                            \n                                resolveVariables\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceConfig: ResourceConfig, environment: , sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/auth.service.ts:26\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckPermission(permission: string, api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:68\n                            \n                        \n\n\n                \n                    \n                            checks given public permission for given api, defaults to this.sdk.api. Also works as ec user \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permission\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedModelMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedModelMethods(model: string, methods?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:114\n                            \n                        \n\n\n                \n                    \n                            Returns an array of all allowed methods for the given relation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedResourceMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedResourceMethods(relation: string, variables: Object, methods?: string[], api?: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApi\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApi(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:158\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined: , api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Generic login that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout(api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:148\n                            \n                        \n\n\n                \n                    \n                            Generic logout that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noClientID\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoClientID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:172\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(email: , api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            Generic password reset that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveVariables\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolveVariables(string: string, variables: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            replaces all variables by values in a string \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(undefined: , api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Generic Signup, works for accounts API and PublicAPI \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport Core from 'ec.sdk/lib/Core';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class AuthService {\n\n  /** Calls init and sets ready to true when finished. */\n  constructor(private resourceConfig: ResourceConfig, @Inject('environment') private environment, private sdk: SdkService) {\n  }\n\n  /** Generic login that works with both public and admin API. */\n  login({ email, password }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.session;\n        return !_api ? Promise.reject('api_not_found') : _api.login(email, password);\n      }).then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  /** Generic Signup, works for accounts API and PublicAPI */\n  signup({ email, password, invite }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api ? api.signup() : this.sdk.api.signup(email, password, invite)\n      .catch(() => this.sdk.accounts.signup(email, password, invite))\n      .then((res) => {\n        return this.sdk.init();\n      })\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.sdk.api) {\n    return api.me().then((account) => {\n      return account || this.sdk.accounts.me();\n    }).catch((err) => {\n      return this.sdk.api.me();\n    });\n  }\n\n  /** checks given public permission for given api, defaults to this.sdk.api. Also works as ec user */\n  checkPermission(permission: string, api?) {\n    return this.sdk.ready.then((user) => {\n      api = api || this.sdk.user;\n      return api.checkPermission(permission);\n    })\n  }\n  /** replaces all variables by values in a string */\n  resolveVariables(string: string, variables: Object) {\n    Object.keys(variables).forEach((key) => {\n      string = string.replace(``, variables[key]);\n    });\n    return string;\n  }\n\n  /** Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. */\n  getAllowedResourceMethods(relation: string, variables: Object = {}, methods?: string[], api?: Core): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    if (!this.resourceConfig.get(relation) || !this.resourceConfig.get(relation).permissions) {\n      /* console.warn(`relation ${relation} has no defined permissions, defaulting to all methods available`); */\n      return Promise.resolve(['get', 'post', 'put', 'delete']);\n    }\n    const permissions = this.resourceConfig.get(relation).permissions;\n    return Object.keys(permissions)\n      .map((method) => (results) => {\n        return !permissions[method] ? Promise.resolve(results) :\n          permissions[method] === true ? Promise.resolve(results.concat(method)) :\n            this.checkPermission(`${this.resolveVariables(permissions[method], variables)}`, api)\n              .then(res => {\n                if (res) {\n                  results.push(method);\n                }\n                return results;\n              }).catch(err => {\n                return results;\n              })\n      })\n      .reduce((a, b) => a.then(r => b(r)), Promise.resolve([]))\n      .then(_methods => {\n        _methods.filter(x => !!x);\n        return _methods;\n      });\n  }\n\n  /** Returns an array of all allowed methods for the given relation */\n  getAllowedModelMethods(model: string, methods?: string[]): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    return ['get', 'post', 'put', 'delete']\n      .map((method) => (results) =>\n        this.checkPermission(`${model}:${method}`, this.sdk.api)\n          .then(res => {\n            if (res) {\n              results.push(method);\n            }\n            return results;\n          })\n      )\n      .reduce((a, b) => a.then(r => b(r)), Promise.resolve([]))\n      .then(_methods => {\n        _methods.filter(x => !!x);\n        return _methods;\n      });\n  }\n\n  /** Generic password reset that works with both public and admin API. */\n  resetPassword(email, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.accounts;\n        return !_api ? Promise.reject('api_not_found') : _api.resetPassword(email);\n      });\n  }\n\n  /** Generic logout that works with both public and admin API. */\n  logout(api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api ? api.logout() : this.sdk.session.logout().catch(() => this.sdk.api.logout())\n      .then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  getApi(email: string) {\n    if (!this.sdk.api && !this.sdk.accounts) {\n      return Promise.reject('no_api_found');\n    }\n    return this.sdk.api.emailAvailable(email)\n      .then((available) => {\n        if (!available) {\n          return this.sdk.api;\n        }\n      }).catch(() => {\n        return;\n      });\n  }\n\n  noClientID() {\n    if (!this.environment.clientID) {\n      return `\nNo clientID set in environment! To enable all auth related functionalities,\nyou can create a client in your datamanager settings and provide it with your environment:\n\n  providers: [\n    {\n      provide: 'environment',\n      useValue: {\n        datamanagerID: '83cc6374',\n        clientID: 'myClient',\n      }\n    }\n  ]\n`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Collection.html":{"url":"classes/Collection.html","title":"class - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Collection\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/collection/collection.ts\n        \n\n            \n                Description\n            \n            \n                A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Public\n                                update$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addAll\n                            \n                            \n                                has\n                            \n                            \n                                hasAll\n                            \n                            \n                                index\n                            \n                            \n                                isEmpty\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                replaceWith\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: Array)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/collection/collection.ts:15\n                            \n                        \n\n                \n                    \n                            Constructs the collection with the given item Array (optional).\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                                    Example :\n                                        \n                                            const numbers = new Collection([1, 2, 3]);\n                                        \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:11\n                            \n                        \n\n                \n                    \n                        The items must all have the same type T.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     Subject>\n\n                    \n                \n                    \n                        \n                            Type :     Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:13\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items update \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            update$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update$:     Observable>\n\n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                    \n                        \n                            Default value : this.update.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:15\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items change \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(item: T, unique?: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:72\n                            \n                        \n\n\n                \n                    \n                            Adds the given item to the Collection. If the unique flag is set, the item will only be added\nif it is not contained.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.add(4);\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAll\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAll(items: Array, unique: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:90\n                            \n                        \n\n\n                \n                    \n                            Adds the given items to the Collection. If the unique flag is set, only items that are not\ncontained will be added.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.addAll([5, 6, 7]);\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            has\n                            \n                            \n                        \n                    \n                \n                \n                    \nhas(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:43\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains the given item.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.has(2); //true\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasAll(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:54\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains all given items.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.has([1,2]); //true\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            index\n                            \n                            \n                        \n                    \n                \n                \n                    \nindex(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:32\n                            \n                        \n\n\n                \n                    \n                            Returns the index of the given item \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisEmpty()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:152\n                            \n                        \n\n\n                \n                    \n                            Returns true if the collection is empty \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(item: T, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:107\n                            \n                        \n\n\n                \n                    \n                            Removes the given item from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.remove(4);\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll(items?: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:124\n                            \n                        \n\n\n                \n                    \n                            Removes all items from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.removeAll();\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            replaceWith\n                            \n                            \n                        \n                    \n                \n                \n                    \nreplaceWith(items: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:139\n                            \n                        \n\n\n                \n                    \n                            Replaces all current items with the given items. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Collection\nCollection is a more sophisticated Array:\nconst collection = new Collection([1, 2, 3]);\ncollection.has(1); //true\ncollection.has(4); //false\ncollection.add(4);\ncollection.remove(4);\ncollection.index(1); //0\ncollection.addAll([10,11,12]); //true\ncollection.hasAll([1,10,11]); //true\ncollection.removeAll();It is the Parent Class of List and Selection.\n\n    \n\n    \n        import { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n/**\n * A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n */\nexport class Collection {\n  /**\n   * The items must all have the same type T.\n   */\n  public items: Array;\n  /** Subject that is nexted when the items update */\n  protected update: Subject> = new Subject();\n  /** Subject that is nexted when the items change */\n  public update$: Observable> = this.update.asObservable();\n\n  /**\n   * Constructs the collection with the given item Array (optional).\n   * @example\n   * ```typescript\n   *  const numbers = new Collection([1, 2, 3]);\n   * ```\n   */\n  constructor(items: Array = []) {\n    this.items = [];\n    items.forEach((item) => {\n      this.items.push(item);\n    });\n  }\n\n  /** Returns the index of the given item */\n  index(item: T): number {\n    return this.items.indexOf(item);\n  }\n\n  /**\n   * Checks if the Collection contains the given item.\n   * @example\n   * ```typescript\n   * numbers.has(2); //true\n   * ```\n   */\n  has(item: T): boolean {\n    return this.index(item) !== -1;\n  }\n\n  /**\n   * Checks if the Collection contains all given items.\n   * @example\n   * ```typescript\n   * numbers.has([1,2]); //true\n   * ```\n   */\n  hasAll(items: Array = []): boolean {\n    if (items === null) {\n      // console.warn('has all fail', this, items);\n      return false;\n    }\n    return items.reduce((has, item) => {\n      return has && this.has(item);\n    }, true);\n  }\n\n  /**\n   * Adds the given item to the Collection. If the unique flag is set, the item will only be added\n   * if it is not contained.\n   * @example\n   * ```typescript\n   * numbers.add(4);\n   * ```\n   */\n  add(item: T, unique?: boolean, event: boolean = true) {\n    if (unique && this.has(item)) {\n      return false;\n    }\n    this.items.push(item);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Adds the given items to the Collection. If the unique flag is set, only items that are not\n   * contained will be added.\n   * @example\n   * ```typescript\n   * numbers.addAll([5, 6, 7]);\n   * ```\n   */\n  addAll(items: Array = [], unique: boolean = false, event: boolean = true) {\n    const length = this.items.length;\n    items.forEach((item) => {\n      this.add(item, unique, false);\n    });\n    if (this.items.length > length && event) {\n      this.update.next(this);\n    }\n  };\n\n  /**\n   * Removes the given item from the Collection.\n   * @example\n   * ```typescript\n   * numbers.remove(4);\n   * ```\n   */\n  remove(item: T, event: boolean = true) {\n    if (!this.has(item)) {\n      return false;\n    }\n    this.items.splice(this.index(item), 1);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes all items from the Collection.\n   * @example\n   * ```typescript\n   * numbers.removeAll();\n   * ```\n   */\n  removeAll(items?: Array, event: boolean = true) {\n    const length = this.items.length;\n    if (items) {\n      items.forEach((item) => {\n        this.remove(item, false);\n      });\n    } else {\n      this.items.length = 0;\n    }\n    if (this.items.length , event: boolean = true) {\n    if (this.items && this.items.length) {\n      this.removeAll(undefined, false);\n    }\n    if (items.length) {\n      this.addAll(items, false, false);\n    }\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /** Returns true if the collection is empty */\n  isEmpty() {\n    return this.items.length === 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Config.html":{"url":"classes/Config.html","title":"class - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/config/config.ts\n        \n\n            \n                Description\n            \n            \n                The Root class for all Configurations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/config/config.ts:5\n                            \n                        \n\n                \n                    \n                        The config object. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(key: string, property: string, config?: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/config/config.ts:13\n                            \n                        \n\n\n                \n                    \n                            This method is a getter and setter for configurations. The key stands for the config (e.g. model).\nThe property is a sub property if the config (e.g. fields => model.fields).\nIf no config is given, the method just returns the configuration for the given property.\nIf a config is given, the property config is merged via Object.assign. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Config {\n  // TODO use Map !!!! (like simi did in EventEmitter.ts)\n  /** The config object. */\n  private config: {\n    [key: string]: Object,\n  } = {};\n\n  /** This method is a getter and setter for configurations. The key stands for the config (e.g. model).\n   * The property is a sub property if the config (e.g. fields => model.fields).\n   * If no config is given, the method just returns the configuration for the given property.\n   * If a config is given, the property config is merged via Object.assign. */\n  public configure?(key: string, property: string, config?: Object) {\n    if (!this.config[key]) {\n      this.config[key] = {};\n    }\n    if (!config) {\n      return this.config[key][property];\n    }\n    if (!this.config[key][property]) {\n      this.config[key][property] = {};\n    }\n    Object.assign(this.config[key][property], config);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CrudComponent.html":{"url":"components/CrudComponent.html","title":"component - CrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/crud/crud.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\nhttps://components.entrecode.de/data/crud\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-crud\n            \n\n            \n                styleUrls\n                crud.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./crud.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entryPop\n                            \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPopClass\n                            \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                    Private\n                                loadEntry\n                            \n                            \n                                    Public\n                                mustReload\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                selectEntry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, notificationService: NotificationsService, symbol: SymbolService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/crud/crud.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                            \n                            Type:    CrudConfig\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model that should be crud'ed. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection that should be used \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Emits when a list element is clicked \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Emits when the selection has changed \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:50\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPopClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPopClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:125\n                            \n                        \n\n\n                \n                    \n                            Returns the pop class that should be used, either uses config.popClass or defaults to ec-pop_drawer-left. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadEntry(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mustReload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mustReload(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Returns true if the visible fields in the list differ from the visible fields in the form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectEntry(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Is called when an item in the list is clicked. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entryPop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entryPop:     EntryPopComponent\n\n                    \n                \n                    \n                        \n                            Type :     EntryPopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:44\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     EntryListComponent\n\n                    \n                \n                    \n                        \n                            Type :     EntryListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:42\n                            \n                        \n\n                \n                    \n                        The EntryList inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:46\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:52\n                            \n                        \n\n                \n                    \n                        Emitted Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CrudConfig } from './crud-config.interface';\nimport { EntryFormComponent } from '../entry-form/entry-form.component';\nimport { EntryListComponent } from '../entry-list/entry-list.component';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core/src/selection/selection';\nimport { LoaderComponent } from '@ec.components/ui/src/loader/loader.component';\nimport { LoaderService } from '@ec.components/ui/src/loader/loader.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport 'rxjs/add/operator/switchMap';\nimport { merge } from 'rxjs/observable/merge';\nimport { AuthService } from '../auth/auth.service';\nimport { EntryPopComponent } from '../entry-pop/entry-pop.component';\nimport { WithLoader } from '@ec.components/ui';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport { WithNotifications } from '@ec.components/ui/src/notifications/with-notifications.interface';\nimport { Notification } from '@ec.components/ui/src/notifications/notification';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * https://components.entrecode.de/data/crud\n * */\n@Component({\n  selector: 'ec-crud',\n  templateUrl: './crud.component.html',\n  styleUrls: ['./crud.component.scss']\n})\nexport class CrudComponent implements OnInit, WithLoader, WithNotifications {\n  /** The model that should be crud'ed. */\n  @Input() model: string;\n  /** CrudConfig for customization of the crud's UI.*/\n  @Input() config: CrudConfig = {};\n  /** The selection that should be used */\n  @Input() selection: Selection;\n  /** The EntryList inside the template. */\n  @ViewChild(EntryListComponent) list: EntryListComponent;\n  /** The Pop inside the template. */\n  @ViewChild(EntryPopComponent) entryPop: EntryPopComponent;\n  /** The lists loader */\n  @ViewChild(LoaderComponent) loader: LoaderComponent;\n  /** Emits when a list element is clicked */\n  @Output() columnClicked: EventEmitter = new EventEmitter();\n  /** Emits when the selection has changed */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Emitted Notifications */\n  notifications: Notification[] = []\n\n  constructor(private sdk: SdkService,\n    private auth: AuthService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService,\n    @Optional() public router: Router,\n    @Optional() public route: ActivatedRoute) {\n    if (route) {\n      merge(route.data, route.params, route.queryParams)\n        .subscribe(({ model }) => {\n          if (model) {\n            this.model = model;\n          }\n        });\n    }\n  }\n\n  ngOnInit() {\n    this.auth.getAllowedModelMethods(this.model, this.config.methods)\n      .then((methods) => {\n        this.config.methods = methods;\n      });\n  }\n\n  /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n  public hasMethod(method: string) {\n    return this.config.methods && this.config.methods.indexOf(method) !== -1;\n  }\n\n  /** Returns true if the visible fields in the list differ from the visible fields in the form*/\n  public mustReload(item) {\n    return !Object.keys(item.config.fields).reduce((equal, property) => {\n      return equal && (item.config.fields[property].list !== false || item.config.fields[property].form === false);\n    }, true);\n  }\n\n  /** Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. */\n  private loadEntry(item) {\n    return Promise.resolve().then(() => {\n      if (!this.config.alwaysLoadEntry && !this.mustReload(item) && (!this.config.levels || this.config.levels === 1)) {\n        return item.getBody();\n      }\n      return this.sdk.api.entry(this.model, item.id(), { levels: this.config.levels || 1 })\n    }).then((loadedEntry) => {\n      this.entryPop.edit(loadedEntry);\n      this.notificationService.emit({ hide: this.notifications });\n    }).catch((err) => {\n      console.log('error while loading entry to edit', err);\n      this.notificationService.emit({\n        title: this.symbol.resolve('error.load'),\n        error: err,\n        sticky: true,\n        hide: this.notifications,\n        replace: this.notifications\n      })\n    });\n  }\n\n  /** Is called when an item in the list is clicked. */\n  private selectEntry(item) {\n    if (!item) {\n      return;\n    }\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n      return;\n    }\n    this.loaderService.wait(this.loadEntry(item), this.loader);\n  }\n\n  /** Returns the pop class that should be used, either uses config.popClass or defaults to ec-pop_drawer-left. */\n  getPopClass() {\n    return this.config && this.config.popClass ? this.config.popClass : 'ec-pop_drawer-left';\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{config?.createLabel}}\n        \n          \n        \n      \n    \n  \n  \n    \n    \n  \n\n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{config?.createLabel}}                                                      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'CrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CrudConfig.html":{"url":"interfaces/CrudConfig.html","title":"interface - CrudConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CrudConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/crud/crud-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                The CrudConfig allows a quick customization of an ec-crud component. \n\n            \n\n            \n                Extends\n            \n            \n                    ListConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysLoadEntry\n                                \n                                \n                                            Optional\n                                        createLabel\n                                \n                                \n                                            Optional\n                                        develop\n                                \n                                \n                                            Optional\n                                        disableCreatePop\n                                \n                                \n                                            Optional\n                                        disableListPop\n                                \n                                \n                                            Optional\n                                        disableSelectSwitch\n                                \n                                \n                                            Optional\n                                        keepPopOpen\n                                \n                                \n                                            Optional\n                                        levels\n                                \n                                \n                                            Optional\n                                        loader\n                                \n                                \n                                            Optional\n                                        methods\n                                \n                                \n                                            Optional\n                                        nestedPopClass\n                                \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        permissions\n                                \n                                \n                                            Optional\n                                        popClass\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysLoadEntry\n                                    \n                                \n                                \n                                    \n                                        alwaysLoadEntry:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an entry is always loaded when opened, even with lvl1 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createLabel\n                                    \n                                \n                                \n                                    \n                                        createLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for the entry create button \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        develop\n                                    \n                                \n                                \n                                    \n                                        develop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an extra develop button will be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCreatePop\n                                    \n                                \n                                \n                                    \n                                        disableCreatePop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no create pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableListPop\n                                    \n                                \n                                \n                                    \n                                        disableListPop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no list pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSelectSwitch\n                                    \n                                \n                                \n                                    \n                                        disableSelectSwitch:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no select mode switch will be shown \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepPopOpen\n                                    \n                                \n                                \n                                    \n                                        keepPopOpen:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the entry pop will remain open after the entry has been successfully saved. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        levels\n                                    \n                                \n                                \n                                    \n                                        levels:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external loader component that should be used, falls back to internal. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        methods\n                                    \n                                \n                                \n                                    \n                                        methods:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An Array of Methods that should be supported. Possible values are create, read, update and delete\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nestedPopClass\n                                    \n                                \n                                \n                                    \n                                        nestedPopClass:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The class that should be used for the nested resources pops, defaults to no class. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     NotificationsComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NotificationsComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external notifications component that should be used, falls back to internal \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    maps the permissions to the methods post put create delete \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popClass\n                                    \n                                \n                                \n                                    \n                                        popClass:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The class that should be used for the pop. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ListConfig } from '@ec.components/core/src/list/list-config.interface';\nimport { LoaderComponent } from '@ec.components/ui/src/loader/loader.component';\nimport { NotificationsComponent } from '@ec.components/ui/src/notifications/notifications.component';\n\n/** The CrudConfig allows a quick customization of an ec-crud component. */\nexport interface CrudConfig extends ListConfig {\n  /** The label for the entry create button */\n  createLabel?: string;\n  /** An Array of Methods that should be supported. Possible values are create, read, update and delete*/\n  methods?: Array;\n  /** An external loader component that should be used, falls back to internal. */\n  loader?: LoaderComponent;\n  /** An external notifications component that should be used, falls back to internal */\n  notifications?: NotificationsComponent;\n  /** If true, an extra develop button will be shown*/\n  develop?: boolean;\n  /** If true, the entry pop will remain open after the entry has been successfully saved. */\n  keepPopOpen?: boolean;\n  /** With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)*/\n  levels?: number;\n  /** If true, an entry is always loaded when opened, even with lvl1 */\n  alwaysLoadEntry?: boolean;\n  /** The class that should be used for the pop. */\n  popClass?: string;\n  /** The class that should be used for the nested resources pops, defaults to no class. */\n  nestedPopClass?: string;\n  /** maps the permissions to the methods post put create delete */\n  permissions?: { put?: string | boolean, post?: string | boolean, get?: string | boolean, delete?: string | boolean }\n  /** If true, no select mode switch will be shown */\n  disableSelectSwitch?: boolean;\n  /** If true, no list pop will be available at selects */\n  disableListPop?: boolean;\n  /** If true, no create pop will be available at selects */\n  disableCreatePop?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CrudService.html":{"url":"injectables/CrudService.html","title":"injectable - CrudService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/crud/crud.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                matches\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/crud/crud.service.ts:29\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:84\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(model: string, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:99\n                            \n                        \n\n\n                \n                    \n                            Creates a new entry with the given value for the given model. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(model: string, entry: EntryResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:112\n                            \n                        \n\n\n                \n                    \n                            deletes the given entry and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:78\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatches(change: Update, filter: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:36\n                            \n                        \n\n\n                \n                    \n                            Gives true if the given change fits all property values of the filter. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        change\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(model: string, entry: EntryResource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(model: , entry: EntryResource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Updates the given entry with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            changes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changes:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:29\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an entry is created or updated. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/filter';\nimport { Subject } from 'rxjs/Subject';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Update {\n  /** The model that has been updated. */\n  model: string | string[],\n  /** The relevant entry. */\n  entry?: EntryResource,\n  /** The list where it happened. */\n  list?: EntryList,\n  /** The type of update. (create/read/update/delete) */\n  type?: 'post' | 'get' | 'put' | 'delete'\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class CrudService {\n  /** The changes event is emitted everytime an entry is created or updated. */\n  private changes: Subject = new Subject();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService) {\n  }\n\n  /** Gives true if the given change fits all property values of the filter. */\n  matches(change: Update, filter: Update): boolean {\n    return Object.keys(filter)\n      .reduce((match, key) => match && change[key] === filter[key], true);\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: Update): Observable {\n    if (!filter) {\n      return this.changes.asObservable();\n    }\n    return this.changes.asObservable().filter((change: Update) => this.matches(change, filter));\n  }\n\n  /** Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. */\n  save(model: string, entry: EntryResource, value: Object) {\n    if (entry && entry.save) {\n      return this.update(model, entry, value);\n    }\n    return this.create(model, value)\n      .then((_entry) => {\n        return _entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given entry with the new value. Fires the \"update\" change. */\n  update(model, entry: EntryResource, value: Object): Promise {\n    const oldValues = {}; // save old values\n    Object.keys(value).forEach((key) => oldValues[key] = entry[key]);\n    Object.assign(entry, this.clean(value)); // assign new form values\n    return entry.save().then((_entry) => {\n      this.changes.next({ model, entry: _entry, type: 'put' });\n      return _entry;\n    })\n      .catch((err) => {\n        Object.assign(entry, this.clean(oldValues)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' ||\n      ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (value[key] === '') { // clear empty strings\n          value[key] = null;\n        }\n        if (this.isImmutableProperty(key)) { // filter system properties\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new entry with the given value for the given model. Fires the \"create\" change. */\n  create(model: string, value: Object): Promise {\n    return this.sdk.api.createEntry(model, this.clean(value))\n      .then((entry: EntryResource) => {\n        // console.log('created entry', entry);\n        // TODO make sure leveled entries are returned leveled\n        this.changes.next({ model, entry, type: 'post' });\n        return entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given entry and emits the \"delete\" change. */\n  del(model: string, entry: EntryResource) {\n    return entry.del().then((res) => {\n      this.changes.next({ model, entry, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n  Modules\n  DataModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nCrudService\n\nCrudService\n\nDataModule -->\n\nCrudService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/data.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AdminEntryInputComponent\n                            \n                            \n                                CrudComponent\n                            \n                            \n                                DefaultEntryInputComponent\n                            \n                            \n                                DefaultEntryOutputComponent\n                            \n                            \n                                EntriesDirective\n                            \n                            \n                                EntryDirective\n                            \n                            \n                                EntryFormComponent\n                            \n                            \n                                EntryListComponent\n                            \n                            \n                                EntryPopComponent\n                            \n                            \n                                EntrySelectComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AdminEntryInputComponent\n                            \n                            \n                                DefaultEntryInputComponent\n                            \n                            \n                                DefaultEntryOutputComponent\n                            \n                            \n                                EntrySelectComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CrudService\n                            \n                            \n                                     HistoryService\n                            \n                            \n                                     ModelConfigService\n                            \n                            \n                                     TypeConfigService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthModule\n                            \n                            \n                                    FilesModule\n                            \n                            \n                                    ResourceModule\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AuthModule\n                            \n                            \n                                    CrudComponent\n                            \n                            \n                                    EntriesDirective\n                            \n                            \n                                    EntryDirective\n                            \n                            \n                                    EntryFormComponent\n                            \n                            \n                                    EntryListComponent\n                            \n                            \n                                    EntryPopComponent\n                            \n                            \n                                    EntrySelectComponent\n                            \n                            \n                                    FilesModule\n                            \n                            \n                                    ResourceModule\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UiModule } from '@ec.components/ui/src/ui.module';\nimport { DndModule } from 'ngx-drag-drop';\nimport { AuthModule } from './auth/auth.module';\nimport { CrudComponent } from './crud/crud.component';\nimport { CrudService } from './crud/crud.service';\nimport { EntriesDirective } from './entries/entries.directive';\nimport { AdminEntryInputComponent } from './entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from './entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from './entry-form/default-entry-output.component';\nimport { EntryFormComponent } from './entry-form/entry-form.component';\nimport { EntryListComponent } from './entry-list/entry-list.component';\nimport { EntryPopComponent } from './entry-pop/entry-pop.component';\nimport { EntrySelectComponent } from './entry-select/entry-select.component';\nimport { EntryDirective } from './entry/entry.directive';\nimport { FilesModule } from './files/files.module';\nimport { ModelConfigService } from './model-config/model-config.service';\nimport { TypeConfigService } from './model-config/type-config.service';\nimport { ResourceModule } from './resource/resource.module';\nimport { HistoryService } from './sdk/history.service';\nimport { SdkModule } from './sdk/sdk.module';\n\n@NgModule({\n  entryComponents: [\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    EntrySelectComponent,\n  ],\n  declarations: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    CrudComponent,\n    EntrySelectComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule,\n    DndModule\n  ],\n  exports: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    RouterModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule\n  ],\n  providers: [\n    CrudService,\n    TypeConfigService,\n    ModelConfigService,\n    HistoryService,\n    {\n      provide: 'environment',\n      useValue: {\n        environment: 'live'\n      }\n    }\n  ]\n})\nexport class DataModule {\n  static forEnvironment(environment): ModuleWithProviders {\n    return {\n      ngModule: DataModule,\n      providers: [\n        {\n          provide: 'environment',\n          useValue: Object.assign(\n            {\n              environment: 'live'\n            },\n            environment\n          )\n        }\n      ]\n    };\n  }\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatetimeComponent.html":{"url":"components/DatetimeComponent.html","title":"component - DatetimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatetimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/datetime/datetime.component.ts\n\n\n    \n        Description\n    \n    \n        Input for a datetime.\nhttps://components.entrecode.de/ui/datetime\n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-datetime\n            \n\n            \n                styleUrls\n                datetime.component.scss\n            \n\n\n\n            \n                templateUrl\n                datetime.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                weekdays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                disableTime\n                            \n                            \n                                formControl\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        date\n                    \n                    \n                        The date that should be displayed at start. \n\n                            \n                            Type:    moment.Moment\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableTime\n                    \n                    \n                        If true, the time will not be displayed nor will be editable. \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        The form control that holds the date \n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The input's placeholder \n\n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            registerOnChange implementation of ControlValueAccessor \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            registerOnTouched implementation of ControlValueAccessor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Selects the given Date when the model changes. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        calendar:     CalendarComponent\n\n                    \n                \n                    \n                        \n                            Type :     CalendarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:29\n                            \n                        \n\n                \n                    \n                        The used calendar component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:43\n                            \n                        \n\n                \n                    \n                        Change propagation for ControlValueAccessor \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weekdays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weekdays:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:31\n                            \n                        \n\n                \n                    \n                        Array of the days of a week. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport moment from 'moment-es6';\nimport { CalendarComponent } from './calendar.component';\n\n/** Input for a datetime.\n *\n * https://components.entrecode.de/ui/datetime\n *\n*/\n@Component({\n  selector: 'ec-datetime',\n  templateUrl: 'datetime.component.html',\n  styleUrls: ['datetime.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatetimeComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatetimeComponent implements ControlValueAccessor {\n  /** The date that should be displayed at start. */\n  @Input() date: moment.Moment;\n  /** The form control that holds the date */\n  @Input() formControl: FormControl = new FormControl();\n  /** The used calendar component */\n  @ViewChild(CalendarComponent) calendar: CalendarComponent;\n  /** Array of the days of a week. */\n  public weekdays: string[];\n  /** If true, the time will not be displayed nor will be editable. */\n  @Input() disableTime: boolean;\n  /** The input's placeholder */\n  @Input() placeholder = '';\n\n  /** Selects the given Date when the model changes. */\n  writeValue(value: Date) {\n    this.calendar.writeValue(value);\n  }\n\n  /** Change propagation for ControlValueAccessor */\n  propagateChange = (_: any) => {\n  };\n\n  /** registerOnChange implementation of ControlValueAccessor */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  /** registerOnTouched implementation of ControlValueAccessor */\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n  \n  \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatetimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DatetimePipe.html":{"url":"pipes/DatetimePipe.html","title":"pipe - DatetimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  DatetimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/datetime/datetime.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        datetime\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: Date | string, pattern: string | string[], raw?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date | string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        pattern\n                                                        \n                                                                    string | string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.symbol.resolve('moment.format.date')\n                                                        \n\n                                                \n                                                \n                                                        raw\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment-es6';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'datetime'\n})\nexport class DatetimePipe implements PipeTransform {\n  constructor(private symbol: SymbolService) { }\n  transform(\n    value: Date | string,\n    pattern: string | string[] = this.symbol.resolve('moment.format.date'),\n    raw?: string\n  ): string {\n    if (!value) {\n      return '';\n    }\n    if (raw) {\n      console.log('raw', raw);\n    }\n    const typed = moment(value, pattern, true);\n    if (!typed.isValid()) {\n      return '';\n    }\n    if (Array.isArray(pattern)) {\n      pattern = pattern[0];\n    }\n    return moment(value).format(pattern);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/form/datetime/month.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a day inside the a month. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        date\n                                \n                                \n                                        draggable\n                                \n                                \n                                        first\n                                \n                                \n                                        format\n                                \n                                \n                                        index\n                                \n                                \n                                        last\n                                \n                                \n                                        today\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The moment that is represented by the day. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    determines if the day can be dragged to change the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                    \n                                \n                                \n                                    \n                                        first:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the first in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The formatted day number. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The cell index \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                    \n                                \n                                \n                                    \n                                        last:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the last in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        today\n                                    \n                                \n                                \n                                    \n                                        today:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag that is true if the day is today. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Can be given a type, to set a class. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport moment from 'moment-es6';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/debounceTime';\n\n/** Interface for a day inside the a month. */\nexport interface Day {\n  /** The cell index */\n  index: number,\n  /** The moment that is represented by the day. */\n  date: moment.Moment;\n  /** Can be given a type, to set a class. */\n  type?: string;\n  /** The formatted day number. */\n  format: string;\n  /** Flag that is true if the day is today. */\n  today: boolean;\n  /** if the day is the first in the timespan */\n  first: boolean;\n  /** if the day is the last in the timespan */\n  last: boolean;\n  /** determines if the day can be dragged to change the timespan */\n  draggable: boolean;\n}\n\n/** Displays the days of a month in a calendarish table. */\n@Component({\n  selector: 'ec-month',\n  styleUrls: ['month.component.scss'],\n  templateUrl: 'month.component.html'\n})\nexport class MonthComponent implements OnInit, OnChanges {\n  dragged: any;\n  /** The current selected date */\n  @Input() selected: moment.Moment;\n  /** Color array for day cells. E.g. to view a month heatmap */\n  @Input() colors: Object;\n  /** Timespan that is reflected. Marks days inside the span */\n  @Input() timespan: moment.Moment[];\n  /** The current date (for showing month) */\n  @Input() date: moment.Moment;\n  /** The color of days that are inside the timespan */\n  @Input() spancolor = '#ccc'\n  /** If true, the timespan start cannot be dragged */\n  @Input() disableDragStart = false;\n  /** If true, the timespan end cannot be dragged */\n  @Input() disableDragEnd = false;\n  /** The current month as string */\n  public formatted: string;\n  /** The cells containing the days */\n  public cells: Array;\n  /** Format for month in header */\n  public monthFormat = 'MMMM YYYY';\n  /** Emits when the selected day changes. */\n  @Output() dayClicked: EventEmitter = new EventEmitter();\n  /** Changed Timespan selection */\n  @Output() spanChanged: EventEmitter = new EventEmitter();\n\n  protected drag: Subject = new Subject();\n  protected changeSpan: Subject = new Subject();\n\n  constructor(public symbol: SymbolService) {\n    this.monthFormat = this.symbol.resolve('moment.format.month') || this.monthFormat;\n    this.drag.asObservable().debounceTime(100)\n      .subscribe((day) => this.dropDay(day));\n    this.changeSpan.asObservable().debounceTime(800)\n      .subscribe(timespan => this.spanChanged.emit(this.timespan))\n  }\n\n  dropDay(day: Day) {\n    if (!this.dragged || (day.first && this.dragged.first || day.last && this.dragged.last)) {\n      return;\n    }\n    const newTimespan = [].concat(this.timespan);\n    newTimespan[this.dragged.first ? 0 : 1] = day.date.clone();\n    if (newTimespan[0].isAfter(newTimespan[1])) {\n      this.dragged.first = !this.dragged.first;\n      this.dragged.last = !this.dragged.last;\n      newTimespan.reverse();\n    }\n    this.timespan = newTimespan;\n    this.changeSpan.next(this.timespan);\n    /* if (this.cells[0] === day || this.cells[this.cells.length - 1] === day) {\n      // change month if dragging to edge\n      this.setDate(day.date.clone().subtract(1, 'days'));\n    } else {\n      this.setDate();\n    } */\n    this.setDate();\n  }\n\n  dragStart(day, e) {\n    if ((this.disableDragStart && day.first) || (this.disableDragEnd && day.last)) {\n      return;\n    }\n    this.dragged = day;\n    e.preventDefault();\n  }\n\n  mouseUp(day, e) {\n    if (!this.dragged) {\n      return;\n    }\n    delete this.dragged;\n    e.preventDefault();\n  }\n\n  mouseOver(day, e) {\n    if (!this.dragged || this.dragged === day) {\n      return;\n    }\n    e.preventDefault();\n    this.drag.next(day);\n  }\n\n  getDayColor(_moment: moment.Moment) {\n    if (this.colors && this.colors[_moment.toISOString()]) {\n      return this.colors[_moment.toISOString()];\n    }\n  }\n\n  /** Initializes the calendar. */\n  ngOnInit() {\n    this.setDate();\n  }\n\n  /** When changing the date or selected input, the calendar will update its view to display the month containing it. */\n  ngOnChanges(change) {\n    if (change.selected) {\n      this.setDate(this.selected);\n      return;\n    } else if (change.date) {\n      this.setDate(this.date);\n    } else if (change.timespan) {\n      this.setDate();\n    } else if (change.colors) {\n      this.cells = this.getMonth(this.date.clone(), 'current');\n    }\n  }\n\n  /** Returns days of current month */\n  getMonth(day = moment(), type?: string): Array {\n    const begin = day.clone().startOf('month').startOf('week'); // .subtract(weeksbefore * 7, 'days');\n    return new Array(42)\n      .fill(0)\n      .map((d, index) => begin.clone().add(index, 'days'))\n      .map((date, index) => {\n        const isStart = this.timespan && date.clone().startOf('day').isSame(this.timespan[0].clone().startOf('day'));\n        const isEnd = this.timespan && date.clone().startOf('day').isSame(this.timespan[1].clone().startOf('day'));\n        return {\n          index,\n          date,\n          type: date.format('MM YYYY') === day.format('MM YYYY') ? 'current' : 'other',\n          active: this.timespan && date.isBetween(this.timespan[0], this.timespan[1], 'days', '[]'),\n          first: isStart,\n          last: isEnd,\n          draggable: (!this.disableDragStart && isStart) || (!this.disableDragEnd && isEnd),\n          color: this.getDayColor(date),\n          format: date.format('DD'),\n          today: moment().startOf('day').diff(date, 'days') === 0,\n        }\n      });\n  }\n\n\n  /** Sets the calendars viewed date to the given moment's month. Renders always 42 cells to keep the layout consistent. */\n  setDate(date: moment.Moment = this.selected || this.date || moment()) {\n    this.date = date.clone();\n    this.formatted = date.format(this.monthFormat);\n    this.cells = this.getMonth(date.clone(), 'current');\n  }\n\n  /** Selects the day of the given moment. */\n  selectDay(_moment: moment.Moment): void {\n    this.setDate(_moment);\n    this.selected = _moment;\n    this.dayClicked.emit(_moment);\n  }\n\n  /** Clears the current selected date*/\n  clearSelection(): void {\n    delete this.selected;\n  }\n\n  /** Returns true if the given moment is currently selected (on a day basis) */\n  isSelected(_moment: moment.Moment): boolean {\n    if (!this.selected) {\n      return;\n    }\n    return this.selected.startOf('day').diff(_moment, 'days') === 0;\n  }\n\n  canAlter(value, span: string) {\n    if (!this.timespan) {\n      return true;\n    }\n    const newDate = this.date.clone().add(value, span);\n    return newDate.isBetween(this.timespan[0], this.timespan[1], 'months', '[]');\n  }\n\n  /** Updates the viewed date to reflect the given relative changes. */\n  alter(value, span: string): void {\n    if (!this.canAlter(value, span)) {\n      return;\n    }\n    this.setDate(this.date.clone().add(value, span));\n  }\n\n  /** Sets the current viewed date to today. */\n  today(): void {\n    this.setDate(moment());\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryInputComponent.html":{"url":"components/DefaultEntryInputComponent.html","title":"component - DefaultEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-form/default-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that can not be represented by the default input template. \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-entry-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry-form/default-entry-input.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DefaultInputComponent } from '@ec.components/ui/src/form/default-input/default-input.component';\nimport { SdkService } from '@ec.components/data/src/sdk/sdk.service';\n\n/** This component holds the input templates for all field types that can not be represented by the default input template. */\n@Component({\n  templateUrl: './default-entry-input.component.html',\n})\nexport class DefaultEntryInputComponent extends DefaultInputComponent {\n  constructor(public sdk: SdkService) {\n    super();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n  \n    \n    \n  \n  \n    \n    \n  \n  \n    \n  \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryOutputComponent.html":{"url":"components/DefaultEntryOutputComponent.html","title":"component - DefaultEntryOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-form/default-entry-output.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all output types that cannot be represented by the default output component. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-entry-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-entry-output.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/default-entry-output.component.ts:12\n                            \n                        \n\n                \n                    \n                        The field to output. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/default-entry-output.component.ts:14\n                            \n                        \n\n                \n                    \n                        The item to display \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core';\n\n/** This component holds the templates for all output types that cannot be represented by the default output component. */\n@Component({\n  selector: 'ec-default-entry-output',\n  templateUrl: './default-entry-output.component.html',\n})\nexport class DefaultEntryOutputComponent {\n  /** The field to output. */\n  field: Field;\n  /** The item to display */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n    JSON\n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} output coming soon!-->\n    {{item?.display(field.property)}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          JSON        🚂🚃🚃🚃 {{field.type}} output coming soon!-->    {{item?.display(field.property)}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultInputComponent.html":{"url":"components/DefaultInputComponent.html","title":"component - DefaultInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/default-input/default-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all basic field types. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\n\n/** This component holds the templates for all basic field types. */\n@Component({\n  templateUrl: './default-input.component.html',\n})\nexport class DefaultInputComponent {\n  /** The field for which the input is meant. */\n  public field: Field;\n  /** The item that is targeted by the input */\n  public item: Item;\n  /** The form group that is used */\n  public group: FormGroup;\n  /** The form control that is used */\n  public control: FormControl;\n}\n\n    \n\n    \n        \n  \n\n  \n\n  \n\n  \n    \n      \n    \n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n    \n    \n      {{option}}\n    \n  \n\n  \n    \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  {{option}}                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultOutputComponent.html":{"url":"components/DefaultOutputComponent.html","title":"component - DefaultOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/default-output/default-output.component.ts\n\n\n    \n        Description\n    \n    \n        Holds the templates to output item field values. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-output\n            \n\n            \n                styleUrls\n                default-output.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./default-output.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-output/default-output.component.ts:13\n                            \n                        \n\n                \n                    \n                        The field that should be displayed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-output/default-output.component.ts:15\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\n\n/** Holds the templates to output item field values. */\n@Component({\n  selector: 'ec-default-output',\n  styleUrls: ['./default-output.component.scss'],\n  templateUrl: './default-output.component.html',\n})\nexport class DefaultOutputComponent {\n  /** The field that should be displayed */\n  field: Field;\n  /** The item that is targeted by the input */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{label}}\n      \n    \n    (field.maxItems||10)\">\n      ...\n    \n  \n\n  \n    {{item?.display(field.property)}}\n  \n\n  \n    &#10004;\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    {{item?.display(field.property)}}\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    \n    {{item?.display(field.property)}}\n  \n\n  \n    \n  \n\n  \n    \n      \n        \n      \n    -->\n    \n    {{item?.display(field.property)?.length}}\n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    {{item?.display(field.property)}}\n    \n  \n  \n    \n    text\n  \n  \n    {{item?.display(field.property)}}-->\n    JSON\n  \n  \n    {{item?.display(field.property)}}  \n  \n  \n    {{item?.display(field.property)}} \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{label}}              (field.maxItems||10)\">      ...            {{item?.display(field.property)}}        ✔        {{item?.display(field.property)}}        {{item?.display(field.property)}}        {{item?.display(field.property)}}            {{item?.display(field.property)}}                                        -->        {{item?.display(field.property)?.length}}                        {{item?.display(field.property)}}                text        {{item?.display(field.property)}}-->    JSON        {{item?.display(field.property)}}          {{item?.display(field.property)}}   '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropzoneDirective.html":{"url":"directives/DropzoneDirective.html","title":"directive - DropzoneDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DropzoneDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/dropzone/dropzone.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive that turns any element into a zone to drop files. \n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecDropzone]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecDropzone\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.is-active\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                dragleave\n                            \n                            \n                                dragover\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/dropzone/dropzone.directive.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                    \n                        If true the element acts normal \n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:11\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ecDropzone\n                    \n                    \n                        Emits when files are dropped \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:9\n                            \n                        \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.is-active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.is-active:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:7\n                            \n                        \n\n                \n                    \n                        The is-active class is bound to the host when dragover is active \n\n                    \n                \n\n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            dragleave\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragleave(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:37\n                            \n                        \n\n\n                \n                    \n                            flips active to false on dragleave \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragover(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:13\n                            \n                        \n\n\n                \n                    \n                            flips active to true on dragover \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drop\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndrop(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:24\n                            \n                        \n\n\n                \n                    \n                            emits dropped files and flips active to false on drop \n\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\n\n/** Directive that turns any element into a zone to drop files. */\n@Directive({ selector: '[ecDropzone]' })\nexport class DropzoneDirective {\n    /** The is-active class is bound to the host when dragover is active */\n    @HostBinding('class.is-active') private active: boolean;\n    /** Emits when files are dropped */\n    @Output() ecDropzone: EventEmitter = new EventEmitter();\n    /** If true the element acts normal */\n    @Input() disabled = false;\n    /** flips active to true on dragover */\n    @HostListener('dragover', ['$event']) onDragOver(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this.active) {\n            this.active = true;\n        }\n    }\n    /** emits dropped files and flips active to false on drop */\n    @HostListener('drop', ['$event']) onDrop(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (!e.dataTransfer.files || !e.dataTransfer.files.length) {\n            return;\n        }\n        this.ecDropzone.emit(e);\n        this.active = false;\n    }\n    /** flips active to false on dragleave */\n    @HostListener('dragleave', ['$event']) onDragLeave(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (this.active) {\n            this.active = false;\n        }\n    }\n    constructor(private el: ElementRef) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicRackComponent.html":{"url":"components/DynamicRackComponent.html","title":"component - DynamicRackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicRackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/dynamic-rack/dynamic-rack.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./dynamic-rack.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/dynamic-rack/dynamic-rack.component.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver, Type, ViewChild } from '@angular/core';\n\n// import { CustomFieldComponent } from './custom-field.component';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  // selector: 'ec-dynamic-rack',\n  templateUrl: './dynamic-rack.component.html'\n})\nexport class DynamicRackComponent {\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n}\n\n    \n\n    \n        \n  \n    -->\n    -->\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      -->    -->  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicRackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicSlotComponent.html":{"url":"components/DynamicSlotComponent.html","title":"component - DynamicSlotComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicSlotComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-dynamic-slot\n            \n\n\n\n\n            \n                templateUrl\n                ./dynamic-slot.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, data: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver, ComponentRef, Type, ViewChild } from '@angular/core';\nimport { SlotHostDirective } from '../slot-host.directive';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-dynamic-slot',\n  templateUrl: './dynamic-slot.component.html'\n})\nexport class DynamicSlotComponent {\n  /** The FieldHostDirective will  be used to nest custom components into the field */\n  @ViewChild(SlotHostDirective) fieldHost: SlotHostDirective;\n\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  /** Loads the given component inside the fieldHost. Sets current item and field by default. */\n  loadComponent(component: Type, data: Object = {}): ComponentRef {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n    const viewContainerRef = this.fieldHost.viewContainerRef;\n    viewContainerRef.clear();\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    Object.assign(componentRef.instance, data);\n    return componentRef;\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicSlotComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntriesDirective.html":{"url":"directives/EntriesDirective.html","title":"directive - EntriesDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  EntriesDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/entries/entries.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entryList of a given model with the given config.\nhttps://components.entrecode.de/data/entries\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecEntries]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                entryList\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Private\n                                promise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                load\n                            \n                            \n                                next\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                prev\n                            \n                            \n                                useList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                endless\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entries/entries.directive.ts:34\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the entries be loaded immediately? Defaults to true \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        endless\n                    \n                    \n                        If true, calling next will append the next page to the items, making the list grow.\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used. \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model to load from. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        The filterOptions for loading. \n\n                            \n                            Type:    any\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:25\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                            \n                        \n                    \n                \n                \n                    \nentries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:100\n                            \n                        \n\n\n                \n                    \n                            This helper returns all items of the current entryList. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:54\n                            \n                        \n\n\n                \n                    \n                            Loads the entries \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:41\n                            \n                        \n\n\n                \n                    \n                            When the model is known, the entryList will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useList\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseList(entryList: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryList\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            entryList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entryList:     EntryList\n\n                    \n                \n                    \n                        \n                            Type :     EntryList\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:33\n                            \n                        \n\n                \n                    \n                        The current loaded entryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     EntryResource[]\n\n                    \n                \n                    \n                        \n                            Type :     EntryResource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:21\n                            \n                        \n\n                \n                    \n                        The promise of the entryList call. \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ec-entries\nThis component can be used to load a list of entries from the template:\n\n  \n  {{muffin.name}}\n  \n\n    \n\n    \n        import { Directive, Input, OnChanges } from '@angular/core';\nimport { LoaderComponent, WithLoader } from '@ec.components/ui';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { SdkService } from '../sdk/sdk.service';\n\n// import { filterOptions } from 'ec.sdk/lib/resources/ListResource';\n\n/** Loads an entryList of a given model with the given config.\n * https://components.entrecode.de/data/entries\n*/\n@Directive({\n  selector: '[ecEntries]',\n  exportAs: 'ecEntries'\n})\nexport class EntriesDirective implements OnChanges, WithLoader {\n  /** The promise of the entryList call. */\n  private promise: any;\n  /** The model to load from. */\n  @Input() model: string;\n  /** The filterOptions for loading. */\n  @Input() options: any = {}; // TODO cannot import #simibug : filterOptions;\n  /** If true, calling next will append the next page to the items, making the list grow.*/\n  @Input() endless = false;\n  /** Should the entries be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entryList */\n  private entryList: EntryList;\n  public items: EntryResource[] = [];\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService) {\n  }\n\n  /** When the model is known, the entryList will be loaded. */\n  ngOnChanges() {\n    if (!this.model) {\n      return;\n    }\n    if (this.endless && this.options.page && this.options.page > 1) {\n      console.warn('cannot init ecEntries on page!==1 with strategy=endless');\n    }\n    if (this.autoload !== false) {\n      this.load();\n    }\n  }\n\n  /** Loads the entries */\n  load() {\n    this.promise = this.sdk.api.entryList(this.model, this.options)\n      .then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n\n  useList(entryList) {\n    this.entryList = entryList;\n    const items = this.entryList.getAllItems();\n    if (this.endless) {\n      this.items = this.items.concat(items);\n      this.items = this.items.filter((item) => this.items.find((_item) => _item.id === item.id));\n    } else {\n      this.items = this.entryList.getAllItems();\n    }\n  }\n\n  next() {\n    this.promise = this.entryList.followNextLink().then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  prev() {\n    this.promise = this.entryList.followPrevLink().then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  isLast() {\n    return !this.entryList || !this.entryList.hasNextLink();\n  }\n\n  isFirst() {\n    if (this.endless) {\n      return true;\n    }\n    return !this.entryList || !this.entryList.hasFirstLink();\n  }\n\n  /** This helper returns all items of the current entryList. */\n  entries() {\n    if (!this.entryList) {\n      return [];\n    }\n    return this.entryList.getAllItems();\n  }\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntryDirective.html":{"url":"directives/EntryDirective.html","title":"directive - EntryDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  EntryDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/entry/entry.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entry by id to the template.\nhttps://components.entrecode.de/data/entries\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecEntry]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                promise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                entryId\n                            \n                            \n                                levels\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry/entry.directive.ts:32\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the entry be loaded immediately? Defaults to true \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        entryId\n                    \n                    \n                        The entry id that should be loaded\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                    \n                        The levels to use. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used. \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model to load from \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:22\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                    \n                        Fires as soon as the entry has been loaded. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:28\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:47\n                            \n                        \n\n\n                \n                    \n                            Loads the entry. Can be called from template when using autoload=false \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:39\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the entry will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entry:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:32\n                            \n                        \n\n                \n                    \n                        The current loaded entry \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:18\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ec-entry\nThis directive can be used to load a single entry directly from the template:\n\n{{muffin.entry?.name}}\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { WithLoader, LoaderComponent } from '@ec.components/ui';\n\n/** Loads an entry by id to the template.\n * https://components.entrecode.de/data/entries\n * */\n@Directive({\n  selector: '[ecEntry]',\n  exportAs: 'ecEntry'\n})\nexport class EntryDirective implements OnChanges, WithLoader {\n  /** The loading promise */\n  promise: any;\n  /** The entry id that should be loaded*/\n  @Input() entryId: string;\n  /** The model to load from */\n  @Input() model: string;\n  /** Should the entry be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** Fires as soon as the entry has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entry */\n  entry: any;\n\n  /** Injects the sdk */\n  constructor(private sdk: SdkService) {\n  }\n\n  /** as soon as model and id are known, the entry will be loaded. */\n  ngOnChanges() {\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the entry. Can be called from template when using autoload=false */\n  load() {\n    if (!this.entryId || !this.model) {\n      return;\n    }\n    this.promise = this.sdk.api.entry(this.model, this.entryId, this.levels)\n      .then((entry) => {\n        this.entry = entry;\n        this.loaded.emit(entry);\n        return entry;\n      });\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntryListComponent.html":{"url":"components/EntryListComponent.html","title":"component - EntryListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EntryListComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-list/entry-list.component.ts\n\n\n    \n        Description\n    \n    \n        The EntryListComponent is a thin holder of an EntryList instance. It extends the ListComponent\nhttps://components.entrecode.de/data/entry-list\n\n    \n\n    \n        Extends\n    \n    \n            ResourceListComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-entry-list\n            \n\n            \n                styleUrls\n                entry-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ../../../ui/src/list/list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                list\n                            \n                            \n                                resourceConfig\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createList\n                            \n                            \n                                initFilter\n                            \n                            \n                                    Protected\n                                createList\n                            \n                            \n                                filter\n                            \n                            \n                                initFilterQuery\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                api\n                            \n                            \n                                listResource\n                            \n                            \n                                loader\n                            \n                            \n                                relation\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loaderService: LoaderService, sdk: SdkService, notificationService: NotificationsService, modelConfig: ModelConfigService, crud: CrudService, symbol: SymbolService, resourceService: ResourceService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry-list/entry-list.component.ts:27\n                            \n                        \n\n                \n                    \n                            The constructor will just call super of List\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelConfig\n                                                  \n                                                        \n                                                                    ModelConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        crud\n                                                  \n                                                        \n                                                                    CrudService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model whose entries should be shown.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                            \n                            Type:    Core\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listResource\n                    \n                    \n                        If listResource input is set, the given ListResource will be used directly and loading will be skipped. \n\n                            \n                            Type:    ListResource\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be shown while the list is loaded. \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        emits when the list changed (after loading) \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createList\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createList()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:57\n                            \n                        \n\n\n                \n                    \n                            The method to create the list\n\n\n                            \n                                Returns :     Promise | ResourceList\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter(property: string, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:114\n                            \n                        \n\n\n                \n                    \n                            This method will filter the list by a given property value and optional operator. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilterQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilterQuery(fieldFilter: (property: string,value: any) => void)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldFilter\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:105\n                            \n                        \n\n\n                \n                    \n                            When changing the model or the config, the list will update\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:78\n                            \n                        \n\n\n                \n                    \n                            Creates/Updates the list and subscribes Observables.  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ListConfig\n\n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:27\n                            \n                        \n\n                \n                    \n                        Overrides the Config of ResourceList with a ListConfig containing an EntryResource \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     ResourceList\n\n                    \n                \n                    \n                        \n                            Type :     ResourceList\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:28\n                            \n                        \n\n                \n                    \n                        The instance of an EntryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resourceConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceConfig:     ResourceConfig\n\n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Entry List\nEntry List is a thin extension of ec-list. It handles loading entries from the datamanager and converting them to a List instance.\n\n    \n\n    \n        import { Component, Input, Optional } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ListConfig } from '@ec.components/core/src/list/list-config.interface';\nimport { LoaderService } from '@ec.components/ui/src/loader/loader.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { CrudService } from '../crud/crud.service';\nimport { ModelConfigService } from '../model-config/model-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { SdkService } from '../sdk/sdk.service';\nimport { EntryList } from './entry-list';\n\n/** The EntryListComponent is a thin holder of an EntryList instance. It extends the ListComponent\n * https://components.entrecode.de/data/entry-list\n*/\n@Component({\n  selector: 'ec-entry-list',\n  templateUrl: '../../../ui/src/list/list.component.html', // TODO avoid relative paths\n  styleUrls: ['./entry-list.component.scss']\n})\nexport class EntryListComponent extends ResourceListComponent {\n  /** The model whose entries should be shown.*/\n  @Input() model: string;\n  /** Overrides the Config of ResourceList with a ListConfig containing an EntryResource */\n  config: ListConfig = {};\n\n  /** The constructor will just call super of List*/\n  constructor(protected loaderService: LoaderService,\n    protected sdk: SdkService,\n    protected notificationService: NotificationsService,\n    protected modelConfig: ModelConfigService,\n    protected crud: CrudService,\n    protected symbol: SymbolService,\n    protected resourceService: ResourceService,\n    @Optional() public route: ActivatedRoute) {\n    super(loaderService, sdk, notificationService, symbol, resourceService, route);\n    /*if (route) {\n      route.params.subscribe(({ model }) => {\n        if (model) {\n          this.model = model;\n        }\n      })\n    }*/\n  }\n\n  initFilter() {\n    this.initFilterQuery((property, value) => {\n      const target = property.split('.');\n      const field = this.config.fields[target[1]];\n      if (target[0] === this.model && field) {\n        return {\n          property: target[1],\n          value: field.queryFilter ? field.queryFilter(value) : value\n        }\n      }\n    });\n  }\n\n  createList(): Promise {\n    if (!this.model) {\n      return;\n    }\n    this.crud.change({ model: this.model })\n      .subscribe((update) => {\n        this.list.load();\n      }); // TODO: remove crud service or similar\n    this.resourceService.change({ relation: this.model })\n      .subscribe((update) => {\n        this.list.load();\n      });\n    return this.modelConfig.generateConfig(this.model, (this.config || {}).fields)\n      .then((config: ListConfig) => {\n        this.config = Object.assign(this.config || {}, config);\n        this.initFilter();\n        return new EntryList(this.model, this.config, this.sdk);\n      });\n\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n        \n        \n          {{group.value}}\n        \n      \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          {{group.value}}                          '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'EntryListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/notifications/error/error.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/error/error.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        The error that should be displayed \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            change update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            initial update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            updates error message  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  */\n@Component({\n  selector: 'ec-error',\n  templateUrl: './error.component.html'\n})\n/** Displays an error thrown by the SDK. */\nexport class ErrorComponent implements OnInit, OnChanges {\n  /** The error that should be displayed */\n  @Input() error: any;\n\n  constructor(private symbol: SymbolService) {\n  }\n\n  /** initial update */\n  ngOnInit() {\n    this.update();\n  }\n  /** change update */\n  ngOnChanges() {\n    this.update();\n  }\n  /** updates error message  */\n  update() {\n    if (!this.error) {\n      return;\n    }\n    const message = this.symbol.resolve('error.' + this.error.code);\n    if (message) {\n      this.error.message = message;\n    }\n  }\n}\n\n    \n\n    \n        {{error.code}}\n{{error.dataPath}}\n{{error?.message}}\n{{error.detail}}\n\n  \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{error.code}}{{error.dataPath}}{{error?.message}}{{error.detail}}        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/field/field.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        FieldConfigProperty\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                    Optional\n                                filterable\n                            \n                            \n                                    Optional\n                                filterOperator\n                            \n                            \n                                    Optional\n                                filterPopClass\n                            \n                            \n                                    Optional\n                                form\n                            \n                            \n                                    Optional\n                                hidden\n                            \n                            \n                                    Optional\n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                input\n                            \n                            \n                                    Optional\n                                label\n                            \n                            \n                                    Optional\n                                maxItems\n                            \n                            \n                                    Optional\n                                output\n                            \n                            \n                                    Optional\n                                placeholder\n                            \n                            \n                                    Optional\n                                property\n                            \n                            \n                                    Optional\n                                required\n                            \n                            \n                                    Optional\n                                sortable\n                            \n                            \n                                    Optional\n                                type\n                            \n                            \n                                    Optional\n                                validate\n                            \n                            \n                                values\n                            \n                            \n                                    Optional\n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlaceholder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, config: FieldConfigProperty)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/field/field.ts:47\n                            \n                        \n\n                \n                    \n                            A Field is constructed by assigning the given config and the property to itself\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:35\n                            \n                        \n\n                \n                    \n                        Class string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:41\n                            \n                        \n\n                \n                    \n                        if false, the field will not be filterable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterOperator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterOperator:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:27\n                            \n                        \n\n                \n                    \n                        The operator to use for filtering: exact, search, any etc.. see ec.sdk doc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterPopClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterPopClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:29\n                            \n                        \n\n                \n                    \n                        Defines the class for the filter pop, e.g. in list header. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:31\n                            \n                        \n\n                \n                    \n                        Wether or not the field should appear in default forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hidden\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hidden:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:11\n                            \n                        \n\n                \n                    \n                        If true, the field will not be visible anywhere \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:45\n                            \n                        \n\n                \n                    \n                        Icon name that should be associated with the field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:37\n                            \n                        \n\n                \n                    \n                        id for form labels \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:19\n                            \n                        \n\n                \n                    \n                        Custom Component to display form input *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:25\n                            \n                        \n\n                \n                    \n                        Label for Inputs. Defaults to property name. If false, the label is empty. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxItems:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:43\n                            \n                        \n\n                \n                    \n                        Defines the maximum of visible item (for tags view or similar). Defaults to 10 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            output\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        output:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:21\n                            \n                        \n\n                \n                    \n                        Custom Component to display value *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            placeholder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placeholder:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:23\n                            \n                        \n\n                \n                    \n                        Placeholder in inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            property\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        property:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:9\n                            \n                        \n\n                \n                    \n                        The name of the field's property \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            required\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        required:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:7\n                            \n                        \n\n                \n                    \n                        Tells if the field is required in forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sortable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:39\n                            \n                        \n\n                \n                    \n                        if false, the field will not be sortable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:13\n                            \n                        \n\n                \n                    \n                        The field's type \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validate:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:17\n                            \n                        \n\n                \n                    \n                        Custom Validation function \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        values:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:33\n                            \n                        \n\n                \n                    \n                        Possible Values e.g. in a select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            view\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        view:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:15\n                            \n                        \n\n                \n                    \n                        The field's view \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlaceholder\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlaceholder()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns placeholder if any \n\n\n                            \n                                Returns :     string | true\n\n                            \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/field/field.ts:45\n                            \n                        \n                \n                    \n                        wildcard for custom config values \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n\n    \n        Field\nA Field represents a property of an Object, without a specific value.\nIt is used to describe a column or field of one or multiple equally structured objects.\nThe field config (see FieldConfigProperty) can contain different transformation methods, such as:\n\nresolve: This method is used to resolve the field value from the object body.\nIt runs before all other transformation methods.\ndisplay: Transforms the resolved value to a human readable output. It is used for e.g. in list cells.\ngroup: Should return a value that is suitable for grouping multiple different values together, like in a list.\n\nExample Usage:\nconst field = new Field('name', {\n    resolve: (body) => body.value.name,\n    display: (value) => value.toUpperCase(),\n    group: (value) => value.length + ' Buchstaben',\n    sort: (value) => value.length\n    });\nconst name = field.resolve({value:{name:'bobby'}}); // 'bobby'\nfield.display(name); // => 'Bobby'\nfield.group(name); // => '5 Buchstaben'\nfield.sort(name); // => 5The above example is of course only viable to show the concept.\nWhen using the components as a whole, those methods will be called automatically from Item, List or Form.\n\n    \n\n    \n        import { FieldConfigProperty } from '../config/field-config-property.interface';\n\nexport class Field implements FieldConfigProperty {\n  /** Tells if the field is required in forms */\n  required?: boolean;\n  /** The name of the field's property */\n  property?: string;\n  /** If true, the field will not be visible anywhere */\n  hidden?: boolean;\n  /** The field's type */\n  type?: string;\n  /** The field's view */\n  view?: string;\n  /** Custom Validation function */\n  validate?: (value, field) => any;\n  /** Custom Component to display form input **/\n  input?: any;\n  /** Custom Component to display value **/\n  output?: any;\n  /** Placeholder in inputs */\n  placeholder?: string;\n  /** Label for Inputs. Defaults to property name. If false, the label is empty. */\n  label?: string | boolean;\n  /** The operator to use for filtering: exact, search, any etc.. see ec.sdk doc */\n  filterOperator?: string;\n  /** Defines the class for the filter pop, e.g. in list header. */\n  filterPopClass?: string;\n  /** Wether or not the field should appear in default forms */\n  form?: boolean;\n  /** Possible Values e.g. in a select */\n  values: any[] = [];\n  /** Class string */\n  class = '';\n  /** id for form labels */\n  id: string;\n  /** if false, the field will not be sortable in a list */\n  sortable?: boolean;\n  /** if false, the field will not be filterable in a list */\n  filterable?: boolean;\n  /** Defines the maximum of visible item (for tags view or similar). Defaults to 10 */\n  maxItems?: number;\n  /** Icon name that should be associated with the field */\n  icon?: string;\n  /** wildcard for custom config values */\n  [key: string]: any;\n\n  /** A Field is constructed by assigning the given config and the property to itself*/\n  constructor(property: string, config: FieldConfigProperty) {\n    if (config) {\n      Object.assign(this, config);\n    }\n    Object.assign(this, { property: property });\n    this.id = `${this.property}_${Date.now()}`;\n  }\n\n  /** Returns placeholder if any */\n  getPlaceholder() {\n    return this.placeholder || this.label || this.property;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldConfig.html":{"url":"interfaces/FieldConfig.html","title":"interface - FieldConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/config/field-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for list fields.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    FieldConfigProperty\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/config/field-config.interface.ts:4\n                            \n                        \n                \n                    \n                        Each field can be configured in the form of FieldConfigProperty. \n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        export interface FieldConfig {\n  /** Each field can be configured in the form of FieldConfigProperty. */\n  [key: string]: FieldConfigProperty\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileOptions.html":{"url":"interfaces/FileOptions.html","title":"interface - FileOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for file options used by new assets \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customNames\n                                \n                                \n                                            Optional\n                                        fieldName\n                                \n                                \n                                            Optional\n                                        ignoreDuplicates\n                                \n                                \n                                            Optional\n                                        includeAssetIDInPath\n                                \n                                \n                                            Optional\n                                        preserveFilenames\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customNames\n                                    \n                                \n                                \n                                    \n                                        customNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional custom names for assets. Mapped by indices to assets. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                    \n                                \n                                \n                                    \n                                        fieldName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom file form fieldName \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreDuplicates\n                                    \n                                \n                                \n                                    \n                                        ignoreDuplicates:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Ignores duplicates \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includeAssetIDInPath\n                                    \n                                \n                                \n                                    \n                                        includeAssetIDInPath:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Includes assetID in path \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preserveFilenames\n                                    \n                                \n                                \n                                    \n                                        preserveFilenames:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Preserves Filenames \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource,\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[],\n  /** The uploaded asset as item */\n  item?: Item\n  /** The uploaded asset as item */\n  items?: Array>\n  /** The list where it happened. */\n  list?: ResourceList,\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  customNames?: string[]\n  /** Custom file form fieldName */\n  fieldName?: string\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) =>\n          ((only && (match && this.isNewAsset(a)) ||\n            (!only && (match || this.isNewAsset(a)))))\n        , only);\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id)\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n    if (!files.length) {\n      return;\n    }\n    return api.createDMAssets(assetGroupID, this.getFormData(files, options))\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('dmAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {})\n      }\n      return this.sdk.api.createAssets(data, {})\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array, assetGroupID?: string): Promise> {\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    console.log('resolve', unresolved, this.isNewAsset(unresolved));\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) { // new assets\n      return this.sdk.api.dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then(dmAssetList => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then((): any => {\n      if (unresolved.length === 1) {\n        return this.sdk.api.asset(unresolved[0]).then(asset => {\n          console.log('old asset', asset);\n          return [asset]\n        });\n      }\n      return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 })\n        .then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ?\n              resolved.find((resource) => resource.assetID === asset) : asset)\n        });\n\n    })\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupListPromise\n                            \n                            \n                                    Public\n                                uploads\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assetGroupList\n                            \n                            \n                                    Public\n                                getFormData\n                            \n                            \n                                    Public\n                                isNewAsset\n                            \n                            \n                                    Public\n                                resolveAssets\n                            \n                            \n                                    Public\n                                uploadAssets\n                            \n                            \n                                    Public\n                                uploadFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, typeConfig: TypeConfigService, resourceService: ResourceService, resourceConfig: ResourceConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/file.service.ts:51\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            assetGroupList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        assetGroupList(forceReload: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:185\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        forceReload\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormData(files: FileList, options?: FileOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    FileOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormData\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isNewAsset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            returns true if the given asset is a new one (DMAssetResource) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        asset\n                                                        \n                                                                    Array | string | DMAssetResource | PublicAssetResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        only\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolveAssets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolveAssets(assets: Array, assetGroupID?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:148\n                            \n                        \n\n\n                \n                    \n                            Resolves all assetIDs to PublicAssetResources \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        assets\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        assetGroupID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploadAssets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        uploadAssets(files: , assetGroupID: , options: FileOptions, api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:94\n                            \n                        \n\n\n                \n                    \n                            Upload New Assets \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        assetGroupID\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    FileOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploadFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        uploadFiles(files: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:115\n                            \n                        \n\n\n                \n                    \n                            Upload old assets \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            assetGroupListPromise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        assetGroupListPromise:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:49\n                            \n                        \n\n                \n                    \n                        Promise that resolves assetGroupList from sdk \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploads\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uploads:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:51\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an entry is created or updated. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource,\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[],\n  /** The uploaded asset as item */\n  item?: Item\n  /** The uploaded asset as item */\n  items?: Array>\n  /** The list where it happened. */\n  list?: ResourceList,\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  customNames?: string[]\n  /** Custom file form fieldName */\n  fieldName?: string\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) =>\n          ((only && (match && this.isNewAsset(a)) ||\n            (!only && (match || this.isNewAsset(a)))))\n        , only);\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id)\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n    if (!files.length) {\n      return;\n    }\n    return api.createDMAssets(assetGroupID, this.getFormData(files, options))\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('dmAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {})\n      }\n      return this.sdk.api.createAssets(data, {})\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array, assetGroupID?: string): Promise> {\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    console.log('resolve', unresolved, this.isNewAsset(unresolved));\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) { // new assets\n      return this.sdk.api.dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then(dmAssetList => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then((): any => {\n      if (unresolved.length === 1) {\n        return this.sdk.api.asset(unresolved[0]).then(asset => {\n          console.log('old asset', asset);\n          return [asset]\n        });\n      }\n      return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 })\n        .then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ?\n              resolved.find((resource) => resource.assetID === asset) : asset)\n        });\n\n    })\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n  Modules\n  FilesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nAssetDirective\n\nAssetDirective\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nAssetgroupSelectComponent\n\nAssetgroupSelectComponent\n\nFilesModule -->\n\nAssetgroupSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent  -->\n\nFilesModule->AssetgroupSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\n\n\nResourceModule\n\nResourceModule\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/files/files.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AssetDirective\n                            \n                            \n                                AssetListPopComponent\n                            \n                            \n                                AssetSelectComponent\n                            \n                            \n                                AssetgroupSelectComponent\n                            \n                            \n                                DropzoneDirective\n                            \n                            \n                                ImageDirective\n                            \n                            \n                                UploadComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AssetSelectComponent\n                            \n                            \n                                AssetgroupSelectComponent\n                            \n                            \n                                UploadComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     FileService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ResourceModule\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AssetDirective\n                            \n                            \n                                    AssetListPopComponent\n                            \n                            \n                                    AssetSelectComponent\n                            \n                            \n                                    AssetgroupSelectComponent\n                            \n                            \n                                    DropzoneDirective\n                            \n                            \n                                    ImageDirective\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UploadComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui/src/ui.module';\nimport { ResourceModule } from '../resource/resource.module';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { AssetListPopComponent } from './asset-list-pop/asset-list-pop.component';\nimport { AssetSelectComponent } from './asset-select/asset-select.component';\nimport { AssetDirective } from './asset/asset.directive';\nimport { AssetgroupSelectComponent } from './assetgroup-select/assetgroup-select.component';\nimport { DropzoneDirective } from './dropzone/dropzone.directive';\nimport { FileService } from './file.service';\nimport { ImageDirective } from './image/image.directive';\nimport { UploadComponent } from './upload/upload.component';\n\n@NgModule({\n  entryComponents: [\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    UploadComponent,\n  ],\n  declarations: [\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n    ResourceModule\n  ],\n  exports: [\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n    SdkModule,\n  ],\n  providers: [\n    FileService\n  ],\n})\nexport class FilesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Focus.html":{"url":"interfaces/Focus.html","title":"interface - Focus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Focus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/utility/focus/focus.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        focusEvent\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngAfterViewInit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/focus/focus.interface.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        focusEvent\n                                    \n                                \n                                \n                                    \n                                        focusEvent:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\n\nexport interface Focus {\n  focusEvent: EventEmitter;\n\n  ngAfterViewInit();\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusDirective.html":{"url":"directives/FocusDirective.html","title":"directive - FocusDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  FocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/utility/focus/focus.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecFocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecFocus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/focus/focus.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ecFocus\n                    \n                    \n                            \n                            Type:    EventEmitter\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/focus/focus.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/focus/focus.directive.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, Input, OnInit } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[ecFocus]',\n})\nexport class FocusDirective implements OnInit {\n  @Input() ecFocus: EventEmitter;\n\n  constructor(private element: ElementRef) {\n  }\n\n  ngOnInit() {\n    this.ecFocus\n      .subscribe((event: boolean) => {\n        if (event) {\n          this.element.nativeElement.focus();\n        } else {\n          this.element.nativeElement.blur();\n        }\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormConfig.html":{"url":"interfaces/FormConfig.html","title":"interface - FormConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/form/form-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                FormConfig is an extension of ItemConfig. \n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n\n\n\n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\n\n/** FormConfig is an extension of ItemConfig. */\nexport interface FormConfig extends ItemConfig {\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n  Modules\n  FormModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nCalendarComponent->FormModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nFormModule -->\n\nDaterangeComponent->FormModule\n\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nFormModule -->\n\nDatetimePipe->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nFormModule -->\n\nHeatmapComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nFormModule -->\n\nMonthComponent->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nFormModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nFormModule->DaterangeComponent \n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nFormModule->DatetimePipe \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nFormModule->HeatmapComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nFormModule->MonthComponent \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nIconModule\n\nIconModule\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/form.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CalendarComponent\n                            \n                            \n                                DaterangeComponent\n                            \n                            \n                                DatetimeComponent\n                            \n                            \n                                DatetimePipe\n                            \n                            \n                                DefaultInputComponent\n                            \n                            \n                                DefaultOutputComponent\n                            \n                            \n                                FormComponent\n                            \n                            \n                                HeatmapComponent\n                            \n                            \n                                MaxItemsPipe\n                            \n                            \n                                MonthComponent\n                            \n                            \n                                ToggleComponent\n                            \n                            \n                                VisibleFieldsPipe\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                DefaultInputComponent\n                            \n                            \n                                DefaultOutputComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     FormService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IconModule\n                            \n                            \n                                    IoModule\n                            \n                            \n                                    LoaderModule\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    SymbolModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CalendarComponent\n                            \n                            \n                                    DaterangeComponent\n                            \n                            \n                                    DatetimeComponent\n                            \n                            \n                                    DatetimePipe\n                            \n                            \n                                    FormComponent\n                            \n                            \n                                    HeatmapComponent\n                            \n                            \n                                    IoModule\n                            \n                            \n                                    MaxItemsPipe\n                            \n                            \n                                    MonthComponent\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    ToggleComponent\n                            \n                            \n                                    VisibleFieldsPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormComponent } from './form.component';\nimport { DefaultInputComponent } from './default-input/default-input.component';\nimport { DefaultOutputComponent } from './default-output/default-output.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PopModule } from '../pop/pop.module';\nimport { FormService } from './form.service';\nimport { VisibleFieldsPipe } from './visible-fields.pipe';\nimport { IoModule } from '../io/io.module';\nimport { DatetimeComponent } from './datetime/datetime.component';\nimport { MonthComponent } from './datetime/month.component';\nimport { DatetimePipe } from './datetime/datetime.pipe';\nimport { ToggleComponent } from './toggle/toggle.component';\nimport { CalendarComponent } from './datetime/calendar.component';\nimport { LoaderModule } from '../loader/loader.module';\nimport { IconModule } from '../icon/icon.module';\nimport { MaxItemsPipe } from './max-items.pipe';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { HeatmapComponent } from './datetime/heatmap.component';\nimport { DaterangeComponent } from './datetime/daterange.component';\n\n@NgModule({\n  entryComponents: [\n    DefaultInputComponent,\n    DefaultOutputComponent,\n  ],\n  declarations: [\n    FormComponent,\n    DefaultInputComponent,\n    DefaultOutputComponent,\n    DatetimeComponent,\n    DatetimePipe,\n    MonthComponent,\n    HeatmapComponent,\n    DaterangeComponent,\n    CalendarComponent,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    ToggleComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PopModule,\n    IoModule,\n    LoaderModule,\n    IconModule,\n    SymbolModule\n  ],\n  exports: [\n    FormComponent,\n    ReactiveFormsModule,\n    DatetimeComponent,\n    DatetimePipe,\n    CalendarComponent,\n    HeatmapComponent,\n    DaterangeComponent,\n    MonthComponent,\n    PopModule,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    IoModule,\n    ToggleComponent,\n  ],\n  providers: [\n    FormService\n  ]\n})\nexport class FormModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/form/form.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the interface between Angular Forms and ec.components core classes. \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addField\n                            \n                            \n                                    Public\n                                getGroup\n                            \n                            \n                                getValidators\n                            \n                            \n                                validateFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addField\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addField(field: Field, form: Form, group: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            adds a new field to a form. handles form group and control \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        group\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroup(form: Form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Initializes the form group from the form fields\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValidators\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValidators(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Extracts all validators from a given Field instance. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidatorFn[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateFactory(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Returns a Validation function from the given field (using field.validate) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidationErrors | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Form } from '@ec.components/core/src/form/form';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport { Field } from '@ec.components/core/src/field/field';\n\n/** This service is the interface between Angular Forms and ec.components core classes. */\n@Injectable()\nexport class FormService {\n\n  /** Initializes the form group from the form fields*/\n  public getGroup(form: Form) {\n    const control = {};\n    form.fields.filter((field) => field.form !== false)\n      .forEach((field) => {\n        const validators = this.getValidators(field);\n        control[field.property] = new FormControl(form.getValue(field.property), validators)\n        // TODO use { updateOn: blur } when updating to angular 5.0.0\n        // see https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4\n      });\n    return new FormGroup(control);\n  }\n\n  /** adds a new field to a form. handles form group and control */\n  public addField(field: Field, form: Form, group: FormGroup) {\n    const validators = this.getValidators(field);\n    const control = new FormControl(form.getValue(field.property), validators);\n    group.addControl(field.property, control);\n  }\n\n  /** Extracts all validators from a given Field instance. */\n  getValidators(field: Field): ValidatorFn[] {\n    const validators = [];\n    if (field.required) {\n      validators.push(Validators.required);\n    }\n    if (field.validate) {\n      validators.push(this.validateFactory(field));\n    }\n    return validators;\n  }\n\n  /** Returns a Validation function from the given field (using field.validate) */\n  validateFactory(field: Field): ValidationErrors | null {\n    return (control: AbstractControl) => {\n      if (!field.validate) {\n        return;\n      }\n      const error = field.validate(control.value, field);\n      if (error) {\n        return {\n          custom: error\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/location/src/geocode.service.ts\n        \n\n            \n                Description\n            \n            \n                Wraps google maps api to handle geocode operations \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autocompleteAddress\n                            \n                            \n                                geocodeLatLng\n                            \n                            \n                                    Public\n                                getNearestAddress\n                            \n                            \n                                    Public\n                                observeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapLoader: MapsAPILoader, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/geocode.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapLoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autocompleteAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        autocompleteAddress(el: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Turns an input element to an maps autocomplete searchbar. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocodeLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \ngeocodeLatLng(geocoder: , location: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Reverse address lookup for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocoder\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        location\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNearestAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNearestAddress(location: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Returns the nearest address for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            observeElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        observeElement(el: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Observes a given input element, transforming it into an autocomplete \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { MapsAPILoader } from '@agm/core';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { switchMap } from 'rxjs/operators';\n\n/** declares google namespace */\ndeclare var google: any;\n\n/** Wraps google maps api to handle geocode operations */\n@Injectable()\nexport class GeocodeService {\n\n    constructor(private mapLoader: MapsAPILoader,\n        private ngZone: NgZone) { }\n\n    /** Observes a given input element, transforming it into an autocomplete */\n    public observeElement(el) {\n        return new Observable(observer => {\n            const autocomplete = new google.maps.places.Autocomplete(el, {\n                types: ['address']\n            });\n            autocomplete.addListener('place_changed', () => {\n                this.ngZone.run(() => {\n                    // get the place result\n                    const place = autocomplete.getPlace();\n                    // verify result\n                    if (place.geometry === undefined || place.geometry === null) {\n                        return;\n                    }\n                    const coords = {\n                        latitude: place.geometry.location.lat(),\n                        longitude: place.geometry.location.lng()\n                    }\n                    observer.next(coords);\n                    /* observer.complete(); */\n                });\n            });\n        });\n    }\n\n    /** Turns an input element to an maps autocomplete searchbar. */\n    public autocompleteAddress(el): Observable {\n        return fromPromise(this.mapLoader.load())\n            .pipe(switchMap(() => this.observeElement(el)));\n    }\n\n    /** Reverse address lookup for a given location */\n    geocodeLatLng(geocoder, location): Promise {\n        return new Promise((resolve, reject) => {\n            geocoder.geocode({ location }, (results, status) => {\n                if (status === 'OK') {\n                    resolve(results);\n                } else {\n                    reject(status);\n                }\n            });\n        });\n    }\n\n    /** Returns the nearest address for a given location */\n    public getNearestAddress(location: { latitude: number, longitude: number }): Promise> {\n        return this.mapLoader.load().then(() => {\n            return this.geocodeLatLng(\n                new google.maps.Geocoder, {\n                    lat: location.latitude,\n                    lng: location.longitude\n                }\n            );\n        })\n    }\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GroupPipe.html":{"url":"pipes/GroupPipe.html","title":"pipe - GroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  GroupPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/list/group.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        group\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: Array>, property: string, value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/group.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Item } from '@ec.components/core';\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'group'\n})\nexport class GroupPipe implements PipeTransform {\n  transform(items: Array>, property: string, value: any): any {\n    if (!property) {\n      return items;\n    }\n    return items.filter((item) => {\n      return item.group(property) === value;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/sdk/history.service.ts\n        \n\n            \n                Description\n            \n            \n                The HistoryService keeps track of live updates for models entries and datamanagers. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                eventSources\n                            \n                            \n                                    Public\n                                loaderService\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                promises\n                            \n                            \n                                    Public\n                                resourceService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disableUpdates\n                            \n                            \n                                enableUpdates\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService, loaderService: LoaderService, router: Router, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/sdk/history.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableUpdates(key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Closes the event stream for the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \nenableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Enables Updates for the given resource. The relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Toggles live updates on the resource and stores them under the given key. The relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eventSources\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventSources:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:16\n                            \n                        \n\n                \n                    \n                        EventSources that are active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaderService:     LoaderService\n\n                    \n                \n                    \n                        \n                            Type :     LoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promises\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promises:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:14\n                            \n                        \n\n                \n                    \n                        Current loaded histories \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceService:     ResourceService\n\n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Resource } from 'halfred';\nimport ModelResource from 'ec.sdk/lib/resources/datamanager/ModelResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { ResourceService } from '@ec.components/data/src/resource-config/resource.service';\nimport { NotificationsService, LoaderService } from '@ec.components/ui';\nimport { Router } from '@angular/router';\n\n/** The HistoryService keeps track of live updates for models entries and datamanagers. */\n@Injectable()\nexport class HistoryService {\n    /** Current loaded histories */\n    promises: { [relation: string]: Promise } = {};\n    /** EventSources that are active */\n    eventSources: { [relation: string]: any } = {}; // EventSource[]\n\n    constructor(\n        public notificationService: NotificationsService,\n        public loaderService: LoaderService,\n        public router: Router,\n        public resourceService: ResourceService) { }\n    /** Toggles live updates on the resource and stores them under the given key. The relation is passed through the Update instances on change. */\n    toggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key = this.router.url.split('?')[0]) {\n        if (this.promises[key] && !this.eventSources[relation]) {\n            return this.promises[key];\n        }\n        this.disableUpdates(key);\n        this.promises[key] = this.enableUpdates(resource, relation, key)\n            .then(source => {\n                this.eventSources[key] = source;\n            })\n            .catch(error => {\n                delete this.promises[key];\n            });\n        this.loaderService.wait(this.promises[key]);\n    }\n\n    /** Closes the event stream for the given key */\n    disableUpdates(key = this.router.url.split('?')[0]) {\n        if (this.eventSources[key]) {\n            this.eventSources[key].close();\n            delete this.promises[key];\n            delete this.eventSources[key];\n            return;\n        }\n    }\n\n    /** Enables Updates for the given resource. The relation is passed through the Update instances on change. */\n    enableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key = this.router.url.split('?')[0]) {\n        if (!resource || !resource.newHistory) {\n            throw new Error('cannot get history: no newHistory method found on given resource');\n        }\n        if (this.promises[key]) {\n            return this.promises[key];\n        }\n        const loading = resource.newHistory()\n            .then(source => {\n                source.addEventListener('entryUpdated', (e) => {\n                    const data = JSON.parse(e.data);\n                    this.resourceService.changes.next({\n                        relation,\n                        type: 'put',\n                        identifier: data ? data.entryID : ''\n                    });\n                }, false);\n                source.addEventListener('entryCreated', (e) => {\n                    const data = JSON.parse(e.data);\n                    this.resourceService.changes.next({\n                        relation,\n                        type: 'post',\n                        identifier: data ? data.entryID : ''\n                    });\n                }, false);\n                return source;\n            })\n            .catch(error => {\n                this.notificationService.emit({\n                    title: 'History Error',\n                    error\n                });\n            });\n        this.loaderService.wait(loading);\n        return loading;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/icon/icon.component.ts\n\n\n    \n        Description\n    \n    \n        Displays icons by name. If the matching Icon (from registry contains a content, the content is shown. If not, is is expected to be a ec-icon. \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iconService: IconService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/icon/icon.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iconService\n                                                  \n                                                        \n                                                                    IconService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of the icon. An Icon with this name is expected to be present in the current iconService registry. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.component.ts:19\n                            \n                        \n\n\n                \n                    \n                            The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     Symbol\n\n                    \n                \n                    \n                        \n                            Type :     Symbol\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.component.ts:15\n                            \n                        \n\n                \n                    \n                        The resolved icon (by name) \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Icon\nDisplays an icon:\nThe default icon set uses ec-icons. You have to embedd them to your index.html (or similar):\n  Using another icon set\nYou can also use other icons:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.use(emojiIcons);\n    }\n}Overriding icons\nYou can also override the current icon registry:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.set(emojiIcons);\n    }\n}This will override the icon registry with the given icons, but keep the rest.\n\n    \n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { IconService } from './icon.service';\nimport { Symbol } from '../symbol/symbol.interface';\n\n/** Displays icons by name. If the matching Icon (from registry contains a content, the content is shown. If not, is is expected to be a ec-icon. */\n@Component({\n    selector: 'ec-icon',\n    templateUrl: './icon.component.html'\n})\n\nexport class IconComponent implements OnInit {\n    /** The name of the icon. An Icon with this name is expected to be present in the current iconService registry. */\n    @Input() name: string;\n    /** The resolved icon (by name) */\n    icon: Symbol;\n    constructor(private iconService: IconService) {\n    }\n    /** The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. */\n    ngOnInit() {\n        this.icon = this.iconService.get(this.name);\n        if (!this.icon) {\n            console.warn(`Icon ${this.name} cannot be found. Using the following icon registry:`, this.iconService.registry);\n        }\n    }\n}\n\n    \n\n    \n        \n{{icon.content}}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{icon.content}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IconModule.html":{"url":"modules/IconModule.html","title":"module - IconModule","body":"\n                   \n\n\n\n\n  Modules\n  IconModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\n\nIconComponent\n\nIconComponent\n\n\n\nIconModule\n\nIconModule\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/icon/icon.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                IconComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     IconService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    IconComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IconComponent } from './icon.component';\nimport { IconService } from './icon.service';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [IconComponent],\n    exports: [IconComponent],\n    providers: [IconService],\n})\nexport class IconModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/icon/icon.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons) \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registry\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registry:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : ecIcons\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.service.ts:9\n                            \n                        \n\n                \n                    \n                        The current icon set that is registered to the service. It will be used to resolve icons from. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ecIcons } from './ec-icons';\nimport { Symbol } from '../symbol/symbol.interface';\nimport { SymbolService } from '../symbol/symbol.service';\n/** Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons) */\n@Injectable()\nexport class IconService extends SymbolService {\n    /** The current icon set that is registered to the service. It will be used to resolve icons from. */\n    public registry: Symbol[] = ecIcons;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ImageDirective.html":{"url":"directives/ImageDirective.html","title":"directive - ImageDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ImageDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/image/image.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. \n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        img [ecImage]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                setUrl\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecImage\n                            \n                            \n                                size\n                            \n                            \n                                thumb\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/image/image.directive.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ecImage\n                    \n                    \n                        The assetID that should be loaded \n\n                            \n                            Type:    string | DMAssetResource\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        The size that should be requested. \n\n                        \n                            Default value: 200\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thumb\n                    \n                    \n                        If true, the image will be requested as thumb (square) \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:15\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:40\n                            \n                        \n\n\n                \n                    \n                            Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:28\n                            \n                        \n\n\n                \n                    \n                            Reads ecImage input as assetId and loads if autoload is not false \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(asset: PublicAssetResource | DMAssetResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        asset\n                                                        \n                                                                    PublicAssetResource | DMAssetResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:21\n                            \n                        \n\n                \n                    \n                        Resolved asset url. \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ecImage\nThis directive can be used to load an image:\n\nID: {{myImage.asset?.assetID}}\n    \n\n    \n        import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { AssetDirective } from '../asset/asset.directive';\nimport { SdkService } from '../../sdk/sdk.service';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\n\n/** Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. */\n@Directive({\n  selector: 'img [ecImage]',\n  exportAs: 'ecImage'\n})\nexport class ImageDirective extends AssetDirective implements OnChanges {\n  /** If true, the image will be requested as thumb (square) */\n  @Input() thumb: boolean;\n  /** The size that should be requested. */\n  @Input() size = 200;\n  /** The assetID that should be loaded */\n  @Input() ecImage: string | DMAssetResource;\n  /** Resolved asset url. */\n  url: string;\n\n  constructor(public sdk: SdkService, private elementRef: ElementRef) {\n    super(sdk);\n  }\n\n  /** Reads ecImage input as assetId and loads if autoload is not false */\n  ngOnChanges() {\n    if (typeof this.ecImage === 'string') {\n      this.assetId = this.ecImage;\n    } else if (this.ecImage && this.ecImage.assetID) {\n      this.use(this.ecImage);\n    }\n    if (this.autoload !== false && this.assetId) {\n      this.load();\n    }\n  }\n\n  /** Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) */\n  load(id?: string) {\n    return super.load(id).then(this.use.bind(this));\n  }\n\n  use(asset: PublicAssetResource | DMAssetResource) {\n    return Promise.resolve().then(() => {\n      if (asset.type !== 'image') {\n        return Promise.reject(`ecImage only works for assets of type image.\n        Loaded id ${asset.id} is of type ${asset.type}`);\n      }\n      if (asset instanceof DMAssetResource) { // new asset\n        return asset.getFileVariant(this.size, this.thumb);\n      } else if (asset instanceof PublicAssetResource) { // old asset\n        if (this.thumb) {\n          return asset.getImageThumbUrl(this.size, '');\n        }\n        return asset.getImageUrl(this.size, '');\n      }\n    }).then(this.setUrl.bind(this));\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n    this.elementRef.nativeElement.src = this.url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/input/input.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-input\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentInstance\n                            \n                            \n                                propagateChange\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                control\n                            \n                            \n                                debounce\n                            \n                            \n                                field\n                            \n                            \n                                group\n                            \n                            \n                                item\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        component\n                    \n                    \n                        Overrides the default component \n\n                            \n                            Type:    Type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                        The belonging form control. This is not required if you pass in a field and group. \n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                    \n                        Debounce time in ms before the changed event emits. \n\n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        The instance of field that should be used in the template, can also be a property name. \n\n                            \n                            Type:    Field\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        group\n                    \n                    \n                        The belonging form group \n\n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                        The belonging item \n\n                            \n                            Type:    Item\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        property\n                    \n                    \n                        The property name that is edited. Expects a form as item input \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        The changed ouput emits whenever the form control of the input changes. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, data: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentInstance:     Component\n\n                    \n                \n                    \n                        \n                            Type :     Component\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:40\n                            \n                        \n\n                \n                    \n                        Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\nYou can access a form's InputComponents via FormComponent#inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, OnChanges, Type, ComponentRef, forwardRef } from '@angular/core';\n\nimport { FormControl, FormGroup, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { DefaultInputComponent } from '../../form/default-input/default-input.component';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\nimport { Form } from '@ec.components/core/src/form/form';\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-input',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent extends DynamicSlotComponent implements ControlValueAccessor, OnChanges {\n  /** The belonging form group */\n  @Input() group: FormGroup;\n  /** The belonging form control. This is not required if you pass in a field and group. */\n  @Input() control: FormControl;\n  /** The changed ouput emits whenever the form control of the input changes. */\n  @Output() changed = new EventEmitter();\n  /** Debounce time in ms before the changed event emits. */\n  @Input() debounce = 0;\n  /** The instance of field that should be used in the template, can also be a property name. */\n  @Input() field: Field;\n  /** The property name that is edited. Expects a form as item input */\n  @Input() property: string;\n  /** The belonging item */\n  @Input() item: Item;\n  /** Overrides the default component */\n  @Input() component: Type;\n  /** Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\n   * You can access a form's InputComponents via FormComponent#inputs */\n  componentInstance: Component\n\n  ngOnChanges() {\n    if (this.property && this.item instanceof Form) {\n      this.field = this.item.getField(this.property);\n    }\n    if (!this.field) {\n      return;\n    }\n    const data = {\n      group: this.group,\n      control: this.control || this.group ? this.group.get(this.field.property) : null,\n      item: this.item,\n      field: this.field,\n      input: this\n    };\n\n    const componentRef = this.loadComponent(this.component || this.field.input || DefaultInputComponent, data);\n    this.componentInstance = componentRef.instance;\n    if (componentRef.instance.control) {\n      componentRef.instance.control.valueChanges\n        .debounceTime(this.debounce)\n        .subscribe((change) => {\n          this.changed.emit(change);\n          this.propagateChange(change);\n        });\n    }\n    if (this.field && typeof this.field.init === 'function') {\n      this.field.init(this.componentInstance, this);\n    }\n  }\n\n  /** writes value to editor on outside model change. */\n  writeValue(value: any) {\n    if (this.componentInstance && this.componentInstance['writeValue']) {\n      this.componentInstance['writeValue'](value); // TODO: this is pretty hacky\n    }\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputErrorsComponent.html":{"url":"components/InputErrorsComponent.html","title":"component - InputErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputErrorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/input-errors/input-errors.component.ts\n\n\n    \n        Description\n    \n    \n        This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-input-errors\n            \n\n            \n                styleUrls\n                input-errors.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./input-errors.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/input-errors/input-errors.component.ts:13\n                            \n                        \n\n                \n                    \n                            Imported error messages. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                        The form control that should be tracked \n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input-errors/input-errors.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getErrors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input-errors/input-errors.component.ts:19\n                            \n                        \n\n\n                \n                    \n                            This method will iterate over the control errors and generate objects for the template. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/input-errors/input-errors.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. */\n@Component({\n  selector: 'ec-input-errors',\n  templateUrl: './input-errors.component.html',\n  styleUrls: ['./input-errors.component.scss']\n})\nexport class InputErrorsComponent {\n  /** The form control that should be tracked */\n  @Input() control: FormControl;\n  /** Imported error messages. */\n  constructor(public symbol: SymbolService) {\n  }\n\n  /** This method will iterate over the control errors and generate objects for the template. */\n  private getErrors() {\n    return Object.keys(this.control.errors).reduce((errs, key) => {\n      let message;\n      if (key === 'custom') {\n        message = this.control.errors[key];\n      } else {\n        message = this.symbol.resolve('error.input.' + key) || this.symbol.resolve('error.input.invalid');\n      }\n      errs.push({\n        key: key,\n        error: this.control.errors[key],\n        message\n      });\n      return errs;\n    }, []);\n  }\n\n}\n\n    \n\n    \n        \n  {{error.message}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{error.message}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IoModule.html":{"url":"modules/IoModule.html","title":"module - IoModule","body":"\n                   \n\n\n\n\n  Modules\n  IoModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\n\n\nIoModule\n\nIoModule\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/io/io.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicRackComponent\n                            \n                            \n                                DynamicSlotComponent\n                            \n                            \n                                InputComponent\n                            \n                            \n                                InputErrorsComponent\n                            \n                            \n                                OutputComponent\n                            \n                            \n                                SlotHostDirective\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                DefaultInputComponent\n                            \n                            \n                                DefaultOutputComponent\n                            \n                            \n                                InputComponent\n                            \n                            \n                                InputErrorsComponent\n                            \n                            \n                                OutputComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicRackComponent\n                            \n                            \n                                    DynamicSlotComponent\n                            \n                            \n                                    InputComponent\n                            \n                            \n                                    InputErrorsComponent\n                            \n                            \n                                    OutputComponent\n                            \n                            \n                                    SlotHostDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DynamicSlotComponent } from './dynamic-slot/dynamic-slot.component';\nimport { SlotHostDirective } from './slot-host.directive';\nimport { DefaultInputComponent } from '../form/default-input/default-input.component';\nimport { DefaultOutputComponent } from '../form/default-output/default-output.component';\nimport { OutputComponent } from './output/output.component';\nimport { InputComponent } from './input/input.component';\nimport { InputErrorsComponent } from './input-errors/input-errors.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DynamicRackComponent } from './dynamic-rack/dynamic-rack.component';\n\n@NgModule({\n  entryComponents: [\n    DefaultInputComponent,\n    DefaultOutputComponent,\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n  ],\n  declarations: [\n    InputErrorsComponent,\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n    ReactiveFormsModule,\n  ],\n  providers: []\n})\nexport class IoModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemConfig.html":{"url":"interfaces/ItemConfig.html","title":"interface - ItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/item/item-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                An ItemConfig describes an abstract entity with certain properties.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                                \n                                            Optional\n                                        identifier\n                                \n                                \n                                            Optional\n                                        identifierPattern\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        onSave\n                                \n                                \n                                            Optional\n                                        parent\n                                \n                                \n                                            Optional\n                                        resolve\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Items field Config \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to identify items from another (e.g. in a selection). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifierPattern\n                                    \n                                \n                                \n                                    \n                                        identifierPattern:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Pattern of the identifier field. Is used e.g. in the searchbar \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to display the item for humans \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSave\n                                    \n                                \n                                \n                                    \n                                        onSave:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback that is invoked when the item is saved \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolve\n                                    \n                                \n                                \n                                    \n                                        resolve:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom resolve path function. It can be used e.g. to access subbranches of an Object. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For primitive values only: the title for the item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the Item. It determines how it will be displayed in different contexts \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Item } from './item';\nimport { FieldConfigProperty } from '../config/field-config-property.interface';\nimport { FieldConfig } from '../config/field-config.interface';\n\n/** An ItemConfig describes an abstract entity with certain properties.*/\nexport interface ItemConfig {\n  /** For primitive values only: the title for the item */\n  title?: string;\n  /** The Property that is used to identify items from another (e.g. in a selection). */\n  identifier?: string;\n  /** Pattern of the identifier field. Is used e.g. in the searchbar */\n  identifierPattern?: RegExp;\n  /** The Property that is used to display the item for humans */\n  label?: string;\n  /** The Items field Config */\n  fields?: FieldConfig;\n  /** The type of the Item. It determines how it will be displayed in different contexts */\n  type?: string;\n  /** Custom resolve path function. It can be used e.g. to access subbranches of an Object. */\n  resolve?: (body: T) => any;\n  /** Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.*/\n  parent?: any;\n  /** Callback that is invoked when the item is saved */\n  onSave?: (item?: Item, value?: Object) => Promise | T; // TODO rename to save\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        The ListComponent will render a list containing the given items or collection.\nBasic Example:\nhttps://components.entrecode.de/ui/list/basic\nWith Tranforms:\nhttps://components.entrecode.de/ui/list/transforms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list\n            \n\n            \n                styleUrls\n                list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectIndex\n                            \n                            \n                                selectNext\n                            \n                            \n                                selectPrev\n                            \n                            \n                                showHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                collection\n                            \n                            \n                                config\n                            \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                paginationConfig\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        collection\n                    \n                    \n                        The used collection \n\n                            \n                            Type:    Collection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        Config input for List \n\n                            \n                            Type:    ListConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        The visible items \n\n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The Instance of the List \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        paginationConfig\n                    \n                    \n                        Custom PaginationConfig \n\n                            \n                            Type:    PaginationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The used selection \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:35\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Event emitter on item selection \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Event emitter on selection change \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Column click handler. Triggers select.emit(item) with fallback to selection.toggle\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Changing items or collection will trigger reconstructing the list with the new items.\nChanging the selection will reconstruct the selection \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIndex(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Selects the item with the given index \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectNext\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectNext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Selects the next item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectPrev\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectPrev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Selects the previous item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Decides if the header should be visible or not \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ListConfig\n\n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:24\n                            \n                        \n\n                \n                    \n                        The current list config \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        List\nThe List is one of the main components to work with.\nThe basic idea is to display collections of data in a structured but flexible way.\nYou can create a new List like this:\nthis.trees = new List(\n//first argument: Array of Objects\n[{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}],\n//second (optional) argument: ListConfig\n{\n  fields: {\n    name: {\n      label: 'Name'\n    },\n    height: {\n      label: 'Height',\n      group: (h) => h > 10 ? 'Higher than 10m' : 'Lower than 10m'\n    },\n    fruits: {\n      label: 'Has Fruits?',\n      display: (value) => value ? 'yes' : 'no'\n    },\n  }\n})This is how you display a List instance into your template:\n\n    \n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { Collection, List, ListConfig, Selection } from '@ec.components/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport { PaginationConfig } from './pagination/pagination-config.interface';\n\n/**\n * The ListComponent will render a list containing the given items or collection.\n *\n * Basic Example:\n *\n * https://components.entrecode.de/ui/list/basic\n *\n * With Tranforms:\n * https://components.entrecode.de/ui/list/transforms\n * */\n@Component({\n  selector: 'ec-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ListComponent implements OnChanges {\n  /** The current list config */\n  config: ListConfig = {};\n  /** Config input for List */\n  // tslint:disable-next-line:no-input-rename\n  @Input('config') configInput: ListConfig;\n  /** The visible items */\n  @Input() items: Array;\n  /** The used collection */\n  @Input() collection: Collection;\n  /** The used selection */\n  @Input() selection: Selection;\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** Event emitter on item selection */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  /** Event emitter on selection change */\n  @Output() selected: EventEmitter> = new EventEmitter();\n  /** The Instance of the List */\n  @Input() list: List;\n  /** Custom PaginationConfig */\n  @Input() paginationConfig: PaginationConfig;\n\n  /** Changing items or collection will trigger reconstructing the list with the new items.\n   * Changing the selection will reconstruct the selection */\n  ngOnChanges(changes?) {\n    this.config = Object.assign(this.config || {}, this.configInput || {});\n    if (this.items) {\n      this.list = new List(this.items, this.config);\n    } else if (this.collection) {\n      this.list = new List(this.collection.items, this.config);\n    }\n    if (!this.list) {\n      return;\n    }\n    if (!this.selection) {\n      this.selection = new Selection([], this.list.config);\n    }\n    if (this.selection) {\n      this.selection.update$.subscribe((selection: Selection) => {\n        this.selected.emit(selection);\n      })\n    }\n  }\n\n  /** Column click handler. Triggers select.emit(item) with fallback to selection.toggle*/\n  columnClick(item) {\n    if (this.list.config.selectMode && this.selection) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      return this.columnClicked.emit(item);\n    }\n  }\n  /** Decides if the header should be visible or not */\n  showHeader() {\n    return this.list && this.list.config && !this.list.config.disableHeader && (this.list.fields.length || this.list.config.title)\n      && (this.list.config.alwaysShowHeader || !this.list.isEmpty());\n  }\n\n  /** Selects the item with the given index */\n  selectIndex(index: number) {\n    if (!this.selection || this.list.isEmpty() || !this.list.items[index]) {\n      return;\n    }\n    this.selection.select(this.list.items[index]);\n  }\n\n  /** Selects the next item */\n  selectNext() {\n    let index = 0;\n    if (!this.selection.isEmpty()) {\n      index = this.list.items.indexOf(this.selection.items[0]) + 1;\n    }\n    this.selection.removeAll();\n    this.selectIndex(index % this.list.items.length);\n  }\n\n  /** Selects the previous item */\n  selectPrev() {\n    let index = this.list.items.length - 1;\n    if (!this.selection.isEmpty()) {\n      index = this.list.items.indexOf(this.selection.items[0]) + this.list.items.length - 1;\n    }\n    this.selection.removeAll();\n    this.selectIndex(index % this.list.items.length);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n        \n        \n          {{group.value}}\n        \n      \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          {{group.value}}                          '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListConfig.html":{"url":"interfaces/ListConfig.html","title":"interface - ListConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/list/list-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for List Classes.\n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysShowHeader\n                                \n                                \n                                            Optional\n                                        availableSizes\n                                \n                                \n                                            Optional\n                                        desc\n                                \n                                \n                                            Optional\n                                        disableHeader\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                            Optional\n                                        hidePagination\n                                \n                                \n                                            Optional\n                                        maxColumns\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        query\n                                \n                                \n                                            Optional\n                                        selectMode\n                                \n                                \n                                            Optional\n                                        size\n                                \n                                \n                                            Optional\n                                        solo\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                                \n                                            Optional\n                                        sortBy\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysShowHeader\n                                    \n                                \n                                \n                                    \n                                        alwaysShowHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the header will also be shown when the list is empty. Defaults to false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        availableSizes\n                                    \n                                \n                                \n                                    \n                                        availableSizes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The available sizes. If not set, the size cannot be changed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set to true, the sorting will be descending \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableHeader\n                                    \n                                \n                                \n                                    \n                                        disableHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will have no header. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    tells the list to show only items that match the filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidePagination\n                                    \n                                \n                                \n                                    \n                                        hidePagination:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the default pagination will not be visible. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxColumns\n                                    \n                                \n                                \n                                    \n                                        maxColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximal visible columns. Defaults to 8 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current active page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    a query that will be turned in to a filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectMode\n                                    \n                                \n                                \n                                    \n                                        selectMode:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will show its checkboxes and will select on column click.\nThe columnClicked output will be ignored as long selectMode is active \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The number of items per page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solo\n                                    \n                                \n                                \n                                    \n                                        solo:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Should the selection be solo? \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of properties that is sorted after, experimental... \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortBy\n                                    \n                                \n                                \n                                    \n                                        sortBy:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The property name that is sorted after \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For lists with primitive values only: the title of the list header \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\n\n/**\n *  Configuration for List Classes.\n * */\nexport interface ListConfig extends ItemConfig {\n  /** For lists with primitive values only: the title of the list header */\n  title?: string;\n  /** The property name that is sorted after */\n  sortBy?: string;\n  /** Array of properties that is sorted after, experimental... */\n  sort?: string[];\n  /** If set to true, the sorting will be descending */\n  desc?: boolean;\n  /** If true, the list will show its checkboxes and will select on column click.\n   * The columnClicked output will be ignored as long selectMode is active */\n  selectMode?: boolean\n  /** If true, the list will have no header. */\n  disableHeader?: boolean\n  /** If true, the header will also be shown when the list is empty. Defaults to false */\n  alwaysShowHeader?: boolean\n  /** If true, the default pagination will not be visible. */\n  hidePagination?: boolean;\n  /** The current active page */\n  page?: number,\n  /** The number of items per page */\n  size?: number,\n  /** The available sizes. If not set, the size cannot be changed */\n  availableSizes?: number[],\n  /** Should the selection be solo? */\n  solo?: boolean,\n  /** tells the list to show only items that match the filter */\n  filter?: { [key: string]: any },\n  /** a query that will be turned in to a filter */\n  query?: { [key: string]: any },\n  /** Maximal visible columns. Defaults to 8 */\n  maxColumns?: number\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListHeaderComponent.html":{"url":"components/ListHeaderComponent.html","title":"component - ListHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/list-header/list-header.component.ts\n\n\n    \n        Description\n    \n    \n        This component renders, as the name states, the header of a list.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-header\n            \n\n            \n                styleUrls\n                list-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                pops\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyFilter\n                            \n                            \n                                    Public\n                                editFilter\n                            \n                            \n                                    Public\n                                fieldLabel\n                            \n                            \n                                    Public\n                                removeFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The list instance \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        applyFilter(property: , value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Applies the given filter to the list. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        editFilter(pop: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            opens the given filter pop and closes all others \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pop\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fieldLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fieldLabel(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFilter(property: , control: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        control\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     FormComponent\n\n                    \n                \n                    \n                        \n                            Type :     FormComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:22\n                            \n                        \n\n                \n                    \n                        The form that holds the current filter information \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pops\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pops:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:20\n                            \n                        \n\n                \n                    \n                        The pop dropdowns that contain the filtering \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { PopComponent } from '../../pop/pop.component';\nimport { FormComponent } from '../../form/form.component';\nimport { List } from '@ec.components/core/src/list/list';\nimport { Selection } from '@ec.components/core/src/selection/selection';\nimport { Field } from '@ec.components/core';\n\n/** This component renders, as the name states, the header of a list.*/\n@Component({\n  selector: 'ec-list-header',\n  templateUrl: './list-header.component.html',\n  styleUrls: ['./list-header.component.scss']\n})\nexport class ListHeaderComponent {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** The pop dropdowns that contain the filtering */\n  @ViewChildren('filterPop') pops: QueryList;\n  /** The form that holds the current filter information */\n  @ViewChild('filterForm') filter: FormComponent;\n\n  /** opens the given filter pop and closes all others */\n  public editFilter(pop) {\n    pop.toggle();\n    // this.pops.forEach((pop) => pop.hide());\n  }\n\n  /** Applies the given filter to the list. */\n  public applyFilter(property, value) {\n    this.list.filter(property, value);\n  }\n\n  public removeFilter(property, control) {\n    control.reset();\n  }\n\n  public fieldLabel(field: Field) {\n    if (field.label === false) {\n      return '';\n    }\n    return field.label || field.property;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n  \n\n    \n      \n    \n\n    \n      {{fieldLabel(field)}}\n    \n    \n\n    \n      \n        \n        &times;\n      \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{fieldLabel(field)}}                                  ×            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListItemsComponent.html":{"url":"components/ListItemsComponent.html","title":"component - ListItemsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListItemsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/list-items/list-items.component.ts\n\n\n    \n        Description\n    \n    \n        The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\nIt can either be given an Array of Items or just the list parent to control the shown items. \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-items\n            \n\n            \n                styleUrls\n                list-items.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-items.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.\n\n                            \n                            Type:    Item[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The list instance \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Event emitter on item clicked \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item: Item, e: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Propagate clicked item to host or toggle selection. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Checks for host and uses its list. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Item, List, Selection } from '@ec.components/core';\nimport { ListComponent } from '../list.component';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\n\n/** The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\n * It can either be given an Array of Items or just the list parent to control the shown items. */\n@Component({\n  selector: 'ec-list-items',\n  templateUrl: './list-items.component.html',\n  styleUrls: ['./list-items.component.scss']\n})\nexport class ListItemsComponent implements OnChanges {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.*/\n  @Input() items: Item[];\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** Event emitter on item clicked */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n\n  /** Checks for host and uses its list. */\n  ngOnChanges() {\n    if (!this.items && this.list) {\n      this.items = this.list.page;\n    }\n  }\n\n  /** Propagate clicked item to host or toggle selection. */\n  columnClick(item: Item, e: Event) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (this.selection && this.list && this.list.config.selectMode) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListItemsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ListModule.html":{"url":"modules/ListModule.html","title":"module - ListModule","body":"\n                   \n\n\n\n\n  Modules\n  ListModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_imports\n\n\n\ncluster_ListModule_exports\n\n\n\n\nGroupPipe\n\nGroupPipe\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nListModule -->\n\nSearchbarComponent->ListModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSearchbarComponent \n\nSearchbarComponent \n\nSearchbarComponent  -->\n\nListModule->SearchbarComponent \n\n\n\n\n\nFormModule\n\nFormModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nListModule -->\n\nUtilityModule->ListModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/list/list.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GroupPipe\n                            \n                            \n                                ListComponent\n                            \n                            \n                                ListHeaderComponent\n                            \n                            \n                                ListItemsComponent\n                            \n                            \n                                PaginationComponent\n                            \n                            \n                                SearchbarComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    IconModule\n                            \n                            \n                                    SymbolModule\n                            \n                            \n                                    UtilityModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    GroupPipe\n                            \n                            \n                                    ListComponent\n                            \n                            \n                                    ListHeaderComponent\n                            \n                            \n                                    ListItemsComponent\n                            \n                            \n                                    PaginationComponent\n                            \n                            \n                                    SearchbarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormModule } from '../form/form.module';\nimport { IconModule } from '../icon/icon.module';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { UtilityModule } from '../utility/utility.module';\nimport { GroupPipe } from './group.pipe';\nimport { ListHeaderComponent } from './list-header/list-header.component';\nimport { ListItemsComponent } from './list-items/list-items.component';\nimport { ListComponent } from './list.component';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { SearchbarComponent } from './searchbar/searchbar.component';\n\n@NgModule({\n  declarations: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    SearchbarComponent,\n    GroupPipe,\n  ],\n  imports: [\n    CommonModule,\n    FormModule,\n    IconModule,\n    SymbolModule,\n    UtilityModule\n  ],\n  exports: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    SearchbarComponent,\n    GroupPipe,\n    FormModule,\n  ],\n  providers: []\n})\nexport class ListModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/loader/loader.component.ts\n\n\n    \n        Description\n    \n    \n        The ec-loader can be plugged into various components to be triggered when they load stuff.\nhttps://components.entrecode.de/ui/loader\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-loader\n            \n\n            \n                styleUrls\n                loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stack\n                            \n                            \n                                    Private\n                                timestamp\n                            \n                            \n                                    Private\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Private\n                                show\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                            Injects the host element. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\nMake sure the given promise is catched (so the loader will stop loading on error)! \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stack:     Collection>\n\n                    \n                \n                    \n                        \n                            Type :     Collection>\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:14\n                            \n                        \n\n                \n                    \n                        The current stack of loading promises.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timestamp:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                        The timestamp of the last time a promise has been added to the stack. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:16\n                            \n                        \n\n                \n                    \n                        The loader's visibility status. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Loader\nThe loader can be used to indicate any kind of loading activity\nTemplate\n\n\nGlobal Loader\nLocal LoaderThe default classes can be found here.\nUsage\nYou can use a global loader that handles every action or use multiple local loaders:\nimport { LoaderComponent, LoaderService } from '@ec.components/ui';\nexport class MyApp {\n  @ViewChild('globalLoader') globalLoader: LoaderComponent;\n  @ViewChild('localLoader') localLoader: LoaderComponent;\n  constructor(private loaderService: LoaderService) {\n      this.loaderService.use(this.globalLoader); // set global loader\n  }\n  globalLoader() { // When not passing a loader to .wait, the global loader (set by .use) is used.\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)));\n  }\n  localLoader() {\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)), this.localLoader);\n    // this.localLoader.wait(new Promise((resolve) => setTimeout(resolve, 2000))); // alternative way\n  }\n}The advantage of local loaders is that you can place them in specific places of your template to only \"disable\" a part of your site while loading and not the whole page.\nSee the commented out line in localLoader for a direct way to trigger a loader without the service.\nHow it works\nEach time .wait is called on the LoaderService, the target loader throws the given promise on a stack. When all promises on the stack have been resolved, the loader is hidden. This is better than just a boolean switch because multiple loading activies do not interfere with each other.\n\n    \n\n    \n        import { Component, ElementRef } from '@angular/core';\nimport { Collection } from '@ec.components/core/src/collection/collection';\n\n/** The ec-loader can be plugged into various components to be triggered when they load stuff.\n * https://components.entrecode.de/ui/loader\n*/\n@Component({\n  selector: 'ec-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent {\n  /** The current stack of loading promises.*/\n  private stack: Collection> = new Collection([]);\n  /** The loader's visibility status. */\n  private visible = false;\n  /** The timestamp of the last time a promise has been added to the stack. */\n  private timestamp;\n\n  /** Injects the host element. */\n  constructor(private host: ElementRef) {\n  }\n\n  /** Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, */\n  private show() {\n    this.visible = true; // show loader\n    this.host.nativeElement.classList.add('is-active');\n  }\n\n  /** Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, */\n  private hide() {\n    this.visible = false; // show loader\n    this.host.nativeElement.classList.remove('is-active');\n  }\n\n  /** Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\n   * Make sure the given promise is catched (so the loader will stop loading on error)! */\n  wait(promise: Promise) {\n    this.stack.add(promise); // add promise to stack\n    this.show();\n    const timestamp = Date.now();\n    this.timestamp = timestamp; // get timestamp\n    Promise.all(this.stack.items)\n      .then(() => {\n        if (timestamp === this.timestamp) {\n          this.hide();\n          this.stack.removeAll();\n        }\n      });\n    return promise;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoaderModule.html":{"url":"modules/LoaderModule.html","title":"module - LoaderModule","body":"\n                   \n\n\n\n\n  Modules\n  LoaderModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\n\n\nLoaderModule\n\nLoaderModule\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/loader/loader.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoaderComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     LoaderService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoaderComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\nimport { LoaderService } from './loader.service';\n\n@NgModule({\n  declarations: [\n    LoaderComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    LoaderComponent,\n  ],\n  providers: [LoaderService]\n})\nexport class LoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/loader/loader.service.ts\n        \n\n            \n                Description\n            \n            \n                The loader service registers promises \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.service.ts:11\n                            \n                        \n\n\n                \n                    \n                            Sets a global loader that can be triggered without having the reference. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise, loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.loader\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.service.ts:8\n                            \n                        \n\n                \n                    \n                        The global loader that should be used if not loader is passed to wait. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\n\n/** The loader service registers promises */\n@Injectable()\nexport class LoaderService {\n  /** The global loader that should be used if not loader is passed to wait. */\n  loader: LoaderComponent;\n\n  /** Sets a global loader that can be triggered without having the reference. */\n  use(loader: LoaderComponent) {\n    this.loader = loader;\n  }\n\n  /** Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)*/\n  wait(promise: Promise, loader: LoaderComponent = this.loader) {\n    if (!loader || !promise) {\n      // console.warn('cannot trigger loader: no promise or loader given');\n      return;\n    }\n    return loader.wait(promise);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationMapComponent.html":{"url":"components/LocationMapComponent.html","title":"component - LocationMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/location-map.component.ts\n\n\n    \n        Description\n    \n    \n        Shows Google Maps Map \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-map\n            \n\n            \n                styleUrls\n                location-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                markerDragEnd\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                readOnly\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                    \n                        The desired map center \n\n                            \n                            Type:    literal type\n\n                            \n                        \n                            Default value: { latitude: 48.8093253, longitude: 9.159388100000001 }\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                    \n                        If true, no markers can be changed or set \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Form input component \n\n                            \n                            Type:    literal type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        Emits when the marker has been changed \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markerDragEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkerDragEnd(coords: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            changes value on marker dragend \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coords\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            sets the value cand changes the center \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/** Shows Google Maps Map */\n@Component({\n    selector: 'ec-location-map',\n    templateUrl: './location-map.component.html',\n    styleUrls: ['./location-map.component.scss']\n})\n\nexport class LocationMapComponent {\n    /** The desired map center */\n    @Input() center: { longitude: any; latitude: any; } = { latitude: 48.8093253, longitude: 9.159388100000001 };\n    /** If true, no markers can be changed or set */\n    @Input() readOnly: boolean;\n    /** Emits when the marker has been changed */\n    @Output() change: EventEmitter = new EventEmitter();\n    /** Form input component */\n    @Input() value: {\n        longitude: number,\n        latitude: number\n    };\n\n    /** sets the value cand changes the center */\n    setValue(value) {\n        this.value = value;\n        if (value) {\n            this.center = value;\n        }\n    }\n    /** changes value on marker dragend */\n    markerDragEnd(coords) {\n        if (!coords) {\n            console.warn('no coords');\n            return;\n        }\n        const position = { longitude: coords.lng, latitude: coords.lat };\n        this.setValue(position);\n        this.change.emit(position);\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/location/src/location.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module holds all location/map related components and services \n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LocationMapComponent\n                            \n                            \n                                LocationPickerComponent\n                            \n                            \n                                LocationSearchComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                LOCATION_COMPONENTS\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     GeocodeService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LocationMapComponent\n                            \n                            \n                                    LocationPickerComponent\n                            \n                            \n                                    LocationSearchComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { AgmCoreModule } from '@agm/core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationPickerComponent } from './location-picker.component';\nimport { LocationSearchComponent } from './location-search.component';\n/** The components of this module */\nconst LOCATION_COMPONENTS = [\n    LocationMapComponent,\n    LocationSearchComponent,\n    LocationPickerComponent,\n];\n/** This module holds all location/map related components and services */\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        UiModule,\n        AgmCoreModule.forRoot({\n            apiKey: 'AIzaSyAdgEUE1Yxo1F-qb1MrO56u5KATpX9j8o4',\n            libraries: ['places']\n        })],\n    exports: LOCATION_COMPONENTS,\n    declarations: LOCATION_COMPONENTS,\n    entryComponents: LOCATION_COMPONENTS,\n    providers: [GeocodeService],\n})\nexport class LocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationPickerComponent.html":{"url":"components/LocationPickerComponent.html","title":"component - LocationPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/location-picker.component.ts\n\n\n    \n        Description\n    \n    \n        Component with map and autocomplete input to pick a location. Implements ControlValueAccessor \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-location-picker\n            \n\n            \n                styleUrls\n                location-picker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-picker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                geocodeService\n                            \n                            \n                                input\n                            \n                            \n                                map\n                            \n                            \n                                propagateChange\n                            \n                            \n                                search\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setValue\n                            \n                            \n                                updateAddress\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControl\n                            \n                            \n                                showRawValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/location-picker.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        The form control that holds the location \n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showRawValue\n                    \n                    \n                        If true, the raw location value will be visible\n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value: , fromSearch?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Sets value of map and propagates change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fromSearch\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAddress()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            updates the address string by reverse geo lookup  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geocodeService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocodeService:     GeocodeService\n\n                    \n                \n                    \n                        \n                            Type :     GeocodeService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     InputComponent\n\n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     LocationMapComponent\n\n                    \n                \n                    \n                        \n                            Type :     LocationMapComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:28\n                            \n                        \n\n                \n                    \n                        The nested LocationMapComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => { }\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        search:     LocationSearchComponent\n\n                    \n                \n                    \n                        \n                            Type :     LocationSearchComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:30\n                            \n                        \n\n                \n                    \n                        The nested LocationSearchComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationSearchComponent } from './location-search.component';\n\n/** Component with map and autocomplete input to pick a location. Implements ControlValueAccessor */\n@Component({\n    selector: 'ec-location-picker',\n    templateUrl: './location-picker.component.html',\n    styleUrls: ['./location-picker.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LocationPickerComponent),\n            multi: true\n        }\n    ]\n})\n\nexport class LocationPickerComponent extends DefaultInputComponent implements ControlValueAccessor {\n    /** The form control that holds the location */\n    @Input() formControl: FormControl;\n    /** If true, the raw location value will be visible*/\n    @Input() showRawValue = true;\n    /** The nested LocationMapComponent */\n    @ViewChild(LocationMapComponent) map: LocationMapComponent;\n    /** The nested LocationSearchComponent */\n    @ViewChild(LocationSearchComponent) search: LocationSearchComponent;\n    /** Form input component */\n    input: InputComponent;\n\n    constructor(\n        public geocodeService: GeocodeService,\n    ) {\n        super();\n    }\n\n    /** Sets value of map and propagates change */\n    setValue(value, fromSearch?: boolean) {\n        if (!value) {\n            this.search.clear();\n        }\n        this.map.setValue(value);\n        if (!fromSearch) {\n            this.updateAddress();\n        }\n        this.propagateChange(value);\n        if (this.input) {\n            this.input.propagateChange(value);\n        }\n    }\n\n    /** Writes value to editor on outside model change. */\n    writeValue(value: any) {\n        this.map.setValue(value);\n        this.updateAddress();\n    }\n\n    /** updates the address string by reverse geo lookup  */\n    updateAddress() {\n        const value = this.map.value;\n        if (!value) {\n            this.search.searchInput.nativeElement.value = '';\n            return;\n        }\n        this.geocodeService.getNearestAddress(value)\n            .then(results => {\n                if (results.length) {\n                    this.search.searchInput.nativeElement.value = results[0].formatted_address;\n                } else {\n                    this.search.searchInput.nativeElement.value = '';\n                }\n            });\n    }\n\n    propagateChange = (_: any) => { };\n\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() { }\n}\n\n    \n\n    \n        \n\n\n    \n\n{{map.value | json}}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{map.value | json}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationSearchComponent.html":{"url":"components/LocationSearchComponent.html","title":"component - LocationSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/location-search.component.ts\n\n\n    \n        Description\n    \n    \n        Google Maps Location Searchbar \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-search\n            \n\n\n\n\n            \n                templateUrl\n                ./location-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/location-search.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Placeholder for input \n\n                        \n                            Default value: 'Search Location'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        emits when the coords have been changed (after selecting a match) \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Clears the searchbar input value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            subscribes to changes from the inputs autocomplete using geocodeService. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchInput:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:15\n                            \n                        \n\n                \n                    \n                        The search input element \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, Input, NgZone, Output, ViewChild } from '@angular/core';\nimport { } from 'googlemaps';\nimport { GeocodeService } from './geocode.service';\n\n/** Google Maps Location Searchbar */\n@Component({\n    selector: 'ec-location-search',\n    templateUrl: './location-search.component.html'\n})\n\nexport class LocationSearchComponent implements AfterViewInit {\n    /** Placeholder for input */\n    @Input() placeholder = 'Search Location';\n    /** The search input element */\n    @ViewChild('search') searchInput: ElementRef;\n    /** emits when the coords have been changed (after selecting a match) */\n    @Output() change: EventEmitter = new EventEmitter();\n\n    constructor(\n        private geocodeService: GeocodeService,\n        private ngZone: NgZone\n    ) {\n    }\n    /** Clears the searchbar input value */\n    clear() {\n        if (this.searchInput) {\n            this.searchInput.nativeElement.value = '';\n        }\n    }\n    /** subscribes to changes from the inputs autocomplete using geocodeService. */\n    ngAfterViewInit() {\n        this.geocodeService.autocompleteAddress(this.searchInput.nativeElement)\n            .subscribe(\n                coords => {\n                    this.change.emit(coords);\n                }\n            );\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/auth/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\nhttps://components.entrecode.de/auth/auth\n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login\n            \n\n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:24\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport { LoaderComponent, NotificationsService, WithLoader } from '@ec.components/ui';\nimport { AuthService } from '../auth.service';\nimport { WithNotifications } from '@ec.components/ui/src/notifications/with-notifications.interface';\nimport { Notification } from '@ec.components/ui/src/notifications/notification';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\n * https://components.entrecode.de/auth/auth\n*/\n@Component({\n  selector: 'ec-login',\n  templateUrl: 'login.component.html'\n})\n\nexport class LoginComponent implements WithLoader, WithNotifications {\n  /** You can optionally specify PublicAPI instance. Defaults to SdkService#api. */\n  @Input() api: PublicAPI;\n  /** Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The included loader. */\n  @ViewChild(LoaderComponent) loader;\n  /** Error notifications */\n  notifications: Notification[] = [];\n\n  constructor(public auth: AuthService,\n    public notificationService: NotificationsService,\n    public symbol: SymbolService) {\n  }\n  /** Communicates with the AuthService. Handles loader, notifications and success Subject. */\n  login({ email, password }) {\n    const login = this.auth.login({ email, password }, this.api)\n      .then((user) => {\n        this.notificationService.emit({\n          type: 'success',\n          title: this.symbol.resolve('login.success'),\n          hide: this.notifications\n        });\n        this.success.emit(user);\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: this.symbol.resolve('login.error'),\n          error,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications\n        });\n        console.log('could not login', error);\n      });\n    this.loader.wait(login);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        Login Form Component with validation. Fires success event with credentials on submit.\nhttps://components.entrecode.de/ui/login\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login-form\n            \n\n            \n                styleUrls\n                login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                notifications\n                            \n                            \n                                    Private\n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClasses\n                            \n                            \n                                buttonLabel\n                            \n                            \n                                emailLabel\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                loader\n                            \n                            \n                                passwordLabel\n                            \n                            \n                                passwordPlaceholder\n                            \n                            \n                                showLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                            Injects the FormBuilder\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonClasses\n                    \n                    \n                        Additional Button classes \n\n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                    \n                        The Label of the submit button. Defaults to Login \n\n                        \n                            Default value: 'Login'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emailLabel\n                    \n                    \n                        The Label of the Mail field \n\n                        \n                            Default value: 'E-Mail'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emailPlaceholder\n                    \n                    \n                        The Placeholder of the mail Field \n\n                        \n                            Default value: 'E-Mail Adresse'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be shown during login \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordLabel\n                    \n                    \n                        The Label of the password field. \n\n                        \n                            Default value: 'Passwort'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordPlaceholder\n                    \n                    \n                        The Placeholder of the password field \n\n                        \n                            Default value: 'Passwort'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                    \n                        If true, email and password wont have labels \n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        Event that emits when calling showError. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Event that emits on succesful submit of the form, passing the login credentials. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showError\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowError(err: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Shows the given error in the form. Clears the password field and emits the error event. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:22\n                            \n                        \n\n                \n                    \n                        Contains possible error messages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:18\n                            \n                        \n\n                \n                    \n                        The login's form group.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                        Recent error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:20\n                            \n                        \n\n                \n                    \n                        Flips true when submitted. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Login Form\nThe Login Form UI component is meant to be extended by a component that communicates with an API.\n    \n    \n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { FieldValidators } from '../validators/field-validators';\nimport { LoaderComponent } from '../../loader/loader.component';\nimport { WithLoader } from '../../loader/with-loader.interface';\n\n/** Login Form Component with validation. Fires success event with credentials on submit.\n * https://components.entrecode.de/ui/login\n*/\n@Component({\n  selector: 'ec-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\nexport class LoginFormComponent implements OnInit, WithLoader {\n  /** The login's form group.*/\n  public form: FormGroup;\n  /** Flips true when submitted. */\n  private submitted: boolean;\n  /** Contains possible error messages. */\n  public errorMessage: string;\n  /** Event that emits on succesful submit of the form, passing the login credentials. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Event that emits when calling showError. */\n  @Output() error: EventEmitter = new EventEmitter();\n  /** The loader that should be shown during login */\n  @Input() loader: LoaderComponent;\n  /** If true, email and password wont have labels */\n  @Input() showLabels = true;\n  /** The Label of the Mail field */\n  @Input() emailLabel = 'E-Mail';\n  /** The Placeholder of the mail Field */\n  @Input() emailPlaceholder = 'E-Mail Adresse';\n  /** The Label of the password field. */\n  @Input() passwordLabel = 'Passwort';\n  /** The Placeholder of the password field */\n  @Input() passwordPlaceholder = 'Passwort';\n  /** The Label of the submit button. Defaults to Login */\n  @Input() buttonLabel = 'Login';\n  /** Additional Button classes */\n  @Input() buttonClasses = '';\n  /** Recent error Notifications */\n  notifications: Notification[];\n\n  /** Injects the FormBuilder*/\n  constructor(private fb: FormBuilder) {\n  }\n\n  /** Initializes the form */\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, FieldValidators.email]], // emailAvailable?\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /** Shows the given error in the form. Clears the password field and emits the error event. */\n  showError(err): any {\n    this.errorMessage = err.message;\n    this.form.get('password').setValue('');\n    this.error.emit(err);\n    Observable.throw(err);\n  }\n\n  /** Method that is meant to be overwritten by a subclass to communicate with an API. */\n  login(value) { // meant to be overridden\n    return Promise.resolve(value);\n  }\n\n  /** Is called when the form has been successfully submitted. Calls login and resets the form after. */\n  onSubmit() {\n    this.submitted = true;\n    delete this.errorMessage;\n    if (!this.form.valid) {\n      return;\n    }\n    const login = this.login(this.form.value)\n      .then((res) => {\n        this.form.reset();\n        this.success.emit(res);\n      });\n    if (this.loader) {\n      this.loader.wait(login);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n  \n  \n    {{emailLabel}}\n    \n    \n    \n  \n  \n    Passwort\n    \n    \n  \n  \n    {{buttonLabel}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}        {{emailLabel}}                    Passwort                {{buttonLabel}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MaxItemsPipe.html":{"url":"pipes/MaxItemsPipe.html","title":"pipe - MaxItemsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  MaxItemsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/max-items.pipe.ts\n        \n\n            \n                Description\n            \n            \n                This pipe slices an array after the nth item \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        maxItems\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(array: Array, maxItems: number, start: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/max-items.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        maxItems\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        start\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n/** This pipe slices an array after the nth item */\n@Pipe({\n    name: 'maxItems'\n})\n\nexport class MaxItemsPipe implements PipeTransform {\n    transform(array: Array = [], maxItems: number, start: number = 0): any {\n        return array.slice(start, maxItems);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MediumEditorComponent.html":{"url":"components/MediumEditorComponent.html","title":"component - MediumEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MediumEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/medium-editor/src/medium-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps medium-editor to a reactive form component.\nhttps://components.entrecode.de/misc/medium-editor\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-medium-editor\n            \n\n            \n                styleUrls\n                medium-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                medium-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Private\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        data model \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        MediumEditor options \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        empty placeholder \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                    \n                        change emitter \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            destroys editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            inits editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                        container element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     MediumEditor\n\n                    \n                \n                    \n                        \n                            Type :     MediumEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:47\n                            \n                        \n\n                \n                    \n                        editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:49\n                            \n                        \n\n                \n                    \n                        ready promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:45\n                            \n                        \n\n                \n                    \n                        current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as MediumEditor from 'medium-editor/dist/js/medium-editor';\n\n/** Wraps medium-editor to a reactive form component.\n * https://components.entrecode.de/misc/medium-editor\n*/\n@Component({\n  selector: 'ec-medium-editor',\n  styleUrls: ['./medium-editor.component.scss'],\n  templateUrl: 'medium-editor.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MediumEditorComponent),\n      multi: true\n    }\n  ]\n})\nexport class MediumEditorComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  /** data model */\n  @Input() model: any;\n  /** MediumEditor [options](https://github.com/yabwe/medium-editor#mediumeditor-options) */\n  @Input() options: any;\n  /** empty placeholder */\n  @Input() placeholder: string;\n  /** change emitter */\n  @Output() modelChange: EventEmitter = new EventEmitter();\n  /** container element */\n  @ViewChild('container') container: ElementRef;\n  /** current value */\n  value: any;\n  /** editor instance */\n  private editor: MediumEditor;\n  /** ready promise */\n  public ready: Promise;\n\n  /** inits editor */\n  ngOnInit() {\n    this.container.nativeElement.innerHTML = this.model || '';\n    this.options.placeholder = this.placeholder;\n    this.editor = new MediumEditor(this.container.nativeElement, this.options);\n    this.editor.subscribe('editableInput', () => {\n      this.value = this.editor.getContent();\n      this.propagateChange(this.value);\n    });\n    this.ready = Promise.resolve(this.editor);\n  }\n  /** destroys editor */\n  ngOnDestroy(): void {\n    this.editor.destroy();\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    this.ready.then((editor) => {\n      editor.setContent(this.value);\n    });\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'MediumEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediumModule.html":{"url":"modules/MediumModule.html","title":"module - MediumModule","body":"\n                   \n\n\n\n\n  Modules\n  MediumModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediumModule\n\n\n\ncluster_MediumModule_declarations\n\n\n\ncluster_MediumModule_MediumEditorComponent_providers\n\n\n\ncluster_MediumModule_exports\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n\n\nMediumModule\n\nMediumModule\n\nMediumModule -->\n\nMediumEditorComponent->MediumModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumModule->MediumEditorComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->MediumEditorComponent -->\n\n{\n    : , : (() => ), : true\n}->MediumEditorComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/medium-editor/src/medium.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MediumEditorComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MediumEditorComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MediumEditorComponent } from './medium-editor.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [MediumEditorComponent],\n  declarations: [MediumEditorComponent],\n  providers: [],\n})\nexport class MediumModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/menu/menu.component.ts\n\n\n    \n        Description\n    \n    \n        Renders a nested menu from a given routes Array (the same you would use for angular routing). \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-menu,[ec-menu]\n            \n\n            \n                styleUrls\n                menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hover\n                            \n                            \n                                    Private\n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTimeout\n                            \n                            \n                                getColor\n                            \n                            \n                                getItemColor\n                            \n                            \n                                getLevel\n                            \n                            \n                                getPath\n                            \n                            \n                                hasActivePath\n                            \n                            \n                                hoverItem\n                            \n                            \n                                hoverOut\n                            \n                            \n                                isActive\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colors\n                            \n                            \n                                hoverDelay\n                            \n                            \n                                parent\n                            \n                            \n                                route\n                            \n                            \n                                routes\n                            \n                            \n                                title\n                            \n                            \n                                vanishDelay\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            Injects the Router. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colors\n                    \n                    \n                        Color map of submenus. \n\n                            \n                            Type:    string[]\n\n                            \n                        \n                            Default value: ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4']\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hoverDelay\n                    \n                    \n                        Delay before menu is shown on mouseover. \n\n                        \n                            Default value: 50\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parent\n                    \n                    \n                        Parent Menu (when nested) \n\n                            \n                            Type:    MenuComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                    \n                        The currently active route \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        routes\n                    \n                    \n                        Routes that should be used for the menu. You can use your angular router routes here. \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                        The title of the menu \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        vanishDelay\n                    \n                    \n                        Delay before menu is hidden after mouseout. \n\n                        \n                            Default value: 500\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelTimeout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Cancels the current timeout \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColor(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the current level. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItemColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItemColor(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the given item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLevel(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Returns the level of nesting (parent=0). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath(item: , path: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Returns the full path to an item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasActivePath\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasActivePath(item: , parent: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item or a child of it is active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        parent\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverItem(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Hovers the item after hoverDelay timeout. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:95\n                            \n                        \n\n\n                \n                    \n                            Hovers out after vanishDelay \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item is active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item is selected. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            updates the routes on change of route \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hover\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hover:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:29\n                            \n                        \n\n                \n                    \n                        The currently hovered Route\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeout:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                        The timeout for delay handling \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router'; // TODO cannot import Route...\n\n/** Renders a nested menu from a given routes Array (the same you would use for angular routing). */\n@Component({\n  selector: 'ec-menu,[ec-menu]',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnChanges {\n  /** Routes that should be used for the menu. You can use your angular router routes here. */\n  @Input() routes; // : Route[];\n  /** The currently active route */\n  @Input() route; // : Route;\n  /** The title of the menu */\n  @Input() title: string;\n  /** Parent Menu (when nested) */\n  @Input() parent: MenuComponent;\n  /** Color map of submenus. */\n  @Input() colors: string[] = ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4'];\n  /** Delay before menu is hidden after mouseout. */\n  @Input() vanishDelay = 500;\n  /** Delay before menu is shown on mouseover. */\n  @Input() hoverDelay = 50;\n  /** The currently hovered Route*/\n  public hover; // : Route;\n  /** The timeout for delay handling */\n  private timeout;\n\n  /** Injects the Router. */\n  constructor(private router: Router) {\n  }\n\n  /** updates the routes on change of route */\n  ngOnChanges() {\n    if (this.route) {\n      this.routes = this.route.children\n      .filter(route => route.path && route.path.indexOf(':') === -1)\n      .filter(route => !route.data || !route.data.hidden);\n    }\n  }\n\n  /** Returns true if the item or a child of it is active. */\n  hasActivePath(item, parent = this) { // this.parent\n    return parent.getPath(item) === this.router.url;\n  }\n\n  /** Returns true if the item is selected. */\n  isSelected(item) {\n    const path = this.getPath(item);\n    return path !== '/' && (path === this.router.url || this.router.url.indexOf(path) === 0);\n  }\n\n  /** Returns true if the item is active. */\n  isActive(item) {\n    return this.hover === item || (!this.hover && this.isSelected(item));\n  }\n\n  /** Returns the level of nesting (parent=0). */\n  getLevel(level = 0) {\n    return this.parent ? this.parent.getLevel(++level) : level;\n  }\n\n  /** Returns the color for the current level. */\n  getColor(level = 0) {\n    return this.colors[this.getLevel(level) % this.colors.length];\n  }\n\n  /** Returns the color for the given item. */\n  getItemColor(item) {\n    return this.isActive(item) ? this.getColor(1) : 'initial';\n  }\n\n  /** Hovers the item after hoverDelay timeout. */\n  hoverItem(item) { // : Route\n    if (!this.hover) {\n      this.hover = item;\n    }\n    this.timeout = setTimeout(() => {\n      this.hover = item;\n    }, this.hoverDelay);\n  }\n\n  /** Cancels the current timeout */\n  cancelTimeout() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  /** Hovers out after vanishDelay */\n  hoverOut() {\n    this.timeout = setTimeout(() => {\n      delete this.hover;\n    }, this.vanishDelay)\n  }\n\n  /** Returns the full path to an item. */\n  getPath(item, path: string = '') {\n    path = '/' + item.path + path;\n    if (!this.parent) {\n      return path;\n    }\n    return this.parent.getPath(this.route, path);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{title}}\n    \n    \n      {{item.data?.title || item.path}}\n      {{item.data?.title || item.path}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{title}}              {{item.data?.title || item.path}}      {{item.data?.title || item.path}}        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MockupComponent.html":{"url":"components/MockupComponent.html","title":"component - MockupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MockupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/mockup/mockup.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the style prototypes \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-mockup\n            \n\n            \n                styleUrls\n                mockup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mockup.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/** This component holds the style prototypes */\n@Component({\n  selector: 'ec-mockup',\n  templateUrl: './mockup.component.html',\n  styleUrls: ['./mockup.component.scss']\n})\nexport class MockupComponent {\n}\n\n    \n\n    \n        \n  \n    ec.list\n\n    ec.list\n    \n      \n        \n          \n            \n          \n          \n            Groupname\n          \n          \n            \n              \n              \n                \n                  delete\n                \n                \n                  dublicate\n                \n              \n            \n          \n        \n        \n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .selected\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .error\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .disabled\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .success\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .info\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .invalid\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .custom-item-class\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n    ec.list.card\n    \n      \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n      \n    \n    ec.list.simple\n    \n      \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n      \n    \n  \n\n-->\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      ec.list    ec.list                                                                        Groupname                                                                                              delete                                                  dublicate                                                                                                                                                                                                                Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .selected                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .error                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .disabled                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .success                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .info                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .invalid                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .custom-item-class                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                                ec.list.card                                                                                                                                  Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                            ec.list.simple                                                      Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                          -->'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'MockupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfig.html":{"url":"interfaces/ModelConfig.html","title":"interface - ModelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/model-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig, FieldConfigProperty } from '@ec.components/core';\n\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfig {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelConfigService.html":{"url":"injectables/ModelConfigService.html","title":"injectable - ModelConfigService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ModelConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/model-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The main class for configuring the behaviour of a model.\nBy default, everything is auto generated from the model's schema but can be overriden via the\nset method. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                omittedFields\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSystemPropertiesToFieldConfig\n                            \n                            \n                                generateConfig\n                            \n                            \n                                generateFieldConfig\n                            \n                            \n                                get\n                            \n                            \n                                isSystemProperty\n                            \n                            \n                                parseType\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(crud: CrudService, sdk: SdkService, typeConfig: TypeConfigService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/model-config/model-config.service.ts:26\n                            \n                        \n\n                \n                    \n                            Injects CrudService and SdkService. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        crud\n                                                  \n                                                        \n                                                                    CrudService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addSystemPropertiesToFieldConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \naddSystemPropertiesToFieldConfig(config: FieldConfig, override: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            Assigns default system fields to given config. Does not override by default \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    FieldConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        override\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateConfig(model: string, fieldConfig?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:178\n                            \n                        \n\n\n                \n                    \n                            Returns the given model's config and generates a field config from the schema if it is not configured. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fieldConfig\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateFieldConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateFieldConfig(model: string, fields?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:129\n                            \n                        \n\n\n                \n                    \n                            Generates a proper fieldConfig for a given model and an optional local fieldConfig.\nOperates in three layers: If a local fieldConfig is given, it will be used.\nIf no local fieldConfig is given, the global model's field config is used.\nIf no global field config is found for that model, it will be generated from the model schema.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fields\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Retrieves the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            ModelConfig.get(&#39;muffin&#39;); //returns muffin config;\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSystemProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSystemProperty(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Checks if a given property name is a system property (either part of omittedFields or beginning with _).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseType\n                            \n                            \n                        \n                    \n                \n                \n                    \nparseType(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:112\n                            \n                        \n\n\n                \n                    \n                            Parses the property type (as contained in the property schema's title field). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { raw: string; name: any; relation: any; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(property: string, config: CrudConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Sets the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    CrudConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            ModelConfig.set(&#39;muffin&#39;, {\nfields: {\ntitle: {\nlabel: &#39;Muffin Titel&#39;\n}\n});\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            omittedFields\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        omittedFields:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'id',\n    'private',\n    'created',\n    'creator',\n    'modified'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:20\n                            \n                        \n\n                \n                    \n                        Array of property names that are omitted by default. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Config } from '@ec.components/core/src/config/config';\nimport { FieldConfigProperty } from '@ec.components/core/src/config/field-config-property.interface';\nimport { FieldConfig } from '@ec.components/core/src/config/field-config.interface';\nimport { Item } from '@ec.components/core/src/item/item';\nimport { ListConfig } from '@ec.components/core/src/list/list-config.interface';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { CrudService } from '../crud/crud.service';\nimport { SdkService } from '../sdk/sdk.service';\nimport { TypeConfigService } from './type-config.service';\n\n/** The main class for configuring the behaviour of a model.\n * By default, everything is auto generated from the model's schema but can be overriden via the\n * set method. */\n@Injectable()\nexport class ModelConfigService extends Config {\n  /** Array of property names that are omitted by default. */\n  omittedFields: Array = [\n    'id',\n    'private',\n    'created',\n    'creator',\n    'modified'\n  ];\n\n  /** Injects CrudService and SdkService. */\n  constructor(private crud: CrudService,\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private symbol: SymbolService) {\n    super();\n  }\n\n  /** Retrieves the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.get('muffin'); //returns muffin config;\n   * ```\n   * */\n  get(property: string): CrudConfig {\n    return this.configure('model', property);\n  }\n\n  /** Sets the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.set('muffin', {\n   *  fields: {\n   *    title: {\n   *      label: 'Muffin Titel'\n   *    }\n   *  });\n   * ```\n   * */\n  set(property: string, config: CrudConfig): CrudConfig {\n    return this.configure('model', property, config);\n  }\n\n  /** Checks if a given property name is a system property (either part of omittedFields or beginning with _).*/\n  isSystemProperty(property: string) {\n    return property[0] === '_' || this.omittedFields.indexOf(property) !== -1;\n  }\n\n  /** Assigns default system fields to given config. Does not override by default */\n  addSystemPropertiesToFieldConfig(config: FieldConfig, override = false) {\n    const defaultConfig = {\n      id: {\n        label: this.symbol.resolve('field.label.id'),\n        view: 'string',\n        form: false,\n        immutable: true,\n        hidden: true\n      },\n      _created: {\n        label: this.symbol.resolve('field.label.created'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        form: false,\n        immutable: true,\n        sortable: true,\n        hidden: true,\n        rawFilter: true\n      },\n      _modified: {\n        label: this.symbol.resolve('field.label.modified'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        form: false,\n        immutable: true,\n        sortable: true,\n        hidden: false,\n        rawFilter: true\n      },\n      _creator: {\n        label: this.symbol.resolve('field.label.creator'),\n        display: this.typeConfig.displayAccount(),\n        view: 'account',\n        form: false,\n        immutable: true,\n        hidden: true\n      }\n    };\n    Object.keys(defaultConfig).forEach(property =>\n      Object.assign(config, {\n        [property]: override ? defaultConfig[property] : config[property] || defaultConfig[property]\n      }));\n  }\n\n  /** Parses the property type (as contained in the property schema's title field). */\n  parseType(type: string) {\n    if (!type) {\n      return null;\n    }\n    const match = type.match(/^(\\w*)()?/i);\n    return !match.length ? null : {\n      raw: type,\n      name: match[1],\n      relation: match.length > 2 ? match[3] : null\n    };\n  }\n\n  /** Generates a proper fieldConfig for a given model and an optional local fieldConfig.\n   * Operates in three layers: If a local fieldConfig is given, it will be used.\n   * If no local fieldConfig is given, the global model's field config is used.\n   * If no global field config is found for that model, it will be generated from the model schema.\n   * */\n  generateFieldConfig(model: string, fields?): Promise> {\n    let fieldConfig;\n    return Promise.resolve().then(() => {\n      if (fields) {\n        return fields;\n      }\n      // use global config, if given\n      if (this.get(model) && this.get(model).fields) {\n        return this.get(model).fields;\n      }\n    }).then((config) => {\n      fieldConfig = config;\n      return this.sdk.getSchema(model);\n    }).then((schema) => {\n      schema = schema.allOf[1];\n      const properties = Object.keys(schema.properties)\n        .filter(property => (!fieldConfig && !this.isSystemProperty(property)) || (fieldConfig && !!fieldConfig[property]));\n      fieldConfig = fieldConfig || {};\n      this.addSystemPropertiesToFieldConfig(fieldConfig); // prepends system fields\n      properties.forEach(property => {\n        let type;\n        if (property === '_entryTitle') {\n          type = {\n            raw: 'text',\n            name: 'text',\n            model: null\n          };\n        } else {\n          type = this.parseType(schema.properties[property].title);\n        }\n        if (!type) {\n          console.error('Model Property Schema title ', schema.properties[property].title, ' was unexpected, ignoring property', property)\n          return;\n        }\n        fieldConfig[property] = Object.assign({\n          label: property,\n          schema: schema.properties[property],\n          relation: type.relation,\n          readOnly: schema.properties[property].readOnly || this.isSystemProperty(property),\n          // required: schema.required.indexOf(property) !== -1, // TODO\n          display: ((value) => value)\n        }, this.typeConfig.get(type.name),\n          fieldConfig[property] ? fieldConfig[property] : {});\n      });\n      return fieldConfig;\n    });\n  }\n\n  /** Returns the given model's config and generates a field config from the schema if it is not configured. */\n  generateConfig(model: string, fieldConfig?): Promise> {\n    const config = Object.assign({}, this.get(model) || {}); // clone\n    Object.assign(config, {\n      identifier: 'id',\n      identifierPattern: /^[0-9A-Za-z-_]{7,14}$/, // shortID pattern\n      label: '_entryTitle',\n      onSave: (item: Item, value) => this.crud.save(model, item.getBody(), value)\n    });\n    if (!model) {\n      return Promise.resolve(config);\n    }\n    return this.generateFieldConfig(model, fieldConfig).then((fields) => {\n      Object.assign(config, { fields });\n      return Promise.resolve(config);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfiguration.html":{"url":"interfaces/ModelConfiguration.html","title":"interface - ModelConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/model-configuration.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig, FieldConfigProperty } from '@ec.components/core';\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfiguration {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/notifications/notification.ts\n        \n\n            \n                Description\n            \n            \n                A Notification is used inside NotificationService and NotificationComponent to display any information to the user.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                append\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                hide\n                            \n                            \n                                    Optional\n                                host\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                replace\n                            \n                            \n                                    Optional\n                                sticky\n                            \n                            \n                                    Optional\n                                time\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notification: Notification)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                            The constructor just looks if an error is set, and if yes, sets the type to error. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                  \n                                                        \n                                                                    Notification\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            append\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        append:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:22\n                            \n                        \n\n                \n                    \n                        If set, the notification will be appended to the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:18\n                            \n                        \n\n                \n                    \n                        If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hide:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:20\n                            \n                        \n\n                \n                    \n                        Notifications that should be hidden when this one gets active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            host\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        host:     NotificationsComponent\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:10\n                            \n                        \n\n                \n                    \n                        The host the is NotificationsComponent that should display the notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:8\n                            \n                        \n\n                \n                    \n                        The message is shown below the title and is meant for further description. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            replace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        replace:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                        If set, the notification will replace all others in the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sticky\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sticky:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:14\n                            \n                        \n\n                \n                    \n                        If true, the notification will stay forever \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:12\n                            \n                        \n\n                \n                    \n                        The amount of ms it should be visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:6\n                            \n                        \n\n                \n                    \n                        The title is the headline of a notification and the only value that is required. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:16\n                            \n                        \n\n                \n                    \n                        Determines the looks. Currently info, error and success are defined. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationsComponent } from './notifications.component';\n\n/** A Notification is used inside NotificationService and NotificationComponent to display any information to the user.*/\nexport class Notification {\n  /** The title is the headline of a notification and the only value that is required. */\n  title?: string;\n  /** The message is shown below the title and is meant for further description. */\n  message?: string;\n  /** The host the is NotificationsComponent that should display the notification. */\n  host?: NotificationsComponent;\n  /** The amount of ms it should be visible */\n  time?: number;\n  /** If true, the notification will stay forever */\n  sticky?: boolean;\n  /** Determines the looks. Currently info, error and success are defined. */\n  type?: string;\n  /** If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.*/\n  error?: any;\n  /** Notifications that should be hidden when this one gets active */\n  hide?: this[];\n  /** If set, the notification will be appended to the given array of Notifications when activated */\n  append?: this[];\n  /** If set, the notification will replace all others in the given array of Notifications when activated */\n  replace?: this[];\n\n  /** The constructor just looks if an error is set, and if yes, sets the type to error. */\n  constructor(notification: Notification) {\n    if (notification.error) {\n      this.type = 'error';\n    }\n    Object.assign(this, notification);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/notifications/notifications.component.ts\n\n\n    \n        Description\n    \n    \n        Displays any kind of Notification inside the DOM.\nIt listens on the notificationService.$emitter for notifications.\nhttps://components.entrecode.de/ui/notifications\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-notifications\n            \n\n            \n                styleUrls\n                notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                time\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/notifications.component.ts:22\n                            \n                        \n\n                \n                    \n                            Listens on the NotificationService and shows each notification that has this component set as host, or none at all. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        time\n                    \n                    \n                        The default time for a notification to be visible. Will be ignored if the notification itself has a time set. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Collection\n\n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.component.ts:20\n                            \n                        \n\n                \n                    \n                        The current stack of notifications that are visible. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Notifications\nThe Notifications Module is a combination of the NotificationsService and the NotificationsComponent.\nSimple Usage\n\nPlace the component somewhere in your app template:\n\n\nEmit notifications via the service\n\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  showNotification() {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        message: 'Das ist die Beschreibung'\n      });\n  }\n\n  doSomethingRisky() {\n      return Promise.reject('Fehler')\n      .catch((err) => {\n          this.notifications.emit({\n              error: err, // passing the error Object\n              title: 'Fehler!'\n          })\n      })\n  }\n}The given type will be added as class. The classes that are available by default can be looked up here.\nAdvanced Usage\nYou can also use multiple ec-notifications at different places:\n\n\nA\nBAll you have to do, is pass the instance of the component that should display the notification via the host property:\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  emit(host) {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        host: host\n      });\n  }\n}Hiding previous errors\nHere is an example usage of a typical success/error handling.\nIt features hiding previous notifications. We recommended you to use the WithNotifications interface for that case.\nexport class MuffinComponent implements WithNotifications {\n  /** Recent Error notification */\n  notifications: Notification[] = [];\n\nconstructor(\n    public bakery:BakeryService,\n    public notificationService: NotificationsService,\n    )\n\n  bake() {\n    this.bakery.bake().then(()=> {\n        this.notificationService.emit({\n            title: 'Muffin was baken!',\n            hide: this.notifications // this will hide all preceding notifications\n        })\n    }).catch(error=>{\n        this.notificationService.emit({\n            title: 'Error while baking',\n            sticky: true,\n            hide: this.notifications, // this will hide all preceding notifications\n            replace: this.notifications // this will replace the given array with the new notification\n        })\n    });\n  }\n}The hide option is useful to hide obsolete errors. E.g. If you successfully log in after one failiure, the sticky error notification of the first attempt will be hidden. This enables you to keep errors messages as long as they are needed.\nInstead of replace, you could also use append (see notification.component.ts for implementation).\n\n    \n\n    \n        import { Component, Input } from '@angular/core';\nimport { Collection } from '@ec.components/core/src/collection/collection';\nimport { Notification } from './notification';\nimport { NotificationsService } from './notifications.service';\n\n/** Displays any kind of Notification inside the DOM.\n * It listens on the notificationService.$emitter for notifications.\n * https://components.entrecode.de/ui/notifications\n * */\n@Component({\n  selector: 'ec-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent {\n  /** The current stack of notifications that are visible. */\n  notifications: Collection = new Collection([]);\n  /** The default time for a notification to be visible. Will be ignored if the notification itself has a time set. */\n  @Input() time: number;\n\n  /** Listens on the NotificationService and shows each notification that has this component set as host, or none at all. */\n  constructor(private notificationService: NotificationsService) {\n    this.time = this.time || this.notificationService.defaultTime;\n    this.notificationService.emitter$.subscribe((notification: Notification) => {\n      if (notification.hide) {\n        this.notifications.removeAll(notification.hide);\n      }\n      if (!notification.title && !notification.message) {\n        // console.warn('tried to emit notification without message and title', notification);\n        return;\n      }\n      if (notification.append) {\n        notification.append.push(notification);\n      }\n      if (notification.replace) {\n        notification.replace.length = 0;\n        notification.replace.push(notification);\n      }\n      if (!notification.host || notification.host === this) {\n        this.notifications.add(notification);\n        if (notification.sticky) {\n          if (notification.time) {\n            console.warn('notification.time is ignored because it was set sticky');\n          }\n          return;\n        }\n        setTimeout(() => this.notifications.remove(notification), notification.time || this.time)\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{notification.title}}\n    {{notification.message}}\n    \n    \n    \n      \n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{notification.title}}    {{notification.message}}                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationsModule.html":{"url":"modules/NotificationsModule.html","title":"module - NotificationsModule","body":"\n                   \n\n\n\n\n  Modules\n  NotificationsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_imports\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nIconModule\n\nIconModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/notifications/notifications.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ErrorComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     NotificationsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IconModule\n                            \n                            \n                                    PopModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ErrorComponent\n                            \n                            \n                                    NotificationsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NotificationsComponent } from './notifications.component';\nimport { NotificationsService } from './notifications.service';\nimport { PopModule } from '../pop/pop.module';\nimport { ErrorComponent } from './error/error.component';\nimport { IconModule } from '../icon/icon.module';\n\n@NgModule({\n  declarations: [\n    NotificationsComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    CommonModule,\n    PopModule,\n    IconModule,\n  ],\n  exports: [\n    NotificationsComponent,\n    ErrorComponent,\n  ],\n  providers: [\n    {\n      provide: 'useDesktopNotifications',\n      useValue: false\n    }, NotificationsService]\n})\nexport class NotificationsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/notifications/notifications.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the main interaction layer for the developer to show notifications.\nYou can use desktop notifications by default by providing:\n{\nprovide: \"useDesktopNotifications\",\nuseValue: true\n}in your module's providers.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultTime\n                            \n                            \n                                    Private\n                                emitter\n                            \n                            \n                                    Public\n                                emitter$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                desktopNotification\n                            \n                            \n                                emit\n                            \n                            \n                                getPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(useDesktopNotifications: )\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                            The constructors injects the useDesktopNotifications flag from the module.\nIf true, all notifications will be shown as desktop notifications instead. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        useDesktopNotifications\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktopNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \ndesktopNotification(notification: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Emits a desktop notification after asking for permission (if not already granted). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emit\n                            \n                            \n                        \n                    \n                \n                \n                    \nemit(notification: Notification, desktop?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        desktop\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPermission()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Asks for permission to show desktop notifications, if not already granted. \n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                        The default view time for a notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emitter:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:22\n                            \n                        \n\n                \n                    \n                        The emitter subject to fire notifications. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            emitter$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emitter$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.emitter.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:24\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when a new notification comes in. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Notification } from './notification';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n/** Workaround to get window without typescript complaining */\ndeclare const window;\n\n/** This service is the main interaction layer for the developer to show notifications.\n * You can use desktop notifications by default by providing:\n * ```json\n {\n   provide: \"useDesktopNotifications\",\n   useValue: true\n }```\n * in your module's providers.\n *\n * */\n@Injectable()\nexport class NotificationsService {\n  /** The emitter subject to fire notifications. */\n  private emitter: Subject = new Subject();\n  /** Observable that is nexted when a new notification comes in. */\n  public emitter$: Observable = this.emitter.asObservable();\n  /** The default view time for a notification. */\n  public defaultTime = 5000;\n\n  /** The constructors injects the useDesktopNotifications flag from the module.\n   * If true, all notifications will be shown as desktop notifications instead. */\n  constructor(@Inject('useDesktopNotifications') private useDesktopNotifications) {\n  }\n\n  /** Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.*/\n  emit(notification: Notification, desktop?: boolean) {\n    const instance = new Notification(notification);\n    if (desktop || this.useDesktopNotifications) {\n      this.desktopNotification(instance);\n    } else {\n      this.emitter.next(instance);\n    }\n    return instance;\n  }\n\n  /** Asks for permission to show desktop notifications, if not already granted. */\n  getPermission(): Promise {\n    if (window.Notification.permission === 'granted') {\n      return Promise.resolve();\n    }\n    return window.Notification.requestPermission().then((permission) => {\n      // If the user accepts, let's create a notification\n      if (permission !== 'granted') {\n        return Promise.reject('Desktop Notification Permission Denied!');\n      }\n    });\n  }\n\n  /** Emits a desktop notification after asking for permission (if not already granted). */\n  desktopNotification(notification: Notification) {\n    if (!('Notification' in window)) {\n      console.warn('This browser does not support desktop notification');\n    }\n    this.getPermission().then(() => {\n      const message = new window.Notification(notification.title, { body: notification.message });\n      if (notification.sticky) {\n        if (notification.time) {\n          console.warn('notification.time is ignored because it was set sticky');\n        }\n        return;\n      }\n      setTimeout(() => message.close(), notification.time || this.defaultTime)\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OutputComponent.html":{"url":"components/OutputComponent.html","title":"component - OutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/output/output.component.ts\n\n\n    \n        Description\n    \n    \n        Outputs the given field of the given item, rendering the component dynamically. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-output\n            \n\n            \n                styleUrls\n                output.component.scss\n            \n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        The instance of field that should be used in the template \n\n                            \n                            Type:    Field\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/output/output.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                        The belonging item \n\n                            \n                            Type:    Item\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/output/output.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/output/output.component.ts:21\n                            \n                        \n\n\n                \n                    \n                            The component is loade as soon as the field and item are known.\nIf the field has no output property set, the DefaultOutputComponent will be rendered. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, data: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges } from '@angular/core';\nimport { DefaultOutputComponent } from '../../form/default-output/default-output.component';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\n\n/** Outputs the given field of the given item, rendering the component dynamically. */\n@Component({\n  selector: 'ec-output',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  styleUrls: ['./output.component.scss']\n})\nexport class OutputComponent extends DynamicSlotComponent implements OnChanges {\n  /** The instance of field that should be used in the template */\n  @Input() field: Field;\n  /** The belonging item */\n  @Input() item: Item;\n\n  /** The component is loade as soon as the field and item are known.\n   * If the field has no output property set, the DefaultOutputComponent will be rendered. */\n  ngOnChanges() {\n    if (this.field && this.item) {\n      this.loadComponent(this.field.output || DefaultOutputComponent,\n        {\n          item: this.item,\n          field: this.field\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'OutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/pagination/pagination.ts\n        \n\n            \n                Description\n            \n            \n                This class can be used to control the loading behaviour of external data. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                change\n                            \n                            \n                                    Public\n                                change$\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                pages\n                            \n                            \n                                    Protected\n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                getPage\n                            \n                            \n                                getPages\n                            \n                            \n                                isActive\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                last\n                            \n                            \n                                    Protected\n                                load\n                            \n                            \n                                next\n                            \n                            \n                                params\n                            \n                            \n                                prev\n                            \n                            \n                                select\n                            \n                            \n                                setTotal\n                            \n                            \n                                slice\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: ListConfig, total?: number)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/pagination/pagination.ts:16\n                            \n                        \n\n                \n                    \n                            You can init each Pagination instance with an optional config.\nIf no config is provided, it will default to {page: 1, size: 25}. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ListConfig\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        change:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:14\n                            \n                        \n\n                \n                    \n                        Subject for tracking changes. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            change$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        change$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.change.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:16\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when the pagination has changed. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ListConfig\n\n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:10\n                            \n                        \n\n                \n                    \n                        The pagination config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pages:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:12\n                            \n                        \n\n                \n                    \n                        Array to iterate over the number of pages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            total\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        total:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:8\n                            \n                        \n\n                \n                    \n                        The total number of items that is being paginated. It can be changed via setTotal. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first\n                            \n                            \n                        \n                    \n                \n                \n                    \nfirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:93\n                            \n                        \n\n\n                \n                    \n                            Loads the first Page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:34\n                            \n                        \n\n\n                \n                    \n                            Retrieves the current page \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPages\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:39\n                            \n                        \n\n\n                \n                    \n                            Retrieves the number of pages \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:107\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given page number is currently active.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:112\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the first one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:117\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the last one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last\n                            \n                            \n                        \n                    \n                \n                \n                    \nlast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:98\n                            \n                        \n\n\n                \n                    \n                            Loads the last page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load(config?: ListConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:77\n                            \n                        \n\n\n                \n                    \n                            Merges config and fires next on change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ListConfig\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:44\n                            \n                        \n\n\n                \n                    \n                            Loads the next page. Throws error if already on last page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                            \n                        \n                    \n                \n                \n                    \nparams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:130\n                            \n                        \n\n\n                \n                    \n                            Returns an object with all relevant infos about the current state of pagination \n\n\n                            \n                                Returns :     { page: number; pages: number; total: number; from: number; to: any; size: any; availableSizes: a...\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:53\n                            \n                        \n\n\n                \n                    \n                            Loads the previous page. Throws error if already on first page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:85\n                            \n                        \n\n\n                \n                    \n                            Selects the given page number \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTotal\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTotal(total: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:64\n                            \n                        \n\n\n                \n                    \n                            Sets the total number of items and calculcates the page count.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        total\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slice\n                            \n                            \n                        \n                    \n                \n                \n                    \nslice(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:125\n                            \n                        \n\n\n                \n                    \n                            slices a given array according to the current pagination state \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(size: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:142\n                            \n                        \n\n\n                \n                    \n                            updates the size of the pages.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Pagination\nPagination can be used to keep track of the pages of arbitrary items.\nconst pagination = new Pagination({ size: 10 });\npagination.setTotal(50); //tells the pagination that it should paginate over 50 items.\npagination.getPages(); //5See list.ts/list.component for example usage.\n\n    \n\n    \n        import { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ListConfig } from '../list/list-config.interface';\n\n/** This class can be used to control the loading behaviour of external data. */\nexport class Pagination {\n  /** The total number of items that is being paginated. It can be changed via setTotal. */\n  protected total: number;\n  /** The pagination config */\n  protected config: ListConfig;\n  /** Array to iterate over the number of pages. */\n  public pages: Array;\n  /** Subject for tracking changes. */\n  private change = new Subject();\n  /** Observable that is nexted when the pagination has changed. */\n  public change$: Observable = this.change.asObservable();\n\n  /** You can init each Pagination instance with an optional config.\n   * If no config is provided, it will default to ```{page: 1, size: 25}```. */\n  constructor(config?: ListConfig, total?: number) {\n    this.config = { page: 1, size: 25 };\n    Object.assign(this.config, config);\n    Object.assign(this.config, {\n      availableSizes: Array.from(new Set([this.config.size]\n        .concat(this.config.availableSizes || [10, 25, 50, 100], [this.config.size])\n        .sort(((a, b) => a - b))))\n    });\n    if (total) {\n      this.setTotal(total);\n    }\n  }\n\n  /** Retrieves the current page */\n  getPage(): number {\n    return this.config.page;\n  }\n\n  /** Retrieves the number of pages */\n  getPages(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /** Loads the next page. Throws error if already on last page. */\n  next(): void {\n    if (this.isLast()) {\n      return; // already last page\n    }\n    this.config.page += 1;\n    this.load();\n  }\n\n  /** Loads the previous page. Throws error if already on first page. */\n  prev(): void {\n    if (this.isFirst()) {\n      return; // already first page\n    }\n    this.config.page -= 1;\n    this.load();\n  }\n\n  /**\n   * Sets the total number of items and calculcates the page count.\n   * */\n  setTotal(total: number) {\n    /* if (this.total !== total) {\n      this.change.next(this.config);\n    } */\n    this.total = total;\n    this.pages = new Array(Math.ceil(this.total / this.config.size));\n    if (this.config.page !== 1 && this.config.page > this.pages.length) {\n      this.config.page = this.pages.length || 1;\n      this.load();\n    }\n  }\n\n  /** Merges config and fires next on change */\n  protected load(config?: ListConfig): void {\n    if (config) {\n      Object.assign(this.config, config);\n    }\n    this.change.next(this.config);\n  }\n\n  /** Selects the given page number */\n  select(page: number): void {\n    if (page === this.config.page) {\n      return;\n    }\n    this.load({ page: page });\n  }\n\n  /** Loads the first Page */\n  first(): void {\n    this.load({ page: 1 });\n  }\n\n  /** Loads the last page */\n  last() {\n    if (!this.pages) {\n      throw new Error(`Cannot load last page without knowing the item count.\n        Call setTotal(itemCount) before loading.`);\n    }\n    this.load({ page: this.pages.length });\n  }\n\n  /** Returns true if the given page number is currently active.*/\n  isActive(page: number): boolean {\n    return this.config.page === page;\n  }\n\n  /** Returns true if the current page is the first one */\n  isFirst(): boolean {\n    return this.config.page === 1;\n  }\n\n  /** Returns true if the current page is the last one */\n  isLast(): boolean {\n    if (!this.pages) {\n      return true;\n    }\n    return this.config.page === this.pages.length;\n  }\n\n  /** slices a given array according to the current pagination state */\n  slice(items: Array): Array {\n    return items.slice((this.config.page - 1) * this.config.size, (this.config.page) * this.config.size);\n  }\n\n  /** Returns an object with all relevant infos about the current state of pagination */\n  params() {\n    return {\n      page: this.getPage(),\n      pages: this.getPages(),\n      total: this.total,\n      from: (this.getPage() - 1) * this.config.size + 1,\n      to: Math.min(this.getPage() * this.config.size, this.total),\n      size: this.config.size,\n      availableSizes: this.config.availableSizes,\n    }\n  }\n  /** updates the size of the pages.  */\n  updateSize(size: number) {\n    if (!size) {\n      return;\n    }\n    this.load({ size, page: 1 });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/pagination/pagination.component.ts\n\n\n    \n        Description\n    \n    \n        The Pagination component renders a given instance of the Pagination class.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n                AfterViewInit\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pagination\n            \n\n            \n                styleUrls\n                pagination.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                page\n                            \n                            \n                                    Private\n                                pageContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                translateContainer\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        The config that is used \n\n                            \n                            Type:    PaginationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                    \n                        A Pagination Instance \n\n                            \n                            Type:    Pagination\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \nisVisible(page: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Determines if a page should be visible \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            When the view is ready, the container is translated.  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            As soon as the pagination is known, the change$ event is subscribed to translate the container on change.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Init config. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \ntranslateContainer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Translates the page container that the current page is in the middle \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:18\n                            \n                        \n\n                \n                    \n                        The div container for the pages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            page\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        page:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:22\n                            \n                        \n\n                \n                    \n                        The pages li elements. The first one is used to determine the container translation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pageContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageContainer:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:20\n                            \n                        \n\n                \n                    \n                        The ul around pages \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Pagination\nTODO\n\n    \n\n    \n        import { AfterViewInit, Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { Pagination } from '@ec.components/core';\nimport { PaginationConfig } from './pagination-config.interface';\n\n/**\n * The Pagination component renders a given instance of the Pagination class.\n */\n@Component({\n  selector: 'ec-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss']\n})\nexport class PaginationComponent implements OnChanges, AfterViewInit, OnInit {\n  /** A Pagination Instance */\n  @Input() pagination: Pagination;\n  /** The div container for the pages*/\n  @ViewChild('container') private container: ElementRef;\n  /** The ul around pages */\n  @ViewChild('pageContainer') private pageContainer: ElementRef;\n  /** The pages li elements. The first one is used to determine the container translation. */\n  @ViewChildren('page') private page: QueryList;\n  /** The config that is used */\n  @Input() config: PaginationConfig;\n  /** Init config. */\n\n  /** Init config. */\n  ngOnInit() {\n    this.config = new PaginationConfig(this.config);\n  }\n\n  /** As soon as the pagination is known, the change$ event is subscribed to translate the container on change.*/\n  ngOnChanges() {\n    if (!this.pagination) {\n      return;\n    }\n    this.pagination.change$.subscribe((config) => {\n      setTimeout(() => {\n        this.translateContainer();\n      })\n    });\n    this.config = new PaginationConfig(this.config);\n  }\n  /** When the view is ready, the container is translated.  */\n  ngAfterViewInit() {\n    this.translateContainer();\n  }\n\n  /** Translates the page container that the current page is in the middle */\n  translateContainer() {\n    if (!this.page || !this.pageContainer) {\n      // console.warn('pages not ready', this.page, this.pageContainer);\n      return;\n    }\n    const itemWidth = this.page.first.nativeElement.clientWidth;\n    const page = this.pagination.getPage();\n    let translation = Math.max(0, itemWidth * (page - this.config.range - 1));\n    translation = Math.min(translation, (this.pagination.getPages() - (2 * this.config.range) - 1) * itemWidth);\n    this.pageContainer.nativeElement.style = `transform:translateX(-${translation}px)`;\n    this.container.nativeElement.style = `max-width:${(1 + 2 * this.config.range) * itemWidth}px`;\n  }\n\n  /** Determines if a page should be visible */\n  isVisible(page) {\n    const current = this.pagination.getPage();\n    return Math.abs(current - page) \n    \n\n    \n        \n  \n    1\">\n      \n        \n          {{'pagination.first' | symbol}}\n        \n      \n      \n        \n          {{'pagination.prev' | symbol}}\n        \n      \n    \n    1\">\n      \n        \n          \n            {{i+1}}\n          \n        \n      \n    \n    1\">\n      \n        \n          {{'pagination.next' | symbol}}\n        \n      \n      \n        \n          {{'pagination.last' | symbol}}\n        \n      \n    \n  \n  \n    {{pagination.params().from}} - {{pagination.params().to}} {{ 'pagination.of' | symbol}} {{pagination.params().total}}\n  \n  \n     1\" (change)=\"updateSize($event.target.value)\" class=\"input\">\n      \n        {{size}} {{'pagination.size' | symbol}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      1\">                        {{\\'pagination.first\\' | symbol}}                                      {{\\'pagination.prev\\' | symbol}}                      1\">                                    {{i+1}}                                1\">                        {{\\'pagination.next\\' | symbol}}                                      {{\\'pagination.last\\' | symbol}}                          {{pagination.params().from}} - {{pagination.params().to}} {{ \\'pagination.of\\' | symbol}} {{pagination.params().total}}         1\" (change)=\"updateSize($event.target.value)\" class=\"input\">              {{size}} {{\\'pagination.size\\' | symbol}}            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationConfig.html":{"url":"classes/PaginationConfig.html","title":"class - PaginationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/list/pagination/pagination-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for a pagination component \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideFirstLast\n                            \n                            \n                                hidePages\n                            \n                            \n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: PaginationConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor assigns the config \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    PaginationConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideFirstLast\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hideFirstLast:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:9\n                            \n                        \n\n                \n                    \n                        Hides first and last Link \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hidePages:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                        Hides pages \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        range:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:7\n                            \n                        \n\n                \n                    \n                        Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\nNOTE: For a smoother UX, there are minimum 2 * range + 1 pages visible.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** Configuration for a pagination component */\nexport class PaginationConfig {\n    /** Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\n * NOTE: For a smoother UX, there are minimum ```2 * range + 1``` pages visible.*/\n    range = 2;\n    /** Hides first and last Link */\n    hideFirstLast: boolean;\n    /** Hides pages */\n    hidePages: boolean;\n    /** The constructor assigns the config */\n    constructor(config: PaginationConfig) {\n        Object.assign(this, config);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordResetComponent.html":{"url":"components/PasswordResetComponent.html","title":"component - PasswordResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/auth/password-reset/password-reset.component.ts\n\n\n    \n        Description\n    \n    \n        Form to send password reset request. \n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-password-reset\n            \n\n\n\n\n            \n                templateUrl\n                password-reset.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                email\n                            \n                            \n                                loader\n                            \n                            \n                                lockForm\n                            \n                            \n                                    Public\n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/password-reset/password-reset.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        Optional api to be used (if not using sdk.api instance) \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Custom placeholder for email field \n\n                        \n                            Default value: 'E-Mail Adresse...'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Event after request was successful \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Sends request through AuthService and shows notifications + loader. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:16\n                            \n                        \n\n                \n                    \n                        The user email \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:24\n                            \n                        \n\n                \n                    \n                        The loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lockForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lockForm:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:14\n                            \n                        \n\n                \n                    \n                        To ensure the user only sends one request, the form is locked after the request has been sent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { LoaderComponent, NotificationsService, WithLoader } from '@ec.components/ui';\nimport { AuthService } from '../auth.service';\n\n/** Form to send password reset request. */\n@Component({\n  selector: 'ec-password-reset',\n  templateUrl: 'password-reset.component.html'\n})\n\nexport class PasswordResetComponent implements WithLoader {\n  /** To ensure the user only sends one request, the form is locked after the request has been sent */\n  lockForm: boolean;\n  /** The user email */\n  email: string;\n  /** Optional api to be used (if not using sdk.api instance) */\n  @Input() api: PublicAPI;\n  /** Custom placeholder for email field */\n  @Input() placeholder = 'E-Mail Adresse...';\n  /** Event after request was successful */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The loader */\n  @ViewChild(LoaderComponent) loader;\n\n  constructor(public auth: AuthService, public notifications: NotificationsService) {\n  }\n  /** Sends request through AuthService and shows notifications + loader. */\n  reset() {\n    const reset = this.auth.resetPassword(this.email, this.api)\n      .then(() => {\n        this.notifications.emit({\n          type: 'success',\n          title: 'Mail versendet',\n          message: 'Sie haben soeben eine Mail mit weiteren Anweisungen erhalten',\n          sticky: true\n        });\n        this.lockForm = true;\n        this.success.emit();\n      }).catch((error) => {\n        this.notifications.emit({\n          title: 'Fehler beim Passwort zurücksetzen',\n          error,\n          sticky: true\n        });\n        console.log('could not reset password', error);\n      });\n    this.loader.wait(reset);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  Passwort zurücksetzen\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Passwort zurücksetzen'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopComponent.html":{"url":"components/PopComponent.html","title":"component - PopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PopComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/pop/pop.component.ts\n\n\n    \n        Description\n    \n    \n        A Pop is an area of content whose visibility can be toggled.\nIt can be used e.g as dialog, drawer or dialog.\nhttps://components.entrecode.de/ui/pop\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pop\n            \n\n            \n                styleUrls\n                pop.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/pop/pop.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                    \n                        If true, .visible is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        Emits the value of visible on change. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. First removes visible and after the delay it removes active. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. First sets active and after the delay it sets visible. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(visible: boolean, emit: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Shows if not visible, hides if visible. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        visible\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                !this.visible\n                                                        \n\n                                                \n                                                \n                                                        emit\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:25\n                            \n                        \n\n                \n                    \n                        The amount of time between setting active and visible. Defaults to 0. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Pop\nA Pop is not just a modal, but a section of markup that appears (pops) anywhere and with any style on your page.\nUsage\n\n    \n        Close\n    \n    \n        Some body content\n    \n    \n        This is the footer\n    \n\nShow popThe default pop classes can be looked up here.\n\n    \n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PopService } from './pop.service';\n\n/** A Pop is an area of content whose visibility can be toggled.\n * It can be used e.g as dialog, drawer or dialog.\n * https://components.entrecode.de/ui/pop\n * */\n@Component({\n  selector: 'ec-pop',\n  templateUrl: './pop.component.html',\n  styleUrls: ['./pop.component.scss']\n})\nexport class PopComponent {\n  /** If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  */\n  @Input() active: boolean;\n  /** If true, .visible is set on .ec-pop-container.  */\n  @Input() visible: boolean;\n  /** Emits the value of visible on change. */\n  // tslint:disable-next-line:no-output-rename\n  @Output('toggle') _toggle: EventEmitter = new EventEmitter();\n  /** The amount of time between setting active and visible. Defaults to 0. */\n  delay = 0;\n\n  constructor(protected popService: PopService) {\n  }\n\n  /** Shows if not visible, hides if visible. */\n  public toggle(visible: boolean = !this.visible, emit: boolean = false) {\n    if (!visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n    if (emit) {\n      this._toggle.emit(visible);\n    }\n  }\n\n  /** Shows the pop. First sets active and after the delay it sets visible. */\n  public show() {\n    this.active = true;\n    this.popService.stack.add(this);\n    setTimeout(() => {\n      this.visible = true;\n    }, this.delay);\n  }\n\n  /** Hides the pop. First removes visible and after the delay it removes active. */\n  public hide() {\n    this.visible = false;\n    this.popService.stack.remove(this);\n    if (!this.delay) {\n      return;\n    }\n    setTimeout(() => {\n      this.active = false;\n    }, this.delay);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'PopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PopModule.html":{"url":"modules/PopModule.html","title":"module - PopModule","body":"\n                   \n\n\n\n\n  Modules\n  PopModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\n\nPopComponent\n\nPopComponent\n\n\n\nPopModule\n\nPopModule\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/pop/pop.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PopComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     PopService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    PopComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PopComponent } from './pop.component';\nimport { PopService } from './pop.service';\n\n@NgModule({\n  declarations: [\n    PopComponent\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    PopComponent\n  ],\n  providers: [PopService]\n})\nexport class PopModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PopService.html":{"url":"injectables/PopService.html","title":"injectable - PopService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PopService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/pop/pop.service.ts\n        \n\n            \n                Description\n            \n            \n                Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stack\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/pop/pop.service.ts:9\n                            \n                        \n\n                \n                    \n                            Listens for escape keys and hides latest pop + removes the pop from stack \n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stack:     Collection\n\n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.service.ts:9\n                            \n                        \n\n                \n                    \n                        Stack of current opened pops \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Collection } from '@ec.components/core';\nimport { PopComponent } from './pop.component';\n\n/** Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. */\n@Injectable()\nexport class PopService {\n    /** Stack of current opened pops */\n    stack: Collection = new Collection();\n    /** Listens for escape keys and hides latest pop + removes the pop from stack */\n    constructor() {\n        window.addEventListener('keydown', (event) => {\n            if ((event.keyCode === 27 || event.key === 'Escape') && this.stack.items.length) {\n                const latestPop = this.stack.items[this.stack.items.length - 1];\n                latestPop.hide();\n                this.stack.remove(latestPop);\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceConfig.html":{"url":"injectables/ResourceConfig.html","title":"injectable - ResourceConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ResourceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/resource-config/resource-config.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                base64uuid\n                            \n                            \n                                created\n                            \n                            \n                                get\n                            \n                            \n                                hexColor\n                            \n                            \n                                shortID\n                            \n                            \n                                stringField\n                            \n                            \n                                tagsField\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService, typeConfig: TypeConfigService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-config/resource-config.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            base64uuid\n                            \n                            \n                        \n                    \n                \n                \n                    \nbase64uuid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            regex for base64 uuid \n\n\n                            \n                                Returns :     RegExp\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreated(label: string, symbol: SymbolService)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            returns the config for a created field \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'Date'\n                                                        \n\n                                                \n                                                \n                                                        symbol\n                                                        \n                                                                    SymbolService\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { label: string; sortable: boolean; view: string; display: any; group: any; form: boolean; immuta...\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(relationName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Returns the CrudConfig for the given relation name. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relationName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hexColor\n                            \n                            \n                        \n                    \n                \n                \n                    \nhexColor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            returns the config for a hexColor field \n\n\n                            \n                                Returns :     { label: string; view: string; prefill: string; }\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shortID\n                            \n                            \n                        \n                    \n                \n                \n                    \nshortID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            returns regex for a shortID \n\n\n                            \n                                Returns :     RegExp\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stringField\n                            \n                            \n                        \n                    \n                \n                \n                    \nstringField(label: , filterable: , sortable: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            returns the config for a string field \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        filterable\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                                \n                                                        sortable\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { label: any; view: string; filterable: boolean; sortable: boolean; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagsField\n                            \n                            \n                        \n                    \n                \n                \n                    \ntagsField(label: , list: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            returns the config for a tags field \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        list\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { label: any; view: string; display: (value: any) => any; list: boolean; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            returns regex for a uuid \n\n\n                            \n                                Returns :     RegExp\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:76\n                                \n                            \n                    \n                        \n                                Returns the whole resource-config, which maps a resource relation name to a CrudConfig. \n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DefaultEntryInputComponent } from '@ec.components/data/src/entry-form/default-entry-input.component';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { TypeConfigService } from '../model-config/type-config.service';\n\n@Injectable()\n/** Contains default configurations for all kinds of resources. Used by ResourceList and ResourceForm.  */\nexport class ResourceConfig {\n\n  constructor(private symbol: SymbolService, private typeConfig: TypeConfigService) { }\n  /** Returns the CrudConfig for the given relation name. */\n  get(relationName: string): CrudConfig {\n    if (!this.config[relationName]) {\n      console.error(`${relationName} could not be found in the resource-config.\n      Use one of ${Object.keys(this.config[relationName])}`);\n      return;\n    } // TODO enrich fields with type with type-config?\n    return this.config[relationName];\n  }\n\n  /** returns the config for a created field */\n  created(label = 'Date', symbol: SymbolService) {\n    return {\n      label,\n      sortable: true,\n      view: 'date',\n      display: this.typeConfig.displayDate(),\n      group: this.typeConfig.groupDate(),\n      form: false,\n      immutable: true\n    }\n  };\n  /** returns the config for a hexColor field */\n  hexColor() {\n    return {\n      label: '#',\n      view: 'color',\n      prefill: '#ffffff'\n    }\n  };\n  /** returns the config for a tags field */\n  tagsField(label, list = true) {\n    return {\n      label,\n      view: 'tags',\n      display: (value) => value || [],\n      list\n    };\n  }\n  /** returns the config for a string field */\n  stringField(label, filterable = true, sortable = true) {\n    return {\n      label,\n      view: 'string',\n      filterable,\n      sortable\n    };\n  }\n  /** returns regex for a shortID */\n  shortID(): RegExp {\n    return /^[0-9A-Za-z-_]{7,14}$/;\n  }\n  /** returns regex for a uuid */\n  uuid(): RegExp {\n    return /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\n  }\n  /** regex for base64 uuid */\n  base64uuid(): RegExp {\n    return /^[a-zA-Z0-9\\\\-_]{22}$/;\n  }\n\n  /** Returns the whole resource-config, which maps a resource relation name to a CrudConfig. */\n  get config(): { [key: string]: CrudConfig } {\n    return {\n      dataManager: {\n        identifier: 'dataManagerID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        permissions: {\n          post: 'dm-create',\n          put: 'dm::edit',\n          delete: 'dm::delete',\n          get: true\n        },\n        fields: {\n          hexColor: this.hexColor(),\n          shortID: {\n            immutable: true,\n            list: false\n          },\n          title: Object.assign(this.stringField('Name'), { required: true }),\n          description: {\n            label: this.symbol.resolve('field.label.description'),\n            view: 'string',\n            filterable: true\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            view: 'json',\n            list: false,\n            immutable: true\n          },\n          defaultLocale: {\n            list: false,\n            immutable: true\n          },\n          locales: this.tagsField(this.symbol.resolve('field.label.locales'), false),\n          publicAssetRights: Object.assign(\n            this.tagsField(this.symbol.resolve('datamanager.field.label.publicAssetRights'), false),\n            { immutable: true }),\n          rights: Object.assign(this.tagsField('rights', false), { immutable: true }),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      model: {\n        identifier: 'modelID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        fields: {\n          hexColor: this.hexColor(),\n          title: Object.assign(this.stringField('Model'), { required: true }),\n          description: {\n            label: this.symbol.resolve('field.label.description'),\n            view: 'string',\n            filterable: true,\n          },\n          locales: {\n            list: false,\n            prefill: []\n          },\n          fields: {\n            view: 'tags',\n            display: (value) => {\n              return (value || []).map(field => field.title).filter(field => field[0] !== '_')\n            },\n            prefill: []\n          },\n          titleField: {\n            view: 'string',\n            list: false\n          },\n          config: {\n            list: false,\n            view: 'json'\n          },\n          hasEntries: {\n            immutable: true,\n            view: 'boolean'\n          },\n          hooks: {\n            display: (value) => {\n              return (value || []).map(hook => (hook.methods || []).join(', '))\n            },\n            view: 'tags'\n          },\n          policies: {\n            display: (value) => {\n              return (value || []).map(policy => policy.method)\n            },\n            view: 'tags'\n          },\n          sync: {\n            list: false,\n            view: 'json',\n            immutable: true\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      // ec accounts\n      account: {\n        identifier: 'accountID',\n        identifierPattern: this.uuid(),\n        label: 'email',\n        permissions: {\n          get: 'acc:list',\n          put: 'acc:edit:'\n        },\n        fields: {\n          name: this.stringField(this.symbol.resolve('field.label.name')),\n          email: {\n            label: this.symbol.resolve('field.label.email'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          hasPassword: {\n            label: this.symbol.resolve('field.label.password'),\n            view: 'boolean',\n            filterable: true,\n            sortable: true,\n            readOnly: true\n          },\n          hasPendingEmail: {\n            label: this.symbol.resolve('account.field.label.hasPendingEmail'),\n            view: 'boolean',\n            filterable: true,\n            sortable: true,\n            readOnly: true\n          },\n          language: {\n            label: this.symbol.resolve('account.field.label.language'),\n            view: 'string',\n            list: false\n          },\n          openID: {\n            list: false\n          },\n          permissions: this.tagsField(this.symbol.resolve('account.field.label.permissions'), false),\n          groups: {\n            label: this.symbol.resolve('account.field.label.groups'),\n            type: 'groups',\n            input: DefaultEntryInputComponent,\n            list: false,\n            display: (value) => value ? value.map(group => group.name) : []\n          },\n          state: {\n            label: this.symbol.resolve('account.field.label.state')\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dmAccount: {\n        identifier: 'accountID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        permissions: {\n          get: 'acc:list',\n          put: 'acc:edit:'\n        },\n        methods: ['get', 'put', 'delete'],\n        fields: {\n          accountID: {\n            label: this.symbol.resolve('field.label.id'),\n            view: 'string'\n          },\n          email: {\n            label: this.symbol.resolve('field.label.email'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          hasPassword: {\n            label: this.symbol.resolve('dmAccount.field.label.hasPassword'),\n            view: 'boolean',\n            filterable: true,\n            readOnly: true\n          },\n          pending: {\n            label: this.symbol.resolve('dmAccount.field.label.pending'),\n            view: 'boolean',\n            filterable: true,\n            readOnly: true\n          },\n          oauth: {\n            list: false\n          }\n        }\n      },\n      template: {\n        identifier: 'templateID',\n        identifierPattern: this.uuid(),\n        label: 'name',\n        permissions: {\n          post: 'dm-template-create',\n          get: 'dm-template::view'\n        },\n        fields: {\n          name: {\n            label: this.symbol.resolve('template.field.label.template'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          version: {\n            label: this.symbol.resolve('template.field.label.version'),\n            display: this.typeConfig.displayDate(),\n            group: this.typeConfig.groupDate(),\n            form: false\n          }\n        }\n      },\n      app: {\n        identifier: 'appID',\n        identifierPattern: this.uuid(),\n        permissions: {\n          post: 'app-create',\n          delete: 'app::delete',\n          put: 'app::edit'\n        },\n        fields: {\n          hexColor: this.hexColor(),\n          shortID: {\n            label: this.symbol.resolve('field.label.shortID'),\n            list: false\n          },\n          title: {\n            label: this.symbol.resolve('app.field.label.app'),\n            view: 'string',\n            filterable: true,\n            sortable: true,\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      platform: {\n        identifier: 'platformID',\n        identifierPattern: this.uuid(),\n        fields: {\n          title: {\n            label: this.symbol.resolve('platform.field.label.platform'),\n            view: 'string'\n          },\n          platformType: {\n            label: this.symbol.resolve('platform.field.label.platformType'),\n            view: 'string'\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            view: 'json',\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      asset: { // old ec.asset\n        identifier: 'assetID',\n        identifierPattern: this.uuid(),\n        fields: {\n          thumb: {\n            form: false,\n            label: this.symbol.resolve('asset.field.label.thumb'),\n            view: 'preview',\n            resolve: (asset) => {\n              if (asset.type !== 'image') {\n                return '';\n              }\n              return asset.getImageUrl(200);\n            },\n            immutable: true\n          },\n          assetID: {\n            label: 'assetID',\n            list: false,\n            form: false,\n            immutable: true\n          },\n          title: {\n            label: this.symbol.resolve('field.label.title'),\n            view: 'string',\n            sortable: true,\n            filterable: true\n          },\n          files: {\n            label: this.symbol.resolve('asset.field.label.files'),\n            view: 'tag',\n            form: false,\n            display: value => value.length,\n            immutable: true\n          },\n          tags: this.tagsField(this.symbol.resolve('asset.field.label.tags')),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      legacyAsset: { // old public assets\n        identifier: 'assetID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        fields: {\n          thumb: {\n            form: false,\n            label: this.symbol.resolve('asset.field.label.thumb'),\n            view: 'preview',\n            resolve: (asset) => {\n              if (asset.type !== 'image') {\n                return '';\n              }\n              return asset.getImageUrl(200);\n            },\n            immutable: true\n          },\n          assetID: {\n            label: 'assetID',\n            list: false,\n            form: false,\n            immutable: true\n          },\n          title: {\n            label: this.symbol.resolve('field.label.title'),\n            view: 'string',\n            sortable: true,\n            filterable: true\n          },\n          files: {\n            label: this.symbol.resolve('asset.field.label.files'),\n            view: 'tag',\n            form: false,\n            display: value => value.length,\n            immutable: true\n          },\n          tags: this.tagsField(this.symbol.resolve('asset.field.label.tags')),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      // https://doc.entrecode.de/en/develop/resources/dm-assetgroup/\n      assetGroup: {\n        identifier: 'assetGroupID',\n        fields: {\n          assetGroupID: {\n            label: this.symbol.resolve('asset.field.label.assetGroupID'),\n            view: 'string',\n            filterable: true\n          },\n          public: {\n            view: 'boolean',\n            prefill: false\n          },\n          settings: {\n            view: 'json',\n            display: (json) => JSON.stringify(json),\n            prefill: {}\n            /*\n            urlExpiration: string\n            disabledTypes: Array\n            imageSizes: Array\n            thumbSizes: Array\n            */\n          },\n          policies: {\n            view: 'tags',\n            display: (policies) => (policies || []).map(p => p.method),\n            prefill: []\n            /*\n            method: get, put, post, delete\n            user: public, dmUser\n            conditions: JSON or null (https://entrecode.de/schema/dm-assetgroup#definitions/conditions)\n            */\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dmAsset: { // new assets\n        identifier: 'assetID',\n        identifierPattern: this.base64uuid(),\n        label: 'title',\n        fields: {\n          file: {\n            label: this.symbol.resolve('dmAsset.field.label.file'),\n            display: value => value.url,\n            view: 'preview',\n            immutable: true,\n            form: false\n          },\n          thumb: {\n            form: false,\n            list: false,\n            label: this.symbol.resolve('asset.field.label.thumb'),\n            view: 'preview',\n            resolve: (asset) => {\n              if (asset.type !== 'image' || !asset.thumbnails || !asset.thumbnails.length) {\n                return '';\n              }\n              return asset.thumbnails[0].url;\n            },\n            immutable: true\n          },\n          assetID: {\n            label: this.symbol.resolve('dmAsset.field.label.assetID'),\n            list: false,\n            form: false,\n            immutable: true\n          },\n          title: {\n            label: this.symbol.resolve('field.label.title'),\n            view: 'string',\n            sortable: true,\n            filterable: true\n          },\n          caption: {\n            label: this.symbol.resolve('dmAsset.field.label.caption'),\n            view: 'string'\n          },\n          duplicates: {\n            label: this.symbol.resolve('dmAsset.field.label.duplicates'),\n            view: 'number',\n            list: false,\n            form: false\n          },\n          thumbnails: {\n            label: this.symbol.resolve('dmAsset.field.label.thumbnails'),\n            display: values => values.map(value => value.url),\n            list: false,\n            form: false\n          },\n          type: {\n            label: this.symbol.resolve('dmAsset.field.label.type'),\n            view: 'string',\n            immutable: true,\n            form: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dmClient: {\n        identifier: 'clientID',\n        fields: {\n          clientID: {\n            label: this.symbol.resolve('client.field.label.clientID'),\n            view: 'string'\n          },\n          callbackURL: {\n            label: this.symbol.resolve('client.field.label.callbackURL'),\n            view: 'string',\n          },\n          tokenMethod: this.tagsField(this.symbol.resolve('client.field.label.tokenMethod')),\n          disableStrategies: this.tagsField(this.symbol.resolve('client.field.label.disableStrategies')),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      role: {\n        identifier: 'roleID',\n        identifierPattern: this.uuid(),\n        label: 'name',\n        fields: {\n          name: {\n            label: this.symbol.resolve('field.label.name'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          label: {\n            label: this.symbol.resolve('field.label.label'),\n            view: 'string'\n          },\n          accounts: {\n            label: this.symbol.resolve('role.field.label.accounts'),\n            type: 'accounts',\n            prefill: [],\n            list: false,\n            display: (value) => value ? value.title : '',\n            input: AdminEntryInputComponent,\n            filterPopClass: 'ec-pop_dialog'\n          },\n          addRegistered: {\n            label: this.symbol.resolve('role.field.label.addRegistered'),\n            view: 'boolean'/* ,\n        prefill: false */\n          },\n          addUnregistered: {\n            label: this.symbol.resolve('role.field.label.addUnregistered'),\n            view: 'boolean'/* ,\n        prefill: false */\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      codeSource: {\n        identifier: 'codeSourceID',\n        identifierPattern: this.uuid(),\n        fields: {\n          codeSourceID: {\n            label: this.symbol.resolve('field.label.id'),\n          },\n          codeSourceType: {\n            label: this.symbol.resolve('field.label.type'),\n            view: 'tag'\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dataSource: {\n        identifier: 'dataSourceID',\n        identifierPattern: this.uuid(),\n        fields: {\n          dataSourceID: {\n            label: this.symbol.resolve('field.label.id'),\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      target: {\n        identifier: 'targetID',\n        identifierPattern: this.uuid(),\n        fields: {\n          targetType: {\n            label: this.symbol.resolve('field.label.type'),\n            view: 'tag'\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      group: {\n        identifier: 'groupID',\n        identifierPattern: this.uuid(),\n        label: 'name',\n        fields: {\n          name: {\n            label: this.symbol.resolve('field.label.name'),\n          },\n          permissions: {\n            view: 'tags',\n            display: (value) => value || [],\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceCrudComponent.html":{"url":"components/ResourceCrudComponent.html","title":"component - ResourceCrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceCrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/resource-crud/resource-crud.component.ts\n\n\n    \n        Description\n    \n    \n        The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-crud\n            \n\n            \n                styleUrls\n                resource-crud.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./resource-crud.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                pop\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                getPopClass\n                            \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                initMethods\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                config\n                            \n                            \n                                relation\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                createClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, notificationService: NotificationsService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-crud/resource-crud.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                            \n                            Type:    Core\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                            \n                            Type:    CrudConfig\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection that should be used \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Emits when a list element is clicked \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        createClicked\n                    \n                    \n                        Output that is nexted when pressing the create button \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Emits when the selection has changed \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPopClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPopClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Returns the pop class that should be used, either uses config.popClass or defaults to ec-pop_drawer-left. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitMethods()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Called on list columnClicked \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     ResourceListComponent\n\n                    \n                \n                    \n                        \n                            Type :     ResourceListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:41\n                            \n                        \n\n                \n                    \n                        The ResourceListComponent inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:45\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     ResourcePopComponent\n\n                    \n                \n                    \n                        \n                            Type :     ResourcePopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:43\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core/src/selection/selection';\nimport { LoaderComponent } from '@ec.components/ui/src/loader/loader.component';\nimport { LoaderService } from '@ec.components/ui/src/loader/loader.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport 'rxjs/add/operator/switchMap';\nimport { merge } from 'rxjs/observable/merge';\nimport { AuthService } from '../auth/auth.service';\nimport { WithLoader } from '@ec.components/ui';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport Core from 'ec.sdk/lib/Core';\nimport { ResourceFormComponent } from '../resource-form/resource-form.component';\n\n/** The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * */\n@Component({\n    selector: 'ec-resource-crud',\n    templateUrl: './resource-crud.component.html',\n    styleUrls: ['./resource-crud.component.scss']\n})\nexport class ResourceCrudComponent implements OnInit, WithLoader {\n    /** The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors */\n    @Input() api: Core; // sdk api connector\n    /** The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) */\n    @Input() relation: string;\n    /** CrudConfig for customization of the crud's UI.*/\n    @Input() config: CrudConfig = {};\n    /** The selection that should be used */\n    @Input() selection: Selection;\n    /** The ResourceListComponent inside the template. */\n    @ViewChild(ResourceListComponent) list: ResourceListComponent;\n    /** The Pop inside the template. */\n    @ViewChild(ResourcePopComponent) pop: ResourcePopComponent;\n    /** The lists loader */\n    @ViewChild(LoaderComponent) loader: LoaderComponent;\n    /** Emits when a list element is clicked */\n    @Output() columnClicked: EventEmitter = new EventEmitter();\n    /** Emits when the selection has changed */\n    @Output() selected: EventEmitter = new EventEmitter();\n    /** Output that is nexted when pressing the create button */\n    @Output() createClicked: EventEmitter = new EventEmitter();\n\n    constructor(private sdk: SdkService,\n        private auth: AuthService,\n        private loaderService: LoaderService,\n        private notificationService: NotificationsService,\n        @Optional() public router: Router,\n        @Optional() public route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.initMethods();\n    }\n\n    initMethods() {\n        if (!this.relation) {\n            return;\n        }\n        this.auth.getAllowedResourceMethods(this.relation, {}, this.config.methods)\n            .then((methods) => {\n                this.config.methods = methods;\n            });\n    }\n\n    /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n    public hasMethod(method: string) {\n        return this.config.methods && this.config.methods.indexOf(method) !== -1;\n    }\n\n    /** Called on list columnClicked */\n    select(item) {\n        if (!item) {\n            return;\n        }\n        if (this.columnClicked.observers.length) {\n            this.columnClicked.emit(item);\n            return;\n        }\n        this.pop.edit(item.getBody());\n        // TODO: check CrudComponent#loadEntry for further inspiration\n    }\n\n    /** Returns the pop class that should be used, either uses config.popClass or defaults to ec-pop_drawer-left. */\n    getPopClass() {\n        return this.config && this.config.popClass ? this.config.popClass : 'ec-pop_dialog';\n    }\n    /** Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. */\n    create() {\n        if (this.createClicked.observers.length) {\n            this.createClicked.next();\n        } else if (this.pop) {\n            this.pop.create()\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{config?.createLabel}}\n                \n                    \n                \n            \n            \n                \n            \n        \n    \n    \n        \n    \n    \n    \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{config?.createLabel}}                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceCrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceDeletePopComponent.html":{"url":"components/ResourceDeletePopComponent.html","title":"component - ResourceDeletePopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceDeletePopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/resource-delete-pop/resource-delete-pop.component.ts\n\n\n    \n        Description\n    \n    \n        This component can be used to delete all kinds of resources with a confirmation pop.\n\nLÖSCHEN!\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-delete-pop\n            \n\n            \n                styleUrls\n                resource-delete-pop.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./resource-delete-pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loader\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                pop\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirm\n                            \n                            \n                                delete\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                relation\n                            \n                            \n                                resource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService, loader: LoaderService, resourceService: ResourceService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:27\n                            \n                        \n\n                \n                    \n                            Injects SymbolService and LoaderService \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The relation where it happened \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resource\n                    \n                    \n                        The resource to delete \n\n                            \n                            Type:    Resource\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleted\n                    \n                    \n                        Output that is after the deletion was successful. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirm\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfirm(resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            The confirm method sets a given resource and shows the confirmation pop. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.resource\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            The delete method calls del() of the given resource. You can also pass a resource to delete directly to set it.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.resource\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderService\n\n                    \n                \n                    \n                        \n                            Type :     LoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     PopComponent\n\n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:21\n                            \n                        \n\n                \n                    \n                        The pop inside the view. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, Output, EventEmitter, Input } from '@angular/core';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport { PopComponent, LoaderService, NotificationsService } from '@ec.components/ui';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { ResourceService } from '../resource-config/resource.service';\n/** This component can be used to delete all kinds of resources with a confirmation pop.\n *\n * ```html\n * \n * LÖSCHEN!\n * ```\n *\n */\n@Component({\n    selector: 'ec-resource-delete-pop',\n    templateUrl: './resource-delete-pop.component.html',\n    styleUrls: ['./resource-delete-pop.component.scss']\n})\nexport class ResourceDeletePopComponent {\n    /** The pop inside the view. */\n    @ViewChild(PopComponent) pop: PopComponent;\n    /** The resource to delete */\n    @Input() resource: Resource;\n    /** The relation where it happened */\n    @Input() relation: string;\n    /** Output that is after the deletion was successful. */\n    @Output() deleted: EventEmitter = new EventEmitter();\n    /** Injects SymbolService and LoaderService */\n    constructor(public symbol: SymbolService,\n        public loader: LoaderService,\n        private resourceService: ResourceService,\n        public notificationService: NotificationsService) { }\n    /** The delete method calls del() of the given resource. You can also pass a resource to delete directly to set it.  */\n    delete(resource: Resource = this.resource) {\n        if (!resource) {\n            console.error('cannot delete: no resource given!');\n            return;\n        }\n        const deletion = this.resourceService.del(this.relation, this.resource)\n            .then(res => {\n                this.notificationService.emit({\n                    title: this.symbol.resolve('success.delete'),\n                    type: 'success',\n                });\n                this.pop.hide();\n                this.deleted.next(res);\n            }).catch(error => {\n                this.notificationService.emit({\n                    title: this.symbol.resolve('error.delete'),\n                    error\n                });\n            });\n        this.loader.wait(deletion);\n    }\n    /** The confirm method sets a given resource and shows the confirmation pop. */\n    confirm(resource: Resource = this.resource) {\n        this.resource = resource;\n        this.pop.show();\n    }\n}\n\n    \n\n    \n        \n    {{'resource.delete.question' | symbol}}\n    \n        {{'resource.delete.yes' | symbol}}\n    \n    \n        {{'resource.delete.no' | symbol}}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{\\'resource.delete.question\\' | symbol}}            {{\\'resource.delete.yes\\' | symbol}}                {{\\'resource.delete.no\\' | symbol}}    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceDeletePopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceForm.html":{"url":"classes/ResourceForm.html","title":"class - ResourceForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/resource-form/resource-form.ts\n        \n\n            \n                Description\n            \n            \n                Form for any kind of SDK Resource. \n\n            \n\n            \n                Extends\n            \n            \n                    Form\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                api\n                            \n                            \n                                    Public\n                                relation\n                            \n                            \n                                    Public\n                                resourceService\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                fields\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                save\n                            \n                            \n                                createField\n                            \n                            \n                                getField\n                            \n                            \n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(body: Resource, config: FormConfig, api: Core, relation: string, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-form/resource-form.ts:8\n                            \n                        \n\n                \n                    \n                            Constructs the form. Can be given an api (Core) and a fitting relation name. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                    Resource\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    FormConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    Core\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        relation\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     Core\n\n                    \n                \n                    \n                        \n                            Type :     Core\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-form/resource-form.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            relation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        relation:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-form/resource-form.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceService:     ResourceService\n\n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-form/resource-form.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     FormConfig\n\n                    \n                \n                    \n                        \n                            Type :     FormConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:13\n                            \n                        \n\n                \n                    \n                        The configuration of the form. It is an extension of ItemConfig. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fields\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fields:     Field[]\n\n                    \n                \n                    \n                        \n                            Type :     Field[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:11\n                            \n                        \n\n                \n                    \n                        Array of fields. It will be populated automatically when the form is constructed. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-form/resource-form.ts:17\n                            \n                        \n\n\n                \n                    \n                            Saves the given value. Run serializers before assigning the new value. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createField\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateField(property: string, config: FieldConfigProperty)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:31\n                            \n                        \n\n\n                \n                    \n                            creates and adds a single field to the form \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Field | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getField\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetField(property: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:49\n                            \n                        \n\n\n                \n                    \n                            returns the field instance of the given property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValue(property: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:54\n                            \n                        \n\n\n                \n                    \n                            Returns the original value of the property, if any. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import Resource from 'ec.sdk/lib/resources/Resource';\nimport { Form, FormConfig } from '@ec.components/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport Core from 'ec.sdk/lib/Core';\nimport { ResourceService } from '../resource-config/resource.service';\n\n/** Form for any kind of SDK Resource. */\nexport class ResourceForm extends Form {\n    /** Constructs the form. Can be given an api (Core) and a fitting relation name. */\n    constructor(body: Resource, config: FormConfig = {},\n        public api: Core,\n        public relation: string,\n        public resourceService: ResourceService) {\n        super(body, config);\n    }\n    /** Saves the given value. Run serializers before assigning the new value. */\n    save(value: Object): Promise> {\n        return this.resourceService.save(this, value, this.relation, this.api)\n            .then(resource => new Item(resource, this.config));\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourceModule.html":{"url":"modules/ResourceModule.html","title":"module - ResourceModule","body":"\n                   \n\n\n\n\n  Modules\n  ResourceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_imports\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/resource/resource.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ResourceCrudComponent\n                            \n                            \n                                ResourceDeletePopComponent\n                            \n                            \n                                ResourceFormComponent\n                            \n                            \n                                ResourceListComponent\n                            \n                            \n                                ResourcePopComponent\n                            \n                            \n                                ResourceSelectComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ResourceListComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ResourceConfig\n                            \n                            \n                                     ResourceService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ResourceCrudComponent\n                            \n                            \n                                    ResourceDeletePopComponent\n                            \n                            \n                                    ResourceFormComponent\n                            \n                            \n                                    ResourceListComponent\n                            \n                            \n                                    ResourcePopComponent\n                            \n                            \n                                    ResourceSelectComponent\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { UiModule } from '@ec.components/ui';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourceFormComponent } from '../resource-form/resource-form.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport { ResourceCrudComponent } from '../resource-crud/resource-crud.component';\nimport { ResourceDeletePopComponent } from '../resource-delete-pop/resource-delete-pop.component';\nimport { ResourceSelectComponent } from '../resource-select/resource-select.component';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\n\n@NgModule({\n  entryComponents: [\n    ResourceListComponent,\n  ],\n  declarations: [\n    ResourceListComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n  ],\n  exports: [\n    UiModule,\n    SdkModule,\n    ResourceListComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n  ],\n  providers: [\n    ResourceService,\n    ResourceConfig,\n  ],\n})\nexport class ResourceModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceService.html":{"url":"injectables/ResourceService.html","title":"injectable - ResourceService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/resource-config/resource.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changes\n                            \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                matches\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, config: ResourceConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-config/resource.service.ts:34\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object, setEmptyStringsToNull: , deleteNullProperties: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        setEmptyStringsToNull\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                                \n                                                        deleteNullProperties\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(relation: string, value: Object, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:113\n                            \n                        \n\n\n                \n                    \n                            Creates a new resource with the given value for the given relation. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(relation: string, resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:124\n                            \n                        \n\n\n                \n                    \n                            deletes the given resource and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatches(change: Update, filter: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Gives true if the given change fits all property values of the filter. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        change\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(item: Item, value: Object, relation: string, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Saves the given resource with the given value. If the resource is not yet existing,\nit will be created.Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(relation: , resource: Resource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Updates the given resource with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changes:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:34\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an resource is created or updated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ResourceConfig\n\n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/filter';\nimport { Subject } from 'rxjs/Subject';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { ResourceList } from '../resource-list/resource-list';\nimport Core from 'ec.sdk/lib/Core';\nimport { Item } from '@ec.components/core';\nimport { ResourceConfig } from './resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Update {\n    /** The relation that has been updated. */\n    relation: string | string[],\n    /** The relevant resource. */\n    resource?: Resource,\n    /** The list where it happened. */\n    list?: ResourceList,\n    /** The type of update. (create/read/update/delete) */\n    type?: 'post' | 'get' | 'put' | 'delete',\n    /** An identifier associated with the update e.g. an entryID */\n    identifier?: string\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class ResourceService {\n    /** The changes event is emitted everytime an resource is created or updated. */\n    public changes: Subject = new Subject();\n\n    /** Injects sdk */\n    constructor(private sdk: SdkService, public config: ResourceConfig) {\n    }\n\n    /** Gives true if the given change fits all property values of the filter. */\n    matches(change: Update, filter: Update): boolean {\n        return Object.keys(filter)\n            .reduce((match, key) => match && change[key] === filter[key], true);\n    }\n\n    /** Yields an observable that emits for all updates that match the given filter */\n    change(filter?: Update): Observable {\n        if (!filter) {\n            return this.changes.asObservable();\n        }\n        return this.changes.asObservable().filter((change: Update) => this.matches(change, filter));\n    }\n\n    /** Saves the given resource with the given value. If the resource is not yet existing,\n     * it will be created.Otherwise it will be updated. */\n    save(item: Item, value: Object, relation: string, api: Core): Promise {\n        const resource = item.getBody();\n        if (item.config.onSave) {\n            return Promise.resolve(item.config.onSave(item, value))\n        }\n        item.deleteImmutableProperties(value);\n        if (resource && resource.save) {\n            return this.update(relation, resource, value);\n        }\n        return this.create(relation, value, api)\n            .then((_resource) => {\n                return _resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** Updates the given resource with the new value. Fires the \"update\" change. */\n    update(relation, resource: Resource, value: Object): Promise {\n        const oldValues = {}; // save old values\n        Object.keys(value).forEach((key) => oldValues[key] = resource[key]);\n        Object.assign(resource, this.clean(value, false, false)); // assign new form values\n        return resource.save().then((_resource) => {\n            this.changes.next({ relation, resource: _resource, type: 'put' });\n            return _resource;\n        })\n            .catch((err) => {\n                Object.assign(resource, this.clean(oldValues, false, false)); // fall back to old values\n                return Promise.reject(err);\n            });\n    }\n\n    /** Returns true if the given field key is an immutable system property */\n    isImmutableProperty(key: string) {\n        return key[0] === '_' ||\n            ['id', 'created', 'modified'].indexOf(key) !== -1;\n    }\n\n    /** Removes all null or undefined values from the given object */\n    clean(value: Object, setEmptyStringsToNull = true, deleteNullProperties = true): Object {\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                if (setEmptyStringsToNull && value[key] === '') { // clear empty strings\n                    value[key] = null;\n                }\n                if (deleteNullProperties && value[key] === null) {\n                    delete value[key];\n                }\n                if (this.isImmutableProperty(key)) { // filter system properties\n                    delete value[key];\n                }\n            }\n        }\n        return value;\n    }\n\n    /** Creates a new resource with the given value for the given relation. Fires the \"create\" change. */\n    create(relation: string, value: Object, api: Core): Promise {\n        return api.create(relation, this.clean(value))\n            .then((resource: Resource) => {\n                this.changes.next({ relation, resource, type: 'post' });\n                return resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** deletes the given resource and emits the \"delete\" change. */\n    del(relation: string, resource: Resource) {\n        return resource.del().then((res) => {\n            this.changes.next({ relation, resource, type: 'delete' });\n            return res;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafeHtmlPipe.html":{"url":"pipes/SafeHtmlPipe.html","title":"pipe - SafeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  SafeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/vc/src/safe-html.pipe.ts\n        \n\n            \n                Description\n            \n            \n                trusts the incoming html as safe. uses bypassSecurityTrustHtml \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        safeHtml\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/vc/src/safe-html.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n                            Transforms the html value \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n/** trusts the incoming html as safe. uses bypassSecurityTrustHtml */\n@Pipe({ name: 'safeHtml' })\nexport class SafeHtmlPipe implements PipeTransform {\n  /** Injects DomSanitizer */\n  constructor(private sanitized: DomSanitizer) {\n  }\n  /** Transforms the html value */\n  transform(value) {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SdkModule.html":{"url":"modules/SdkModule.html","title":"module - SdkModule","body":"\n                   \n\n\n\n\n  Modules\n  SdkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\n\nSdkService\n\nSdkService\n\n\n\nSdkModule\n\nSdkModule\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/sdk/sdk.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     SdkService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SdkService } from './sdk.service';\n\n@NgModule({\n  entryComponents: [],\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    SdkService\n  ],\n})\nexport class SdkModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SdkService.html":{"url":"injectables/SdkService.html","title":"injectable - SdkService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SdkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/sdk/sdk.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n{\nprovide: \"environment\",\nuseValue: {\ndatamanagerID: \"83cc6374\",\nenvironment: \"stage\",\nclientID: \"rest\"\n}\n}The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _api\n                            \n                            \n                                    Public\n                                accounts\n                            \n                            \n                                apiResolved\n                            \n                            \n                                    Public\n                                datamanager\n                            \n                            \n                                    Public\n                                environment\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                roots\n                            \n                            \n                                    Private\n                                schemaRequests\n                            \n                            \n                                    Public\n                                session\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAccount\n                            \n                            \n                                getSchema\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                noApi\n                            \n                            \n                                useDatamanager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: )\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/sdk/sdk.service.ts:72\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:121\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.accounts\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSchema\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSchema(model: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:110\n                            \n                        \n\n\n                \n                    \n                            Returns a schema for the given model. Caches the promise. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init(environment: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:80\n                            \n                        \n\n\n                \n                    \n                            Creates all the API instances and determines the current user. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noApi\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoApi(api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useDatamanager\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseDatamanager(shortID: string, environment: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:100\n                            \n                        \n\n\n                \n                    \n                            Uses the given datamanager and optional short id to init api. \nIf you set \"datamanagerID\" in your environment, this method is called automatically. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        shortID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        environment\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _api:     PublicAPI\n\n                    \n                \n                    \n                        \n                            Type :     PublicAPI\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:47\n                            \n                        \n\n                \n                    \n                        Current Public API instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accounts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accounts:     Accounts\n\n                    \n                \n                    \n                        \n                            Type :     Accounts\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:45\n                            \n                        \n\n                \n                    \n                        Current Accounts instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiResolved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        apiResolved:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:30\n                            \n                        \n\n                \n                    \n                        Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datamanager\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datamanager:     DataManager\n\n                    \n                \n                    \n                        \n                            Type :     DataManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:61\n                            \n                        \n\n                \n                    \n                        Current DataManager instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:72\n                            \n                        \n\n                \n                    \n                        Promise that should be used before using any auth related stuff:\nthis.sdk.ready.then(account => {});\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roots\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roots:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:32\n                            \n                        \n\n                \n                    \n                        Collects different datamanager root instances \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            schemaRequests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        schemaRequests:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:65\n                            \n                        \n\n                \n                    \n                        Pending schema requests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     Session\n\n                    \n                \n                    \n                        \n                            Type :     Session\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:43\n                            \n                        \n\n                \n                    \n                        Current Session instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     AccountResource\n\n                    \n                \n                    \n                        \n                            Type :     AccountResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:63\n                            \n                        \n\n                \n                    \n                        Current User \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n\n                \n                    \n                        getroot()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/sdk/sdk.service.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/sdk/sdk.service.ts:49\n                                \n                            \n                    \n                        \n                                getter for api. Throws error if no api present. \n\n\n                                \n                                    Returns :     PublicAPI\n\n                                \n                        \n                    \n\n                \n                    \n                        setapi(api: )\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/sdk/sdk.service.ts:56\n                                \n                            \n                    \n                        \n                                Sets the public api \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            api\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport Accounts from 'ec.sdk/lib/Accounts';\nimport Core, { environment as env } from 'ec.sdk/lib/Core';\nimport DataManager from 'ec.sdk/lib/DataManager';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport Session from 'ec.sdk/lib/Session';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class SdkService {\n  /** Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) */\n  apiResolved: boolean;\n  /** Collects different datamanager root instances */\n  roots: { [id: string]: Promise } = {};\n  get root(): Promise {\n    if (!this._api) {\n      throw new Error('no api');\n    }\n    if (!this.roots[this._api.dataManagerID]) {\n      this.roots[this._api.dataManagerID] = this.ready.then(() => this.datamanager.dataManager(this._api.dataManagerID));\n    }\n    return this.roots[this._api.dataManagerID];\n  };\n  /** Current Session instance */\n  public session: Session;\n  /** Current Accounts instance */\n  public accounts: Accounts;\n  /** Current Public API instance */\n  public _api: PublicAPI;\n  /** getter for api. Throws error if no api present. */\n  get api(): PublicAPI {\n    if (this.noApi()) {\n      throw new Error('get api: ' + this.noApi());\n    }\n    return this._api;\n  }\n  /** Sets the public api */\n  set api(api: PublicAPI) {\n    this._api = api;\n    this._api.resolve().then(() => this.apiResolved = true);\n  }\n  /** Current DataManager instance */\n  public datamanager: DataManager;\n  /** Current User */\n  public user: AccountResource;\n  /** Pending schema requests */\n  private schemaRequests = {};\n  /** Promise that should be used before using any auth related stuff:\n   *\n   * ```ts\n   * this.sdk.ready.then(account => {});\n   * ```\n   * */\n  public ready: Promise;\n\n  /** Calls init and sets ready to true when finished. */\n  constructor(@Inject('environment') public environment) {\n    this.init();\n  }\n\n  /** Creates all the API instances and determines the current user. */\n  public init(environment = this.environment): Promise {\n    this.environment = environment;\n    this.session = new Session(environment.environment);\n    if (environment.clientID) {\n      this.session.setClientID(environment.clientID);\n    }\n    this.accounts = new Accounts(environment.environment);\n    if (environment.datamanagerID) {\n      this.useDatamanager(environment.datamanagerID, environment);\n    }\n    this.ready = this.getAccount()\n      .then((user) => {\n        this.user = user;\n        this.datamanager = new DataManager(environment.environment);\n        return this.user;\n      });\n    return this.ready;\n  }\n  /** Uses the given datamanager and optional short id to init api. \n   * If you set \"datamanagerID\" in your environment, this method is called automatically. */\n  useDatamanager(shortID: string, environment = this.environment) {\n    this.apiResolved = false;\n    this._api = new PublicAPI(shortID, environment.environment, true);\n    this._api.resolve().then(api => this.apiResolved = true);\n    if (environment.clientID) {\n      this._api.setClientID(environment.clientID);\n    }\n  }\n\n  /** Returns a schema for the given model. Caches the promise. */\n  getSchema(model, api = this._api) {\n    if (this.noApi(api)) {\n      return Promise.reject('getSchema: ' + this.noApi(api));\n    }\n    if (!this.schemaRequests[model]) {\n      this.schemaRequests[model] = api.getSchema(model);\n    }\n    return this.schemaRequests[model];\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.accounts) {\n    if (this.noApi(api)) {\n      /* return Promise.reject('getAccount: ' + this.noApi(api)); */\n      return Promise.resolve();\n    }\n    return api.me().then((account) => {\n      return account || this._api.me();\n    }).catch((err) => {\n      return null;\n    });\n  }\n\n  noApi(api: Core = this._api) {\n    if (!api) {\n      return `No API was initialized. Either set datamanagerID in your environment or call useDatamanager with your shortID`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchbarComponent.html":{"url":"components/SearchbarComponent.html","title":"component - SearchbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/searchbar/searchbar.component.ts\n\n\n    \n        Description\n    \n    \n        Genereic Searchbar component. Filters a given list its label property (or given property).\nSupports autofocus and arrow navigation. \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                Focus\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-searchbar\n            \n\n\n\n\n            \n                templateUrl\n                searchbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                focusEvent\n                            \n                            \n                                    Public\n                                keyup\n                            \n                            \n                                    Public\n                                paste\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrowNavigation\n                            \n                            \n                                clear\n                            \n                            \n                                filterList\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                preventDefault\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                debounceTime\n                            \n                            \n                                defaultPlaceholder\n                            \n                            \n                                list\n                            \n                            \n                                placeholder\n                            \n                            \n                                property\n                            \n                            \n                                query\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/list/searchbar/searchbar.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                    \n                        If true, the input will be autofocused \n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        debounceTime\n                    \n                    \n                        Delay until search is fired \n\n                        \n                            Default value: 300\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultPlaceholder\n                    \n                    \n                        Default placeholder when no placeholder is given \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The list that should be filtered \n\n                            \n                            Type:    ListComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Searchbar placeholder \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        property\n                    \n                    \n                        Property that should be filtered \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        query\n                    \n                    \n                        The input query that should be prefilled \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Output that emits when enter is pressed on a selected item \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrowNavigation\n                            \n                            \n                        \n                    \n                \n                \n                    \narrowNavigation(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            called on keydown. if arrow keys are pressed, toggle selection of next/prev elements of list \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            clears the input query \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterList\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilterList(value: , paste: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:87\n                            \n                        \n\n\n                \n                    \n                            Filters the list by the given value, either uses property or list.config.label.\nIf paste is true and the value matches the list.config.identifierPattern,\nselect is emitted immediately with a pseudo item containing the value as item identifier. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        paste\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            After the view is ready, the searchbar needs to be focused (if autofocus is true) \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preventDefault\n                            \n                            \n                        \n                    \n                \n                \n                    \npreventDefault(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            prevents the event default and disables propagation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            focusEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        focusEvent:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:29\n                            \n                        \n\n                \n                    \n                        The event that focuses the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keyup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keyup:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:33\n                            \n                        \n\n                \n                    \n                        Subject that is triggered on keyup \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            paste\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paste:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:35\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when something is pasted \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Item } from '@ec.components/core';\nimport { ListComponent } from '@ec.components/ui';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport { Subject } from 'rxjs/Subject';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { Focus } from '../../utility/focus/focus.interface';\n\n/** Genereic Searchbar component. Filters a given list its label property (or given property).\n * Supports autofocus and arrow navigation. */\n@Component({\n  selector: 'ec-searchbar',\n  templateUrl: 'searchbar.component.html',\n})\n\nexport class SearchbarComponent implements AfterViewInit, Focus {\n  /** Searchbar placeholder */\n  @Input() placeholder: string;\n  /** Default placeholder when no placeholder is given */\n  @Input() defaultPlaceholder: string;\n  /** The input query that should be prefilled */\n  @Input() public query: string;\n  /** Property that should be filtered */\n  @Input() property: string;\n  /** If true, the input will be autofocused */\n  @Input() autofocus = true;\n  /** The event that focuses the input */\n  public focusEvent: EventEmitter = new EventEmitter();\n  /** Delay until search is fired */\n  @Input() debounceTime = 300;\n  /** Subject that is triggered on keyup */\n  public keyup: Subject = new Subject();\n  /** Subject that is nexted when something is pasted */\n  public paste: Subject = new Subject();\n  /** The list that should be filtered */\n  @Input() list: ListComponent;\n  /** Output that emits when enter is pressed on a selected item */\n  @Output() selected: EventEmitter = new EventEmitter();\n\n  constructor(public route: ActivatedRoute, public symbol: SymbolService) {\n    this.defaultPlaceholder = this.symbol.resolve('searchbar.placeholder');\n    const paste = this.paste.asObservable();\n    this.paste.asObservable()\n      .subscribe((e) => {\n        const pasted = (e.clipboardData).getData('text');\n        if (this.filterList(pasted, true)) {\n          this.preventDefault(e);\n        }\n      });\n\n    this.keyup.asObservable().debounceTime(this.debounceTime)\n      .pipe(distinctUntilChanged())\n      .subscribe(value => this.filterList(value));\n\n    this.route.params\n      .subscribe(() => {\n        if (this.autofocus) {\n          this.focusEvent.emit(true);\n        }\n        this.clear();\n      })\n  }\n\n  /** clears the input query */\n  clear() {\n    this.query = '';\n  }\n\n  /** prevents the event default and disables propagation */\n  preventDefault(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n\n  /** After the view is ready, the searchbar needs to be focused (if autofocus is true) */\n  ngAfterViewInit() {\n    if (this.autofocus) {\n      this.focusEvent.emit(true);\n    }\n  }\n\n  /** Filters the list by the given value, either uses property or list.config.label.\n   * If paste is true and the value matches the list.config.identifierPattern,\n   * select is emitted immediately with a pseudo item containing the value as item identifier. */\n  filterList(value, paste = false) {\n    if (!this.list || !this.list.list) {\n      console.warn('could not search: no list given!', this.list);\n      return;\n    }\n    if (!this.property && !this.list.config.label) {\n      console.warn('cannot filter list: no property set and no label property configured');\n      return;\n    }\n    if (paste && this.list.config.identifierPattern) {\n      if (value.match(this.list.config.identifierPattern)) {\n        this.selected.emit(new Item({\n          [this.list.config.identifier]: value,\n        }, this.list.config));\n        /* return true; */\n      }\n    }\n    this.list.list.filter(this.property || this.list.config.label, value);\n  }\n\n  /** called on keydown. if arrow keys are pressed, toggle selection of next/prev elements of list */\n  arrowNavigation(e) {\n    if (!this.list || !this.list.selection) {\n      return;\n    }\n    switch (e.key) {\n      case 'ArrowUp':\n        this.list.selectPrev();\n        e.preventDefault();\n        break;\n      case 'ArrowDown':\n        this.list.selectNext();\n        e.preventDefault();\n        break;\n      case 'Enter':\n        if (!this.list.selection.isEmpty()) {\n          this.selected.emit(this.list.selection.items[0]);\n        }\n        break;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'SearchbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SelectModule.html":{"url":"modules/SelectModule.html","title":"module - SelectModule","body":"\n                   \n\n\n\n\n  Modules\n  SelectModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_SelectComponent_providers\n\n\n\ncluster_SelectModule_imports\n\n\n\ncluster_SelectModule_exports\n\n\n\n\nSelectComponent\n\nSelectComponent\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->SelectComponent -->\n\n{\n    : , : (() => ), : true\n}->SelectComponent\n\n\n\n\n\nListModule\n\nListModule\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/select/select.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                SelectComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ListModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ListModule\n                            \n                            \n                                    SelectComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DndModule } from 'ngx-drag-drop';\nimport { ListModule } from '../list/list.module';\nimport { SelectComponent } from './select.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ListModule,\n    DndModule\n  ],\n  declarations: [SelectComponent],\n  exports: [ListModule, SelectComponent],\n  providers: [],\n})\nexport class SelectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SlotHostDirective.html":{"url":"directives/SlotHostDirective.html","title":"directive - SlotHostDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  SlotHostDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/io/slot-host.directive.ts\n        \n\n            \n                Description\n            \n            \n                The field host is a helper to load components inside its view container.\nsee https://angular.io/guide/dynamic-component-loader\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ec-slot-host]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/slot-host.directive.ts:9\n                            \n                        \n\n                \n                    \n                            The constructor exposes the viewContainer that is used to load components into from outside.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainerRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/slot-host.directive.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from '@angular/core';\n\n/** The field host is a helper to load components inside its view container.\n * see https://angular.io/guide/dynamic-component-loader\n * */\n@Directive({\n  selector: '[ec-slot-host]',\n})\nexport class SlotHostDirective {\n  /** The constructor exposes the viewContainer that is used to load components into from outside.*/\n  constructor(public viewContainerRef: ViewContainerRef) {\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sorter.html":{"url":"classes/Sorter.html","title":"class - Sorter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sorter\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/sorter/sorter.ts\n        \n\n            \n                Description\n            \n            \n                The Sorter is a singleton that handles all kinds of sorting operations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sortType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getAlgorithm\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sortType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortType:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'string': sortString,\n    'number': sortNumber,\n    'boolean': sortBoolean\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/sorter/sorter.ts:25\n                            \n                        \n\n                \n                    \n                        Contains sorting methods for different value types. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getAlgorithm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAlgorithm(items: Array>, property?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/sorter/sorter.ts:32\n                            \n                        \n\n\n                \n                    \n                            Returns the sorting algorithm for the given item array. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sort(items: Array>, property?: string, desc?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/sorter/sorter.ts:62\n                            \n                        \n\n\n                \n                    \n                            Sorts a given Array of items after a given property.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Array of arbitrary content.\n\n                                                        \n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional property to sort after (For Objects)\n\n                                                        \n                                                \n                                                \n                                                        desc\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional Flag that will reverse sort the result (descending).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Sorter\nThe Sorter is a static class that acts as a helper to sort different primitive types. See the tests for example usage.\n\n    \n\n    \n        import { Item } from '../item/item';\n\n/** Used for natural sorting of strings */\nconst collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n\n/** Sorts strings (naturally) */\nexport function sortString(a, b) {\n  return collator.compare(a, b);\n}\n\n/** Sorts numbers */\nexport function sortNumber(a, b) {\n  return a - b;\n}\n\n/** Sorts booleans */\nexport function sortBoolean(a, b) {\n  return a ? -1 : 1;\n}\n\n/** The Sorter is a singleton that handles all kinds of sorting operations. */\nexport abstract class Sorter {\n\n  /** Contains sorting methods for different value types. */\n  static sortType = {\n    'string': sortString,\n    'number': sortNumber,\n    'boolean': sortBoolean\n  };\n\n  /** Returns the sorting algorithm for the given item array. */\n  private static getAlgorithm(items: Array>, property?: string): (a, b) => number {\n    if (!items.length) {\n      return;\n    }\n    if (property && !items\n      .reduce((has, item) => has && item.sort(property) !== undefined, true)) {\n      console.warn('cannot sort property \"' + property + '\" because not all items have that property', items);\n      return;\n    }\n    const types = items\n      .map(item => typeof item.sort(property))\n      .filter((item, index, _items) => _items.indexOf(item) === index);\n    if (types.length > 1) {\n      console.warn('cannot sort items because they contain multiple types:', types);\n      return;\n    }\n    if (!this.sortType[types[0]]) {\n      console.warn('cannot sort items because no algorithm was found for type', types[0]);\n      return;\n    }\n    return this.sortType[types[0]];\n  }\n\n  /** Sorts a given Array of items after a given property.\n   * @param items Array of arbitrary content.\n   * @param property Optional property to sort after (For Objects)\n   * @param desc Optional Flag that will reverse sort the result (descending).\n   * @param resolve Optional resolve function to expose relevant the part of object that contains\n   *   the given property. */\n\n  static sort(items: Array>, property?: string, desc?: boolean): Array {\n    const algorithm = this.getAlgorithm(items, property);\n    if (!algorithm) {\n      return;\n    }\n    items.sort((a, b) => {\n      if (!property) {\n        return algorithm(a.resolve(), b.resolve());\n      }\n      return algorithm(a.sort(property), b.sort(property));\n    });\n    if (desc) {\n      items.reverse();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Symbol.html":{"url":"interfaces/Symbol.html","title":"interface - Symbol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Symbol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.interface.ts\n        \n\n            \n                Description\n            \n            \n                A Symbol is specified with a unique name and an optional string content.  \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name under which the symbol is accessible. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Symbol {\n    /** The name under which the symbol is accessible. */\n    name: string\n    /** Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. */\n    content?: string\n};\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SymbolModule.html":{"url":"modules/SymbolModule.html","title":"module - SymbolModule","body":"\n                   \n\n\n\n\n  Modules\n  SymbolModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_providers\n\n\n\n\nSymbolService\n\nSymbolService\n\n\n\nSymbolModule\n\nSymbolModule\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     SymbolService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SymbolService } from './symbol.service';\nimport { SymbolPipe } from './symbol.pipe';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [SymbolPipe],\n    exports: [SymbolPipe],\n    providers: [SymbolService],\n})\nexport class SymbolModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolPipe.html":{"url":"injectables/SymbolPipe.html","title":"injectable - SymbolPipe","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SymbolPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The symbol pipe translates Symbol names to their content.\n{{ 'entry.saved' | symbol }}See SymbolService for more info about Symbols.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.pipe.ts:21\n                            \n                        \n\n\n                \n                    \n                            Calls SymbolService.resolve with the given name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, Injectable, PipeTransform } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport { SymbolService } from './symbol.service';\n\n/** The symbol pipe translates Symbol names to their content.\n *\n * ```html\n * {{ 'entry.saved' | symbol }}\n * ```\n *\n * See SymbolService for more info about Symbols.\n */\n@Pipe({\n    name: 'symbol'\n})\n@Injectable()\nexport class SymbolPipe implements PipeTransform {\n    /** Depends on the SymbolService */\n    constructor(private symbol: SymbolService) { }\n    /** Calls SymbolService.resolve with the given name */\n    transform(name: string): string {\n        if (!name) {\n            return '';\n        }\n        return this.symbol.resolve(name) || '';\n    }\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolService.html":{"url":"injectables/SymbolService.html","title":"injectable - SymbolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SymbolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register symbols for localization. The default set is de. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registry\n                            \n                            \n                                    Public\n                                sets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                resolve\n                            \n                            \n                                set\n                            \n                            \n                                use\n                            \n                            \n                                useSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/symbol/symbol.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            finds a symbol in the registry by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Symbol\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:36\n                            \n                        \n\n\n                \n                    \n                            resolves a symbols content by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set. Replaces registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useSet\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseSet(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:23\n                            \n                        \n\n\n                \n                    \n                            uses the set with the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registry:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:9\n                            \n                        \n\n                \n                    \n                        The current symbol set that is registered to the service. It will be used to resolve strings from. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sets:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        en, de\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport de from './de';\nimport en from './en';\n/** Service to register symbols for localization. The default set is de. */\n@Injectable()\nexport class SymbolService {\n    /** The current symbol set that is registered to the service. It will be used to resolve strings from. */\n    public registry: Symbol[];\n    public sets: { [key: string]: Symbol[] } = {\n        en, de\n    }\n    constructor() {\n        this.registry = Object.keys(this.sets).length ? this.sets[Object.keys(this.sets)[0]] : [];\n    }\n\n    /** Uses the given symbol set. Replaces registry. */\n    use(symbols: Symbol[]) {\n        this.registry = symbols;\n    }\n\n    /** uses the set with the given key */\n    useSet(key: string) {\n        if (!this.sets[key]) {\n            throw new Error('the symbol set with the key \"' + key + '\" does not exist');\n        }\n        this.use(this.sets[key]);\n    }\n\n    /** finds a symbol in the registry by name */\n    get(name: string): Symbol {\n        return this.registry.find(symbol => symbol.name === name);\n    }\n\n    /** resolves a symbols content by name */\n    resolve(name: string): string {\n        const symbol = this.get(name);\n        if (symbol) {\n            return symbol.content;\n        }\n        return null;\n    }\n\n    /** Uses the given symbol set to enhance the current registry.\n     * All duplicates will be overriden. Non specified symbols will stay in the registry. */\n    set(symbols: Symbol[] = []) {\n        symbols.map(symbol => {\n            const index = this.registry.indexOf(this.get(symbol.name));\n            if (index === -1) {\n                this.registry.push(symbol);\n            } else {\n                this.registry[index] = symbol;\n            }\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabComponent.html":{"url":"components/TabComponent.html","title":"component - TabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/tab/tab.component.ts\n\n\n    \n        Description\n    \n    \n        A Tab is meant to be placed inside TabsComponent \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tab\n            \n\n            \n                styleUrls\n                tab.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tab.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                route\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                deactivated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/tab/tab.component.ts:22\n                            \n                        \n\n                \n                    \n                            The constructor adds the tab itself to its TabsComponent parent. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                    \n                        The tab's label \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                    \n                        If set, the tab will be selected when the given (relative) route is active. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        If set to true, the tab will be selected at start. \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        activated\n                    \n                    \n                        Output that emits when the tab is activated \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deactivated\n                    \n                    \n                        Output that emits when the tab is deactivated \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activate\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Selects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Deselects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parent:     TabsComponent\n\n                    \n                \n                    \n                        \n                            Type :     TabsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:22\n                            \n                        \n\n                \n                    \n                        The parent TabsComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { TabsComponent } from '../tabs/tabs.component';\n\n/** A Tab is meant to be placed inside TabsComponent */\n@Component({\n  selector: 'ec-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.scss']\n})\nexport class TabComponent {\n  /** The tab's label */\n  @Input() label: string;\n  /** If set to true, the tab will be selected at start. */\n  @Input() selected: boolean;\n  /** If set, the tab will be selected when the given (relative) route is active. */\n  @Input() route: string;\n  /** Output that emits when the tab is activated */\n  @Output() activated: EventEmitter = new EventEmitter();\n  /** Output that emits when the tab is deactivated */\n  @Output() deactivated: EventEmitter = new EventEmitter();\n  /** The parent TabsComponent */\n  parent: TabsComponent;\n\n  /** The constructor adds the tab itself to its TabsComponent parent. */\n  constructor(public el: ElementRef) {\n  }\n  /** Selects the tab and nexts activated */\n  activate() {\n    this.selected = true;\n    this.activated.next();\n  }\n  /** Deselects the tab and nexts activated */\n  deactivate() {\n    this.selected = false;\n    this.deactivated.next();\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/tabs/tabs.component.ts\n\n\n    \n        Description\n    \n    \n        The TabsComponent holds serveral instances of TabComponent.\nhttps://components.entrecode.de/ui/tabs\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tabs\n            \n\n            \n                styleUrls\n                tabs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initTabs\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                select\n                            \n                            \n                                selectByUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/tabs/tabs.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) \n\n                            \n                            Type:    TabComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(tab: TabComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Selects the given tab (Component). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                        \n                                                                    TabComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectByUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectByUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Selects the tab associated with the route present in the given url \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabs:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChildren\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:15\n                            \n                        \n\n                \n                    \n                        The nested Tabs \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Tabs\nThis is how you use Tabs:\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \nTODO:\n\n*ngIf\nSlot for templated Tab Header\n\n\n    \n\n    \n        import { Component, ContentChildren, Input, QueryList, AfterContentInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { TabComponent } from '../tab/tab.component';\n\n/** The TabsComponent holds serveral instances of TabComponent.\n * https://components.entrecode.de/ui/tabs\n*/\n@Component({\n  selector: 'ec-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.scss']\n})\nexport class TabsComponent implements AfterContentInit {\n  /** The nested Tabs */\n  @ContentChildren(TabComponent) tabs: QueryList;\n  /** You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) */\n  @Input() selected: TabComponent;\n\n  constructor(private router: Router, private route: ActivatedRoute) {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.selectByUrl(event.url);\n      }\n    });\n  }\n\n  /** Selects the tab associated with the route present in the given url */\n  selectByUrl(url: string) {\n    if (!url || !this.tabs) {\n      return;\n    }\n    const paths = url.split('/');\n    const match = this.tabs.find((tab) => tab.route === paths[paths.length - 1]);\n    if (match) {\n      this.select(match);\n    }\n  }\n\n  initTabs() {\n    this.tabs.forEach((tab) => {\n      tab.parent = this;\n      if (tab.el.nativeElement.getAttribute('selected') !== null) {\n        this.select(tab);\n      }\n    });\n    this.selectByUrl(this.router.url);\n  }\n\n  ngAfterContentInit() {\n    this.initTabs();\n  }\n\n  /** Selects the given tab (Component). */\n  select(tab: TabComponent) {\n    if (this.selected) {\n      this.selected.deactivate();\n    }\n    this.selected = tab;\n    tab.activate();\n    if (tab.route) {\n      this.router.navigate([tab.route], { relativeTo: this.route });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{tab.label}}\n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{tab.label}}                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TinymceComponent.html":{"url":"components/TinymceComponent.html","title":"component - TinymceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TinymceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/tinymce/src/tinymce/tinymce.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps tinymce as a control input.\nhttps://components.entrecode.de/misc/tinymce\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-tinymce\n            \n\n            \n                styleUrls\n                tinymce.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tinymce.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Public\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                update\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                debounce\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in packages/tinymce/src/tinymce/tinymce.component.ts:67\n                            \n                        \n\n                \n                    \n                            Subscribes for changes and propagates them + calling application tick manually :( \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                    \n                        Debounce time for value change processing \n\n                        \n                            Default value: 200\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settings\n                    \n                    \n                        TinyMCE Settings. Get Object.assigned to the default settings \n\n                            \n                            Type:    any\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:63\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        Output that emits when the value has been changed by the user \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:65\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Initializes the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Destroys the editor. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:57\n                            \n                        \n\n                \n                    \n                        The container where the editor is rendered \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:55\n                            \n                        \n\n                \n                    \n                        The current editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => { }\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:127\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:53\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:59\n                            \n                        \n\n                \n                    \n                        Subject that is nexted on editor change \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:67\n                            \n                        \n\n                \n                    \n                        Current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  ApplicationRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  AfterViewInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/debounceTime';\nimport * as tinymce from 'tinymce';\nimport 'tinymce/themes/modern';\nimport 'tinymce/plugins/fullscreen';\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/template';\nimport 'tinymce/plugins/autoresize';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/link';\nimport 'tinymce/plugins/table';\nimport 'tinymce/plugins/visualblocks';\nimport 'tinymce/plugins/autolink';\nimport 'tinymce/plugins/lists';\nimport 'tinymce/plugins/contextmenu';\nimport 'tinymce/plugins/textcolor';\nimport 'tinymce/plugins/colorpicker';\nimport { editorSettings } from './tinymce-settings';\n\n/** Wraps tinymce as a control input.\n * https://components.entrecode.de/misc/tinymce\n*/\n@Component({\n  selector: 'ec-tinymce',\n  templateUrl: './tinymce.component.html',\n  styleUrls: ['./tinymce.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TinymceComponent),\n      multi: true\n    }\n  ]\n})\nexport class TinymceComponent\n  implements AfterViewInit, OnDestroy, ControlValueAccessor {\n  /** Promise that resolves when the editor has been initialized */\n  ready: Promise;\n  /** The current editor instance */\n  public editor: any;\n  /** The container where the editor is rendered */\n  @ViewChild('container') container: ElementRef;\n  /** Subject that is nexted on editor change */\n  update: Subject = new Subject();\n  /** Debounce time for value change processing */\n  @Input() debounce = 200;\n  /** TinyMCE Settings. Get Object.assigned to the default settings */\n  @Input() settings: any = {};\n  /** Output that emits when the value has been changed by the user */\n  @Output() change: EventEmitter = new EventEmitter();\n  /** Current value */\n  public value = '';\n\n  /** Subscribes for changes and propagates them + calling application tick manually :( */\n  constructor(private app: ApplicationRef) {\n    this.update\n      .asObservable()\n      .debounceTime(this.debounce)\n      .subscribe(editor => {\n        this.value = editor.getContent();\n        this.propagateChange(this.value);\n        this.change.emit(this.value);\n        this.app.tick();\n      });\n  }\n\n  /** Initializes the editor */\n  ngAfterViewInit() {\n    this.ready = Promise.resolve(\n      tinymce.init(\n        Object.assign(\n          editorSettings,\n          {\n            target: this.container.nativeElement\n          },\n          this.settings\n        )\n      )\n    ).then(editor => {\n      this.editor = editor[0];\n      this.editor.setContent(this.value || '');\n      this.editor.on('dblclick', e => {\n        if (e.target.localName === 'img') {\n          this.editor.buttons.image.onclick(true, e.toElement);\n        }\n      });\n      this.editor.on('change keyup', res => this.update.next(this.editor));\n      return this.editor;\n    });\n  }\n\n  /** Destroys the editor. */\n  ngOnDestroy() {\n    if (this.editor) {\n      this.ready.then(editor => {\n        editor.destroy();\n      });\n    }\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    if (!this.ready) {\n      return;\n    }\n    this.ready.then(editor => {\n      editor.setContent(this.value);\n    });\n  }\n\n  propagateChange = (_: any) => { };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() { }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'TinymceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TinymceModule.html":{"url":"modules/TinymceModule.html","title":"module - TinymceModule","body":"\n                   \n\n\n\n\n  Modules\n  TinymceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/tinymce/src/tinymce.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TinymceComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TinymceComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TinymceComponent } from './tinymce/tinymce.component';\n\n@NgModule({\n  declarations: [TinymceComponent],\n  exports: [TinymceComponent]\n})\nexport class TinymceModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/toggle/toggle.component.ts\n\n\n    \n        Description\n    \n    \n        The toggle component is an alternative to the default boolean checkbox with fancier style.\nIt is used in the default input template for the view 'toggle'. \n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-toggle\n            \n\n            \n                styleUrls\n                toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propagateChange\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                toggle\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The toggles placeholder (currently not in use) \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Register Touch \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Toggles the value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            writes incoming value \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:20\n                            \n                        \n\n                \n                    \n                        The current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/** The toggle component is an alternative to the default boolean checkbox with fancier style.\n * It is used in the default input template for the view 'toggle'. */\n@Component({\n  selector: 'ec-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ToggleComponent),\n      multi: true\n    }\n  ]\n})\nexport class ToggleComponent implements ControlValueAccessor {\n  /** The current value */\n  value: boolean;\n  /** The toggles placeholder (currently not in use) */\n  @Input() placeholder: string;\n\n  /** Toggles the value */\n  toggle() {\n    this.value = !this.value;\n    this.propagateChange(this.value);\n  }\n  /** writes incoming value */\n  writeValue(value: boolean) {\n    this.value = value;\n  }\n  /* Propagates change*/\n  propagateChange = (_: any) => {\n  };\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  /** Register Touch */\n  registerOnTouched() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/vc/src/toolbar/toolbar.component.ts\n\n\n    \n        Description\n    \n    \n        ecvc toolbar containing editing tools. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-vc-toolbar\n            \n\n            \n                styleUrls\n                toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                editor\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                focusout\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        editor\n                    \n                    \n                        The editor to control \n\n                            \n                            Type:    EditorComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/vc/src/toolbar/toolbar.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/vc/src/toolbar/toolbar.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            host click \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusout\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nfocusout(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/vc/src/toolbar/toolbar.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Blocks event on focus out \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \nclick(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/vc/src/toolbar/toolbar.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            blocks event on click \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, HostListener, Input } from '@angular/core';\nimport { EditorComponent } from '../editor/editor.component';\n\n/** ecvc toolbar containing editing tools. */\n@Component({\n  selector: 'ec-vc-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent {\n\n  /** The editor to control */\n  @Input() editor: EditorComponent;\n  /** host click */\n  @HostListener('click', ['$event'])\n  /** Blocks the incoming event from propagating. */\n  blockEvent(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    return false;\n  }\n  /** blocks event on click */\n  click(e: any) {\n    return this.blockEvent(e);\n  }\n  /** Blocks event on focus out */\n  @HostListener('focusout', ['$event'])\n  focusOut(e: any) {\n    return this.blockEvent(e);\n  }\n}\n\n    \n\n    \n        {{editor?.caret?.phrasing?.type || '-'}}\n\n  \n    \n      \n        {{el.tag}}\n      \n    \n  \n  \n    \n      \n        {{el.tag}}\n      \n    \n  \n\n\n\n  {{editor.caret?.flow?.type || '-'}} >\n  {{editor.caret?.phrasing?.type || '-'}}\n\n-->\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{editor?.caret?.phrasing?.type || \\'-\\'}}                    {{el.tag}}                                {{el.tag}}              {{editor.caret?.flow?.type || \\'-\\'}} >  {{editor.caret?.phrasing?.type || \\'-\\'}}-->'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeConfigService.html":{"url":"injectables/TypeConfigService.html","title":"injectable - TypeConfigService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TypeConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/type-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The TypeConfig holds each field type's specific behaviour in certain situations \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                nestedCrudConfig\n                            \n                            \n                                    Private\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayAccount\n                            \n                            \n                                displayDate\n                            \n                            \n                                get\n                            \n                            \n                                groupDate\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/model-config/type-config.service.ts:137\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayAccount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:172\n                            \n                        \n\n\n                \n                    \n                            Returns an account display function \n\n\n                            \n                                Returns :     (value: any, entry: any, property: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayDate(time: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:166\n                            \n                        \n\n\n                \n                    \n                            Returns a date display function. If time is true, the time will be displayed too. Usese 'moment.format.date' and 'moment.format.time' symbols. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (value: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:141\n                            \n                        \n\n\n                \n                    \n                            Returns the base FieldConfig for the given type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FieldConfigProperty\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngroupDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:177\n                            \n                        \n\n\n                \n                    \n                            Returns a date group function. Uses 'moment.format.month' symbol \n\n\n                            \n                                Returns :     (value: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(type: string, config: FieldConfigProperty)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            Assigns the given config to the type, e.g. to change the default template of a type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nestedCrudConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nestedCrudConfig:     CrudConfig\n\n                    \n                \n                    \n                        \n                            Type :     CrudConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    size: 10,\n    // methods: ['get'],\n    popClass: 'ec-pop_fullscreen'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:18\n                            \n                        \n\n                \n                    \n                        The default config for nested crud lists, as passed to entry-select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            types\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        types:     FieldConfig\n\n                    \n                \n                    \n                        \n                            Type :     FieldConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: {\n      view: 'label'\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true,\n    },\n    boolean: {\n      prefill: false,\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact'\n    },\n    decimal: {\n      view: 'number',\n      sortable: true,\n    },\n    url: {\n      sortable: true,\n      filterable: true,\n    },\n    asset: {\n      view: 'asset',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    assets: {\n      view: 'assets',\n      input: DefaultEntryInputComponent,\n      /* display: (value, entry, property) => entry.getImageThumbUrl(property, 100), */\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    email: {},\n    phone: {\n      view: 'string'\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: (value) => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(this.symbol.resolve('moment.format.date'))\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    entries: {\n      view: 'tags',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => value ? JSON.stringify(value) : ''\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => value ? value.longitude + ',' + value.latitude : '',\n      filterPopClass: 'ec-pop_dialog'\n    },\n    account: {\n      display: (value) => value ? value.title : '',\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    },\n    role: {\n      display: (value) => value ? value.name : '',\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:25\n                            \n                        \n\n                \n                    \n                        Defines the base configuration of each type.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FieldConfigProperty } from '@ec.components/core/src/config/field-config-property.interface';\nimport { FieldConfig } from '@ec.components/core/src/config/field-config.interface';\nimport { DefaultInputComponent } from '@ec.components/ui/src/form/default-input/default-input.component';\nimport { DefaultOutputComponent } from '@ec.components/ui/src/form/default-output/default-output.component';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport moment from 'moment-es6';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from '../entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from '../entry-form/default-entry-output.component';\n\n/** The TypeConfig holds each field type's specific behaviour in certain situations */\n@Injectable()\nexport class TypeConfigService {\n  /** The default config for nested crud lists, as passed to entry-select */\n  private nestedCrudConfig: CrudConfig = {\n    size: 10,\n    // methods: ['get'],\n    popClass: 'ec-pop_fullscreen'\n  };\n\n  /** Defines the base configuration of each type.*/\n  private types: FieldConfig = {\n    id: {\n      view: 'label'\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true,\n    },\n    boolean: {\n      prefill: false,\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact'\n    },\n    decimal: {\n      view: 'number',\n      sortable: true,\n    },\n    url: {\n      sortable: true,\n      filterable: true,\n    },\n    asset: {\n      view: 'asset',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    assets: {\n      view: 'assets',\n      input: DefaultEntryInputComponent,\n      /* display: (value, entry, property) => entry.getImageThumbUrl(property, 100), */\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    email: {},\n    phone: {\n      view: 'string'\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: (value) => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(this.symbol.resolve('moment.format.date'))\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    entries: {\n      view: 'tags',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => value ? JSON.stringify(value) : ''\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => value ? value.longitude + ',' + value.latitude : '',\n      filterPopClass: 'ec-pop_dialog'\n    },\n    account: {\n      display: (value) => value ? value.title : '',\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    },\n    role: {\n      display: (value) => value ? value.name : '',\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    }\n  };\n  constructor(private symbol: SymbolService) { }\n\n  /** Returns the base FieldConfig for the given type. */\n  get(type: string): FieldConfigProperty {\n    const config = this.types[type];\n    if (!config) {\n      console.error('missing config for type', type);\n      return {};\n    }\n    Object.assign(config, {\n      type,\n      view: config.view || type,\n      input: config.input || DefaultInputComponent,\n      output: config.output || DefaultOutputComponent,\n    });\n    return config;\n  }\n\n  /** Assigns the given config to the type, e.g. to change the default template of a type. */\n  set(type: string, config: FieldConfigProperty) {\n    if (!this.types[type]) {\n      console.error('cannot configure non existing type', type);\n      return;\n    }\n    Object.assign(this.types[type], config);\n  }\n\n  /** Returns a date display function. If time is true, the time will be displayed too. Usese 'moment.format.date' and 'moment.format.time' symbols. */\n  displayDate(time = true) {\n    const format = this.symbol.resolve('moment.format.date') + (time ? ' ' + this.symbol.resolve('moment.format.time') : '');\n    return (value) => value ? moment(value).format(format) : '';\n  }\n\n  /** Returns an account display function */\n  displayAccount() {\n    return (value, entry, property) => entry.getTitle(property) || this.symbol.resolve('field.creator.ecuser');\n  }\n\n  /** Returns a date group function. Uses 'moment.format.month' symbol */\n  groupDate() {\n    return (value) => moment(value).format(this.symbol.resolve('moment.format.month'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n  Modules\n  UiModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_exports\n\n\n\n\nFormModule\n\nFormModule\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\n\n\nListModule\n\nListModule\n\nUiModule -->\n\nListModule->UiModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\n\n\nSelectModule\n\nSelectModule\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/ui.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    IconModule\n                            \n                            \n                                    ListModule\n                            \n                            \n                                    LoaderModule\n                            \n                            \n                                    NotificationsModule\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    SelectModule\n                            \n                            \n                                    SymbolModule\n                            \n                            \n                                    UtilityModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    IconModule\n                            \n                            \n                                    ListModule\n                            \n                            \n                                    LoaderModule\n                            \n                            \n                                    NotificationsModule\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    SelectModule\n                            \n                            \n                                    SymbolModule\n                            \n                            \n                                    UtilityModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ListModule } from './list/list.module';\nimport { FormModule } from './form/form.module';\nimport { PopModule } from './pop/pop.module';\nimport { LoaderModule } from './loader/loader.module';\nimport { NotificationsModule } from './notifications/notifications.module';\nimport { UtilityModule } from './utility/utility.module';\nimport { SelectModule } from './select/select.module';\nimport { IconModule } from './icon/icon.module';\nimport { SymbolModule } from './symbol/symbol.module';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    UtilityModule,\n    NotificationsModule,\n    PopModule,\n    LoaderModule,\n    FormModule,\n    ListModule,\n    SelectModule,\n    IconModule,\n    SymbolModule\n  ],\n  exports: [\n    ReactiveFormsModule,\n    FormsModule,\n    UtilityModule,\n    PopModule,\n    NotificationsModule,\n    LoaderModule,\n    ListModule,\n    FormModule,\n    SelectModule,\n    IconModule,\n    SymbolModule\n  ]\n})\nexport class UiModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Update.html":{"url":"interfaces/Update.html","title":"interface - Update","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Update\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/crud/crud.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the CrudService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        entry\n                                \n                                \n                                            Optional\n                                        list\n                                \n                                \n                                        model\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entry\n                                    \n                                \n                                \n                                    \n                                        entry:     EntryResource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EntryResource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant entry. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     EntryList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EntryList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The model that has been updated. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of update. (create/read/update/delete) \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/filter';\nimport { Subject } from 'rxjs/Subject';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Update {\n  /** The model that has been updated. */\n  model: string | string[],\n  /** The relevant entry. */\n  entry?: EntryResource,\n  /** The list where it happened. */\n  list?: EntryList,\n  /** The type of update. (create/read/update/delete) */\n  type?: 'post' | 'get' | 'put' | 'delete'\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class CrudService {\n  /** The changes event is emitted everytime an entry is created or updated. */\n  private changes: Subject = new Subject();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService) {\n  }\n\n  /** Gives true if the given change fits all property values of the filter. */\n  matches(change: Update, filter: Update): boolean {\n    return Object.keys(filter)\n      .reduce((match, key) => match && change[key] === filter[key], true);\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: Update): Observable {\n    if (!filter) {\n      return this.changes.asObservable();\n    }\n    return this.changes.asObservable().filter((change: Update) => this.matches(change, filter));\n  }\n\n  /** Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. */\n  save(model: string, entry: EntryResource, value: Object) {\n    if (entry && entry.save) {\n      return this.update(model, entry, value);\n    }\n    return this.create(model, value)\n      .then((_entry) => {\n        return _entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given entry with the new value. Fires the \"update\" change. */\n  update(model, entry: EntryResource, value: Object): Promise {\n    const oldValues = {}; // save old values\n    Object.keys(value).forEach((key) => oldValues[key] = entry[key]);\n    Object.assign(entry, this.clean(value)); // assign new form values\n    return entry.save().then((_entry) => {\n      this.changes.next({ model, entry: _entry, type: 'put' });\n      return _entry;\n    })\n      .catch((err) => {\n        Object.assign(entry, this.clean(oldValues)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' ||\n      ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (value[key] === '') { // clear empty strings\n          value[key] = null;\n        }\n        if (this.isImmutableProperty(key)) { // filter system properties\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new entry with the given value for the given model. Fires the \"create\" change. */\n  create(model: string, value: Object): Promise {\n    return this.sdk.api.createEntry(model, this.clean(value))\n      .then((entry: EntryResource) => {\n        // console.log('created entry', entry);\n        // TODO make sure leveled entries are returned leveled\n        this.changes.next({ model, entry, type: 'post' });\n        return entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given entry and emits the \"delete\" change. */\n  del(model: string, entry: EntryResource) {\n    return entry.del().then((res) => {\n      this.changes.next({ model, entry, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Upload.html":{"url":"interfaces/Upload.html","title":"interface - Upload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Upload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the CrudService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        asset\n                                \n                                \n                                            Optional\n                                        assets\n                                \n                                \n                                            Optional\n                                        item\n                                \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                            Optional\n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asset\n                                    \n                                \n                                \n                                    \n                                        asset:     PublicAssetResource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant asset. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assets\n                                    \n                                \n                                \n                                    \n                                        assets:     PublicAssetResource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant assets (when uploading multiple). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     Item\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Item\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     ResourceList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResourceList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource,\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[],\n  /** The uploaded asset as item */\n  item?: Item\n  /** The uploaded asset as item */\n  items?: Array>\n  /** The list where it happened. */\n  list?: ResourceList,\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  customNames?: string[]\n  /** Custom file form fieldName */\n  fieldName?: string\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) =>\n          ((only && (match && this.isNewAsset(a)) ||\n            (!only && (match || this.isNewAsset(a)))))\n        , only);\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id)\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n    if (!files.length) {\n      return;\n    }\n    return api.createDMAssets(assetGroupID, this.getFormData(files, options))\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('dmAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {})\n      }\n      return this.sdk.api.createAssets(data, {})\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array, assetGroupID?: string): Promise> {\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    console.log('resolve', unresolved, this.isNewAsset(unresolved));\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) { // new assets\n      return this.sdk.api.dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then(dmAssetList => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then((): any => {\n      if (unresolved.length === 1) {\n        return this.sdk.api.asset(unresolved[0]).then(asset => {\n          console.log('old asset', asset);\n          return [asset]\n        });\n      }\n      return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 })\n        .then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ?\n              resolved.find((resource) => resource.assetID === asset) : asset)\n        });\n\n    })\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadComponent.html":{"url":"components/UploadComponent.html","title":"component - UploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/files/upload/upload.component.ts\n\n\n    \n        Description\n    \n    \n        This component will render an input field to upload files to the datamanager. \n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-upload\n            \n\n\n\n\n            \n                templateUrl\n                ./upload.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                fileInput\n                            \n                            \n                                    Public\n                                filesToUpload\n                            \n                            \n                                notifications\n                            \n                            \n                                pop\n                            \n                            \n                                uploadPromise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clear\n                            \n                            \n                                selectUpload\n                            \n                            \n                                setGroup\n                            \n                            \n                                trigger\n                            \n                            \n                                upload\n                            \n                            \n                                uploadFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetGroupID\n                            \n                            \n                                custom\n                            \n                            \n                                loader\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupChanged\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, fileService: FileService, loaderService: LoaderService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/upload/upload.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The api to use for the upload. Defaults to sdk.api \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                        The asset group to upload into. If not defined, old assets will be used! \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        custom\n                    \n                    \n                        If true, a pop to rename files + customize flags will appear before uploading. \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used while uploading\n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        Upload options \n\n                            \n                            Type:    FileOptions\n\n                            \n                        \n                            Default value: {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    customNames: []\n  }\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The input placeholder\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                    \n                        emits when the group has been set from the upload pop \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Emits when an upload is complete. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(e: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Uploads the files from the input event. Handles loader and notifications. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            clears the file input \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectUpload(upload: Upload, selection: , solo: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            method that can be called after the upload to select the uploaded item(s). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        upload\n                                                        \n                                                                    Upload\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        selection\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        solo\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGroup(group: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Sets the asset group to upload to \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \ntrigger()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            opens the system upload window by triggering the input \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upload\n                            \n                            \n                        \n                    \n                \n                \n                    \nupload(files: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Triggers upload of current selected files \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadFiles(files: , e: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileInput:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:43\n                            \n                        \n\n                \n                    \n                        Reference to the input[type=file] element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filesToUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filesToUpload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:47\n                            \n                        \n\n                \n                    \n                        Error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     PopComponent\n\n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:45\n                            \n                        \n\n                \n                    \n                        Pop child for new asset options. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadPromise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uploadPromise:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { LoaderComponent, LoaderService, NotificationsService, WithLoader } from '@ec.components/ui';\nimport { Notification } from '@ec.components/ui/src/notifications/notification';\nimport { WithNotifications } from '@ec.components/ui/src/notifications/with-notifications.interface';\nimport { PopComponent } from '@ec.components/ui/src/pop/pop.component';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { SdkService } from '../../sdk/sdk.service';\nimport { FileService, Upload } from '../file.service';\nimport { FileOptions } from './../file.service';\n\n/** This component will render an input field to upload files to the datamanager. */\n@Component({\n  selector: 'ec-upload',\n  templateUrl: './upload.component.html',\n})\nexport class UploadComponent implements WithLoader, WithNotifications {\n  event: any;\n  uploadPromise: Promise;\n  public filesToUpload: any;\n  /** The input placeholder*/\n  @Input() placeholder: string;\n  /** The loader that should be used while uploading*/\n  @Input() loader: LoaderComponent;\n  /** The asset group to upload into. If not defined, old assets will be used! */\n  @Input() assetGroupID: string;\n  /** If true, a pop to rename files + customize flags will appear before uploading. */\n  @Input() custom: boolean;\n  /** Upload options */\n  @Input() options: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    customNames: []\n  };\n  /** The api to use for the upload. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Emits when an upload is complete. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** emits when the group has been set from the upload pop */\n  @Output() groupChanged: EventEmitter = new EventEmitter();\n  /** Reference to the input[type=file] element */\n  @ViewChild('fileInput') fileInput: ElementRef;\n  /** Pop child for new asset options. */\n  @ViewChild(PopComponent) pop: PopComponent;\n  /** Error Notifications */\n  notifications: Notification[] = [];\n\n  constructor(private sdk: SdkService,\n    private fileService: FileService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService) {\n  }\n  /** opens the system upload window by triggering the input */\n  trigger() {\n    if (!this.fileInput) {\n      console.error('cannot trigger upload: file input element not found!');\n      return;\n    }\n    /* this.clear(); */\n    this.fileInput.nativeElement.click();\n  }\n\n  /** Sets the asset group to upload to */\n  setGroup(group) {\n    this.assetGroupID = group;\n    this.groupChanged.emit(group);\n  }\n\n  /** Uploads the files from the input event. Handles loader and notifications. */\n  change(e, api = this.sdk.api) {\n    if (!e || !e.target || !e.target.files || !e.target.files.length) {\n      return;\n    }\n    return this.uploadFiles(e.target.files, e, api);\n  }\n\n  /** clears the file input */\n  clear() {\n    if (!this.fileInput) {\n      return;\n    }\n    this.fileInput.nativeElement.value = ''; // clear input to eventually trigger change on same file\n  }\n\n  uploadFiles(files, e, api = this.sdk.api) {\n    this.filesToUpload = files;\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.custom || !this.assetGroupID) {\n      this.event = e;\n      this.pop.show();\n      return;\n    }\n    this.upload(files, api);\n  }\n\n  /** Triggers upload of current selected files */\n  upload(files, api = this.sdk.api) {\n    this.uploadPromise = (this.assetGroupID !== 'legacyAsset' ?\n      this.fileService.uploadAssets(files, this.assetGroupID, this.options, api) :\n      this.fileService.uploadFiles(files))\n      .then((_upload) => {\n        this.success.emit(_upload);\n        this.notificationService.emit({\n          title: this.symbol.resolve('success.upload'),\n          type: 'success',\n          hide: this.notifications\n        });\n        this.pop.hide();\n        return _upload;\n      }).catch((err) => {\n        console.error(err);\n        this.notificationService.emit({\n          title: this.symbol.resolve('error.upload'),\n          error: err,\n          sticky: true,\n          hide: this.notifications,\n          append: this.notifications\n        });\n      });\n    this.loaderService.wait(this.uploadPromise, this.loader);\n    this.uploadPromise.then(() => {\n      delete this.uploadPromise;\n    })\n    return this.uploadPromise;\n  }\n\n\n  /** method that can be called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload, selection, solo = false) {\n    if (!selection) {\n      return;\n    }\n    if (solo) {\n      selection.select(upload.item);\n    } else {\n      selection.toggleAll(upload.items);\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n        \n    \n    \n        \n            {{'upload.assetGroup' | symbol}}\n            \n        \n        \n            \n                \n                \n                    \n                    {{'upload.preserveFilenames' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.includeAssetIDInPath' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.ignoreDuplicates' | symbol}}\n                \n            \n            \n                {{ f.name }}\n                \n                    \n                \n            \n        \n        Upload\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{\\'upload.assetGroup\\' | symbol}}                                                                                                                {{\\'upload.preserveFilenames\\' | symbol}}                                                                                                                {{\\'upload.includeAssetIDInPath\\' | symbol}}                                                                                                                {{\\'upload.ignoreDuplicates\\' | symbol}}                                                        {{ f.name }}                                                                                Upload    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilityModule.html":{"url":"modules/UtilityModule.html","title":"module - UtilityModule","body":"\n                   \n\n\n\n\n  Modules\n  UtilityModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_imports\n\n\n\ncluster_UtilityModule_exports\n\n\n\n\nFocusDirective\n\nFocusDirective\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nFocusDirective->UtilityModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nMockupComponent\n\nMockupComponent\n\nUtilityModule -->\n\nMockupComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nUtilityModule->FocusDirective \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nUtilityModule->IoModule \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nMockupComponent \n\nMockupComponent \n\nMockupComponent  -->\n\nUtilityModule->MockupComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nIoModule\n\nIoModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/utility/utility.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FocusDirective\n                            \n                            \n                                LoginFormComponent\n                            \n                            \n                                MenuComponent\n                            \n                            \n                                MockupComponent\n                            \n                            \n                                TabComponent\n                            \n                            \n                                TabsComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IoModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FocusDirective\n                            \n                            \n                                    IoModule\n                            \n                            \n                                    LoginFormComponent\n                            \n                            \n                                    MenuComponent\n                            \n                            \n                                    MockupComponent\n                            \n                            \n                                    TabComponent\n                            \n                            \n                                    TabsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { IoModule } from '../io/io.module';\nimport { FocusDirective } from './focus/focus.directive';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { MockupComponent } from './mockup/mockup.component';\nimport { TabComponent } from './tab/tab.component';\nimport { TabsComponent } from './tabs/tabs.component';\n\n@NgModule({\n  entryComponents: [],\n  declarations: [\n    TabsComponent,\n    TabComponent,\n    MockupComponent,\n    MenuComponent,\n    LoginFormComponent,\n    FocusDirective,\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    CommonModule,\n    RouterModule,\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    TabsComponent,\n    TabComponent,\n    MockupComponent,\n    MenuComponent,\n    LoginFormComponent,\n    FocusDirective,\n    RouterModule,\n  ],\n  providers: [],\n})\nexport class UtilityModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcModule.html":{"url":"modules/VcModule.html","title":"module - VcModule","body":"\n                   \n\n\n\n\n  Modules\n  VcModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcModule\n\n\n\ncluster_VcModule_declarations\n\n\n\ncluster_VcModule_exports\n\n\n\n\nEditorComponent\n\nEditorComponent\n\n\n\nVcModule\n\nVcModule\n\nVcModule -->\n\nEditorComponent->VcModule\n\n\n\n\n\nSafeHtmlPipe\n\nSafeHtmlPipe\n\nVcModule -->\n\nSafeHtmlPipe->VcModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nVcModule -->\n\nToolbarComponent->VcModule\n\n\n\n\n\nEditorComponent \n\nEditorComponent \n\nEditorComponent  -->\n\nVcModule->EditorComponent \n\n\n\n\n\nSafeHtmlPipe \n\nSafeHtmlPipe \n\nSafeHtmlPipe  -->\n\nVcModule->SafeHtmlPipe \n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nVcModule->ToolbarComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/vc/src/vc.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                EditorComponent\n                            \n                            \n                                SafeHtmlPipe\n                            \n                            \n                                ToolbarComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                EditorComponent\n                            \n                            \n                                ToolbarComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    EditorComponent\n                            \n                            \n                                    SafeHtmlPipe\n                            \n                            \n                                    ToolbarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\n\nimport { NgModule } from '@angular/core';\nimport { SafeHtmlPipe } from './safe-html.pipe';\nimport { EditorComponent } from './editor/editor.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\n\n@NgModule({\n  entryComponents: [\n    EditorComponent,\n    ToolbarComponent,\n  ],\n  declarations: [\n    EditorComponent,\n    ToolbarComponent,\n    SafeHtmlPipe,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    EditorComponent,\n    ToolbarComponent,\n    SafeHtmlPipe,\n  ],\n  providers: [],\n})\nexport class VcModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/VisibleFieldsPipe.html":{"url":"pipes/VisibleFieldsPipe.html","title":"pipe - VisibleFieldsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  VisibleFieldsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/visible-fields.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        visibleFields\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(fields: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/visible-fields.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n                            Filters out all fields that should not be displayed in a regular form \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fields\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Field } from '@ec.components/core/src/field/field';\n\n/** The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. */\n@Pipe({\n  name: 'visibleFields'\n})\nexport class VisibleFieldsPipe implements PipeTransform {\n  /** Filters out all fields that should not be displayed in a regular form */\n  transform(fields: Array): any {\n    return fields.filter((field) => {\n      return field.form !== false;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithLoader.html":{"url":"interfaces/WithLoader.html","title":"interface - WithLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/loader/with-loader.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses a loader. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The loader that is contacted on any kind of loading operation. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { LoaderComponent } from './loader.component';\n/** This interface can be used on a component that uses a loader. */\nexport interface WithLoader {\n  /** The loader that is contacted on any kind of loading operation. */\n  loader: LoaderComponent\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithNotifications.html":{"url":"interfaces/WithNotifications.html","title":"interface - WithNotifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithNotifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/notifications/with-notifications.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses notifications. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        silent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     Notification[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Notification[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Stores notification history for later access. E.g. stores errors that should be hidden later. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        silent\n                                    \n                                \n                                \n                                    \n                                        silent:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no notifications will be emitted \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Notification } from './notification';\n\n\n/** This interface can be used on a component that uses notifications. */\nexport interface WithNotifications {\n    /** Stores notification history for later access. E.g. stores errors that should be hidden later. */\n    notifications?: Notification[];\n    /** If true, no notifications will be emitted */\n    silent?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\n\n@ec.components/ui 0.22.0\nBREAKING CHANGE:\n\nnow requires ngx-drag-drop packages for new drag and drop feature\n\n\n@ec.components/data 0.25.0\nBREAKING CHANGE:\n\nasset-select now contains asset-group selects in the list-pop and when uploading\n\n\n@ec.components/data 0.23.0\nBREAKING CHANGE:\n\nadded useLegacyAssets flag to use old assets. All projects still using old assets need to set this flag to migrate! The flag can be used in the field config or directly in the asset-select config.\n\n\n0.17.0\n\nadded resource module with all resource related components and services\ncan now add delete and modify entries and resource through the selects\nasset select now supports old and new assets. When you pass [assetGroupID] to select (or list/upload), new assets will be used.\ndeprecated asset-list, because ec.sdk now supports public api relations.\n\nBREAKING CHANGE:\n\nremoved [field] input from selects\n\n\n0.15.0\n\ncan now use SdkService without datamanagerID.\nadded resource-delete-pop\nremoved labels config from pagination-config. now using symbol.service\nadded ec-resource-select\nadded support for new assets\n\n\n0.14.0\n\nadded ready event to FormComponent when initialization is complete.\nadded ResourcePopComponent for creating and editing resources.\nadded permissions option to resource-config to automatically show only allowed actions.\nadded ResourceCrudComponent for easy create/read/update/delete of any resource.\ncan now set field config label to false to show an empty label. (COM-89)\noptimized ec-select toggle behaviour (COM-92, COM-93)\ncan now set placeholder for ec-password-reset (COM-101)\nadded SymbolService for localization\n\n\n0.13.0\n\ncan now configure the maximum visible items for 'tags' view via the maxItems option in the field config. The default value is 10.\nadded auto generated id to all fields. Those ids are used in label#for and input#id. You should also reference this id in custom inputs to make the label clickable.\nadded ec-icon component for more flexible icons.\nadded paginationConfig Input to ListComponent (+ all children like ResourceListComponent)\nadded maxColumns option to list-config.\n\nBREAKING CHANGES:\n\nCOM-98: active/visible classes: renamed active to is-active, visible to is-visible and disabled to is-disabled\nCOM-95: renamed is-sortable-active to is-sorted + added is-sorted-asc and is-sorted-desc\nCOM-96: replaced all usages of ec-icon with new ec-icon component (nests one level deeper)\nCOM-45: removed range input from pagination, replaced with PaginationConfig with additional options (see docs)\nremoved [host] input from ListItemsComponent due to incompatibilities.\nrenamed list config property disableSelection to selectMode and inverted its value meaning. When selectMode is true, the checkboxes are shown and the columnClicked event is ignored as long as selectMode is active. You can toggle the selectMode via list#toggleSelectMode.\nremoved DatamanagerListComponent and ModelListComponent. You can use ResourceList for both now.\n\n\n0.12.0\nBREAKING CHANGE:\n\nform.component (and all children): renamed (submit) output to (submitted)\n\n\n0.10.0\nBREAKING CHANGES:\n\nlist.component (and all extending components): renamed select output to columnClicked. (Global replace \"(select)\" to \"(columnClicked)\").\nmonth.component: renamed select output to dayClicked (similar to list.component)\n\n\n0.9.0\n\nadded use method to selection.component to write the model from outside\nBREAKING CHANGES:\necPublicAsset has been renamed to ecAsset and now supports direct id binding to directive.\n\n\n0.8.2\n\nadded ec-toggle to default inputs (use view: 'toggle' in field config)\nadded ec-calendar\nsystem fields (id, created, modified etc) are now readOnly by default\n\n\n0.8.1\n\nadded ec-entry-pop\n\n\n0.8.0\nBREAKING CHANGES:\n\nremoved PublicService and AdminService, you should use sdk methods instead.\nlogin/signup + more auth methods have been moved from SdkService to new AuthService\nformer ec-login has been renamed to ec-login-form, the new ec-login handles login automatically.\ncrud methods have been renamend to 'get', 'put', 'post', 'delete'\nec-entry and ec-entries are now directives ecEntry and ecEntries\n\n\n0.7.0\nBREAKING CHANGES:\n\npop classes have been completely changed to:\n.ec-pop_fullscreen\n.ec-pop_dialog\n.ec-pop_drawer-left\n.ec-pop_drawer-top\n.ec-pop_drawer-right\n.ec-pop_drawer-bottom\n.ec-pop_toast-top\n.ec-pop_toast-bottom\n\n\nadded @ec.components/style package\n\n\n0.6.0\n\nEntryFormComponent.deleteEntry now returns the deletion promise.\nfix: SdkService.ready promise was not renewed after login\nLoginComponent now accepts a loader as input\nBREAKING CHANGES:\nFormComponent.submitted now emits the instance of Form and not the group\n\n\n0.5.3\n\nfeature: asset-select is now capable of using ngModel with two way binding\n\n\n0.5.2\n\nremoved DataRoutingModule from DataModule\nfeature: asset-select can now resolve assetID's.\nfeature: added filterPopClass config option to field-property-config.\nfurther styling\n\n\n0.5.1\n\nfurther styling\nfix: could not set custom inputs/outputs for entry fields\nnow using ec.sdk 0.8.6\n\n\n0.5.0\n\nfurther styling\nBREAKING CHANGES:\nview: 'label' must now be view: 'tag'\nview: 'labels' must now be view: 'tags'\nselection is now a direct input of ec-crud instead of a config property\n\n\n0.4.1\n\nfixed tests after refactoring\nwrote project setup tutorial\nfurther styling\n\n\n0.4.0\n\nnow using ec.sdk 0.8.5\n\nBREAKING CHANGES:\n\nall imports from '@ec.components/_/' must now lead to '@ec.components//src/_'\nimports from '@ec.components/*' can stay the same and should generally be preferred.\n\n\n0.3.1\n\nrefactored typings to be aot compatible\nrefactored imports\nbegan styling\n\n\n0.3.0\n\nnow using ec.sdk 0.8.1\nnow supporting default routes for filtering and more\nAssetInput is now default for asset/assets fields\n\n\n0.2.0\n\nnow using ec.sdk 0.7.1\nentry-form now supports lvl1 entries even with nested resources\nec-datetime now supports iso dates\n\n\n0.1.1\n\nchanged src folder and module structure\nec-model-list\nec-asset-select\nec-upload\nec-datetime input\n\n\n0.1.0 (2017-08-23)\n\nthe most important basic components are now implemented\ndynamic input/output templates\nec-entry, ec-entries\nadded demo with multiple routes\nec-form\nmuch more\n\n\n0.0.2 (2017-05-11)\n\nimproved list\nimproved imports\n\n\n0.0.1 (2017-05-10)\n\ninitial release\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    packages/ace/src/ace.component.ts\n            \n            \n                component\n            \n            \n                AceComponent\n            \n            \n                90 %\n                (19/21)\n            \n        \n        \n            \n                \n                    packages/ace/src/ace.component.ts\n            \n            \n                variable\n            \n            \n                ace\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/collection/collection.ts\n            \n            \n                class\n            \n            \n                Collection\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    packages/core/src/config/config.ts\n            \n            \n                class\n            \n            \n                Config\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/core/src/config/field-config-property.interface.ts\n            \n            \n                interface\n            \n            \n                FieldConfigProperty\n            \n            \n                100 %\n                (36/36)\n            \n        \n        \n            \n                \n                    packages/core/src/config/field-config.interface.ts\n            \n            \n                interface\n            \n            \n                FieldConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/field/field.ts\n            \n            \n                class\n            \n            \n                Field\n            \n            \n                95 %\n                (22/23)\n            \n        \n        \n            \n                \n                    packages/core/src/form/form-config.interface.ts\n            \n            \n                interface\n            \n            \n                FormConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/form/form.ts\n            \n            \n                class\n            \n            \n                Form\n            \n            \n                92 %\n                (26/28)\n            \n        \n        \n            \n                \n                    packages/core/src/item/item-config.interface.ts\n            \n            \n                interface\n            \n            \n                ItemConfig\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    packages/core/src/item/item.ts\n            \n            \n                class\n            \n            \n                Item\n            \n            \n                91 %\n                (21/23)\n            \n        \n        \n            \n                \n                    packages/core/src/list/list-config.interface.ts\n            \n            \n                interface\n            \n            \n                ListConfig\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                    packages/core/src/list/list.ts\n            \n            \n                class\n            \n            \n                List\n            \n            \n                100 %\n                (37/37)\n            \n        \n        \n            \n                \n                    packages/core/src/pagination/pagination.ts\n            \n            \n                class\n            \n            \n                Pagination\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    packages/core/src/selection/selection.ts\n            \n            \n                class\n            \n            \n                Selection\n            \n            \n                100 %\n                (43/43)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                class\n            \n            \n                Sorter\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                function\n            \n            \n                sortBoolean\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                function\n            \n            \n                sortNumber\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                function\n            \n            \n                sortString\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                variable\n            \n            \n                collator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/auth-guard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuard\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/auth.module.ts\n            \n            \n                function\n            \n            \n                cookieFactory\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/email-available.validator.ts\n            \n            \n                variable\n            \n            \n                emailAvailable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/errors.ts\n            \n            \n                variable\n            \n            \n                backendErrorCodes\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/errors.ts\n            \n            \n                variable\n            \n            \n                errors\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/password-reset/password-reset.component.ts\n            \n            \n                component\n            \n            \n                PasswordResetComponent\n            \n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud-config.interface.ts\n            \n            \n                interface\n            \n            \n                CrudConfig\n            \n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud.component.ts\n            \n            \n                component\n            \n            \n                CrudComponent\n            \n            \n                78 %\n                (15/19)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud.service.ts\n            \n            \n                injectable\n            \n            \n                CrudService\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud.service.ts\n            \n            \n                interface\n            \n            \n                Update\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/data/src/entries/entries.directive.ts\n            \n            \n                directive\n            \n            \n                EntriesDirective\n            \n            \n                66 %\n                (12/18)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/admin-entry-input.component.ts\n            \n            \n                component\n            \n            \n                AdminEntryInputComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/default-entry-input.component.ts\n            \n            \n                component\n            \n            \n                DefaultEntryInputComponent\n            \n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/default-entry-output.component.ts\n            \n            \n                component\n            \n            \n                DefaultEntryOutputComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/entry-form.component.ts\n            \n            \n                component\n            \n            \n                EntryFormComponent\n            \n            \n                97 %\n                (35/36)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-list/entry-list.component.ts\n            \n            \n                component\n            \n            \n                EntryListComponent\n            \n            \n                71 %\n                (15/21)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-list/entry-list.ts\n            \n            \n                class\n            \n            \n                EntryList\n            \n            \n                87 %\n                (21/24)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-pop/entry-pop.component.ts\n            \n            \n                component\n            \n            \n                EntryPopComponent\n            \n            \n                92 %\n                (25/27)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-select/entry-select.component.ts\n            \n            \n                component\n            \n            \n                EntrySelectComponent\n            \n            \n                78 %\n                (39/50)\n            \n        \n        \n            \n                \n                    packages/data/src/entry/entry.directive.ts\n            \n            \n                directive\n            \n            \n                EntryDirective\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    packages/data/src/files/asset-list-pop/asset-list-pop.component.ts\n            \n            \n                component\n            \n            \n                AssetListPopComponent\n            \n            \n                90 %\n                (20/22)\n            \n        \n        \n            \n                \n                    packages/data/src/files/asset-select/asset-select.component.ts\n            \n            \n                component\n            \n            \n                AssetSelectComponent\n            \n            \n                64 %\n                (34/53)\n            \n        \n        \n            \n                \n                    packages/data/src/files/asset/asset.directive.ts\n            \n            \n                directive\n            \n            \n                AssetDirective\n            \n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                    packages/data/src/files/assetgroup-select/assetgroup-select.component.ts\n            \n            \n                component\n            \n            \n                AssetgroupSelectComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    packages/data/src/files/dropzone/dropzone.directive.ts\n            \n            \n                directive\n            \n            \n                DropzoneDirective\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    packages/data/src/files/file.service.ts\n            \n            \n                injectable\n            \n            \n                FileService\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                    packages/data/src/files/file.service.ts\n            \n            \n                interface\n            \n            \n                FileOptions\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    packages/data/src/files/file.service.ts\n            \n            \n                interface\n            \n            \n                Upload\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    packages/data/src/files/image/image.directive.ts\n            \n            \n                directive\n            \n            \n                ImageDirective\n            \n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                    packages/data/src/files/upload/upload.component.ts\n            \n            \n                component\n            \n            \n                UploadComponent\n            \n            \n                78 %\n                (18/23)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/model-config.interface.ts\n            \n            \n                interface\n            \n            \n                ModelConfig\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/model-config.service.ts\n            \n            \n                injectable\n            \n            \n                ModelConfigService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/model-configuration.interface.ts\n            \n            \n                interface\n            \n            \n                ModelConfiguration\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/type-config.service.ts\n            \n            \n                injectable\n            \n            \n                TypeConfigService\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-config/resource-config.service.ts\n            \n            \n                injectable\n            \n            \n                ResourceConfig\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-config/resource.service.ts\n            \n            \n                injectable\n            \n            \n                ResourceService\n            \n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-config/resource.service.ts\n            \n            \n                interface\n            \n            \n                Update\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-crud/resource-crud.component.ts\n            \n            \n                component\n            \n            \n                ResourceCrudComponent\n            \n            \n                75 %\n                (15/20)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-delete-pop/resource-delete-pop.component.ts\n            \n            \n                component\n            \n            \n                ResourceDeletePopComponent\n            \n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-form/resource-form.component.ts\n            \n            \n                component\n            \n            \n                ResourceFormComponent\n            \n            \n                92 %\n                (35/38)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-form/resource-form.ts\n            \n            \n                class\n            \n            \n                ResourceForm\n            \n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-list/resource-list.component.ts\n            \n            \n                component\n            \n            \n                ResourceListComponent\n            \n            \n                90 %\n                (29/32)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-list/resource-list.ts\n            \n            \n                class\n            \n            \n                ResourceList\n            \n            \n                93 %\n                (40/43)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-pop/resource-pop.component.ts\n            \n            \n                component\n            \n            \n                ResourcePopComponent\n            \n            \n                92 %\n                (24/26)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-select/resource-select.component.ts\n            \n            \n                component\n            \n            \n                ResourceSelectComponent\n            \n            \n                75 %\n                (40/53)\n            \n        \n        \n            \n                \n                    packages/data/src/sdk/history.service.ts\n            \n            \n                injectable\n            \n            \n                HistoryService\n            \n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                    packages/data/src/sdk/sdk.service.ts\n            \n            \n                injectable\n            \n            \n                SdkService\n            \n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                    packages/location/src/geocode.service.ts\n            \n            \n                injectable\n            \n            \n                GeocodeService\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    packages/location/src/geocode.service.ts\n            \n            \n                variable\n            \n            \n                google\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/location/src/location-map.component.ts\n            \n            \n                component\n            \n            \n                LocationMapComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    packages/location/src/location-picker.component.ts\n            \n            \n                component\n            \n            \n                LocationPickerComponent\n            \n            \n                72 %\n                (13/18)\n            \n        \n        \n            \n                \n                    packages/location/src/location-search.component.ts\n            \n            \n                component\n            \n            \n                LocationSearchComponent\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    packages/location/src/location.module.ts\n            \n            \n                variable\n            \n            \n                LOCATION_COMPONENTS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/medium-editor/src/medium-editor.component.ts\n            \n            \n                component\n            \n            \n                MediumEditorComponent\n            \n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                    packages/tinymce/src/tinymce/tinymce-settings.ts\n            \n            \n                variable\n            \n            \n                editorSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/tinymce/src/tinymce/tinymce.component.ts\n            \n            \n                component\n            \n            \n                TinymceComponent\n            \n            \n                81 %\n                (13/16)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/calendar.component.ts\n            \n            \n                component\n            \n            \n                CalendarComponent\n            \n            \n                76 %\n                (40/52)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/daterange.component.ts\n            \n            \n                component\n            \n            \n                DaterangeComponent\n            \n            \n                65 %\n                (23/35)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/datetime.component.ts\n            \n            \n                component\n            \n            \n                DatetimeComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/datetime.pipe.ts\n            \n            \n                pipe\n            \n            \n                DatetimePipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/heatmap.component.ts\n            \n            \n                component\n            \n            \n                HeatmapComponent\n            \n            \n                63 %\n                (26/41)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/month.component.ts\n            \n            \n                component\n            \n            \n                MonthComponent\n            \n            \n                66 %\n                (22/33)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/month.component.ts\n            \n            \n                interface\n            \n            \n                Day\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/default-input/default-input.component.ts\n            \n            \n                component\n            \n            \n                DefaultInputComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/default-output/default-output.component.ts\n            \n            \n                component\n            \n            \n                DefaultOutputComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/form.component.ts\n            \n            \n                component\n            \n            \n                FormComponent\n            \n            \n                96 %\n                (27/28)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/form.service.ts\n            \n            \n                injectable\n            \n            \n                FormService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/max-items.pipe.ts\n            \n            \n                pipe\n            \n            \n                MaxItemsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/toggle/toggle.component.ts\n            \n            \n                component\n            \n            \n                ToggleComponent\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/visible-fields.pipe.ts\n            \n            \n                pipe\n            \n            \n                VisibleFieldsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/ec-icons.ts\n            \n            \n                variable\n            \n            \n                ecIcons\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/emoji-icons.ts\n            \n            \n                variable\n            \n            \n                emojiIcons\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/icon.component.ts\n            \n            \n                component\n            \n            \n                IconComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/icon.service.ts\n            \n            \n                injectable\n            \n            \n                IconService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/dynamic-rack/dynamic-rack.component.ts\n            \n            \n                component\n            \n            \n                DynamicRackComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts\n            \n            \n                component\n            \n            \n                DynamicSlotComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/input-errors/input-errors.component.ts\n            \n            \n                component\n            \n            \n                InputErrorsComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/input/input.component.ts\n            \n            \n                component\n            \n            \n                InputComponent\n            \n            \n                82 %\n                (14/17)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/output/output.component.ts\n            \n            \n                component\n            \n            \n                OutputComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/slot-host.directive.ts\n            \n            \n                directive\n            \n            \n                SlotHostDirective\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/group.pipe.ts\n            \n            \n                pipe\n            \n            \n                GroupPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/list-header/list-header.component.ts\n            \n            \n                component\n            \n            \n                ListHeaderComponent\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/list-items/list-items.component.ts\n            \n            \n                component\n            \n            \n                ListItemsComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/list.component.ts\n            \n            \n                component\n            \n            \n                ListComponent\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/pagination/pagination-config.interface.ts\n            \n            \n                class\n            \n            \n                PaginationConfig\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/pagination/pagination.component.ts\n            \n            \n                component\n            \n            \n                PaginationComponent\n            \n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/searchbar/searchbar.component.ts\n            \n            \n                component\n            \n            \n                SearchbarComponent\n            \n            \n                85 %\n                (17/20)\n            \n        \n        \n            \n                \n                    packages/ui/src/loader/loader.component.ts\n            \n            \n                component\n            \n            \n                LoaderComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/loader/loader.service.ts\n            \n            \n                injectable\n            \n            \n                LoaderService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/loader/with-loader.interface.ts\n            \n            \n                interface\n            \n            \n                WithLoader\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/error/error.component.ts\n            \n            \n                component\n            \n            \n                ErrorComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notification.ts\n            \n            \n                class\n            \n            \n                Notification\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notifications.service.ts\n            \n            \n                variable\n            \n            \n                window\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/with-notifications.interface.ts\n            \n            \n                interface\n            \n            \n                WithNotifications\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/pop/pop.component.ts\n            \n            \n                component\n            \n            \n                PopComponent\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/pop/pop.service.ts\n            \n            \n                injectable\n            \n            \n                PopService\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/select/select.component.ts\n            \n            \n                component\n            \n            \n                SelectComponent\n            \n            \n                67 %\n                (21/31)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.interface.ts\n            \n            \n                interface\n            \n            \n                Symbol\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.pipe.ts\n            \n            \n                injectable\n            \n            \n                SymbolPipe\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.pipe.ts\n            \n            \n                injectable\n            \n            \n                SymbolPipe\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.service.ts\n            \n            \n                injectable\n            \n            \n                SymbolService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/focus/focus.directive.ts\n            \n            \n                directive\n            \n            \n                FocusDirective\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/focus/focus.interface.ts\n            \n            \n                interface\n            \n            \n                Focus\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/login-form/login-form.component.ts\n            \n            \n                component\n            \n            \n                LoginFormComponent\n            \n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/menu/menu.component.ts\n            \n            \n                component\n            \n            \n                MenuComponent\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/mockup/mockup.component.ts\n            \n            \n                component\n            \n            \n                MockupComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/tab/tab.component.ts\n            \n            \n                component\n            \n            \n                TabComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/tabs/tabs.component.ts\n            \n            \n                component\n            \n            \n                TabsComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/validators/email.validator.ts\n            \n            \n                variable\n            \n            \n                emailValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/validators/field-validators.ts\n            \n            \n                variable\n            \n            \n                FieldValidators\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/vc/src/editor/editor.component.ts\n            \n            \n                component\n            \n            \n                EditorComponent\n            \n            \n                9 %\n                (6/62)\n            \n        \n        \n            \n                \n                    packages/vc/src/editor/editor.component.ts\n            \n            \n                variable\n            \n            \n                document\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/vc/src/safe-html.pipe.ts\n            \n            \n                pipe\n            \n            \n                SafeHtmlPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/vc/src/toolbar/toolbar.component.ts\n            \n            \n                component\n            \n            \n                ToolbarComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.2\n        \n            @angular/compiler : ^5.2.2\n        \n            @angular/core : ^5.2.2\n        \n            @angular/forms : ^5.2.2\n        \n            @angular/http : ^5.2.2\n        \n            @angular/platform-browser : ^5.2.2\n        \n            @angular/platform-browser-dynamic : ^5.2.2\n        \n            @angular/router : ^5.2.2\n        \n            @ec.components/data : ^0.21.0\n        \n            @ec.components/location : ^0.3.0\n        \n            @ec.components/medium-editor : ^0.2.0\n        \n            @ec.components/style : ^0.10.0\n        \n            @ec.components/tinymce : ^0.2.0\n        \n            ace-builds : ^1.2.9\n        \n            core-js : ^2.5.3\n        \n            ec.sdk : ^0.16.7\n        \n            moment-es6 : ^1.0.0\n        \n            ngx-cookie : ^2.0.1\n        \n            ngx-drag-drop : ^1.0.3\n        \n            rxjs : ^5.5.6\n        \n            stream : 0.0.2\n        \n            tinymce : ^4.7.6\n        \n            x.ui : ^8.0.0-beta.4\n        \n            zone.js : ^0.8.20\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieFactory   (packages/.../auth.module.ts)\n                        \n                        \n                            sortBoolean   (packages/.../sorter.ts)\n                        \n                        \n                            sortNumber   (packages/.../sorter.ts)\n                        \n                        \n                            sortString   (packages/.../sorter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/data/src/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cookieFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ncookieFactory()\n                    \n                \n\n\n\n\n                \n                    \n                            loads CookieModule \n\n\n                    \n                \n            \n        \n\n    packages/core/src/sorter/sorter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sortBoolean\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBoolean(a: , b: )\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts booleans \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortNumber(a: , b: )\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts numbers \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortString\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortString(a: , b: )\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts strings (naturally) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nec.components\nThis is the main project for ec.components, written in Typescript and Angular.\nModules\nThere are three main modules:\n\n*@ec.components/core*: contains core typescript classes (no angular, no datamanager)\n*@ec.components/ui*: contains core ui components (angular, no datamanager)\n*@ec.components/data*: contains ui components for datamanager (angular+datamanager)\n\nThe dependencies stack up from core to data (data > ui > core).\nThe packages sources are located at src/packages.\nThere is also a fourth module called ```*@ec.components/style*`.\nIt contains more sophisticated styles for ui components using x.ui.\nDocumentation\nThe main documentation is located at https://entrecode.github.io/ec.components/.\nYou can find a getting started guide there\nDemo\nA Demo is available at https://components.entrecode.de/.\nDevelopment\nThis project was generated with Angular CLI version 1.0.0-rc.0.\nLerna\nThe repository is a monorepo, managed by lerna.\nDeveloping with Symlinks\nThe start npm script will automatically use the symlinks from src/packages for @ec.components.\nIt also deletes eventually existing node_modules folders inside the packages.\nThis enables you to always use imports like: import  from '@ec.components/'.\nPublishing\n\nRun bootstrap task, this will call lerna bootstrap for core/ui/data packages and their prepublish scripts:npm run bootstrap\nRun publish task and select versions:npm run publish\n\nTo publish a new package, make sure you run npm publish --access=public before running lerna.\nMake sure you update the symlinks.sh and delete-modules.sh scripts to make it work for the demo server.\nImport Structure\nAll imports inside src/packages that import from the same package or another ec.components package must be relative.\n\nImports from the same package should always import the index file \"from '..'\"\nThis implies that all components/classes etc are placed inside a flat subfolder structure.\nThe relative path '..' therefore links to the index.ts where all package exports are defined.\n\n\nImports from another package should always import the relative path to the package index (e.g. ../../packages/core)\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive/pipe/service/class/module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nUse the --env=prod or --env=stag for environment builds.\nCAUTION: you may have to \"es2015\" in tsconfig.json / lib to make UglifyJS work\nsee https://github.com/mishoo/UglifyJS2/issues/659\nBuild Trouble Shooting\nErrors like this (or similar):\nERROR in ./node_modules/@ec.components/data/src/auth/auth.service.ts\nModule build failed: Error: /Users/kon/workspace/0.entrecode/nwb.admin/node_modules/@ec.components/data/src/auth/auth.service.ts is missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.can be fixed by including the ec.components files explicitly (+excluding the test files):\n{\n  \"extends\": \"../tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"../out-tsc/app\",\n    \"baseUrl\": \"./\",\n    \"module\": \"es2015\",\n    \"types\": []\n  },\n  \"exclude\": [\n    \"test.ts\",\n    \"**/*.spec.ts\",\n    \"../node_modules/@ec.components/**/*.spec.ts\"\n  ],\n  \"include\": [\n    \"**/*.ts\",\n    \"../node_modules/@ec.components/**/*.ts\"\n  ]\n}Running unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nBefore running the tests make sure you are serving the app via ng serve.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nImpressum & Datenschutz\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AceModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IconModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IoModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoaderModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediumModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PopModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResourceModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SdkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SelectModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SymbolModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TinymceModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilityModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_imports\n\n\n\ncluster_ListModule_exports\n\n\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_MediumModule\n\n\n\ncluster_MediumModule_declarations\n\n\n\ncluster_MediumModule_exports\n\n\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_exports\n\n\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_providers\n\n\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_exports\n\n\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_exports\n\n\n\ncluster_VcModule\n\n\n\ncluster_VcModule_declarations\n\n\n\ncluster_VcModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->AceComponent -->\n\n{\n    : , : (() => ), : true\n}->AceComponent\n\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n ), : true\n}->MediumEditorComponent -->\n\n{\n    : , : (() => ), : true\n}->MediumEditorComponent\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\n ), : true\n}->SelectComponent -->\n\n{\n    : , : (() => ), : true\n}->SelectComponent\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\n()\n\n()\n\nAuthModule -->\n\n()->AuthModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAuthModule -->\n\nAuthGuard->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent  -->\n\nFilesModule->AssetgroupSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nCrudService\n\nCrudService\n\nDataModule -->\n\nCrudService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\nAssetDirective\n\nAssetDirective\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nAssetgroupSelectComponent\n\nAssetgroupSelectComponent\n\nFilesModule -->\n\nAssetgroupSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nCalendarComponent->FormModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nFormModule -->\n\nDaterangeComponent->FormModule\n\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nFormModule -->\n\nDatetimePipe->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nFormModule -->\n\nHeatmapComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nFormModule -->\n\nMonthComponent->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nFormModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nFormModule->DaterangeComponent \n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nFormModule->DatetimePipe \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nFormModule->HeatmapComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nFormModule->MonthComponent \n\n\n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nPopModule\n\nPopModule\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nGroupPipe\n\nGroupPipe\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nListModule -->\n\nSearchbarComponent->ListModule\n\n\n\nUiModule -->\n\nListModule->UiModule\n\n\n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSearchbarComponent \n\nSearchbarComponent \n\nSearchbarComponent  -->\n\nListModule->SearchbarComponent \n\n\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\nIoModule  -->\n\nUtilityModule->IoModule \n\n\n\nListModule -->\n\nUtilityModule->ListModule\n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nUtilityModule->FocusDirective \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nMockupComponent \n\nMockupComponent \n\nMockupComponent  -->\n\nUtilityModule->MockupComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\nMediumModule\n\nMediumModule\n\nMediumModule -->\n\nMediumEditorComponent->MediumModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumModule->MediumEditorComponent \n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\nPopComponent\n\nPopComponent\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\nSdkService\n\nSdkService\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nUtilityModule -->\n\nFocusDirective->UtilityModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nMockupComponent\n\nMockupComponent\n\nUtilityModule -->\n\nMockupComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\n\n\nVcModule\n\nVcModule\n\nVcModule -->\n\nEditorComponent->VcModule\n\n\n\n\n\nSafeHtmlPipe\n\nSafeHtmlPipe\n\nVcModule -->\n\nSafeHtmlPipe->VcModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nVcModule -->\n\nToolbarComponent->VcModule\n\n\n\n\n\nEditorComponent \n\nEditorComponent \n\nEditorComponent  -->\n\nVcModule->EditorComponent \n\n\n\n\n\nSafeHtmlPipe \n\nSafeHtmlPipe \n\nSafeHtmlPipe  -->\n\nVcModule->SafeHtmlPipe \n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nVcModule->ToolbarComponent \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            21 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        58 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        19 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        14 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        17 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ace   (packages/.../ace.component.ts)\n                        \n                        \n                            backendErrorCodes   (packages/.../errors.ts)\n                        \n                        \n                            collator   (packages/.../sorter.ts)\n                        \n                        \n                            document   (packages/.../editor.component.ts)\n                        \n                        \n                            ecIcons   (packages/.../ec-icons.ts)\n                        \n                        \n                            editorSettings   (packages/.../tinymce-settings.ts)\n                        \n                        \n                            emailAvailable   (packages/.../email-available.validator.ts)\n                        \n                        \n                            emailValidator   (packages/.../email.validator.ts)\n                        \n                        \n                            emojiIcons   (packages/.../emoji-icons.ts)\n                        \n                        \n                            errors   (packages/.../errors.ts)\n                        \n                        \n                            FieldValidators   (packages/.../field-validators.ts)\n                        \n                        \n                            google   (packages/.../geocode.service.ts)\n                        \n                        \n                            LOCATION_COMPONENTS   (packages/.../location.module.ts)\n                        \n                        \n                            window   (packages/.../notifications.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ace/src/ace.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ace:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround that expects ace to be imported somewhere else... \n\n                    \n                \n\n            \n        \n\n    packages/data/src/auth/errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            backendErrorCodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backendErrorCodes:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  2460: {\n    'account_not_found': 'Der Login war ungültig.'\n  }\n}\n                        \n                    \n\n                \n                    \n                        Maps error messages to error codes that come from the backend. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errors:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  emailUnavailable: 'Diese Email ist schon vergeben',\n  required: 'Dieses Feld ist ein Pflichtfeld',\n  pattern: 'Ungültige Eingabe',\n  minlength: 'Die Eingabe ist kurz'\n}\n                        \n                    \n\n                \n                    \n                        Error Messages to show in notifications. \n\n                    \n                \n\n            \n        \n\n    packages/core/src/sorter/sorter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            collator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        collator:     \n\n                    \n                \n                    \n                        \n                            Default value : new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' })\n                        \n                    \n\n                \n                    \n                        Used for natural sorting of strings \n\n                    \n                \n\n            \n        \n\n    packages/vc/src/editor/editor.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        document:     \n\n                    \n                \n\n                \n                    \n                        declares document \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/icon/ec-icons.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ecIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ecIcons:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  { name: 'add' },\n  { name: 'add-circle' },\n  { name: 'alarm' },\n  { name: 'alarm-clock' },\n  { name: 'alarm-silent' },\n  { name: 'align-center' },\n  { name: 'align-justify' },\n  { name: 'align-left' },\n  { name: 'align-right' },\n  { name: 'all-caps' },\n  { name: 'brackets' },\n  { name: 'angle-tool' },\n  { name: 'arrange-1-to-9' },\n  { name: 'arrange-9-to-1' },\n  { name: 'arrange-a-to-z' },\n  { name: 'arrange-z-to-a' },\n  { name: 'arrow-down' },\n  { name: 'arrow-down-left' },\n  { name: 'arrow-down-right' },\n  { name: 'arrow-left' },\n  { name: 'arrow-return' },\n  { name: 'arrow-right' },\n  { name: 'arrow-up' },\n  { name: 'arrow-up-left' },\n  { name: 'arrow-up-right' },\n  { name: 'artboard' },\n  { name: 'asterisk' },\n  { name: 'at-sign' },\n  { name: 'bank' },\n  { name: 'bank-note' },\n  { name: 'banking-debit-machine' },\n  { name: 'barcode' },\n  { name: 'trash' },\n  { name: 'binoculars' },\n  { name: 'bitcoin-coin' },\n  { name: 'bookmark' },\n  { name: 'border-bottom' },\n  { name: 'border-inside' },\n  { name: 'border-inside-vertical' },\n  { name: 'border-inside-horizontal' },\n  { name: 'border-left' },\n  { name: 'border-none' },\n  { name: 'border-outside' },\n  { name: 'border-right' },\n  { name: 'border-top' },\n  { name: 'box' },\n  { name: 'briefcase' },\n  { name: 'bus' },\n  { name: 'graph-pie' },\n  { name: 'scale' },\n  { name: 'whiteboard' },\n  { name: 'graph-plot' },\n  { name: 'calculator' },\n  { name: 'calculator-2' },\n  { name: 'calendar' },\n  { name: 'calendar-check' },\n  { name: 'calendar-close' },\n  { name: 'calendar-pencil' },\n  { name: 'calendar-refresh-2' },\n  { name: 'camera' },\n  { name: 'brightness-1' },\n  { name: 'camera-off' },\n  { name: 'camera-pin' },\n  { name: 'camera-refresh' },\n  { name: 'car-6' },\n  { name: 'dashboard' },\n  { name: 'tape' },\n  { name: 'center-point' },\n  { name: 'chat-bubble-circle' },\n  { name: 'chat-bubble-circle-active' },\n  { name: 'chat-bubble-square' },\n  { name: 'chat-bubble-square-active' },\n  { name: 'chat-bubble-square-2' },\n  { name: 'chat-bubbles-square' },\n  { name: 'check-box' },\n  { name: 'cloud' },\n  { name: 'cloud-disable' },\n  { name: 'cloud-download' },\n  { name: 'cloud-refresh' },\n  { name: 'cloud-upload' },\n  { name: 'cloud-wifi' },\n  { name: 'color-contrast-off' },\n  { name: 'color-contrast-on' },\n  { name: 'color-palette' },\n  { name: 'computer-screen' },\n  { name: 'contact-book' },\n  { name: 'content-book' },\n  { name: 'content-bookmark' },\n  { name: 'filter' },\n  { name: 'layers-hide' },\n  { name: 'layers-show' },\n  { name: 'note' },\n  { name: 'content-view-array' },\n  { name: 'content-view-content' },\n  { name: 'content-view-list' },\n  { name: 'content-view-module' },\n  { name: 'crop' },\n  { name: 'cursor-arrow' },\n  { name: 'cursor-hand' },\n  { name: 'cursor-move' },\n  { name: 'cursor-select-area' },\n  { name: 'cursor-tap' },\n  { name: 'cursor-target' },\n  { name: 'data-download' },\n  { name: 'data-syncing' },\n  { name: 'data-transfer' },\n  { name: 'data-upload' },\n  { name: 'delete' },\n  { name: 'dial-pad' },\n  { name: 'diamond' },\n  { name: 'divide' },\n  { name: 'email' },\n  { name: 'email-read' },\n  { name: 'envelope' },\n  { name: 'equaliser' },\n  { name: 'eraser' },\n  { name: 'expand' },\n  { name: 'expand-2' },\n  { name: 'expand-vertical' },\n  { name: 'expand-horizontal' },\n  { name: 'exposure-level' },\n  { name: 'file-add' },\n  { name: 'file-copy' },\n  { name: 'file-new' },\n  { name: 'file-notes-document' },\n  { name: 'file-notes-new' },\n  { name: 'files' },\n  { name: 'files-thumbs' },\n  { name: 'flash' },\n  { name: 'flash-off' },\n  { name: 'flip-down' },\n  { name: 'flip-left' },\n  { name: 'flip-right' },\n  { name: 'flip-up' },\n  { name: 'focus' },\n  { name: 'focus-off' },\n  { name: 'folder-new' },\n  { name: 'folders' },\n  { name: 'font-color' },\n  { name: 'font-size' },\n  { name: 'format-clear' },\n  { name: 'frame' },\n  { name: 'gradient' },\n  { name: 'hash' },\n  { name: 'health-blood-drop' },\n  { name: 'eye-closed' },\n  { name: 'highlight' },\n  { name: 'hourglass' },\n  { name: 'id-card' },\n  { name: 'inbox' },\n  { name: 'indent-decrease' },\n  { name: 'indent-increase' },\n  { name: 'infinity-loop' },\n  { name: 'interface-alert-circle' },\n  { name: 'interface-information' },\n  { name: 'interface-question-mark' },\n  { name: 'intersect' },\n  { name: 'italic' },\n  { name: 'key' },\n  { name: 'laptop' },\n  { name: 'square' },\n  { name: 'lightbulb' },\n  { name: 'link' },\n  { name: 'link-broken' },\n  { name: 'list-bullets' },\n  { name: 'list-number' },\n  { name: 'location-direction' },\n  { name: 'location-globe' },\n  { name: 'location-gps-off' },\n  { name: 'location-gps-on' },\n  { name: 'location-plan' },\n  { name: 'location-map' },\n  { name: 'location-pin-1' },\n  { name: 'location-pin-2' },\n  { name: 'lock-closed' },\n  { name: 'lock-open' },\n  { name: 'leave' },\n  { name: 'harry-potter' },\n  { name: 'measuring-tool' },\n  { name: 'minus-front' },\n  { name: 'mobile-phone' },\n  { name: 'money-note-coin' },\n  { name: 'move-down' },\n  { name: 'move-left' },\n  { name: 'move-right' },\n  { name: 'move-to-back' },\n  { name: 'move-to-front' },\n  { name: 'move-up' },\n  { name: 'music-note' },\n  { name: 'hamburger' },\n  { name: 'more-horizontal' },\n  { name: 'more-vertical' },\n  { name: 'new-square' },\n  { name: 'outbox' },\n  { name: 'paint-brush' },\n  { name: 'paint-bucket' },\n  { name: 'paint-palette' },\n  { name: 'paint-roll' },\n  { name: 'paperclip' },\n  { name: 'paperplane' },\n  { name: 'paragraph' },\n  { name: 'paragraph-left-to-right' },\n  { name: 'paragraph-right-to-left' },\n  { name: 'paragraph-spacing' },\n  { name: 'pen-tool' },\n  { name: 'pencil' },\n  { name: 'percent' },\n  { name: 'bug' },\n  { name: 'photo-landscape' },\n  { name: 'photo-portrait' },\n  { name: 'photo-view-all' },\n  { name: 'picture-layer' },\n  { name: 'pin' },\n  { name: 'home' },\n  { name: 'power' },\n  { name: 'printer' },\n  { name: 'qr-code' },\n  { name: 'quote-closing' },\n  { name: 'quote-opening' },\n  { name: 'reflect-left' },\n  { name: 'reflect-right' },\n  { name: 'close-x-big' },\n  { name: 'ruler' },\n  { name: 'scale-vertical' },\n  { name: 'scissors' },\n  { name: 'select-area' },\n  { name: 'send-to-back' },\n  { name: 'send-to-front' },\n  { name: 'database' },\n  { name: 'settings-slider' },\n  { name: 'share' },\n  { name: 'megaphone' },\n  { name: 'rss' },\n  { name: 'signal' },\n  { name: 'signal-tower' },\n  { name: 'shear-left' },\n  { name: 'shear-right' },\n  { name: 'shopping-bag-alt' },\n  { name: 'shopping-basket' },\n  { name: 'shopping-cart' },\n  { name: 'shrink' },\n  { name: 'shrink-diagonal' },\n  { name: 'shrink-horizontal' },\n  { name: 'shrink-vertical' },\n  { name: 'command' },\n  { name: 'sign-euro' },\n  { name: 'sign-ramp-left' },\n  { name: 'sign-ramp-right' },\n  { name: 'skull' },\n  { name: 'sliders' },\n  { name: 'slider' },\n  { name: 'small-caps' },\n  { name: 'speaker-volume-decrease' },\n  { name: 'speaker-volume-high' },\n  { name: 'speaker-volume-increase' },\n  { name: 'speaker-volume-low' },\n  { name: 'speaker-volume-off' },\n  { name: 'spelling-check' },\n  { name: 'spray-paint' },\n  { name: 'strike-through' },\n  { name: 'subscript' },\n  { name: 'substract' },\n  { name: 'sunny' },\n  { name: 'superscript' },\n  { name: 'switch-left' },\n  { name: 'switch-right' },\n  { name: 'switches' },\n  { name: 'bluetooth' },\n  { name: 'wifi' },\n  { name: 'repeat' },\n  { name: 'synchronize' },\n  { name: 'switch' },\n  { name: 'price-tag' },\n  { name: 'tank' },\n  { name: 'text' },\n  { name: 'text-eraser' },\n  { name: 'rotate-right' },\n  { name: 'rotate-left' },\n  { name: 'text-vector' },\n  { name: 'toolbox' },\n  { name: 'underline' },\n  { name: 'unite' },\n  { name: 'user' },\n  { name: 'vector-circle' },\n  { name: 'vector-line' },\n  { name: 'vector-square' },\n  { name: 'video-call' },\n  { name: 'video-clip' },\n  { name: 'eject' },\n  { name: 'next' },\n  { name: 'pause' },\n  { name: 'play' },\n  { name: 'previous' },\n  { name: 'stop' },\n  { name: 'heart-outlined' },\n  { name: 'star-outlined' },\n  { name: 'thumbs-down' },\n  { name: 'thumbs-up' },\n  { name: 'zoom-in' },\n  { name: 'zoom-out' },\n  { name: 'glasses' },\n  { name: 'save' },\n  { name: 'chevron-left' },\n  { name: 'chevron-right' },\n  { name: 'move-vertical' },\n  { name: 'drag-handle' },\n  { name: 'user-chat' },\n  { name: 'text-input' },\n  { name: 'tablet' },\n  { name: 'company' },\n  { name: 'android' },\n  { name: 'apple' },\n  { name: 'facebook' },\n  { name: 'google' },\n  { name: 'linkedin' },\n  { name: 'twitter' },\n  { name: 'xing' },\n  { name: 'youtube' },\n  { name: 'find' },\n  { name: 'business-man' },\n  { name: 'factory' },\n  { name: 'building' },\n  { name: 'fax' },\n  { name: 'globe' },\n  { name: 'phone' },\n  { name: 'close-x-circle' },\n  { name: 'ticket' },\n  { name: 'key-enter' },\n  { name: 'key-left' },\n  { name: 'key-right' },\n  { name: 'key-shift' },\n  { name: 'img' },\n  { name: 'smiley' },\n  { name: 'arrow-next' },\n  { name: 'arrow-prev' },\n  { name: 'wand' },\n  { name: 'h-align-left' },\n  { name: 'h-align-middle' },\n  { name: 'h-align-right' },\n  { name: 'v-align-bottom' },\n  { name: 'v-align-middle' },\n  { name: 'v-align-top' },\n  { name: 'flip-h' },\n  { name: 'flip-v' },\n  { name: 'graph-bar' },\n  { name: 'check' },\n  { name: 'layer-down' },\n  { name: 'layer-up' },\n  { name: 'undo' },\n  { name: 'redo' },\n  { name: 'stackoverflow' },\n  { name: 'kununu' },\n  { name: 'totop' },\n  { name: 'shopping-bag' },\n  { name: 'profile-circle' },\n  { name: 'heart-filled' },\n  { name: 'github' },\n  { name: 'glue' },\n  { name: 'adhesive-tape' },\n  { name: 'transparent' },\n  { name: 'recycling' },\n  { name: 'dumbbell' },\n  { name: 'instagram' },\n  { name: 'eye-open' },\n  { name: 'water-bottle' },\n  { name: 'close-x' },\n  { name: 'star-filled' },\n  { name: 'clock' },\n  { name: 'appointment' },\n  { name: 'save-date' },\n  { name: 'whistle' },\n  { name: 'weight' },\n  { name: 'share-alt' },\n  { name: 'coin-transfer' },\n  { name: 'toggle-caret' },\n  { name: 'config' },\n  { name: 'server' },\n  { name: 'undo-2' },\n  { name: 'filter-2' },\n  { name: 'article' },\n  { name: 'bold' },\n  { name: 'bigger-text' },\n  { name: 'checkmark' },\n  { name: 'cross' },\n  { name: 'img-center' },\n  { name: 'img-full' },\n  { name: 'img-left' },\n  { name: 'smaller-text' },\n  { name: 'checkmark-2' }\n]\n                        \n                    \n\n                \n                    \n                        Contains all icons that are available in ec-icons font. \n\n                    \n                \n\n            \n        \n\n    packages/tinymce/src/tinymce/tinymce-settings.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            editorSettings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorSettings:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  theme: 'modern',\n  menubar: false,\n  branding: false,\n  resize: true,\n  skin: false,\n  plugins: [\n    'paste template autoresize fullscreen code link table visualblocks autolink lists contextmenu textcolor colorpicker'\n  ],\n  autoresize_min_height: 300,\n  autoresize_max_height: 800,\n  content_css: [\n    'https://icons.entrecode.de/ec-icons-3.0.0.min.css'\n  ],\n  paste_as_text: true,\n  table_toolbar: false,\n  table_default_attributes: {\n    class: 'table-grid'\n  },\n  table_class_list: [\n    { title: 'grid', value: 'table-grid' },\n  ],\n  // templates: [],\n  textcolor_map: [\n    '37474F', 'Text',\n    '879195', 'Text Light',\n    '00B0FF', 'Link',\n    'FF5353', 'Super',\n    'FFFF8D', 'Highlight',\n    'FFFFFF', 'Weiß'\n  ],\n  link_class_list: [\n    { title: 'einfacher link', value: '' },\n    { title: 'Normaler Button', value: 'btn' },\n    { title: 'Super Button', value: 'btn super' },\n    { title: 'Sekundärer Button', value: 'btn minor' }\n  ],\n  style_formats: [\n    { title: 'H2 - Titel', block: 'h2' },\n    { title: 'H3 - Untertitel', block: 'h3' },\n    { title: 'H4 - Überschrift 1', block: 'h4' },\n    { title: 'H5 - Überschrift 2', block: 'h5' },\n    { title: 'Einfacher Absatz', block: 'p' },\n    { title: 'Einleitung', block: 'p', classes: 'lead' },\n    { title: 'Quellenangabe', inline: 'small' },\n    { title: 'Checkliste', selector: 'ul', classes: 'v-checklist' },\n    { title: 'Frage', selector: 'p', classes: 'v-question' },\n    { title: 'Antwort', selector: 'p', classes: 'v-reply' }\n  ],\n  formats: {\n    alignleft: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-left'\n    },\n    aligncenter: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-center'\n    },\n    alignright: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-right'\n    },\n    alignjustify: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-full'\n    }\n  },\n  toolbar: 'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | forecolor | table | template | bullist numlist | link internal image youtube | removeformat | code | fullscreen',\n  setup: (editor) => {\n\n    editor.addButton('youtube', {\n      icon: 'media',\n      onclick: function (edit, element) {\n        const window = editor.windowManager.open({\n          title: 'Youtube einfügen',\n          body: [{\n            type: 'textbox',\n            name: 'yt',\n            label: 'Youtube-Url/ID'\n          }],\n          onsubmit: function (e) {\n            const yt = e.data.yt;\n\n            if (yt) {\n              const ytUrl = /(?:https?:\\/\\/(?:[a-z]+.)?)(?:youtu\\.?be(?:\\.com)?\\/)(?:embed\\/)?(?:(?:(?:(?:watch\\?)?(?:time_continue=(?:[0-9]+))?.+v=)?([a-zA-Z0-9_-]+))(?:\\?t\\=(?:[0-9a-zA-Z]+))?)/g.exec(yt);\n              const url = 'https://www.youtube.com/embed/' + (ytUrl ? ytUrl[1] : yt) + '?feature=oembed&rel=0';\n              editor.insertContent('');\n            }\n          }\n        });\n      }\n    });\n\n    // TODO\n    /*editor.addButton('image', {\n      icon: 'image',\n      onclick: function (edit, element) {\n        const id = Date.now();\n        const window = editor.windowManager.open({\n          title: 'Bild/Datei einfügen',\n          body: [{\n            type: 'container',\n            html: '' +\n            'Alt-Text' +\n            '' +\n            'Text' +\n            '' +\n            '' +\n            ' automatische Breite'\n          }],\n        });\n      }\n    });*/\n  }\n}\n                        \n                    \n\n                \n                    \n                        Default settings for tinymce editor. \n\n                    \n                \n\n            \n        \n\n    packages/data/src/auth/email-available.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : (control: FormControl, delay: number = 500) => {\n  /*return Datamanager.api().emailAvailable(control.value).then((available) => {\n    if (available) {\n      return null;\n    }\n    return { emailUnavailable: true };\n  });*/\n}\n                        \n                    \n\n                \n                    \n                        TODO use this.sdk.accounts.emailAvailable \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/utility/validators/email.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailValidator:     ValidatorFn\n\n                    \n                \n                    \n                        \n                            Type :     ValidatorFn\n\n                        \n                    \n                    \n                        \n                            Default value : Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n                        \n                    \n\n                \n                    \n                        Validates an email. Used for email inputs \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/icon/emoji-icons.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emojiIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emojiIcons:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { name: 'add', content: '➕' },\n    { name: 'close', content: '❌' },\n    { name: 'bitcoin-coin', content: '&#x1F4B0;' },\n    { name: 'bookmark', content: '&#x1F516;' },\n    { name: 'bus', content: '&#x1F68C;' },\n    { name: 'calendar', content: '&#x1F4C5;' },\n    { name: 'camera', content: '&#x1F4F7;' },\n    { name: 'check-box', content: '✅' },\n    { name: 'cloud', content: '☁' },\n    { name: 'computer-screen', content: '&#x1F5A5;' },\n    { name: 'note', content: '&#x1F3B5;' },\n    { name: 'email', content: '&#x1F4E7;' },\n    { name: 'find', content: '&#x1F50D;' }\n]\n                        \n                    \n\n                \n                    \n                        Contains fonts using emojis. \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/utility/validators/field-validators.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FieldValidators\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FieldValidators:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  email: emailValidator\n}\n                        \n                    \n\n                \n                    \n                        Groups together all validators that are meant to be used on fields. \n\n                    \n                \n\n            \n        \n\n    packages/location/src/geocode.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        declares google namespace \n\n                    \n                \n\n            \n        \n\n    packages/location/src/location.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOCATION_COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOCATION_COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    LocationMapComponent,\n    LocationSearchComponent,\n    LocationPickerComponent,\n]\n                        \n                    \n\n                \n                    \n                        The components of this module \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/notifications/notifications.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            window\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        window:     \n\n                    \n                \n\n                \n                    \n                        Workaround to get window without typescript complaining \n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial.html":{"url":"additional-documentation/project-setup-tutorial.html","title":"additional-page - Project Setup Tutorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up a new project with ec.components\nThis tutorial will show you how to set up a new project with the ec.components.\n1. Prequisites\nInstall angular-cli globally:\nnpm install -g @angular/cliThe following versions have been used for this tutorial:\n\n@angular/cli: 1.3.2\n@angular/animations: 4.3.6\n@angular/common: 4.3.6\n@angular/compiler: 4.3.6\n@angular/core: 4.3.6\n@angular/forms: 4.3.6\n@angular/http: 4.3.6\n@angular/platform-browser: 4.3.6\n@angular/platform-browser-dynamic: 4.3.6\n@angular/router: 4.3.6\n@angular/cli: 1.3.2\n@angular/compiler-cli: 4.3.6\n@angular/language-service: 4.3.6\ntypescript: 2.4.2\n\nYou can lookup your versions with ng --version\n2. Generate new Project\nng new ec-project --prefix ec-admin --routing true --style scssMake sure you replace ec-project with your project name and the prefix ec-admin with a project related shorthand symbol.\nMore info on the options for new.\n3. Install @ec.components/data\ncd ec-project\nyarn add @ec.components/data --save\nyarn add @ec.components/style --saveThis will install the data package which depends on ui and core packages.\nThe style package contains styles for ui and data.\n4. Import Styles\nInto your styles.scss, import the following styles:\n@import \"~xlcss/sass/xlcss.scss\";\n@import \"~x.ui/src/_config\";\n@import \"~x.ui/src/x.ui-sandbox.scss\";\n@import \"~@ec.components/style/components.scss\";5. Setup environment\nIn src/environments, you can find the different environment files.\nBy Default, there is a dev and a prod environment. For this tutorial, those two should be enough. We will use the dev environment for dev and staging and the prod environment for live. You could also add more environments, for more information, look here. \nsrc/environments/environment.ts:\nexport const environment = {\n  production: false,\n  environment: 'stage', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-dev-client' // your clientID\n};src/environments/environment.prod.ts:\nexport const environment = {\n  production: true,\n  environment: 'live', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-live-client' // your clientID\n};The .prod environment will be used when running ng build for production.\nThe client should use token method body. The callback URL does not matter.\n6. Add DataModule\nGo to src/app/app.module and add DataModule to your imports:\nimport { DataModule } from '@ec.components/data';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    DataModule.forEnvironment(environment),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Here we are importing the DataModule along with the environment to then import it into our AppModule with the forEnvironment method.\n7. Add --ssl flag\nin your package.json, edit your start script to look like this:\n\"start\": \"ng serve --ssl\",Without the --ssl flag, the authorization won't work, because it enforces https.\n8. Add a component\ne.g. add to src/app/app.component.html:\nThis assumes that the model muffin exists inside the datamanager provided through your environment.\n9. Run the fun\nThats it! Now you can run the app using:\nnpm run startnow navigate to https://localhost:4200\n10. Add Notifications\nTo your app.component, you can add a global notification component, outside of your routing:\nThis will display all messages sent by the components or your own modules.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/routes.html":{"url":"additional-documentation/project-setup-tutorial/routes.html","title":"additional-page - Routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding Routes\nThis short tutorial demonstrates how to quickly generate routes with components.\nIn the following tutorials, refer to this when you are called to create a new route.\n1. Create Component\nGenerate a new component\nng generate component muffinsAdd template to src/app/muffins/muffins.component.html\n2. Add a Route\nsrc/app/app-routing.module.ts:\nimport { MuffinsComponent } from './muffins/muffins.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: []\n  },\n  {\n    path: 'muffins',\n    component: MuffinsComponent\n  }\n];3. Run the Route\nNow you can access the muffin crud at https://localhost:4200/muffins\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/authorization.html":{"url":"additional-documentation/project-setup-tutorial/authorization.html","title":"additional-page - Authorization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-fields.html":{"url":"additional-documentation/project-setup-tutorial/custom-fields.html","title":"additional-page - Custom Fields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustom Field Configuration\nAdd a model config\nYou can configure a models behaviour over the ModelConfigService.\nIt is recommended to configure a model in a parent component of all possible ec-crud lists or nested forms.\nexport class MuffinsComponent {\n  constructor(private modelConfig: ModelConfigService) {\n    moment.locale('de'); //set moment locale\n\n    this.modelConfig.set('muffin', {\n      fields: {\n        pictures: {\n          label: 'Bilder' //this label is shown above the form field and in the table header\n        },\n        name: {\n          label: 'Muffin Name',\n          group: (name) => {\n            return name[0].toUpperCase() //the return value is used to show group headers in a sorted list\n          },\n          required: true //when required, a new entry form cannot be saved without a value set for the field\n        },\n        _created: { //you can also access the system properties\n          label: 'Erstellt',\n          form: false, //this will hide the field inside the form\n          group: (value) => moment(value).format('YYYY')\n        },\n        amazement_factor: {\n          label: 'Amazement Faktor',\n          display: (value) => { //this will transform the value for output e.g. in a list cell\n            return (value * 10) + '%'\n          },\n          group: (value) => {\n            return value > 5 ? 'Größer als 50%' : 'Kleiner als 50%';\n          },\n          validate: (value) => { //this function will run when validating the value inside a form\n            if (typeof value !== 'number') {\n              return; //value is valid\n            }\n            if (value  10) {\n              return 'Darf maximal 10 sein';\n            }\n          }\n        },\n      }\n    });\n}Using custom inputs and outputs\n1. Create Custom Input Component\nng g c custom-inputThis component will serve as a container for all possible custom input fields.\n2. Extend InputComponent (custom-input.component.ts)\nTo make the current field information available to the template, you need to extend InputComponent from @ec.components/ui:\nimport { Component } from '@angular/core';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'clubapp-custom-input',\n  templateUrl: './custom-input.component.html',\n  styleUrls: ['./custom-input.component.scss']\n})\nexport class CustomInputComponent extends InputComponent {\n}CMD+Click on InputComponent to see which properties you can now use!\n3. Add Markup (custom-input.component.html)\nNow we can decide which custom input should be used, based on e.g. the fields view value:\n\n  \n  \n    \n  \n  \n     -->\n  \nOf course you could also switch based on property name or type, depending on your application.\nThe id property of field is referenced in the label of the form. By adding it to the input makes sure your label click enters the input.\n4. Add CustomInputComponent to entryComponents:\nBecause the custom component will be loaded dynamically, your module needs to declare it as entryComponent:\n@NgModule({\n  entryComponents: [\n    CustomInputComponent\n  ]\n  /** more stuff **/\n})\nexport class AppModule {\n}5. Add CustomInputComponent to field config:\nNow you can add the Component as input to your field config:\nthis.modelConfig.set('muffin', {\n      fields: {\n        url: {\n          label: 'URL',\n          view: 'speakingurl',\n          input: CustomInputComponent\n        },\n        openingHours: {\n          label: 'Öffnungszeiten',\n          view: 'openingHours',\n          input: CustomInputComponent\n        }\n})By changing the view option, we can now decide which case will be met!\nCustom Form Controls\nNow what if you want to use a custom form control that does not rely on primitve inputs like number or text?\nIn the above custom-input.component template, we use  with a formControl input.\nTo have access to the form control's value, you need to provide a ControlValueAccessor:\nimport { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'ec-opening-hours',\n  templateUrl: './opening-hours.component.html',\n  styleUrls: ['./opening-hours.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OpeningHoursComponent),\n      multi: true\n    }\n  ]\n})\nexport class OpeningHoursComponent extends InputComponent implements ControlValueAccessor {\n\n  writeValue(value: any) {\n    console.log('received value', value);\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n\n}Now you can implement your own logic and call propagateChange when you change the value from your component, and react to change via the writeValue method!\nYou now could also use your component with ngModel or formControl in another context!\nMore information on this pattern: https://blog.thoughtram.io/angular/2016/07/27/custom-form-controls-in-angular-2.html\nUPDATE: Custom Fields without wrapper\nYou can now also use custom components as input directly without needing to wrap them explicitly.\nWhat you need to is:\n\nExtend DefaultInputComponent\n\nexport class JsonEditorComponent extends extends DefaultInputComponent\nadd the input component as member variable:\n\n/** Form input component */\ninput: InputComponent;and propagate the change to the input as well:\nthis.propagateChange(this.value);\nif (this.input) { // this is the important part\n this.input.propagateChange(this.value);\n}input will be defined when the component is used as input component inside ec-form.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{"url":"additional-documentation/project-setup-tutorial/adding-new-packages.html","title":"additional-page - Adding New Packages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding a new package\nTo add a new package to @ec.components, follow this guide!\n1. Create folder in packages\nCreate a new folder, e.g. mkdir packages/medium-editor\n2. init npm\ncd packages/medium-editor && npm init\n\nMake sure to name the package scoped: ```@ec.components/*`\nAdd dependencies according to your needs, e.g. angular etc.\n\n3. Create src folder\nCreate a src folder and add your super cool typescript code.\n\nMake sure your package.json main file is correct.\nMake sure you have all dependencies up to date.\n\n4. add package to symlinks.sh\n\nAdd your package name to the symlinks script.\n\n5. add package to delete-modules.sh script\n\nAdd your package name to the delete-modules script.\n\n6. add package to main package.json dependencies\n\nKeep version up to date (or use * as wildcard)\nrun npm i\n\n7. add package to lerna.json\n\nThis integrates the package to the bootstrap/publish cycle of lerna.\n\n8. Manually Publish package the first time\nBefore being able to publish with lerna, you have to publish it manually the first time:\nnpm publish --access=publicsee https://docs.npmjs.com/cli/access#details.\n9. Add Demo\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/publishing.html":{"url":"additional-documentation/project-setup-tutorial/publishing.html","title":"additional-page - Publishing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui.html":{"url":"additional-documentation/ui.html","title":"additional-page - UI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUI Components Overview\nNow that the Core classes were discussed, lets have a look at its application in the ui components.\nThe ui components, which lay inside the ui package are all basic angular components.\nThey are API agnostic, meaning they do not contain any datamanager logic (or similar).\nAPI related components are meant to inherit from the base ui components to eliminate redundancies.\nInstallation\nnpm i @ec.components/uiDemo\nTBD:\n\nList\nCustom Cell Components\nTransform fields\n\n\nForm\nCustom Field Components\nInline Forms\n\n\nLogin\nPop\nTabs\nSelect\n\nNotifications\n\nLoader\nMenu\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/icons.html":{"url":"additional-documentation/ui/icons.html","title":"additional-page - Icons","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIcon\nDisplays an icon:\nThe default icon set uses ec-icons. You have to embedd them to your index.html (or similar):\n  Using another icon set\nYou can also use other icons:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.use(emojiIcons);\n    }\n}Overriding icons\nYou can also override the current icon registry:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.set(emojiIcons);\n    }\n}This will override the icon registry with the given icons, but keep the rest.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/notificationscomponent.html":{"url":"additional-documentation/ui/notificationscomponent.html","title":"additional-page - NotificationsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNotifications\nThe Notifications Module is a combination of the NotificationsService and the NotificationsComponent.\nSimple Usage\n\nPlace the component somewhere in your app template:\n\n\nEmit notifications via the service\n\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  showNotification() {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        message: 'Das ist die Beschreibung'\n      });\n  }\n\n  doSomethingRisky() {\n      return Promise.reject('Fehler')\n      .catch((err) => {\n          this.notifications.emit({\n              error: err, // passing the error Object\n              title: 'Fehler!'\n          })\n      })\n  }\n}The given type will be added as class. The classes that are available by default can be looked up here.\nAdvanced Usage\nYou can also use multiple ec-notifications at different places:\n\n\nA\nBAll you have to do, is pass the instance of the component that should display the notification via the host property:\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  emit(host) {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        host: host\n      });\n  }\n}Hiding previous errors\nHere is an example usage of a typical success/error handling.\nIt features hiding previous notifications. We recommended you to use the WithNotifications interface for that case.\nexport class MuffinComponent implements WithNotifications {\n  /** Recent Error notification */\n  notifications: Notification[] = [];\n\nconstructor(\n    public bakery:BakeryService,\n    public notificationService: NotificationsService,\n    )\n\n  bake() {\n    this.bakery.bake().then(()=> {\n        this.notificationService.emit({\n            title: 'Muffin was baken!',\n            hide: this.notifications // this will hide all preceding notifications\n        })\n    }).catch(error=>{\n        this.notificationService.emit({\n            title: 'Error while baking',\n            sticky: true,\n            hide: this.notifications, // this will hide all preceding notifications\n            replace: this.notifications // this will replace the given array with the new notification\n        })\n    });\n  }\n}The hide option is useful to hide obsolete errors. E.g. If you successfully log in after one failiure, the sticky error notification of the first attempt will be hidden. This enables you to keep errors messages as long as they are needed.\nInstead of replace, you could also use append (see notification.component.ts for implementation).\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/loadercomponent.html":{"url":"additional-documentation/ui/loadercomponent.html","title":"additional-page - LoaderComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLoader\nThe loader can be used to indicate any kind of loading activity\nTemplate\n\n\nGlobal Loader\nLocal LoaderThe default classes can be found here.\nUsage\nYou can use a global loader that handles every action or use multiple local loaders:\nimport { LoaderComponent, LoaderService } from '@ec.components/ui';\nexport class MyApp {\n  @ViewChild('globalLoader') globalLoader: LoaderComponent;\n  @ViewChild('localLoader') localLoader: LoaderComponent;\n  constructor(private loaderService: LoaderService) {\n      this.loaderService.use(this.globalLoader); // set global loader\n  }\n  globalLoader() { // When not passing a loader to .wait, the global loader (set by .use) is used.\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)));\n  }\n  localLoader() {\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)), this.localLoader);\n    // this.localLoader.wait(new Promise((resolve) => setTimeout(resolve, 2000))); // alternative way\n  }\n}The advantage of local loaders is that you can place them in specific places of your template to only \"disable\" a part of your site while loading and not the whole page.\nSee the commented out line in localLoader for a direct way to trigger a loader without the service.\nHow it works\nEach time .wait is called on the LoaderService, the target loader throws the given promise on a stack. When all promises on the stack have been resolved, the loader is hidden. This is better than just a boolean switch because multiple loading activies do not interfere with each other.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/listcomponent.html":{"url":"additional-documentation/ui/listcomponent.html","title":"additional-page - ListComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nList\nThe List is one of the main components to work with.\nThe basic idea is to display collections of data in a structured but flexible way.\nYou can create a new List like this:\nthis.trees = new List(\n//first argument: Array of Objects\n[{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}],\n//second (optional) argument: ListConfig\n{\n  fields: {\n    name: {\n      label: 'Name'\n    },\n    height: {\n      label: 'Height',\n      group: (h) => h > 10 ? 'Higher than 10m' : 'Lower than 10m'\n    },\n    fruits: {\n      label: 'Has Fruits?',\n      display: (value) => value ? 'yes' : 'no'\n    },\n  }\n})This is how you display a List instance into your template:\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/formcomponent.html":{"url":"additional-documentation/ui/formcomponent.html","title":"additional-page - FormComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nForm\nTBD\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/logincomponent.html":{"url":"additional-documentation/ui/logincomponent.html","title":"additional-page - LoginComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogin Form\nThe Login Form UI component is meant to be extended by a component that communicates with an API.\n    \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/popcomponent.html":{"url":"additional-documentation/ui/popcomponent.html","title":"additional-page - PopComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPop\nA Pop is not just a modal, but a section of markup that appears (pops) anywhere and with any style on your page.\nUsage\n\n    \n        Close\n    \n    \n        Some body content\n    \n    \n        This is the footer\n    \n\nShow popThe default pop classes can be looked up here.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/tabscomponent.html":{"url":"additional-documentation/ui/tabscomponent.html","title":"additional-page - TabsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTabs\nThis is how you use Tabs:\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \nTODO:\n\n*ngIf\nSlot for templated Tab Header\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/selectcomponent.html":{"url":"additional-documentation/ui/selectcomponent.html","title":"additional-page - SelectComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelect\nYou can pass an array of items that will be used for a selection instance.\n\n\n{{values | json}}TODO: update\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/data.html":{"url":"additional-documentation/data.html","title":"additional-page - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Components Overview\nDemo\n\nSdkService\nModelConfig\nHow to set up custom fields (input/output)\n\n\nentry-list\nentry-form\nentry-select\ncrud\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/medium.html":{"url":"additional-documentation/medium.html","title":"additional-page - Medium","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/medium-editor\nThis package wraps the medium-editor as an Angular Directive.\nInstallation\n\nInstall package\n\nnpm install @ec.components/medium-editor --save\nAdd Module\n\nimport { MediumModule } from '@ec.components/medium-editor';\n\n@NgModule({\n  imports: [\n    MediumModule\n  ]\n})\nexport class AppModule {\n}\nUse it\n\n \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinymce.html":{"url":"additional-documentation/tinymce.html","title":"additional-page - TinyMCE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/tinymce\nThis package wraps the tinymce editor as an Angular Component.\nInstallation\n\nInstall package\n\nnpm install @ec.components/tinymce --save\nAdd Module\n\nimport { TinymceModule } from '@ec.components/tinymce';\n\n@NgModule({\n  imports: [\n    TinymceModule\n  ]\n})\nexport class AppModule {\n}\nUse it\n\n \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ace.html":{"url":"additional-documentation/ace.html","title":"additional-page - Ace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/ace\nThis package wraps the ace editor as an Angular Component.\nInstallation\n\nInstall package\n\nnpm install @ec.components/ace --save\nAdd Module\n\nimport { AceModule } from '@ec.components/ace';\n\n@NgModule({\n  imports: [\n    AceModule\n  ]\n})\nexport class AppModule {\n}\nAdd CDN\n\nEither add the cdn src to your index.html:\n  \n`Or import from ace-builds (in app.module):\nimport 'ace-builds/src-noconflict/ace.js';When importing, you also need to import all extensions/modes/themes that you want to use manually.\n\nUse it\n\n \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes.html":{"url":"additional-documentation/core-classes.html","title":"additional-page - Core Classes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction\nThis is the Tutorial for ec.components.\nIt will take a look at all the major concepts in a didactic order.\nHINT: if you are looking for more information than this tutorial, have a look at the tests or the\nDemos!\nCore Classes\nThe core classes, which lay inside the core package are the abstract base for all components.\nThey are typescript only, without using any angular or datamanager code.\nInstead of EventEmitters there the Observables are served via RxJS subjects.\nInstallation\nnpm i @ec.components/core\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/field.html":{"url":"additional-documentation/core-classes/field.html","title":"additional-page - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nField\nA Field represents a property of an Object, without a specific value.\nIt is used to describe a column or field of one or multiple equally structured objects.\nThe field config (see FieldConfigProperty) can contain different transformation methods, such as:\n\nresolve: This method is used to resolve the field value from the object body.\nIt runs before all other transformation methods.\ndisplay: Transforms the resolved value to a human readable output. It is used for e.g. in list cells.\ngroup: Should return a value that is suitable for grouping multiple different values together, like in a list.\n\nExample Usage:\nconst field = new Field('name', {\n    resolve: (body) => body.value.name,\n    display: (value) => value.toUpperCase(),\n    group: (value) => value.length + ' Buchstaben',\n    sort: (value) => value.length\n    });\nconst name = field.resolve({value:{name:'bobby'}}); // 'bobby'\nfield.display(name); // => 'Bobby'\nfield.group(name); // => '5 Buchstaben'\nfield.sort(name); // => 5The above example is of course only viable to show the concept.\nWhen using the components as a whole, those methods will be called automatically from Item, List or Form.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/item.html":{"url":"additional-documentation/core-classes/item.html","title":"additional-page - Item","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nItem\nThe foundation for all entities is the Item class.\nIt consists of a body (value) and a config (see ItemConfig).\nIt can be used with arbitrary body values but is mainly thought to be a wrapper for objects.\nPrimitive use:\nconst primitive = new Item('a');\nprimitive.resolve(); //'a'Default use:\nconst tommy = new Item({ name: 'tommy' });\ntommy.resolve('name'); //'tommy'\ntommy.display('name'); //'tommy'\ntommy.group('name'); //'tommy'\ntommy.sort('name'); //'tommy'Item with fields definition\nWhen using it with objects, it can be passed a config (see ItemConfig) to set up its field config (see FieldConfig.\nEach item can call directly call a transformation function for a field:\nconst bobby = new Item({ value: { name: 'bobby' } }, {\n  fields: {\n    name: {\n      resolve: (body) => body.value.name,\n      display: (value) => value.toUpperCase(),\n      group: (value) => value.length + ' Buchstaben',\n      sort: (value) => value.length\n    }\n  }\n});\nbobby.resolve('name'); //'bobby'\nbobby.display('name'); //'Bobby'\nbobby.group('name'); //'5 Buchstaben'\nbobby.sort('name'); //5Identifiers and labels\nAn Item also brings the concept of identifiers and labels:\nconst e = new Item({ nr: '#AYQ', title: 'Wurst' }, { identifier: 'nr', label: 'title');\ne.id(); //'#AYQ'\ne.display(); //'Wurst'Saving items\nYou can set up a callback that is invoked when calling item.save():\nconst n = new Item(1, { onSave: (item, body) => body+1 });\nn.save();\nn.resolve(); //2\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/form.html":{"url":"additional-documentation/core-classes/form.html","title":"additional-page - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nForm\nForm is an Item with extra functions:\n\ninstantiates fields to iterate over\ngetters for fields and property values, including prefills.\n\nconst tommy = new Form({ name: 'tommy' }); //init without config\ntommy.getValue('name')); //'tommy'\nconst bobby = new Form(null, { fields: { name: { prefill:'bobby' }}}); //init with config only\ntommy.getValue('name')); //'bobby'\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/collection.html":{"url":"additional-documentation/core-classes/collection.html","title":"additional-page - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCollection\nCollection is a more sophisticated Array:\nconst collection = new Collection([1, 2, 3]);\ncollection.has(1); //true\ncollection.has(4); //false\ncollection.add(4);\ncollection.remove(4);\ncollection.index(1); //0\ncollection.addAll([10,11,12]); //true\ncollection.hasAll([1,10,11]); //true\ncollection.removeAll();It is the Parent Class of List and Selection.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/pagination.html":{"url":"additional-documentation/core-classes/pagination.html","title":"additional-page - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPagination\nPagination can be used to keep track of the pages of arbitrary items.\nconst pagination = new Pagination({ size: 10 });\npagination.setTotal(50); //tells the pagination that it should paginate over 50 items.\npagination.getPages(); //5See list.ts/list.component for example usage.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/list.html":{"url":"additional-documentation/core-classes/list.html","title":"additional-page - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nList\nList is a Collection with list specific features:\n\nIt instantiates each array value as an Item\nIt instantiates each field property config as a Field.\nIt supports getting items by identifier via the id method (if identifier is set)\nIt supports filtering, sorting, grouping and pagination.\n\nthis.trees = new List([{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}, {\n  name: 'Cinnamon',\n  height: 10,\n  fruits: true\n}], {\n  size: 3,\n  fields: {\n    name: {\n      label: 'Name',\n      view: 'string',\n      required: true,\n      input: CoolStringComponent,\n      output: CoolStringComponent\n    },\n    height: {\n      label: 'Höhe',\n      group: (h) => h > 10 ? 'Höher als 10m' : 'Niedriger als 10m',\n      view: 'number',\n      required: true,\n      validate: (value) => {\n        if (value  value ? 'ja' : 'nein',\n      view: 'boolean'\n    },\n  },\n});Here is an easy example of using a List instance in a template with Angular:\n\n    \n        {{tree.display('name')}}\n        Früchte? {{tree.display('fruits')}}\n    \n\nNach Name sortierenFor all the features, have a look at the List documentation.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/selection.html":{"url":"additional-documentation/core-classes/selection.html","title":"additional-page - Selection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelection\nSelection is a List with selection specific features:\n\nsupports select method with solo option\noverrides the index method to allow all items with the same identifier to be recognized as selected.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/sorter.html":{"url":"additional-documentation/core-classes/sorter.html","title":"additional-page - Sorter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSorter\nThe Sorter is a static class that acts as a helper to sort different primitive types. See the tests for example usage.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
