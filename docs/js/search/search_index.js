var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AceComponent.html",[0,0.22,1,1.204]],["body/components/AceComponent.html",[0,0.372,1,1.704,2,0.172,3,0.172,4,0.59,5,0.795,6,0.795,7,1.168,8,0.151,9,2.448,10,0.33,11,2.902,12,6.123,13,5.046,14,2.441,15,1.691,16,4.318,17,4.632,18,1.976,19,1.841,20,2.984,21,2.897,22,0.644,23,1.675,24,0.007,25,0.85,26,2.197,27,1.933,28,2.791,29,4.632,30,1.186,31,4.632,32,0.323,33,0.6,34,2.511,35,1.747,36,3.994,37,3.994,38,1.354,39,1.809,40,3.002,41,1.866,42,2.598,43,1.899,44,0.711,45,4.731,46,3.169,47,3.359,48,3.027,49,3.994,50,4.632,51,4.632,52,2.902,53,7.671,54,7.834,55,0.907,56,2.854,57,6.374,58,2.196,59,4.717,60,0.364,61,3.579,62,3.704,63,6.374,64,0.825,65,1.828,66,1.181,67,2.995,68,2.995,69,2.995,70,1.731,71,0.792,72,1.956,73,3.336,74,1.739,75,1.067,76,1.149,77,1.907,78,2.995,79,2.791,80,2.995,81,2.902,82,2.995,83,3.17,84,2.116,85,3.17,86,0.96,87,0.885,88,0.674,89,2.902,90,2.995,91,4.632,92,2.995,93,4.591,94,4.122,95,4.632,96,4.632,97,2.995,98,4.632,99,2.902,100,2.995,101,3.027,102,2.691,103,1.661,104,3.579,105,1.221,106,2.024,107,2.995,108,1.548,109,2.995,110,1.674,111,2.995,112,1.885,113,0.858,114,2.441,115,2.995,116,2.631,117,2.995,118,2.074,119,2.691,120,2.995,121,1.476,122,2.601,123,3.579,124,2.286,125,2.286,126,1.194,127,2.902,128,2.286,129,2.286,130,1.628,131,2.902,132,0.258,133,2.902,134,1.221,135,1.309,136,2.665,137,2.995,138,2.448,139,2.049,140,2.286,141,1.096,142,0.753,143,1.876,144,1.876,145,0.125,146,0.086,147,2.286,148,4.632,149,4.632,150,2.995,151,2.995,152,5.211,153,2.995,154,3.536,155,2.665,156,5.664,157,2.995,158,5.664,159,2.995,160,3.336,161,2.995,162,1.596,163,4.122,164,2.995,165,1.628,166,2.995,167,1.411,168,2.157,169,2.665,170,2.286,171,1.143,172,2.665,173,1.74,174,1.876,175,2.448,176,2.995,177,2.995,178,2.995,179,4.122,180,2.995,181,1.876,182,0.54,183,1.165,184,0.865,185,1.194,186,1.249,187,1.489,188,1.661,189,0.795,190,0.795,191,0.715,192,0.74,193,1.26,194,1.691,195,0.74,196,1.014,197,1.934,198,0.753,199,1.829,200,0.74,201,0.767,202,0.753,203,0.795,204,0.74,205,1.229,206,0.753,207,0.795,208,0.74,209,0.795,210,0.715,211,0.727,212,1.435,213,1.503,214,0.715,215,0.74,216,0.74,217,0.727,218,0.795,219,0.753,220,1.503,221,0.795,222,0.795,223,0.753,224,1.691,225,0.74,226,0.74,227,0.753,228,0.753,229,0.74,230,0.795,231,0.727,232,0.753,233,0.795,234,0.74,235,0.795,236,0.795,237,0.74,238,0.795,239,0.715,240,0.74,241,0.795,242,0.727,243,0.795,244,0.655,245,0.795,246,0.727,247,1.376,248,0.795,249,0.727,250,0.795,251,0.727,252,0.795,253,0.69,254,0.795,255,0.74,256,0.678,257,0.74,258,0.753,259,0.795,260,0.74,261,0.795,262,0.795,263,0.74,264,0.795,265,0.74,266,0.795,267,0.69,268,0.795,269,0.74,270,0.74,271,0.795,272,0.74,273,0.753,274,0.795,275,0.715,276,0.727,277,1.622,278,0.74,279,0.59,280,0.753,281,0.74,282,0.74,283,0.753,284,0.74,285,0.795,286,0.74,287,0.74,288,0.795,289,0.727,290,0.795,291,0.74,292,0.795,293,0.74,294,0.795,295,0.74,296,0.795,297,0.74,298,0.702,299,0.715,300,0.795,301,0.727,302,0.795,303,0.727,304,0.795,305,0.727,306,0.795,307,0.727,308,0.795,309,0.727,310,0.767,311,0.795,312,0.727,313,0.753,314,0.715,315,0.795,316,0.003,317,0.003]],["title/modules/AceModule.html",[318,1.047,319,3.509]],["body/modules/AceModule.html",[1,2.443,2,0.381,3,0.381,8,0.334,23,2.38,24,0.007,25,1.693,58,2.286,60,0.391,132,0.573,141,3.17,145,0.376,146,0.191,182,1.197,316,0.006,317,0.006,318,1.729,319,6.833,320,2.645,321,5.907,322,5.907,323,5.907,324,5.907,325,3.28,326,2.533,327,2.242,328,6.637,329,4.518,330,3.071,331,6.637]],["title/components/AdminEntryInputComponent.html",[0,0.22,191,1.163]],["body/components/AdminEntryInputComponent.html",[0,0.383,1,1.039,2,0.241,3,0.241,4,1.362,5,1.115,6,1.115,8,0.211,10,0.463,18,2.541,19,2.032,22,0.903,24,0.007,26,2.226,27,1.963,30,1.525,32,0.454,33,0.771,35,1.7,39,2.06,40,3.545,41,2.289,42,3.067,43,2.15,55,0.741,60,0.34,64,0.835,66,1.098,86,0.633,87,0.916,88,0.444,108,1.446,110,1.021,112,1.761,113,0.801,121,1.898,122,3.344,123,4.225,124,3.209,125,3.209,126,1.675,127,3.731,128,3.209,129,3.209,130,2.284,132,0.363,145,0.175,146,0.121,173,2.442,182,0.758,183,1.498,184,1.113,188,1.961,189,1.115,190,1.115,191,1.796,192,1.039,193,1.539,194,1.996,195,1.039,196,1.197,197,2.189,198,1.057,199,2.107,200,1.039,201,1.076,202,1.057,203,1.115,204,1.039,205,1.58,206,1.057,207,1.115,208,1.039,209,1.115,210,1.003,211,1.021,212,1.798,213,1.835,214,1.003,215,1.039,216,1.039,217,1.021,218,1.115,219,1.057,220,1.835,221,1.115,222,1.115,223,1.057,224,1.996,225,1.039,226,1.039,227,1.057,228,1.057,229,1.039,230,1.115,231,1.021,232,1.057,233,1.115,234,1.039,235,1.115,236,1.115,237,1.039,238,1.115,239,1.003,240,1.039,241,1.115,242,1.021,243,1.115,244,0.919,245,1.115,246,1.021,247,1.68,248,1.115,249,1.021,250,1.115,251,1.021,252,1.115,253,0.968,254,1.115,255,1.039,256,0.952,257,1.039,258,1.057,259,1.115,260,1.039,261,1.115,262,1.115,263,1.039,264,1.115,265,1.039,266,1.115,267,0.968,268,1.115,269,1.039,270,1.039,271,1.115,272,1.039,273,1.057,274,1.115,275,1.003,276,1.021,277,1.836,278,1.039,279,0.828,280,1.057,281,1.039,282,1.039,283,1.057,284,1.039,285,1.115,286,1.039,287,1.039,288,1.115,289,1.021,290,1.115,291,1.039,292,1.115,293,1.039,294,1.115,295,1.039,296,1.115,297,1.039,298,0.985,299,1.003,300,1.115,301,1.021,302,1.115,303,1.021,304,1.115,305,1.021,306,1.115,307,1.021,308,1.115,309,1.021,310,1.076,311,1.115,312,1.021,313,1.057,314,1.003,315,1.115,316,0.004,317,0.004,332,5.149,333,5.42,334,3.027,335,3.046,336,3.344,337,5.301,338,6.745,339,3.886,340,3.589,341,4.075,342,4.869,343,5.42,344,5.956,345,4.869,346,4.547,347,3.312,348,0.903,349,2.214,350,3.083,351,5.956,352,3.74,353,3.436,354,3.436,355,2.633,356,3.436,357,1.98,358,2.633,359,4.203,360,3.209,361,3.436,362,3.436,363,4.869,364,3.731]],["title/directives/AssetDirective.html",[184,0.91,299,1.163]],["body/directives/AssetDirective.html",[2,0.279,3,0.279,4,1.65,8,0.332,10,0.537,15,1.749,21,3.825,22,1.046,24,0.007,25,1.211,26,1.467,32,0.525,33,0.854,35,1.8,39,2.035,44,1.012,46,3.985,55,1.099,60,0.362,64,0.886,65,1.898,66,1.212,70,1.819,71,1.128,74,1.574,76,1.185,77,1.182,86,0.993,87,0.697,88,0.697,103,2.365,113,1.079,116,3.296,121,2.102,132,0.42,142,1.225,145,0.203,146,0.14,184,1.498,193,2.178,299,1.574,316,0.005,317,0.005,339,4.232,347,3.682,348,1.046,349,2.565,350,3.227,357,2.293,360,3.717,364,5.022,365,2.235,366,4.333,367,4.087,368,4.376,369,7.86,370,5.485,371,5.709,372,5.048,373,2.46,374,6.594,375,1.601,376,5.391,377,4.887,378,4.868,379,4.868,380,5.035,381,1.519,382,4.868,383,4.868,384,2.464,385,4.868,386,3.584,387,1.44,388,2.555,389,4.868,390,5.869,391,4.868,392,2.414,393,5.869,394,2.127,395,4.868,396,4.75,397,4.868,398,4.868,399,4.333,400,2.828,401,4.868,402,2.235,403,4.868,404,3.331,405,4.868,406,4.868,407,4.868,408,4.868,409,3.331,410,3.331,411,2.355,412,3.331,413,3.717,414,6.594,415,7.134,416,3.717,417,1.44,418,2.933,419,4.868,420,3.717,421,3.181,422,4.333,423,5.391,424,4.868,425,3.717,426,4.868,427,4.868]],["title/components/AssetListComponent.html",[0,0.22,192,1.204]],["body/components/AssetListComponent.html",[0,0.348,1,0.965,2,0.224,3,0.224,4,0.769,5,1.036,6,1.036,8,0.196,15,1.499,18,2.411,19,0.915,20,3.498,22,0.839,24,0.007,25,0.717,26,2.222,27,1.959,30,1.447,32,0.421,33,1,35,1.458,38,1.056,39,1.302,43,1.018,44,1.116,46,2.809,47,3.834,55,0.703,60,0.255,64,0.843,65,1.427,66,1.194,70,1.459,72,1.198,74,0.932,75,1.53,76,1.104,77,1.955,84,2.37,86,1,87,0.941,88,0.816,103,1.4,105,1.591,108,1.372,110,0.948,113,0.76,116,1.49,123,5.143,132,0.337,145,0.163,146,0.112,182,0.704,183,1.421,184,1.056,188,1.896,189,1.036,190,1.036,191,0.932,192,1.798,193,1.847,194,1.93,195,0.965,196,1.477,197,2.135,198,0.982,199,2.048,200,0.965,201,1,202,0.982,203,1.036,204,0.965,205,1.499,206,0.982,207,1.036,208,0.965,209,1.036,210,0.932,211,0.948,212,1.585,213,1.761,214,0.932,215,0.965,216,0.965,217,0.948,218,1.036,219,0.982,220,1.761,221,1.036,222,1.036,223,0.982,224,1.93,225,0.965,226,0.965,227,0.982,228,0.982,229,0.965,230,1.036,231,0.948,232,0.982,233,1.036,234,0.965,235,1.036,236,1.036,237,0.965,238,1.036,239,0.932,240,0.965,241,1.036,242,0.948,243,1.036,244,1.235,245,1.036,246,0.948,247,1.612,248,1.036,249,0.948,250,1.036,251,0.948,252,1.036,253,0.9,254,1.036,255,0.965,256,0.884,257,0.965,258,0.982,259,1.036,260,0.965,261,1.036,262,1.036,263,0.965,264,1.036,265,0.965,266,1.036,267,0.9,268,1.036,269,0.965,270,0.965,271,1.036,272,0.965,273,0.982,274,1.036,275,0.932,276,0.948,277,1.927,278,0.965,279,0.769,280,0.982,281,2.317,282,0.965,283,0.982,284,0.965,285,1.036,286,0.965,287,0.965,288,1.036,289,0.948,290,1.036,291,0.965,292,1.036,293,0.965,294,1.036,295,0.965,296,1.036,297,0.965,298,0.915,299,0.932,300,1.036,301,0.948,302,1.036,303,0.948,304,1.036,305,0.948,306,1.036,307,0.948,308,1.036,309,0.948,310,1,311,1.036,312,0.948,313,0.982,314,0.932,315,1.036,316,0.004,317,0.004,339,3.127,367,3.034,373,1.734,381,0.9,387,1.155,388,1.244,394,1.706,400,2.268,428,5.028,429,4.619,430,3.192,431,5.028,432,4.196,433,3.301,434,3.866,435,5.909,436,3.127,437,5.028,438,2.9,439,6.58,440,2.973,441,2.53,442,3.692,443,4.619,444,3.192,445,1.706,446,3.192,447,2.057,448,3.475,449,3.475,450,3.475,451,1.997,452,3.475,453,2.192,454,3.192,455,3.475,456,1.748,457,1.221,458,1.792,459,3.475,460,1.4,461,3.475,462,3.904,463,3.475,464,4.001,465,3.192,466,3.475,467,2.446,468,3.475,469,3.475,470,3.475,471,3.475,472,1.706,473,2.981,474,3.475,475,1.429,476,3.475,477,3.475,478,2.057,479,2.057,480,3.475,481,2.551,482,3.475,483,3.866,484,3.475,485,2.353,486,2.268,487,4.619,488,4.313]],["title/components/AssetListPopComponent.html",[0,0.22,195,1.204]],["body/components/AssetListPopComponent.html",[0,0.336,1,0.7,2,0.163,3,0.163,4,0.558,5,1.177,6,0.751,8,0.275,10,0.312,15,1.177,18,1.892,19,0.664,20,2.88,22,0.609,24,0.007,25,0.814,26,2.191,27,1.931,30,1.135,32,0.306,33,0.574,34,1.528,35,1.492,38,1.185,39,2.006,42,2.737,43,1.75,44,0.68,47,3.259,55,0.887,60,0.373,64,0.824,65,1.531,66,1.177,71,1.058,74,1.602,75,1.022,76,1.133,77,1.73,84,2.061,86,0.932,87,0.899,88,0.654,105,1.154,106,1.938,108,1.077,110,0.688,112,2.279,113,1.002,121,1.414,123,4.179,132,0.244,145,0.118,146,0.081,171,1.693,182,0.511,183,1.116,184,0.829,188,1.612,189,0.751,190,0.751,191,0.676,192,0.7,193,1.763,194,1.641,195,1.529,196,1.522,197,1.889,198,0.712,199,1.782,200,0.7,201,1.973,202,0.712,203,0.751,204,0.7,205,1.177,206,0.712,207,0.751,208,0.7,209,0.751,210,0.676,211,0.688,212,1.78,213,1.45,214,0.676,215,0.7,216,0.7,217,0.688,218,0.751,219,0.712,220,1.45,221,0.751,222,0.751,223,0.712,224,1.641,225,0.7,226,0.7,227,0.712,228,0.712,229,0.7,230,0.751,231,0.688,232,0.712,233,0.751,234,0.7,235,0.751,236,0.751,237,0.7,238,0.751,239,0.676,240,0.7,241,0.751,242,0.688,243,0.751,244,0.619,245,0.751,246,0.688,247,1.327,248,0.751,249,0.688,250,0.751,251,0.688,252,0.751,253,0.653,254,0.751,255,0.7,256,0.641,257,0.7,258,0.712,259,0.751,260,0.7,261,0.751,262,0.751,263,0.7,264,0.751,265,0.7,266,0.751,267,0.653,268,0.751,269,0.7,270,0.7,271,0.751,272,0.7,273,0.712,274,0.751,275,1.971,276,0.688,277,1.715,278,0.7,279,0.558,280,0.712,281,0.7,282,0.7,283,0.712,284,1.66,285,0.751,286,0.7,287,0.7,288,0.751,289,0.688,290,0.751,291,0.7,292,0.751,293,0.7,294,0.751,295,0.7,296,0.751,297,0.7,298,1.575,299,0.676,300,0.751,301,0.688,302,0.751,303,0.688,304,0.751,305,0.688,306,0.751,307,0.688,308,0.751,309,0.688,310,0.725,311,0.751,312,0.688,313,0.712,314,1.304,315,0.751,316,0.003,317,0.003,347,2.969,348,1.175,350,2.662,358,2.778,367,1.849,373,2.061,375,1.077,381,1.641,384,1.657,387,2.279,388,2.456,392,2.607,400,2.577,409,1.938,410,1.938,417,0.838,438,1.768,441,1.986,457,2.694,458,2.036,460,2.841,475,2.001,479,2.337,489,7.747,490,7.116,491,2.162,492,4.452,493,3.626,494,3.626,495,3.626,496,2.269,497,1.986,498,3.875,499,1.693,500,3.104,501,3.194,502,3.947,503,3.947,504,3.386,505,6.477,506,4.873,507,4.595,508,6.185,509,3.947,510,3.339,511,4.292,512,4.963,513,3.445,514,3.817,515,4.207,516,2.521,517,4.462,518,4.046,519,3.473,520,4.325,521,3.947,522,1.892,523,3.947,524,2.41,525,3.947,526,2.832,527,4.046,528,2.832,529,2.832,530,1.645,531,2.04,532,2.521,533,2.521,534,3.194,535,2.832,536,2.832,537,2.521,538,2.832,539,3.626,540,2.898,541,2.832,542,4.435,543,2.521,544,3.947,545,2.832,546,2.521,547,2.41,548,2.41,549,2.521,550,2.315,551,2.521,552,2.162,553,2.832,554,3.942,555,2.832,556,2.832,557,2.49,558,1.986,559,2.521,560,2.162,561,1.449,562,2.162,563,1.408,564,2.04,565,2.521,566,2.521,567,1.539,568,2.521,569,2.315,570,2.04,571,1.449,572,2.315,573,2.521,574,2.315,575,1.498,576,2.521,577,2.521,578,2.832,579,2.832,580,2.832,581,6.339,582,2.521,583,2.521,584,2.832,585,3.74,586,2.832,587,1.938,588,2.832,589,2.898,590,2.832,591,2.832,592,2.04,593,2.898]],["title/components/AssetgroupSelectComponent.html",[0,0.22,200,1.204]],["body/components/AssetgroupSelectComponent.html",[0,0.362,1,1.064,2,0.247,3,0.247,4,0.848,5,1.142,6,1.142,8,0.217,15,1.607,19,1.009,20,3.693,22,0.925,24,0.007,26,2.229,27,1.967,30,1.551,32,0.465,33,0.784,35,1.777,38,0.685,39,1.615,44,0.929,47,4.008,60,0.273,64,0.809,65,1.635,66,1.148,71,0.736,76,0.591,77,1.045,86,0.648,87,0.921,88,0.455,108,1.471,110,1.045,113,0.943,132,0.371,145,0.18,146,0.124,182,0.777,183,1.524,184,1.132,188,1.982,189,1.142,190,1.142,191,1.027,192,1.064,193,1.784,194,2.018,195,1.064,196,1.21,197,2.206,198,1.083,199,2.127,200,1.88,201,2.366,202,1.083,203,1.142,204,1.064,205,1.607,206,1.083,207,1.142,208,1.064,209,1.142,210,1.027,211,1.045,212,1.637,213,1.859,214,1.027,215,1.064,216,1.064,217,1.045,218,1.142,219,1.083,220,1.859,221,1.142,222,1.142,223,1.083,224,2.018,225,1.064,226,1.064,227,1.083,228,1.083,229,1.064,230,1.142,231,1.045,232,1.083,233,1.142,234,1.064,235,1.142,236,1.142,237,1.064,238,1.142,239,1.027,240,1.064,241,1.142,242,1.045,243,1.142,244,0.941,245,1.142,246,1.045,247,1.702,248,1.142,249,1.045,250,1.142,251,1.045,252,1.142,253,0.992,254,1.142,255,1.064,256,0.975,257,1.064,258,1.083,259,1.142,260,1.064,261,1.142,262,1.142,263,1.064,264,1.142,265,1.064,266,1.142,267,0.992,268,1.142,269,1.064,270,1.064,271,1.142,272,1.064,273,1.083,274,1.142,275,1.027,276,1.045,277,1.85,278,1.064,279,0.848,280,1.083,281,1.064,282,1.064,283,1.083,284,1.064,285,1.142,286,1.064,287,1.064,288,1.142,289,1.045,290,1.142,291,1.064,292,1.142,293,1.064,294,1.142,295,1.064,296,1.142,297,1.064,298,1.009,299,1.027,300,1.142,301,1.045,302,1.142,303,1.045,304,1.142,305,1.045,306,1.142,307,1.045,308,1.142,309,1.045,310,1.102,311,1.142,312,1.045,313,1.083,314,1.027,315,1.142,316,0.004,317,0.004,348,1.302,373,2.335,381,1.753,387,1.273,388,2.424,457,2.379,505,5.73,512,4.391,520,5.278,525,5.391,582,3.831,583,3.831,594,7.996,595,7.345,596,3.831,597,6.058,598,7.009,599,4.356,600,4.796,601,4.305,602,6.058,603,4.305,604,4.305,605,4.305,606,4.305,607,4.305,608,4.305,609,4.305]],["title/injectables/AuthGuard.html",[375,1.183,610,3.509]],["body/injectables/AuthGuard.html",[2,0.337,3,0.337,8,0.296,10,0.648,15,1.56,24,0.007,25,1.08,32,0.635,33,0.966,34,2.571,38,0.936,44,1.145,55,1.074,56,3.342,60,0.402,64,0.776,66,1.062,71,1.277,73,5.376,76,1.125,86,0.886,87,0.621,88,0.621,113,0.791,126,2.975,132,0.507,145,0.246,146,0.169,256,1.69,316,0.005,317,0.005,347,3.597,348,1.264,349,3.098,350,3.4,353,4.807,373,2.291,375,1.992,402,2.699,433,3.711,451,4.413,458,3.427,513,3.611,554,4.785,567,3.196,575,1.986,610,5.376,611,7.678,612,5.233,613,7.465,614,5.69,615,4.498,616,3.712,617,4.999,618,4.677,619,3.711,620,7.142,621,9.099,622,3.863,623,4.173,624,7.465,625,5.88,626,5.405,627,6.103,628,4.878,629,2.016,630,3.196,631,4.489,632,1.91,633,5.88,634,4.489,635,5.233,636,5.88,637,5.88,638,7.465,639,5.88,640,5.88,641,5.233,642,5.88,643,5.88,644,5.88]],["title/modules/AuthModule.html",[318,1.047,645,3.509]],["body/modules/AuthModule.html",[0,0.341,2,0.344,3,0.344,8,0.302,10,0.661,23,2.447,24,0.007,58,2.065,60,0.433,76,0.822,132,0.517,134,2.443,141,3.029,145,0.374,146,0.172,182,1.081,253,2.224,272,2.385,273,1.508,316,0.005,317,0.005,318,1.867,320,2.389,325,3.079,326,2.288,327,2.024,330,2.884,367,2.499,441,3.383,472,2.619,518,4.986,519,5.134,522,3.224,610,6.586,645,7.082,646,5.335,647,5.335,648,5.335,649,5.335,650,5.335,651,5.51,652,4.901,653,3.469,654,2.684,655,6.725,656,5.662,657,6.725,658,4.317,659,5.335,660,4.901,661,4.901,662,5.994,663,5.994,664,5.994,665,4.901,666,6.177,667,5.994,668,5.994,669,5.994]],["title/injectables/AuthService.html",[375,1.183,519,2.735]],["body/injectables/AuthService.html",[2,0.343,3,0.187,8,0.164,10,0.359,23,2.442,24,0.007,25,1.096,27,0.973,32,0.352,37,3.096,38,1.06,39,1.858,44,1.372,45,2.978,55,0.938,60,0.301,64,0.713,65,2.04,66,1.136,70,1.218,72,1.517,74,1.59,75,1.858,76,1.346,79,2.978,86,1.289,87,0.904,88,0.959,103,1.169,113,1.054,116,2.543,121,1.575,132,0.281,142,1.502,145,0.136,146,0.094,256,1.621,273,1.969,277,1.328,279,0.973,316,0.005,317,0.003,326,1.886,339,4.543,341,4.899,345,6.161,347,2.489,348,0.7,350,2.816,375,1.45,377,3.229,392,1.809,394,3.524,411,1.576,420,5.977,432,4.096,441,3.505,445,2.911,447,3.51,453,4.528,472,1.424,475,2.438,499,2.876,518,1.964,519,2.774,575,1.101,614,2.978,626,3.096,632,1.059,670,2.901,671,3.773,672,3.559,673,5.855,674,4.04,675,4.299,676,4.299,677,5.313,678,4.04,679,5.753,680,3.773,681,3.559,682,5.446,683,2.774,684,4.04,685,4.398,686,4.398,687,4.942,688,4.398,689,4.942,690,4.942,691,4.398,692,6.662,693,6.662,694,4.942,695,4.942,696,7.16,697,3.259,698,3.259,699,4.398,700,4.942,701,3.259,702,5.639,703,5.227,704,4.398,705,3.259,706,4.942,707,3.259,708,1.669,709,5.086,710,4.942,711,5.651,712,3.259,713,4.942,714,3.259,715,4.353,716,2.901,717,3.259,718,6.707,719,4.942,720,3.259,721,3.259,722,4.942,723,3.259,724,4.942,725,3.259,726,2.871,727,3.259,728,3.259,729,2.488,730,2.13,731,1.83,732,2.042,733,6.662,734,6.662,735,4.942,736,4.942,737,4.942,738,5.929,739,4.942,740,3.259,741,4.942,742,3.259,743,5.969,744,5.969,745,3.259,746,3.259,747,4.398,748,3.259,749,2.901,750,2.901,751,3.259,752,1.964,753,3.259,754,3.259,755,3.259,756,3.259,757,3.259,758,3.259,759,3.259,760,4.942,761,3.259,762,4.942,763,3.259,764,3.096,765,3.259,766,2.774,767,3.096,768,3.259,769,4.942,770,4.942,771,3.259,772,3.259,773,3.259,774,3.559,775,4.942,776,3.259,777,4.942,778,3.773,779,4.942,780,4.942,781,3.229,782,4.942,783,4.942,784,4.398,785,4.942,786,3.259,787,4.942,788,3.259,789,3.259,790,3.259,791,3.259,792,3.259,793,3.259,794,3.259,795,3.259,796,3.259,797,2.347,798,2.901,799,1.894,800,3.259]],["title/classes/Collection.html",[146,0.14,801,2.648]],["body/classes/Collection.html",[2,0.201,3,0.201,7,3.505,8,0.176,10,0.386,24,0.007,25,1.712,32,0.797,33,0.676,34,2.84,38,1.312,39,1.784,43,2.554,44,0.801,60,0.235,64,0.851,66,1.153,71,1.263,74,1.648,75,2.088,76,1.284,77,1.514,84,1.602,86,1.269,87,0.89,88,0.919,113,1.109,121,1.117,142,1.858,145,0.146,146,0.212,162,1.797,196,0.992,316,0.004,317,0.004,348,0.753,365,1.608,381,2.204,384,2.582,387,2.745,394,2.28,417,2.573,434,4.266,438,3.418,457,1.096,458,3.171,479,3.64,524,2.836,548,4.209,554,4.386,558,2.792,567,1.904,626,4.328,627,2.864,683,3.5,708,3.174,726,2.036,801,5.126,802,3.118,803,5.097,804,5.218,805,3.85,806,5.218,807,5.218,808,6.908,809,5.218,810,5.218,811,5.218,812,5.218,813,4.644,814,5.549,815,3.285,816,3.623,817,3.504,818,3.269,819,7.999,820,3.504,821,5.218,822,5.218,823,7.842,824,3.504,825,4.514,826,4.163,827,5.218,828,5.218,829,3.504,830,5.218,831,3.984,832,3.758,833,5.218,834,3.504,835,5.218,836,5.218,837,3.504,838,5.218,839,5.218,840,3.504,841,3.504,842,5.218,843,3.504,844,5.218,845,5.218,846,3.504,847,5.218,848,3.504,849,3.504,850,3.118,851,3.118,852,3.118,853,3.118,854,3.118,855,3.118,856,3.118,857,3.118,858,2.289,859,2.195,860,5.026,861,3.571,862,6.235,863,5.218,864,3.504,865,3.504,866,1.846,867,3.504,868,3.504,869,6.235,870,6.908,871,6.235,872,8.022,873,3.504,874,3.504,875,3.504,876,3.504,877,3.118,878,3.504]],["title/classes/Config.html",[146,0.14,475,1.783]],["body/classes/Config.html",[2,0.347,3,0.347,8,0.304,10,0.665,24,0.007,32,0.652,33,1.256,38,0.961,39,1.913,41,1.943,44,1.405,55,0.752,56,3.9,64,0.825,65,1.998,66,0.983,75,2.111,76,1.231,86,0.909,87,0.638,88,0.877,103,2.722,113,0.813,145,0.252,146,0.239,167,2.844,316,0.005,317,0.005,361,4.936,394,2.638,475,3.631,499,3.497,575,2.804,619,3.774,879,5.374,880,4.899,881,4.41,882,6.038,883,6.038,884,6.038,885,6.206,886,7.59,887,4.456,888,7.59,889,7.59,890,7.59,891,5.795,892,5.194,893,4.61,894,3.181,895,6.038,896,6.038,897,6.038,898,7.59,899,8.302,900,6.038]],["title/components/CrudComponent.html",[0,0.22,204,1.204]],["body/components/CrudComponent.html",[0,0.303,1,0.701,2,0.163,3,0.163,4,1.324,5,0.753,6,0.753,7,1.106,8,0.143,10,0.313,15,1.178,19,0.665,20,2.883,22,0.61,24,0.007,25,1.308,26,2.191,27,1.931,30,1.137,32,0.306,33,0.709,35,1.493,38,0.707,39,1.935,41,1.825,43,2.009,44,1.244,47,3.262,55,0.887,58,1.53,60,0.403,64,0.806,65,1.444,66,1.156,71,0.759,75,1.023,76,1.247,77,1.078,84,1.363,86,1.012,87,0.91,88,0.857,103,2.908,105,2.739,106,2.705,108,1.503,110,0.689,112,1.831,113,0.959,132,0.245,135,1.24,145,0.118,146,0.157,162,1.885,171,1.695,174,1.777,182,0.512,183,1.376,184,0.83,185,1.131,186,1.183,187,1.41,188,1.613,189,0.753,190,0.753,191,0.677,192,0.701,193,1.218,194,1.642,195,0.701,196,1.439,197,1.891,198,0.714,199,1.783,200,0.701,201,0.726,202,0.714,203,0.753,204,1.762,205,1.178,206,0.714,207,0.753,208,0.701,209,0.753,210,0.677,211,0.689,212,1.731,213,1.452,214,0.677,215,0.701,216,0.701,217,0.689,218,0.753,219,0.714,220,1.452,221,0.753,222,0.753,223,1.117,224,1.642,225,1.661,226,0.701,227,1.691,228,0.714,229,0.701,230,0.753,231,0.689,232,0.714,233,0.753,234,0.701,235,0.753,236,0.753,237,0.701,238,0.753,239,0.677,240,0.701,241,0.753,242,0.689,243,0.753,244,1.47,245,0.753,246,0.689,247,1.329,248,0.753,249,0.689,250,0.753,251,0.689,252,0.753,253,0.654,254,0.753,255,0.701,256,0.642,257,0.701,258,0.714,259,0.753,260,0.701,261,0.753,262,0.753,263,0.701,264,0.753,265,0.701,266,0.753,267,0.654,268,0.753,269,0.701,270,0.701,271,0.753,272,0.701,273,0.714,274,0.753,275,0.677,276,0.689,277,1.586,278,0.701,279,0.559,280,0.714,281,0.701,282,0.701,283,0.714,284,0.701,285,0.753,286,0.701,287,0.701,288,0.753,289,0.689,290,0.753,291,0.701,292,0.753,293,0.701,294,0.753,295,0.701,296,0.753,297,0.701,298,0.665,299,0.677,300,0.753,301,0.689,302,0.753,303,0.689,304,0.753,305,0.689,306,0.753,307,0.689,308,0.753,309,0.689,310,0.726,311,0.753,312,0.689,313,0.714,314,0.677,315,0.753,316,0.003,317,0.003,327,1.5,347,1.851,348,0.61,349,1.495,350,2.314,367,2.281,372,3.297,373,2.063,381,1.023,387,1.313,388,2.374,392,1.625,402,1.302,411,1.372,417,1.313,418,1.709,433,3.703,440,3.191,457,2.663,460,2.556,472,1.94,475,2.003,478,1.495,481,2.902,483,4.877,486,1.648,488,2.166,492,3.167,497,2.772,498,1.777,510,2.208,514,2.916,515,3.428,518,3.297,519,3.476,527,4.05,530,2.58,569,2.319,571,1.451,575,2.738,587,1.941,616,1.183,622,3.819,623,2.995,630,1.542,631,2.166,632,0.922,708,2.091,726,1.648,752,1.709,880,2.34,891,2.166,901,2.525,902,3.198,903,2.493,904,3.631,905,3.39,906,4.441,907,3.072,908,3.428,909,2.647,910,3.952,911,6.191,912,5.487,913,5.51,914,3.952,915,4.441,916,4.441,917,4.441,918,3.925,919,3.179,920,2.23,921,2.581,922,4.441,923,5.51,924,2.676,925,2.837,926,2.837,927,2.837,928,4.657,929,2.837,930,2.837,931,2.837,932,3.952,933,4.474,934,4.178,935,3.952,936,2.837,937,4.441,938,2.837,939,3.631,940,4.441,941,2.837,942,2.493,943,2.837,944,4.441,945,2.837,946,2.837,947,2.837,948,2.837,949,2.837,950,2.837,951,2.319,952,2.166,953,2.319,954,2.319,955,2.319,956,2.525,957,2.525,958,2.166,959,1.854,960,1.495,961,2.319,962,2.319,963,2.319,964,2.837,965,2.837,966,2.166,967,2.837,968,2.837,969,2.837,970,1.941,971,2.837,972,4.87,973,2.525,974,2.525,975,2.837,976,2.319,977,2.837,978,2.837,979,1.941,980,2.837,981,2.837,982,5.472,983,2.525,984,2.525,985,2.837,986,2.837,987,2.902,988,3.941,989,2.837,990,3.039,991,2.837,992,1.777,993,2.043,994,2.837,995,1.854,996,3.952,997,3.952]],["title/interfaces/CrudConfig.html",[527,2.936,998,1.441]],["body/interfaces/CrudConfig.html",[0,0.377,2,0.25,3,0.25,8,0.219,10,0.48,18,2.607,24,0.007,25,1.745,27,1.203,32,0.47,33,0.791,38,0.972,44,1.342,53,5.438,55,1.089,60,0.318,64,0.903,65,1.99,70,3.269,88,1.039,113,1.029,145,0.182,146,0.24,162,2.105,171,2.332,186,2.547,196,1.328,212,1.836,244,1.672,267,1.762,277,1.36,279,1.751,316,0.004,317,0.004,367,3.48,372,5.03,381,2.257,384,2.637,400,3.55,438,2.435,440,3.737,451,3.912,457,2.817,467,3.828,492,4.607,495,4.995,501,4.401,527,4.608,548,3.321,557,3.43,571,2.229,622,3.932,702,6.012,708,2.72,709,4.665,764,4.791,766,3.961,767,4.42,881,3.55,894,3.219,902,4.401,909,2.955,954,3.563,998,1.807,999,3.879,1000,2.73,1001,6.11,1002,4.099,1003,7.647,1004,7.647,1005,7.647,1006,6.824,1007,7.647,1008,7.647,1009,6.806,1010,7.647,1011,7.647,1012,7.647,1013,6.806,1014,7.647,1015,4.995,1016,4.997,1017,4.401,1018,5.438,1019,2.736,1020,5.838,1021,5.438,1022,3.993,1023,4.181,1024,6.11,1025,4.665,1026,3.43,1027,6.11,1028,2.805,1029,6.806,1030,5.838,1031,5.233,1032,6.806,1033,4.995,1034,3.828,1035,5.438,1036,3.327,1037,4.358]],["title/injectables/CrudService.html",[375,1.183,1038,2.648]],["body/injectables/CrudService.html",[0,0.241,2,0.208,3,0.208,8,0.182,10,0.399,24,0.007,25,1.375,32,0.391,33,1.05,38,1.527,41,1.369,44,0.82,55,0.874,60,0.366,61,2.033,62,2.104,64,0.863,65,1.958,66,1.119,70,3.349,71,1.387,72,1.112,75,2.158,76,1.316,79,2.182,84,2.896,86,1.28,87,0.898,88,0.898,103,3.144,112,1.071,113,0.487,114,1.908,116,2.68,126,2.131,132,0.312,142,1.345,145,0.223,146,0.104,162,1.247,167,1.706,196,0.851,212,1.915,279,1.674,316,0.004,317,0.006,340,3.831,347,2.927,348,0.778,349,1.908,350,2.624,368,1.706,372,3.222,375,1.819,381,1.465,386,4.26,387,1.582,388,1.154,394,1.582,411,1.752,436,4.129,438,3.824,460,2.907,478,2.818,479,3.946,481,3.494,499,3.501,522,2.282,524,1.968,548,2.906,554,4.009,567,1.968,575,2.147,618,3.35,632,1.177,752,3.831,766,3.002,767,3.35,859,2.269,866,3.35,887,3.831,909,2.587,998,1.071,1026,4.205,1030,2.765,1031,2.478,1038,3.455,1039,2.961,1040,3.222,1041,3.659,1042,3.222,1043,2.587,1044,3.222,1045,2.337,1046,3.494,1047,4.759,1048,4.372,1049,4.759,1050,5.348,1051,4.372,1052,3.621,1053,4.372,1054,4.372,1055,3.621,1056,3.852,1057,4.759,1058,3.621,1059,4.759,1060,5.345,1061,3.621,1062,4.372,1063,3.621,1064,3.852,1065,4.155,1066,4.372,1067,3.621,1068,4.083,1069,4.372,1070,4.759,1071,3.621,1072,3.494,1073,4.759,1074,4.759,1075,3.621,1076,3.659,1077,2.182,1078,2.961,1079,2.961,1080,2.367,1081,2.765,1082,2.961,1083,2.961,1084,2.961,1085,2.961,1086,2.961,1087,2.961,1088,2.961,1089,2.961,1090,3.223,1091,3.223,1092,3.223,1093,5.658,1094,5.198,1095,2.961,1096,3.107,1097,2.961,1098,2.961,1099,3.223,1100,4.759,1101,4.372,1102,2.269,1103,3.223,1104,5.198,1105,2.961,1106,2.961,1107,2.961,1108,2.961,1109,5.198,1110,2.182,1111,2.961,1112,3.223,1113,2.961,1114,3.223,1115,3.223]],["title/modules/DataModule.html",[318,1.047,1116,3.334]],["body/modules/DataModule.html",[2,0.246,3,0.246,8,0.216,23,2.456,24,0.007,58,1.477,60,0.439,76,0.588,103,2.166,132,0.37,134,1.747,141,2.559,145,0.317,146,0.123,173,3.509,174,2.685,182,0.773,191,2.079,196,0.961,204,2.264,210,2.079,211,2.115,212,1.787,223,2.304,225,2.264,226,2.298,227,2.304,228,2.339,303,2.225,305,2.225,316,0.004,317,0.004,318,1.298,320,1.708,325,2.461,326,1.636,327,1.448,329,3.391,330,2.669,333,3.087,348,0.921,486,2.49,593,2.801,630,2.33,645,6.598,651,5.52,653,2.772,654,1.919,655,5.375,658,3.087,660,3.504,673,5.476,675,4.35,681,4.35,731,3.391,892,2.933,951,3.504,952,3.272,958,4.611,959,3.946,1038,4.512,1116,6.829,1117,3.815,1118,3.815,1119,3.815,1120,3.815,1121,3.815,1122,6.598,1123,6.269,1124,5.987,1125,5.98,1126,5.202,1127,4.824,1128,4.286,1129,4.35,1130,5.375,1131,5.375,1132,2.933,1133,4.286,1134,4.286,1135,3.504,1136,4.286,1137,3.639,1138,3.087,1139,3.815,1140,3.272,1141,4.286,1142,4.286,1143,2.801,1144,2.801,1145,3.815,1146,4.286,1147,3.504,1148,3.504,1149,4.286]],["title/components/DatetimeComponent.html",[0,0.22,208,1.204]],["body/components/DatetimeComponent.html",[0,0.373,1,0.949,2,0.22,3,0.22,4,0.756,5,1.019,6,1.019,7,1.498,8,0.193,10,0.423,15,2.123,16,5.404,19,0.901,22,0.825,23,1.945,24,0.007,25,1.326,26,2.22,27,1.957,30,1.429,32,0.415,33,0.723,35,1.756,36,4.524,38,1.149,39,1.516,40,2.63,44,0.857,48,4.718,49,5.014,52,3.498,55,0.695,60,0.326,64,0.758,65,1.413,66,1.135,71,0.955,75,1.286,76,0.902,77,1.597,81,3.498,84,2.216,86,0.841,87,0.911,88,0.59,89,3.498,99,3.498,103,2.002,105,1.565,106,2.439,108,1.356,110,0.933,112,1.651,113,1.032,114,2.942,122,4.751,131,3.498,132,0.331,133,3.498,134,1.565,143,2.406,144,2.406,145,0.16,146,0.11,181,2.406,182,0.693,183,1.404,184,1.043,185,1.531,186,1.601,187,1.909,188,1.882,189,1.019,190,1.019,191,0.916,192,0.949,193,1.464,194,1.916,195,0.949,196,1.149,197,2.123,198,0.966,199,2.035,200,0.949,201,0.983,202,1.929,203,1.019,204,0.949,205,1.481,206,0.966,207,1.019,208,1.896,209,1.019,210,0.916,211,0.933,212,1.576,213,1.745,214,0.916,215,0.949,216,0.949,217,0.933,218,1.019,219,0.966,220,1.745,221,1.019,222,1.019,223,0.966,224,1.916,225,0.949,226,0.949,227,0.966,228,0.966,229,0.949,230,1.019,231,0.933,232,0.966,233,1.019,234,0.949,235,1.019,236,1.019,237,0.949,238,1.019,239,0.916,240,0.949,241,1.019,242,0.933,243,1.019,244,0.84,245,1.019,246,0.933,247,1.597,248,1.019,249,0.933,250,1.019,251,0.933,252,1.019,253,0.885,254,1.019,255,0.949,256,0.87,257,0.949,258,0.966,259,1.019,260,0.949,261,1.019,262,1.019,263,0.949,264,1.019,265,0.949,266,1.019,267,0.885,268,1.019,269,0.949,270,0.949,271,1.019,272,0.949,273,0.966,274,1.019,275,0.916,276,0.933,277,1.781,278,0.949,279,0.756,280,0.966,281,0.949,282,0.949,283,0.966,284,0.949,285,1.019,286,0.949,287,0.949,288,1.019,289,0.933,290,1.019,291,0.949,292,1.019,293,0.949,294,1.019,295,0.949,296,1.019,297,0.949,298,0.901,299,0.916,300,1.019,301,0.933,302,1.019,303,0.933,304,1.019,305,0.933,306,1.019,307,0.933,308,1.019,309,0.933,310,0.983,311,1.019,312,0.933,313,0.966,314,0.916,315,1.019,316,0.004,317,0.004,335,2.856,381,1.286,457,1.746,498,3.498,561,2.856,599,4.169,708,1.886,1150,3.418,1151,5.512,1152,5.583,1153,5.583,1154,6.11,1155,7.22,1156,5.623,1157,6.577,1158,2.643,1159,3.498,1160,4.969,1161,3.841,1162,3.841,1163,3.841,1164,5.583,1165,3.841,1166,3.841,1167,3.841,1168,3.841,1169,3.841,1170,3.841,1171,3.498,1172,3.841,1173,4.262,1174,5.583,1175,3.82,1176,2.766,1177,3.841,1178,3.841,1179,3.841]],["title/pipes/DatetimePipe.html",[1180,2.567,1181,3.509]],["body/pipes/DatetimePipe.html",[2,0.36,3,0.36,8,0.315,10,0.691,15,1.663,22,1.347,24,0.007,25,1.151,33,1.006,38,1.507,43,2.3,44,0.962,55,0.967,60,0.381,64,0.736,65,2.101,66,0.811,72,2.385,75,1.79,76,1.211,86,0.944,87,0.892,88,0.662,113,0.843,126,3.097,132,0.541,142,1.577,145,0.262,146,0.18,316,0.005,317,0.005,394,2.739,436,3.66,632,2.036,708,2.624,818,4.868,920,2.554,921,3.239,960,3.302,1151,5.931,1156,5.29,1175,5.316,1176,4.514,1180,4.449,1181,5.596,1182,5.578,1183,5.316,1184,5.931,1185,4.222,1186,5.578,1187,6.535,1188,7.418,1189,6.267,1190,6.915,1191,5.316,1192,6.267,1193,6.267,1194,6.267,1195,6.267,1196,6.267,1197,6.267]],["title/interfaces/Day.html",[998,1.441,1173,3.72]],["body/interfaces/Day.html",[0,0.232,2,0.197,3,0.197,8,0.173,10,0.378,15,0.91,20,2.707,21,2.628,24,0.007,25,1.411,26,0.763,27,0.676,30,0.878,32,0.921,33,0.665,34,1.769,35,1.71,39,1.419,47,1.808,56,2.3,60,0.33,64,0.867,65,1.924,71,1.252,74,1.631,75,1.771,76,1.247,77,1.66,84,2.445,88,0.722,119,1.993,121,2.719,132,0.296,142,1.842,145,0.214,146,0.229,162,1.769,165,3.346,171,1.961,265,0.848,279,1.012,316,0.004,317,0.004,357,1.616,373,1.89,381,2.043,384,2.736,388,2.333,417,1.519,434,3.515,438,2.047,457,2.562,460,1.23,473,2.619,497,3.061,499,1.961,500,1.43,513,1.659,547,4.329,554,3.745,558,2.757,567,1.865,589,4.467,708,1.735,825,3.357,832,2.471,894,2.707,903,1.926,920,1.398,921,2.142,942,1.926,960,1.808,998,2.022,1015,2.805,1110,2.067,1132,5.451,1154,4.701,1156,5.556,1158,1.88,1159,2.149,1160,7.708,1173,7.405,1175,5.606,1176,2.471,1198,3.053,1199,8.868,1200,7.321,1201,6.848,1202,7.321,1203,6.082,1204,8.376,1205,3.7,1206,3.7,1207,8.772,1208,5.738,1209,3.053,1210,3.431,1211,2.619,1212,3.431,1213,5.219,1214,3.448,1215,5.137,1216,3.053,1217,3.431,1218,4.572,1219,3.053,1220,7.684,1221,3.431,1222,3.431,1223,3.431,1224,3.053,1225,3.431,1226,2.067,1227,3.431,1228,3.431,1229,6.157,1230,3.053,1231,3.431,1232,3.431,1233,5.137,1234,3.431,1235,3.431,1236,3.431,1237,3.431,1238,3.431,1239,3.431,1240,3.431,1241,3.431,1242,7.684,1243,5.137,1244,6.157,1245,5.137,1246,6.157,1247,5.137,1248,3.431,1249,3.431,1250,3.431,1251,3.431,1252,3.431,1253,7.321,1254,3.431,1255,3.431,1256,3.431,1257,3.431,1258,3.431,1259,6.836,1260,3.431,1261,5.137,1262,5.137,1263,4.435,1264,3.431,1265,3.431,1266,3.431,1267,3.431,1268,3.431,1269,5.137,1270,3.431,1271,3.431,1272,5.137,1273,3.431,1274,3.431,1275,3.431,1276,3.431,1277,3.431,1278,3.431,1279,3.431,1280,5.137,1281,3.431,1282,3.431,1283,3.053,1284,3.431,1285,3.431,1286,3.431,1287,3.431,1288,3.431,1289,3.431,1290,3.431,1291,6.157,1292,3.431,1293,6.157,1294,3.431,1295,3.431,1296,3.431,1297,3.431,1298,5.137,1299,3.431,1300,3.431,1301,3.431,1302,3.431,1303,3.431,1304,3.431,1305,1.993,1306,3.431,1307,3.053,1308,3.431,1309,5.137,1310,3.431,1311,3.431,1312,3.431,1313,3.431,1314,3.431,1315,3.431,1316,3.431,1317,3.431,1318,3.431,1319,3.431,1320,3.431,1321,3.431,1322,3.431,1323,3.431,1324,3.431,1325,3.431,1326,2.619,1327,3.431,1328,3.431,1329,3.431,1330,3.431]],["title/components/DefaultEntryInputComponent.html",[0,0.22,210,1.163]],["body/components/DefaultEntryInputComponent.html",[0,0.386,1,1.072,2,0.249,3,0.249,4,1.583,5,1.151,6,1.151,8,0.218,10,0.478,18,2.599,19,2.049,22,0.932,24,0.007,26,2.229,27,1.966,30,1.56,32,0.468,33,0.789,35,1.78,39,2.073,40,3.595,41,2.237,42,3.111,43,2.172,55,0.758,60,0.318,64,0.827,66,1.079,86,0.654,87,0.923,88,0.458,108,1.479,110,1.054,112,1.801,113,1.122,122,3.42,123,4.285,124,3.313,125,3.313,126,1.729,127,3.816,128,3.313,129,3.313,130,2.358,132,0.374,145,0.181,146,0.125,173,2.521,182,0.783,183,1.532,184,1.138,188,1.989,189,1.151,190,1.151,191,1.035,192,1.072,193,1.566,194,2.025,195,1.072,196,1.215,197,2.211,198,1.091,199,2.133,200,1.072,201,1.111,202,1.091,203,1.151,204,1.072,205,1.616,206,1.091,207,1.151,208,1.072,209,1.151,210,1.821,211,1.054,212,1.792,213,1.867,214,1.035,215,1.072,216,1.072,217,1.054,218,1.151,219,1.091,220,1.867,221,1.151,222,1.151,223,1.091,224,2.025,225,1.072,226,1.072,227,1.091,228,1.091,229,1.072,230,1.151,231,1.054,232,1.091,233,1.151,234,1.072,235,1.151,236,1.151,237,1.072,238,1.151,239,1.035,240,1.072,241,1.151,242,1.054,243,1.151,244,0.949,245,1.151,246,1.054,247,1.709,248,1.151,249,1.054,250,1.151,251,1.054,252,1.151,253,1,254,1.151,255,1.072,256,0.982,257,1.072,258,1.091,259,1.151,260,1.072,261,1.151,262,1.151,263,1.072,264,1.151,265,1.072,266,1.151,267,1,268,1.151,269,1.072,270,1.072,271,1.151,272,1.072,273,1.091,274,1.151,275,1.035,276,1.054,277,1.855,278,1.072,279,0.855,280,1.091,281,1.072,282,1.072,283,1.091,284,1.072,285,1.151,286,1.072,287,1.072,288,1.151,289,1.054,290,1.151,291,1.072,292,1.151,293,1.072,294,1.151,295,1.072,296,1.151,297,1.072,298,1.017,299,1.035,300,1.151,301,1.054,302,1.151,303,1.054,304,1.151,305,1.054,306,1.151,307,1.054,308,1.151,309,1.054,310,1.111,311,1.151,312,1.054,313,1.091,314,1.035,315,1.151,316,0.004,317,0.004,332,4.816,334,3.125,335,3.116,343,4.387,346,4.65,347,3.352,348,0.932,349,2.286,350,3.115,353,3.547,354,3.547,355,2.718,357,2.044,358,2.718,362,3.547,363,4.98,364,3.816,1137,4.241,1205,4.387,1331,4.339,1332,4.339]],["title/components/DefaultEntryOutputComponent.html",[0,0.22,211,1.183]],["body/components/DefaultEntryOutputComponent.html",[0,0.405,1,1.123,2,0.261,3,0.261,4,1.421,5,1.205,6,1.205,8,0.228,10,0.501,19,1.065,22,0.976,24,0.007,26,2.233,27,1.971,30,1.61,32,0.49,33,0.814,35,0.91,41,2.325,43,2.367,60,0.326,64,0.737,66,0.814,87,0.916,108,1.527,110,1.103,113,1.189,132,0.392,145,0.19,146,0.131,182,0.819,183,1.582,184,1.175,188,2.029,189,1.205,190,1.205,191,1.084,192,1.123,193,1.605,194,2.065,195,1.123,196,1.239,197,2.243,198,1.143,199,2.169,200,1.123,201,1.163,202,1.143,203,1.205,204,1.123,205,1.668,206,1.143,207,1.205,208,1.123,209,1.205,210,1.084,211,1.891,212,1.836,213,1.914,214,1.084,215,1.123,216,1.123,217,1.103,218,1.205,219,1.143,220,1.914,221,1.205,222,1.205,223,1.143,224,2.065,225,1.123,226,1.123,227,1.143,228,1.143,229,1.123,230,1.205,231,1.103,232,1.143,233,1.205,234,1.123,235,1.205,236,1.205,237,1.123,238,1.205,239,1.084,240,1.123,241,1.205,242,1.103,243,1.205,244,0.993,245,1.205,246,1.103,247,1.752,248,1.205,249,1.103,250,1.205,251,1.103,252,1.205,253,1.047,254,1.205,255,1.123,256,1.028,257,1.123,258,1.143,259,1.205,260,1.123,261,1.205,262,1.205,263,1.123,264,1.205,265,1.123,266,1.205,267,1.047,268,1.205,269,1.123,270,1.123,271,1.205,272,1.123,273,1.143,274,1.205,275,1.084,276,1.103,277,1.882,278,1.123,279,0.895,280,1.143,281,1.123,282,1.123,283,1.143,284,1.123,285,1.205,286,1.123,287,1.123,288,1.205,289,1.103,290,1.205,291,1.123,292,1.205,293,1.123,294,1.205,295,1.123,296,1.205,297,1.123,298,1.065,299,1.084,300,1.205,301,1.103,302,1.205,303,1.103,304,1.205,305,1.103,306,1.205,307,1.103,308,1.205,309,1.103,310,1.163,311,1.205,312,1.103,313,1.143,314,1.084,315,1.205,316,0.004,317,0.004,332,4.936,335,3.217,343,4.529,362,3.713,363,5.141,364,3.94,373,2.788,563,2.258,732,3.94,1137,4.346,1158,2.302,1205,4.529,1333,3.713,1334,5.597,1335,4.042,1336,4.042,1337,2.968,1338,5.597]],["title/components/DefaultInputComponent.html",[0,0.22,19,1.142]],["body/components/DefaultInputComponent.html",[0,0.388,1,1.093,2,0.254,3,0.254,4,1.401,5,1.174,6,1.174,8,0.223,10,0.488,19,1.805,22,0.951,24,0.007,26,2.23,27,1.967,30,1.581,32,0.477,33,0.799,35,1.623,39,2.123,40,3.951,41,2.359,42,3.418,43,2.355,55,0.958,60,0.347,64,0.794,66,0.997,87,0.909,88,0.652,108,1.5,110,1.074,112,2.277,113,1.036,122,4.322,126,2.461,127,4.823,130,3.356,132,0.382,134,1.803,145,0.185,146,0.127,182,0.798,183,1.553,184,1.154,188,2.006,189,1.174,190,1.174,191,1.056,192,1.093,193,1.583,194,2.042,195,1.093,196,1.225,197,2.225,198,1.113,199,2.148,200,1.093,201,1.133,202,1.113,203,1.174,204,1.093,205,1.638,206,1.113,207,1.174,208,1.093,209,1.174,210,1.056,211,1.074,212,1.652,213,1.887,214,1.056,215,1.093,216,1.093,217,1.074,218,1.174,219,1.113,220,1.887,221,1.174,222,1.174,223,1.113,224,2.042,225,1.093,226,1.093,227,1.113,228,1.113,229,1.093,230,1.174,231,1.074,232,1.113,233,1.174,234,1.093,235,1.174,236,1.174,237,1.093,238,1.174,239,1.056,240,1.093,241,1.174,242,1.074,243,1.174,244,0.967,245,1.174,246,1.074,247,1.727,248,1.174,249,1.074,250,1.174,251,1.074,252,1.174,253,1.019,254,1.174,255,1.093,256,1.002,257,1.093,258,1.113,259,1.174,260,1.093,261,1.174,262,1.174,263,1.093,264,1.174,265,1.093,266,1.174,267,1.019,268,1.174,269,1.093,270,1.093,271,1.174,272,1.093,273,1.113,274,1.174,275,1.056,276,1.074,277,1.866,278,1.093,279,0.871,280,1.113,281,1.093,282,1.093,283,1.113,284,1.093,285,1.174,286,1.093,287,1.093,288,1.174,289,1.074,290,1.174,291,1.093,292,1.174,293,1.093,294,1.174,295,1.093,296,1.174,297,1.093,298,1.037,299,1.056,300,1.174,301,1.074,302,1.174,303,1.074,304,1.174,305,1.074,306,1.174,307,1.074,308,1.174,309,1.074,310,1.133,311,1.174,312,1.074,313,1.113,314,1.056,315,1.174,316,0.004,317,0.004,334,3.187,335,3.159,346,4.714,352,3.938,355,5.073,1337,2.891,1339,6.62,1340,4.447,1341,4.424,1342,4.424,1343,4.424,1344,2.666]],["title/components/DefaultOutputComponent.html",[0,0.22,214,1.163]],["body/components/DefaultOutputComponent.html",[0,0.368,1,1.113,2,0.259,3,0.259,4,1.414,5,1.195,6,1.195,8,0.227,10,0.497,19,1.056,22,0.968,24,0.007,26,2.233,27,1.97,30,1.601,32,0.486,33,0.81,35,1.439,38,0.995,41,2.366,43,2.408,60,0.324,64,0.592,66,0.81,87,0.914,108,1.518,110,1.094,113,1.135,130,3.398,132,0.389,145,0.188,146,0.13,182,0.813,183,1.573,184,1.168,188,2.022,189,1.195,190,1.195,191,1.075,192,1.113,193,1.598,194,2.058,195,1.113,196,1.235,197,2.238,198,1.133,199,2.162,200,1.113,201,1.153,202,1.133,203,1.195,204,1.113,205,1.659,206,1.133,207,1.195,208,1.113,209,1.195,210,1.075,211,1.094,212,1.661,213,1.905,214,1.851,215,1.113,216,1.113,217,1.094,218,1.195,219,1.133,220,1.905,221,1.195,222,1.195,223,1.133,224,2.058,225,1.113,226,1.113,227,1.133,228,1.133,229,1.113,230,1.195,231,1.094,232,1.133,233,1.195,234,1.113,235,1.195,236,1.195,237,1.113,238,1.195,239,1.075,240,1.113,241,1.195,242,1.094,243,1.195,244,0.985,245,1.195,246,1.094,247,1.744,248,1.195,249,1.094,250,1.195,251,1.094,252,1.195,253,1.038,254,1.195,255,1.113,256,1.02,257,1.113,258,1.133,259,1.195,260,1.113,261,1.195,262,1.195,263,1.113,264,1.195,265,1.113,266,1.195,267,1.038,268,1.195,269,1.113,270,1.113,271,1.195,272,1.113,273,1.133,274,1.195,275,1.075,276,1.094,277,1.877,278,1.113,279,0.887,280,1.133,281,1.113,282,1.113,283,1.133,284,1.113,285,1.195,286,1.113,287,1.113,288,1.195,289,1.094,290,1.195,291,1.113,292,1.195,293,1.113,294,1.195,295,1.113,296,1.195,297,1.113,298,1.056,299,1.075,300,1.195,301,1.094,302,1.195,303,1.094,304,1.195,305,1.094,306,1.195,307,1.094,308,1.195,309,1.094,310,1.153,311,1.195,312,1.094,313,1.133,314,1.075,315,1.195,316,0.004,317,0.004,335,3.198,373,2.381,732,3.917,1019,2.8,1158,2.289,1333,3.683,1334,5.565,1335,4.009,1336,4.009,1337,2.944,1338,8.495,1339,5.872,1344,2.714,1345,4.914,1346,6.253,1347,4.505,1348,6.253,1349,4.279]],["title/directives/DropzoneDirective.html",[184,0.91,301,1.183]],["body/directives/DropzoneDirective.html",[2,0.317,3,0.317,8,0.458,10,0.608,22,1.186,24,0.007,25,1.603,26,1.595,32,0.596,35,1.688,38,0.878,60,0.249,64,0.754,66,1.18,71,0.944,76,1.156,86,0.831,87,0.583,88,0.583,104,4.73,108,2.046,113,0.743,132,0.476,145,0.23,146,0.229,184,1.631,301,1.741,314,1.71,316,0.005,317,0.005,348,1.186,373,2.586,381,1.834,387,2.694,388,2.685,417,2.731,460,3.021,494,5.86,503,6.379,513,4.677,575,1.864,593,6.153,632,1.793,1263,5.733,1350,4.912,1351,5.86,1352,7.167,1353,8.731,1354,5.201,1355,7.959,1356,7.959,1357,7.084,1358,8.425,1359,8.948,1360,4.513,1361,5.52,1362,5.86,1363,5.86,1364,5.52,1365,5.52,1366,5.52,1367,6.077,1368,5.52,1369,5.52,1370,6.832,1371,5.52,1372,5.52,1373,5.52,1374,5.52,1375,5.52,1376,5.52,1377,5.52,1378,7.959,1379,5.733,1380,7.771,1381,5.52,1382,5.52,1383,5.52,1384,5.52,1385,5.52,1386,5.52,1387,5.52]],["title/components/DynamicRackComponent.html",[0,0.22,215,1.204]],["body/components/DynamicRackComponent.html",[0,0.372,1,1.145,2,0.266,3,0.266,4,0.912,5,1.229,6,1.229,8,0.233,10,0.51,19,1.086,22,0.995,23,1.885,24,0.007,26,2.234,27,1.974,30,1.632,35,0.928,41,1.632,55,1.059,60,0.288,64,0.603,66,0.6,70,2.382,72,1.956,86,0.698,87,0.938,88,0.489,106,2.024,108,1.548,110,1.125,112,1.885,113,0.858,132,0.4,145,0.193,146,0.133,171,1.768,182,0.835,183,1.603,184,1.467,188,2.046,189,1.229,190,1.229,191,1.105,192,1.145,193,1.622,194,2.083,195,1.145,196,1.354,197,2.257,198,1.165,199,2.184,200,1.145,201,1.186,202,1.165,203,1.229,204,1.145,205,1.691,206,1.165,207,1.229,208,1.145,209,1.229,210,1.105,211,1.125,212,1.675,213,1.933,214,1.105,215,1.94,216,1.145,217,1.906,218,1.229,219,1.165,220,1.933,221,1.229,222,1.229,223,1.165,224,2.083,225,1.145,226,1.145,227,1.165,228,1.165,229,1.145,230,1.229,231,1.125,232,1.165,233,1.229,234,1.145,235,1.229,236,1.229,237,1.145,238,1.229,239,1.105,240,1.145,241,1.229,242,1.125,243,1.229,244,1.013,245,1.229,246,1.125,247,1.77,248,1.229,249,1.125,250,1.229,251,1.125,252,1.229,253,1.067,254,1.229,255,1.145,256,1.049,257,1.145,258,1.165,259,1.229,260,1.145,261,1.229,262,1.229,263,1.145,264,1.229,265,1.145,266,1.229,267,1.067,268,1.229,269,1.145,270,1.145,271,1.229,272,1.145,273,1.165,274,1.229,275,1.105,276,1.125,277,1.893,278,1.145,279,0.912,280,1.165,281,1.145,282,1.145,283,1.165,284,1.145,285,1.229,286,1.145,287,1.145,288,1.229,289,1.125,290,1.229,291,1.145,292,1.229,293,1.145,294,1.229,295,1.145,296,1.229,297,1.145,298,1.086,299,1.105,300,1.229,301,1.125,302,1.229,303,1.125,304,1.229,305,1.125,306,1.229,307,1.125,308,1.229,309,1.125,310,1.186,311,1.229,312,1.125,313,1.165,314,1.105,315,1.229,316,0.004,317,0.004,348,1.566,497,2.854,632,1.505,1158,2.333,1214,3.002,1388,5.211,1389,5.211,1390,4.122,1391,4.866,1392,6.374,1393,4.122,1394,6.495,1395,4.631,1396,5.211,1397,5.211,1398,5.673,1399,4.631,1400,4.631,1401,4.631]],["title/components/DynamicSlotComponent.html",[0,0.22,216,1.204]],["body/components/DynamicSlotComponent.html",[0,0.403,1,1.029,2,0.239,3,0.239,4,0.82,5,1.105,6,1.105,8,0.209,10,0.459,19,0.976,22,0.895,23,1.75,24,0.007,26,2.227,27,1.967,30,1.515,32,0.449,33,0.766,35,0.834,38,0.663,39,1.363,41,2.106,43,1.542,44,0.908,55,1.076,60,0.267,64,0.819,66,0.97,70,2.211,72,1.816,74,1.412,75,1.363,76,0.812,86,0.891,87,0.929,88,0.625,105,1.697,106,2.585,108,1.437,110,1.011,112,1.75,113,1.065,121,1.886,132,0.359,142,1.731,145,0.174,146,0.12,171,2.258,182,0.751,183,1.488,184,1.4,188,1.953,189,1.105,190,1.105,191,0.994,192,1.029,193,1.531,194,1.988,195,1.029,196,1.309,197,2.182,198,1.047,199,2.1,200,1.029,201,1.066,202,1.047,203,1.105,204,1.029,205,1.57,206,1.047,207,1.105,208,1.029,209,1.105,210,0.994,211,1.011,212,1.62,213,1.826,214,0.994,215,1.029,216,1.852,217,1.922,218,1.105,219,1.047,220,1.826,221,1.105,222,1.105,223,1.047,224,1.988,225,1.029,226,1.029,227,1.047,228,1.047,229,1.029,230,1.105,231,1.011,232,1.047,233,1.105,234,1.029,235,1.105,236,1.105,237,1.029,238,1.105,239,0.994,240,1.029,241,1.105,242,1.011,243,1.105,244,0.911,245,1.105,246,1.011,247,1.671,248,1.105,249,1.011,250,1.105,251,1.011,252,1.105,253,0.959,254,1.105,255,1.029,256,0.943,257,1.029,258,1.047,259,1.105,260,1.029,261,1.105,262,1.105,263,1.029,264,1.105,265,1.029,266,1.105,267,0.959,268,1.105,269,1.029,270,1.029,271,1.105,272,1.029,273,1.047,274,1.105,275,0.994,276,1.011,277,1.83,278,1.029,279,0.82,280,1.047,281,1.029,282,1.029,283,1.047,284,1.029,285,1.105,286,1.029,287,1.029,288,1.105,289,1.011,290,1.105,291,1.029,292,1.105,293,1.029,294,1.105,295,1.029,296,1.105,297,1.029,298,0.976,299,0.994,300,1.105,301,1.011,302,1.105,303,1.011,304,1.105,305,1.011,306,1.105,307,1.011,308,1.105,309,1.011,310,1.066,311,1.105,312,1.922,313,1.885,314,0.994,315,1.105,316,0.004,317,0.004,348,1.479,357,1.961,367,2.467,497,3.355,499,2.627,557,3.322,1158,2.166,1214,2.787,1388,6.472,1391,4.517,1393,3.706,1394,6.89,1396,5.627,1397,4.837,1398,5.266,1402,5.701,1403,3.706,1404,4.837,1405,6.724,1406,4.837,1407,5.916,1408,4.837,1409,3.625,1410,4.164,1411,6.472,1412,4.164,1413,4.837,1414,3.706,1415,4.164,1416,4.164,1417,4.164,1418,4.164,1419,4.164,1420,4.164,1421,4.164]],["title/directives/EntriesDirective.html",[184,0.91,303,1.183]],["body/directives/EntriesDirective.html",[0,0.195,2,0.248,3,0.248,4,0.852,7,1.688,8,0.218,10,0.477,15,1.613,21,3.595,22,0.93,24,0.007,25,1.474,26,1.353,27,0.852,32,0.467,33,0.787,35,1.75,38,1.118,39,1.62,43,2.313,44,0.933,45,2.608,46,3.79,55,0.875,60,0.386,61,3.414,64,0.827,65,1.307,66,1.225,75,1.757,76,1.298,77,1.851,86,0.916,87,0.642,88,0.849,103,3.183,113,1.081,116,3.179,121,2.43,132,0.373,135,1.891,142,1.089,145,0.181,146,0.124,162,1.491,167,2.038,184,1.313,185,1.725,186,1.804,187,2.151,196,1.118,212,1.771,244,1.537,303,1.477,316,0.004,317,0.004,347,3.178,348,0.93,349,2.28,350,2.849,365,1.987,367,3.975,371,5.366,375,1.477,380,4.642,381,1.757,392,2.79,396,4.379,411,2.093,413,3.304,416,3.304,417,2.079,418,4.594,423,6.233,440,3.596,458,4.009,475,2.225,481,6.251,575,2.813,629,1.642,632,1.406,861,4.81,907,3.946,970,2.961,984,3.852,1060,4.594,1077,2.608,1078,3.538,1422,3.852,1423,4.971,1424,6.233,1425,6.785,1426,6.785,1427,6.233,1428,6.08,1429,7.029,1430,6.08,1431,4.328,1432,3.809,1433,6.08,1434,4.328,1435,4.328,1436,4.328,1437,7.624,1438,4.328,1439,4.328,1440,4.642,1441,4.328,1442,4.328,1443,4.328,1444,4.328,1445,4.328,1446,4.328,1447,6.08,1448,4.328,1449,4.328,1450,4.328,1451,4.328,1452,4.328,1453,4.328,1454,7.029,1455,6.08,1456,3.304,1457,4.328,1458,4.328,1459,4.328,1460,3.538,1461,4.328,1462,7.029,1463,6.256,1464,7.624,1465,7.029,1466,4.328,1467,4.328,1468,4.328,1469,4.328,1470,4.328,1471,4.328,1472,4.328,1473,4.328]],["title/directives/EntryDirective.html",[184,0.91,305,1.183]],["body/directives/EntryDirective.html",[2,0.294,3,0.294,4,1.679,7,2.001,8,0.258,10,0.565,15,1.812,21,3.928,22,1.103,24,0.007,25,1.254,26,1.52,27,1.01,32,0.554,33,0.884,35,1.822,44,1.048,46,4.071,55,1.114,60,0.37,64,0.871,65,1.76,66,1.214,71,0.877,76,1.203,77,1.246,86,0.773,87,0.542,88,0.542,103,3.209,113,0.919,116,3.347,121,2.177,132,0.443,135,2.242,145,0.214,146,0.148,184,1.53,185,2.045,186,2.139,187,2.551,212,1.926,244,1.679,305,1.659,316,0.005,317,0.005,347,3.414,348,1.103,349,2.703,350,3.06,364,5.13,365,2.355,367,4.103,368,4.13,371,5.863,372,5.138,373,2.513,375,1.659,380,5.215,381,1.574,384,2.553,386,3.713,387,1.517,388,2.61,392,2.5,393,6.08,396,4.92,399,4.566,400,2.981,411,2.482,413,3.917,416,3.917,417,1.517,418,4.116,423,5.585,440,3.818,632,1.667,907,4.311,970,3.511,983,4.566,1060,3.091,1077,3.091,1113,4.195,1423,5.585,1424,6.278,1463,4.566,1474,4.566,1475,6.835,1476,6.831,1477,5.13,1478,5.13,1479,5.13,1480,5.13,1481,5.13,1482,5.13,1483,5.13,1484,5.13,1485,5.13,1486,5.13,1487,6.831,1488,5.13,1489,5.13,1490,5.13]],["title/components/EntryListComponent.html",[0,0.22,225,1.204]],["body/components/EntryListComponent.html",[0,0.313,1,0.752,2,0.175,3,0.175,4,0.599,5,0.807,6,0.807,7,1.187,8,0.153,10,0.335,18,2.743,19,0.713,22,0.654,24,0.007,25,0.559,26,2.199,27,1.936,30,1.201,32,0.328,33,0.95,34,1.615,35,1.47,38,1.216,39,1.6,41,1.465,43,0.793,44,0.986,46,2.331,55,0.584,60,0.39,64,0.836,65,1.492,66,1.183,70,1.137,71,0.52,72,1.973,74,0.726,75,1.318,76,1.154,77,1.781,84,2.131,86,0.968,87,0.902,88,0.855,103,3.017,105,1.911,108,1.139,110,0.739,113,0.77,116,2.184,123,4.91,130,1.654,132,0.262,142,1.18,145,0.127,146,0.087,167,2.209,182,0.549,183,1.18,184,0.876,185,1.213,186,1.269,187,1.513,188,1.675,189,0.807,190,0.807,191,0.726,192,0.752,193,1.273,194,1.705,195,0.752,196,1.486,197,1.946,198,0.765,199,1.842,200,0.752,201,0.779,202,0.765,203,0.807,204,0.752,205,1.244,206,0.765,207,0.807,208,0.752,209,0.807,210,0.726,211,0.739,212,1.722,213,1.518,214,0.726,215,0.752,216,0.752,217,0.739,218,0.807,219,0.765,220,1.518,221,0.807,222,0.807,223,0.765,224,1.705,225,1.813,226,0.752,227,0.765,228,0.765,229,0.752,230,0.807,231,0.739,232,0.765,233,0.807,234,0.752,235,0.807,236,0.807,237,0.752,238,0.807,239,1.365,240,0.752,241,0.807,242,0.739,243,0.807,244,1.025,245,0.807,246,0.739,247,1.389,248,0.807,249,0.739,250,0.807,251,0.739,252,0.807,253,0.701,254,0.807,255,0.752,256,0.689,257,0.752,258,0.765,259,0.807,260,0.752,261,0.807,262,0.807,263,0.752,264,0.807,265,0.752,266,0.807,267,0.701,268,0.807,269,0.752,270,0.752,271,0.807,272,0.752,273,0.765,274,0.807,275,0.726,276,0.739,277,1.84,278,0.752,279,0.599,280,0.765,281,2.233,282,0.752,283,0.765,284,0.752,285,0.807,286,0.752,287,0.752,288,0.807,289,0.739,290,0.807,291,0.752,292,0.807,293,0.752,294,0.807,295,0.752,296,0.807,297,0.752,298,0.713,299,0.726,300,0.807,301,0.739,302,0.807,303,0.739,304,0.807,305,0.739,306,0.807,307,0.739,308,0.807,309,0.739,310,0.779,311,0.807,312,0.739,313,0.765,314,0.726,315,0.807,316,0.003,317,0.003,332,5.23,339,2.695,347,2.68,348,1.229,350,2.402,358,2.938,365,1.397,367,2.895,373,1.439,381,0.701,387,0.9,388,0.97,392,1.716,394,1.33,400,1.768,411,1.472,430,2.488,432,3.773,433,4.183,434,5.4,435,6.802,436,2.695,437,4.173,438,2.562,439,5.997,440,2.561,441,2.561,442,3.064,443,3.834,444,2.488,445,1.33,446,2.488,447,1.603,448,2.708,449,2.708,450,2.708,451,2.926,452,2.708,453,1.708,454,2.488,455,2.708,456,1.362,457,0.952,458,1.397,459,2.708,460,1.091,461,2.708,463,2.708,464,4.184,465,2.488,466,2.708,467,1.906,468,2.708,469,2.708,470,2.708,471,2.708,472,1.33,473,2.323,474,2.708,475,2.888,476,2.708,477,2.708,478,1.603,479,1.603,480,2.708,481,4.201,482,2.708,483,5.4,484,2.708,485,1.833,486,1.768,487,3.834,493,2.488,496,1.556,522,1.298,548,1.654,571,1.556,574,2.488,623,3.109,630,1.654,631,2.323,731,1.708,799,1.768,909,3.109,918,3.865,919,3.735,920,2.62,921,2.68,952,5.835,955,2.488,960,1.603,970,4.751,995,3.738,1002,4.441,1036,2.323,1038,3.494,1060,3.447,1077,1.833,1126,4.027,1135,2.488,1143,1.988,1326,2.323,1423,3.834,1491,5.721,1492,4.689,1493,4.689,1494,6.428,1495,3.043,1496,3.738,1497,4.431,1498,4.689,1499,4.173,1500,3.043,1501,3.043,1502,3.043,1503,3.209,1504,3.043,1505,3.043,1506,1.988,1507,3.043,1508,1.833,1509,3.043,1510,3.043,1511,3.043,1512,3.043,1513,3.043,1514,3.043,1515,3.043,1516,3.043,1517,3.043,1518,3.043,1519,4.689,1520,4.689,1521,1.906,1522,3.043,1523,3.043,1524,2.708,1525,2.488,1526,3.043,1527,3.043,1528,3.043]],["title/components/EntryListPopComponent.html",[0,0.22,226,1.204]],["body/components/EntryListPopComponent.html",[0,0.334,1,0.869,2,0.202,3,0.202,4,0.692,5,1.388,6,0.933,8,0.177,15,1.388,18,2.232,19,0.824,21,3.196,22,0.756,24,0.007,25,1.27,26,2.213,27,1.952,30,1.339,32,0.379,33,0.677,34,1.802,35,1.61,38,0.994,39,1.943,43,1.363,44,0.803,46,3.44,60,0.362,64,0.844,65,1.124,66,1.19,71,0.601,74,1.765,76,1.015,77,1.796,84,1.079,86,0.941,87,0.907,88,0.66,103,2.653,105,1.433,106,2.286,108,1.271,110,0.854,113,0.996,123,4.509,132,0.303,135,1.536,145,0.147,146,0.101,182,0.634,183,1.316,184,0.978,188,1.803,189,0.933,190,0.933,191,0.839,192,0.869,193,1.39,194,1.836,195,0.869,196,1.529,197,2.057,198,0.884,199,1.963,200,0.869,201,0.9,202,0.884,203,0.933,204,0.869,205,1.388,206,0.884,207,0.933,208,0.869,209,0.933,210,0.839,211,0.854,212,1.69,213,1.658,214,0.839,215,0.869,216,0.869,217,0.854,218,0.933,219,0.884,220,1.658,221,0.933,222,0.933,223,0.884,224,1.836,225,0.869,226,1.71,227,0.884,228,0.884,229,0.869,230,0.933,231,0.854,232,0.884,233,0.933,234,0.869,235,0.933,236,0.933,237,0.869,238,0.933,239,0.839,240,0.869,241,0.933,242,0.854,243,0.933,244,0.769,245,0.933,246,0.854,247,1.517,248,0.933,249,0.854,250,0.933,251,0.854,252,0.933,253,0.81,254,0.933,255,0.869,256,0.796,257,0.869,258,0.884,259,0.933,260,0.869,261,0.933,262,0.933,263,0.869,264,0.933,265,0.869,266,0.933,267,0.81,268,0.933,269,0.869,270,0.869,271,0.933,272,0.869,273,0.884,274,0.933,275,2.078,276,0.854,277,1.725,278,0.869,279,0.692,280,0.884,281,0.869,282,0.869,283,0.884,284,1.828,285,0.933,286,0.869,287,0.869,288,0.933,289,0.854,290,0.933,291,0.869,292,0.933,293,0.869,294,0.933,295,0.869,296,0.933,297,0.869,298,0.824,299,0.839,300,0.933,301,0.854,302,0.933,303,0.854,304,0.933,305,0.854,306,0.933,307,0.854,308,0.933,309,0.854,310,0.9,311,0.933,312,0.854,313,0.884,314,0.839,315,0.933,316,0.004,317,0.004,332,5.959,348,1.124,373,2.124,381,1.787,384,1.955,387,2.047,388,2.358,417,1.04,434,2.406,457,2.684,460,2.653,475,2.287,479,2.757,491,2.684,492,4.108,500,3.084,504,3.994,506,4.735,507,5.062,510,3.678,511,4.672,513,3.751,514,4.042,515,4.635,517,5.031,530,2.043,531,2.532,532,3.129,533,3.129,537,3.129,546,3.129,547,2.843,548,2.843,549,3.129,550,2.875,551,3.129,552,2.684,558,2.342,559,3.129,560,2.684,561,1.799,562,2.684,563,1.748,566,3.129,568,3.129,573,3.129,576,3.129,587,2.406,589,2.298,731,1.974,892,2.406,958,6.649,970,2.406,993,2.532,995,4.083,1002,3.63,1060,2.119,1077,2.119,1126,4.858,1143,2.298,1496,4.834,1529,6.92,1530,3.516,1531,5.232,1532,3.516,1533,3.516,1534,3.516,1535,3.516,1536,3.129,1537,4.656,1538,3.516,1539,3.129,1540,3.129,1541,3.516,1542,3.516,1543,3.129,1544,3.129,1545,2.875]],["title/components/ErrorComponent.html",[0,0.22,229,1.204]],["body/components/ErrorComponent.html",[0,0.362,1,1.07,2,0.248,3,0.248,4,0.852,5,1.148,6,1.148,8,0.218,10,0.477,15,1.613,19,1.015,20,3.704,21,3.595,22,0.93,24,0.007,26,2.23,27,1.967,30,1.557,32,0.467,35,1.61,44,0.933,46,3.79,47,4.017,60,0.274,64,0.576,66,1.04,76,1.046,77,1.707,84,1.866,86,0.652,87,0.95,88,0.457,103,2.18,108,1.477,110,1.051,113,0.818,119,3.533,132,0.373,142,1.089,145,0.181,146,0.124,182,0.781,183,1.529,184,1.136,188,1.987,189,1.148,190,1.148,191,1.033,192,1.07,193,1.564,194,2.023,195,1.07,196,1.325,197,2.21,198,1.089,199,2.131,200,1.07,201,1.108,202,1.089,203,1.148,204,1.737,205,1.613,206,1.089,207,1.148,208,1.07,209,1.148,210,1.033,211,1.051,212,1.72,213,1.865,214,1.033,215,1.07,216,1.07,217,1.051,218,1.148,219,1.089,220,1.865,221,1.148,222,1.148,223,1.089,224,2.023,225,1.07,226,1.07,227,1.089,228,1.089,229,1.884,230,1.148,231,1.051,232,1.089,233,1.148,234,1.07,235,1.148,236,1.148,237,1.07,238,1.148,239,1.033,240,1.07,241,1.148,242,1.051,243,1.148,244,0.946,245,1.148,246,1.051,247,1.707,248,1.148,249,1.051,250,1.148,251,1.051,252,1.148,253,0.997,254,1.148,255,1.07,256,0.98,257,1.07,258,1.089,259,1.148,260,1.07,261,1.148,262,1.148,263,1.07,264,1.148,265,1.07,266,1.148,267,0.997,268,1.148,269,1.07,270,1.07,271,1.148,272,1.07,273,1.089,274,1.148,275,1.033,276,1.051,277,1.853,278,1.07,279,0.852,280,1.089,281,1.07,282,1.07,283,1.089,284,1.07,285,1.148,286,1.07,287,1.07,288,1.148,289,1.051,290,1.148,291,1.07,292,1.148,293,1.07,294,1.148,295,1.07,296,1.148,297,1.07,298,1.015,299,1.033,300,1.148,301,1.051,302,1.148,303,1.051,304,1.148,305,1.051,306,1.148,307,1.051,308,1.148,309,1.051,310,1.108,311,1.148,312,1.051,313,1.089,314,1.033,315,1.148,316,0.004,317,0.004,327,2.053,347,1.804,348,0.93,438,3.585,472,2.657,616,3.75,617,4.509,632,1.406,902,4.379,903,3.414,904,4.971,905,4.642,920,2.478,921,3.178,960,2.28,1158,2.573,1546,3.852,1547,6.08,1548,3.117,1549,6.08,1550,4.328,1551,4.328,1552,4.328,1553,4.328,1554,5.411,1555,4.328,1556,4.328,1557,4.328,1558,4.328,1559,4.328,1560,4.328,1561,4.328,1562,4.328,1563,4.328]],["title/classes/Field.html",[41,1.247,146,0.14]],["body/classes/Field.html",[0,0.339,2,0.209,3,0.209,7,2.093,8,0.183,15,1.424,24,0.007,25,1.171,32,0.579,33,1.189,34,1.254,35,1.734,38,1.497,41,2.426,42,2.599,43,1.662,44,1.205,55,0.978,56,3.36,60,0.164,64,0.907,65,2.094,66,1.24,71,0.622,75,1.237,76,1.029,86,0.548,87,0.881,88,1.027,112,2.653,113,1.122,118,3.151,142,1.35,145,0.152,146,0.249,171,3.181,196,1.354,316,0.004,317,0.004,336,4.409,348,0.782,365,1.671,368,3.699,373,2.304,381,2.14,384,2.383,392,1.332,404,3.673,417,2.322,436,4.076,445,2.786,456,1.63,457,1.679,467,3.363,472,3.075,475,3.212,492,2.746,499,2.434,500,1.518,501,3.866,514,3.315,524,2.917,599,4.53,672,3.866,813,4.777,887,2.746,942,3.014,976,2.976,1019,3.875,1028,1.671,1102,3.363,1158,2.874,1184,4.098,1185,3.466,1205,2.622,1208,2.622,1214,3.926,1226,3.235,1521,3.363,1564,3.24,1565,4.894,1566,6.264,1567,5.373,1568,4.241,1569,5.131,1570,5.754,1571,5.656,1572,4.92,1573,7.038,1574,5.368,1575,3.64,1576,4.389,1577,3.64,1578,3.64,1579,3.64,1580,4.098,1581,3.866,1582,4.777,1583,3.64,1584,3.64,1585,5.368,1586,4.098,1587,3.64,1588,4.389,1589,5.368,1590,4.389,1591,3.64,1592,3.64,1593,3.64,1594,3.64,1595,4.777,1596,3.119,1597,3.64,1598,3.64,1599,3.64,1600,7.853,1601,3.64,1602,3.673,1603,3.64,1604,3.64,1605,3.64,1606,3.64,1607,3.64,1608,3.64,1609,4.777,1610,2.379,1611,2.976,1612,2.779,1613,3.014,1614,2.491,1615,3.24,1616,3.235,1617,2.193,1618,2.044,1619,2.976,1620,3.24,1621,3.24,1622,2.976,1623,1.918,1624,3.24,1625,2.976,1626,2.976,1627,4.098,1628,4.389,1629,2.044,1630,3.24,1631,4.098,1632,3.24,1633,3.24,1634,2.491,1635,3.24,1636,3.24,1637,2.976,1638,2.976,1639,3.24,1640,2.779,1641,2.622,1642,2.779,1643,2.491,1644,3.24,1645,2.779,1646,4.389,1647,3.64,1648,3.64,1649,3.24,1650,3.64,1651,2.976]],["title/interfaces/FieldConfig.html",[998,1.441,1652,2.936]],["body/interfaces/FieldConfig.html",[2,0.422,3,0.422,8,0.37,10,0.81,24,0.007,32,0.793,41,2.315,65,1.837,66,0.951,112,2.528,145,0.307,196,1.169,316,0.006,317,0.006,880,4.763,887,4.372,998,2.528,1000,4.603,1043,4.134,1565,5.609,1652,5.15,1653,7.607,1654,7.346]],["title/interfaces/FileOptions.html",[998,1.441,1655,3.334]],["body/interfaces/FileOptions.html",[0,0.171,2,0.218,3,0.218,8,0.401,10,0.419,24,0.007,25,0.698,32,0.41,33,0.717,39,1.837,43,2.278,55,0.894,60,0.4,64,0.799,65,1.903,70,2.07,71,1.532,72,1.166,75,0.875,76,1.316,79,2.289,84,2.205,87,0.585,88,0.982,103,1.362,112,1.933,116,3.043,118,3.216,126,1.514,132,0.328,142,2.006,145,0.273,146,0.109,162,2.252,171,2.742,193,2.163,196,1.143,212,1.287,277,1.455,279,0.748,298,2.05,316,0.004,317,0.005,340,3.939,347,2.725,350,2.07,368,2.609,370,5.226,375,1.587,381,1.982,386,2.065,387,1.124,388,2.29,409,5.226,410,2.6,411,1.838,417,1.638,425,2.901,432,3.553,438,2.605,441,2.927,456,1.701,460,1.986,464,3.338,478,2.002,485,2.289,512,4.501,520,2.208,522,1.621,524,2.065,558,2.48,575,2.208,585,2.6,592,2.736,618,2.38,629,1.026,632,1.234,708,2.208,730,2.483,731,3.11,766,3.67,774,2.736,781,2.483,894,2.919,909,1.838,979,3.79,998,2.259,1017,2.736,1028,1.744,1038,2.065,1040,2.289,1041,2.6,1042,2.289,1043,1.838,1044,2.289,1045,1.66,1046,2.483,1076,2.6,1080,2.483,1096,2.208,1127,3.218,1144,2.483,1344,2.289,1409,2.679,1432,2.38,1497,3.67,1506,2.483,1508,3.338,1613,2.133,1655,4.473,1656,2.901,1657,5.484,1658,6.518,1659,5.484,1660,5.484,1661,5.484,1662,3.99,1663,3.338,1664,3.99,1665,3.47,1666,4.529,1667,4.529,1668,4.529,1669,3.106,1670,4.991,1671,2.901,1672,3.106,1673,3.106,1674,3.106,1675,3.106,1676,2.6,1677,3.106,1678,3.106,1679,3.106,1680,4.529,1681,4.272,1682,3.106,1683,2.6,1684,2.736,1685,2.38,1686,3.106,1687,6.244,1688,3.106,1689,3.106,1690,5.344,1691,3.106,1692,4.529,1693,4.529,1694,4.529,1695,4.529,1696,4.529,1697,4.529,1698,4.529,1699,4.529,1700,4.529,1701,4.529,1702,4.991,1703,2.901,1704,3.106,1705,3.106,1706,3.106,1707,4.529,1708,3.106,1709,4.529,1710,3.106,1711,5.873,1712,3.106,1713,3.106,1714,3.106,1715,4.529,1716,4.529,1717,3.106,1718,3.106,1719,2.901,1720,3.106,1721,2.133,1722,2.6,1723,3.106,1724,3.106,1725,3.106,1726,3.106,1727,3.106,1728,3.106,1729,3.106,1730,3.106,1731,3.106,1732,3.106,1733,3.106,1734,3.106]],["title/injectables/FileService.html",[375,1.183,520,2.831]],["body/injectables/FileService.html",[0,0.226,2,0.19,3,0.19,8,0.408,10,0.365,24,0.007,25,0.919,32,0.358,33,0.648,38,1.069,39,2.132,43,2.204,44,0.768,55,0.898,60,0.388,64,0.801,65,1.846,66,1.074,70,2.511,71,1.534,72,1.017,75,1.153,76,1.321,79,1.997,84,2.417,86,1.186,87,0.857,88,0.962,103,1.188,112,1.783,113,0.904,116,3.323,118,3.396,126,1.995,132,0.286,142,1.908,145,0.252,146,0.095,162,2.077,171,1.91,193,2.149,196,1.148,212,1.494,277,1.342,279,0.986,298,2.104,316,0.003,317,0.005,339,2.357,340,4.048,347,3.162,348,0.712,349,1.746,350,2.511,368,2.357,370,4.935,375,1.751,381,1.389,386,2.72,387,1.48,388,2.51,394,2.187,409,5.547,410,2.267,411,1.603,417,1.987,420,2.53,425,2.53,432,4.279,438,2.875,441,2.7,456,2.241,460,2.162,464,3.015,478,2.637,485,1.997,512,5.079,520,2.908,522,2.135,524,2.72,558,2.241,575,2.037,585,2.267,592,2.387,618,3.135,629,0.895,632,1.077,708,2.659,730,2.165,731,2.81,766,3.385,774,2.387,781,2.165,894,1.746,909,2.421,979,3.424,998,1.783,1017,3.604,1028,1.521,1038,1.801,1040,3.015,1041,3.424,1042,3.015,1043,2.421,1044,3.015,1045,2.187,1046,3.27,1076,3.424,1080,2.165,1096,2.908,1127,3.903,1144,2.165,1344,1.997,1409,2.917,1432,3.135,1497,4.421,1506,2.165,1508,1.997,1613,1.86,1655,5.19,1656,2.53,1657,2.53,1658,4.091,1659,2.53,1660,2.53,1661,2.53,1662,2.387,1663,1.997,1664,2.387,1665,2.076,1666,2.709,1667,2.709,1668,4.091,1669,2.709,1670,5.79,1671,2.53,1672,2.709,1673,2.709,1674,5.493,1675,5.493,1676,4.126,1677,4.091,1678,2.709,1679,2.709,1680,4.091,1681,3.94,1682,2.709,1683,2.267,1684,2.387,1685,2.076,1686,2.709,1687,6.437,1688,4.091,1689,4.93,1690,4.93,1691,2.709,1692,4.091,1693,4.091,1694,4.091,1695,4.091,1696,4.091,1697,4.091,1698,4.091,1699,4.091,1700,4.091,1701,4.091,1702,4.603,1703,3.821,1704,2.709,1705,2.709,1706,2.709,1707,4.091,1708,2.709,1709,4.091,1710,4.091,1711,5.493,1712,2.709,1713,2.709,1714,2.709,1715,4.091,1716,4.091,1717,2.709,1718,2.709,1719,2.53,1720,2.709,1721,1.86,1722,2.267,1723,2.709,1724,2.709,1725,2.709,1726,2.709,1727,2.709,1728,2.709,1729,2.709,1730,2.709,1731,4.091,1732,4.091,1733,2.709,1734,2.709,1735,5.004,1736,5.004,1737,5.004,1738,5.004,1739,4.454,1740,5.004,1741,3.314,1742,3.314,1743,3.314,1744,3.314,1745,3.314,1746,3.314,1747,3.314,1748,3.314]],["title/modules/FilesModule.html",[318,1.047,1122,3.509]],["body/modules/FilesModule.html",[2,0.298,3,0.298,8,0.261,23,2.283,24,0.007,58,1.786,60,0.438,132,0.447,134,2.113,141,2.825,145,0.343,146,0.149,182,0.935,185,2.066,192,2.336,193,1.718,195,2.336,196,1.095,198,2.404,200,2.362,201,1.327,297,2.362,299,2.256,301,2.296,309,2.296,316,0.005,317,0.005,318,1.478,320,2.066,325,2.803,326,1.979,327,1.751,329,3.862,330,2.625,429,4.238,486,3.012,490,4.238,520,5.11,572,4.238,595,4.238,651,5.299,653,3.158,654,2.321,660,4.238,959,3.388,1122,7.171,1123,6.018,1124,6.177,1129,4.954,1140,5.251,1145,4.614,1147,4.238,1749,4.614,1750,4.614,1751,5.184,1752,4.614,1753,4.614,1754,5.184,1755,3.734,1756,3.388,1757,4.614,1758,4.614,1759,5.184,1760,5.184,1761,5.184]],["title/interfaces/Focus.html",[998,1.441,1762,3.334]],["body/interfaces/Focus.html",[2,0.422,3,0.422,8,0.37,24,0.007,32,0.793,33,1.107,44,1.311,60,0.332,64,0.696,66,0.951,76,1.008,132,0.634,145,0.307,316,0.006,317,0.006,388,2.967,998,2.528,1762,5.849,1763,6.538,1764,8.284,1765,6.704,1766,7.346]],["title/directives/FocusDirective.html",[184,0.91,307,1.183]],["body/directives/FocusDirective.html",[2,0.391,3,0.391,8,0.343,15,2.168,20,4.614,22,1.464,24,0.007,26,1.949,32,0.735,35,1.82,44,1.254,47,4.785,60,0.307,64,0.774,66,1.134,76,0.934,77,1.654,86,1.026,87,0.72,88,0.72,104,5.099,108,1.985,132,0.588,145,0.284,146,0.196,184,1.636,307,1.985,316,0.006,317,0.006,348,1.464,381,1.569,387,2.014,388,2.791,458,3.127,632,2.213,1360,5.568,1767,6.062,1768,9.288,1769,8.173,1770,6.811,1771,5.568,1772,6.811,1773,6.811,1774,6.811,1775,6.811,1776,6.811]],["title/interfaces/FormConfig.html",[998,1.441,1777,3.983]],["body/interfaces/FormConfig.html",[2,0.426,3,0.426,8,0.373,10,0.818,18,3.669,24,0.007,60,0.335,145,0.31,316,0.006,317,0.006,493,7.031,571,3.797,998,2.543,1000,4.651,1777,7.635,1778,6.607,1779,6.502,1780,6.069]],["title/modules/FormModule.html",[318,1.047,1781,3.334]],["body/modules/FormModule.html",[2,0.272,3,0.272,8,0.238,19,2.093,23,2.181,24,0.007,58,1.632,60,0.439,113,0.871,132,0.409,134,1.931,141,2.699,145,0.331,146,0.136,173,2.753,174,2.968,182,0.855,202,2.344,206,2.344,208,2.303,214,2.13,231,2.263,232,2.344,265,2.303,293,2.303,316,0.004,317,0.004,318,1.391,320,1.888,325,2.638,326,1.808,327,1.6,329,3.635,330,2.471,355,2.968,514,2.232,653,2.972,654,2.121,656,5.046,1138,3.412,1181,6.712,1345,3.242,1781,6.84,1782,4.217,1783,4.217,1784,4.217,1785,4.217,1786,4.217,1787,6.712,1788,6.712,1789,6.377,1790,6.09,1791,5.367,1792,5.862,1793,5.598,1794,6.17,1795,4.738,1796,3.873,1797,4.738,1798,4.738,1799,4.217,1800,4.738,1801,4.738,1802,4.738,1803,4.738,1804,4.738,1805,4.217,1806,3.617,1807,4.217,1808,4.738,1809,3.873,1810,4.738,1811,4.738]],["title/injectables/FormService.html",[375,1.183,1794,3.509]],["body/injectables/FormService.html",[2,0.302,3,0.302,8,0.264,10,0.579,14,4.095,24,0.007,32,0.567,39,2.034,40,4.159,41,2.508,42,3.669,44,1.065,55,0.968,60,0.373,64,0.783,66,1.07,71,1.47,72,2.13,75,1.905,76,1.291,77,1.276,86,1.245,87,0.873,88,0.873,112,2.892,119,4.033,122,2.951,127,5.179,132,0.453,134,2.142,142,2.221,145,0.219,146,0.223,167,2.476,171,2.006,316,0.005,317,0.005,375,1.887,417,1.554,438,2.095,445,2.297,447,3.657,472,3.033,496,3.551,522,2.962,562,5.299,616,3.24,805,3.451,866,3.657,998,2.053,1337,3.434,1572,5.896,1794,4.999,1812,4.678,1813,4.349,1814,6.941,1815,6.941,1816,6.941,1817,6.941,1818,6.941,1819,5.256,1820,6.941,1821,5.256,1822,6.941,1823,5.256,1824,6.941,1825,6.917,1826,6.941,1827,5.256,1828,8.267,1829,7.772,1830,4.678,1831,6.941,1832,5.256,1833,4.678,1834,5.256,1835,6.941,1836,5.256,1837,6.941,1838,5.256,1839,5.256,1840,5.256,1841,5.256,1842,5.256,1843,5.256,1844,5.256,1845,5.256,1846,5.256,1847,5.256]],["title/injectables/GeocodeService.html",[375,1.183,1848,3.184]],["body/injectables/GeocodeService.html",[2,0.292,3,0.292,8,0.256,10,0.561,11,4.256,24,0.007,32,0.549,35,1.636,39,2.117,44,1.042,60,0.384,64,0.805,66,1.101,71,1.396,75,2.016,76,1.293,86,1.281,87,0.898,88,0.898,108,1.982,116,3.115,132,0.439,141,2.487,142,1.924,145,0.212,146,0.146,188,1.326,247,2.231,316,0.006,317,0.005,339,3.2,348,1.093,375,1.857,384,2.539,467,4.256,479,4.48,496,3.475,506,4.649,575,1.719,632,1.653,859,3.188,866,2.681,881,3.947,894,4.3,1056,3.665,1185,3.692,1351,5.554,1362,5.554,1848,4.439,1849,4.16,1850,5.878,1851,7.648,1852,6.794,1853,6.794,1854,6.794,1855,6.794,1856,5.088,1857,8.161,1858,7.949,1859,5.088,1860,6.794,1861,6.794,1862,5.088,1863,6.952,1864,6.794,1865,5.088,1866,5.554,1867,7.568,1868,5.554,1869,6.794,1870,5.088,1871,6.794,1872,6.794,1873,5.088,1874,4.16,1875,5.088,1876,5.088,1877,5.088,1878,4.529,1879,4.529,1880,5.088,1881,5.088,1882,5.088,1883,5.088,1884,4.256,1885,5.088,1886,5.088,1887,6.794,1888,4.16,1889,6.046,1890,5.088,1891,6.046,1892,5.088,1893,5.088,1894,5.088,1895,5.088,1896,5.088,1897,5.088,1898,4.16,1899,5.088,1900,5.088,1901,6.046,1902,5.088,1903,5.088,1904,5.088,1905,5.088,1906,5.088,1907,5.088,1908,5.088,1909,5.088,1910,5.088,1911,5.088]],["title/pipes/GroupPipe.html",[1180,2.567,1183,3.334]],["body/pipes/GroupPipe.html",[2,0.383,3,0.383,8,0.336,10,0.736,15,1.773,22,1.436,24,0.007,33,1.216,38,1.525,42,3.293,43,2.476,44,1.025,55,1.006,60,0.365,64,0.633,65,1.867,66,0.865,72,2.48,75,1.862,76,1.238,86,1.006,87,0.918,88,0.706,126,3.221,132,0.576,145,0.279,146,0.192,316,0.006,317,0.006,436,3.806,563,3.322,708,3.121,818,5.062,1180,4.577,1183,6.175,1184,6.169,1185,3.632,1191,5.529,1912,5.947,1913,8.08,1914,6.682,1915,6.682,1916,6.682]],["title/injectables/HistoryService.html",[375,1.183,1125,3.509]],["body/injectables/HistoryService.html",[2,0.247,3,0.402,8,0.217,10,0.474,24,0.007,32,0.465,33,0.784,38,1.276,39,2.113,44,1.075,60,0.394,64,0.886,65,1.874,66,1.163,71,0.736,72,2.335,75,1.968,76,1.196,77,1.045,84,2.335,86,1.146,87,0.804,88,0.804,103,2.172,113,1.079,116,3.06,121,1.931,132,0.371,135,1.881,142,1.763,145,0.18,146,0.124,165,3.292,212,1.193,277,1.973,279,1.38,316,0.004,317,0.004,338,6.983,348,1.302,356,3.52,367,3.171,375,1.702,387,1.792,402,1.976,417,1.792,421,2.813,422,3.831,438,3.581,441,4.191,511,4.583,513,2.93,615,2.594,616,2.526,623,4.022,630,2.34,681,5.478,766,2.417,767,2.697,797,4.363,799,3.52,881,4.419,887,4.69,912,5.991,918,4.831,919,4.657,987,2.813,1060,5.147,1077,2.594,1125,5.478,1305,3.52,1409,3.679,1497,5.147,1506,2.813,1702,4.625,1917,3.831,1918,4.625,1919,8.542,1920,6.058,1921,6.058,1922,3.831,1923,6.058,1924,6.058,1925,4.305,1926,4.145,1927,5.391,1928,8.314,1929,6.058,1930,8.542,1931,4.305,1932,3.891,1933,5.478,1934,6.058,1935,4.305,1936,4.953,1937,5.391,1938,4.305,1939,4.305,1940,4.305,1941,6.769,1942,4.305,1943,4.305,1944,4.305,1945,4.305,1946,4.305,1947,8.542,1948,4.305,1949,4.305,1950,4.305,1951,6.058,1952,7.009,1953,4.625,1954,4.305,1955,4.305,1956,6.058,1957,4.305,1958,4.305,1959,6.058,1960,3.52,1961,6.058,1962,4.305,1963,4.305]],["title/components/IconComponent.html",[0,0.22,234,1.204]],["body/components/IconComponent.html",[0,0.379,1,1.005,2,0.233,3,0.233,4,0.801,5,1.079,6,1.079,8,0.205,10,0.448,15,1.544,19,0.954,20,3.58,22,0.874,24,0.007,26,2.225,27,1.964,30,1.49,32,0.439,33,0.753,34,2.005,35,1.572,44,0.893,47,3.907,55,0.923,60,0.354,64,0.643,65,1.251,66,0.96,73,4.191,74,1.389,75,0.937,76,0.558,77,0.988,86,0.613,87,1,88,0.43,108,1.413,110,0.988,113,0.914,118,3.32,121,2.501,132,0.351,139,5.074,145,0.284,146,0.195,182,0.734,183,1.464,184,1.087,188,1.933,189,1.079,190,1.079,191,0.971,192,1.005,193,1.512,194,1.967,195,1.005,196,1.18,197,2.165,198,1.023,199,2.081,200,1.005,201,1.042,202,1.023,203,1.079,204,1.005,205,1.544,206,1.023,207,1.079,208,1.005,209,1.079,210,0.971,211,0.988,212,1.607,213,1.802,214,0.971,215,1.005,216,1.005,217,0.988,218,1.079,219,1.023,220,1.802,221,1.079,222,1.079,223,1.023,224,1.967,225,1.005,226,1.005,227,1.023,228,1.023,229,1.005,230,1.079,231,0.988,232,1.023,233,1.079,234,1.833,235,1.079,236,1.079,237,1.005,238,1.079,239,0.971,240,1.005,241,1.079,242,0.988,243,1.079,244,0.89,245,1.079,246,0.988,247,1.65,248,1.079,249,0.988,250,1.079,251,0.988,252,1.079,253,0.937,254,1.079,255,1.005,256,0.921,257,1.005,258,1.023,259,1.079,260,1.005,261,1.079,262,1.079,263,1.005,264,1.079,265,1.005,266,1.079,267,0.937,268,1.079,269,1.005,270,1.005,271,1.079,272,1.005,273,1.023,274,1.079,275,0.971,276,0.988,277,1.816,278,1.005,279,0.801,280,1.023,281,1.005,282,1.005,283,1.023,284,1.005,285,1.079,286,1.005,287,1.005,288,1.079,289,0.988,290,1.079,291,1.005,292,1.079,293,1.005,294,1.079,295,1.005,296,1.079,297,1.005,298,0.954,299,0.971,300,1.079,301,0.988,302,1.079,303,0.988,304,1.079,305,0.988,306,1.079,307,0.988,308,1.079,309,0.988,310,1.042,311,1.079,312,0.988,313,1.023,314,0.971,315,1.079,316,0.004,317,0.005,348,0.874,357,2.741,365,1.867,451,2.977,615,4.094,628,2.658,632,1.322,680,3.106,920,3.022,1158,2.487,1305,2.364,1503,4.649,1521,2.549,1569,6.4,1964,3.62,1965,6.679,1966,4.646,1967,5.819,1968,4.068,1969,6.026,1970,5.819,1971,4.068,1972,4.068,1973,5.819,1974,4.757,1975,3.62,1976,3.326,1977,4.443,1978,5.179,1979,5.179,1980,3.62,1981,3.62,1982,3.62,1983,3.62,1984,5.819,1985,4.068,1986,4.068,1987,4.068,1988,2.784,1989,4.068,1990,5.819]],["title/modules/IconModule.html",[318,1.047,1791,3.053]],["body/modules/IconModule.html",[2,0.396,3,0.396,8,0.347,23,2.604,24,0.007,58,2.376,60,0.421,132,0.595,141,3.223,145,0.381,146,0.198,182,1.244,234,2.428,316,0.006,317,0.006,318,1.77,320,2.749,325,3.356,326,2.632,327,2.329,330,3.143,653,3.78,654,3.088,1791,6.076,1969,6.181,1982,6.138,1991,6.138,1992,6.138,1993,6.138,1994,6.138,1995,6.896,1996,6.896]],["title/injectables/IconService.html",[375,1.183,1969,3.184]],["body/injectables/IconService.html",[2,0.383,3,0.383,8,0.336,10,0.736,18,2.851,24,0.007,27,1.82,32,0.721,33,1.046,38,1.063,39,2.001,55,1.006,60,0.407,64,0.633,66,0.865,74,2.241,83,6.175,113,1.169,118,3.618,121,2.575,132,0.576,145,0.279,146,0.192,316,0.006,317,0.006,336,4.536,375,2.109,522,3.851,920,3.678,921,3.369,1569,6.416,1665,5.062,1965,6.889,1969,5.28,1983,5.947,1997,5.947,1998,7.101,1999,6.682,2000,5.947]],["title/directives/ImageDirective.html",[184,0.91,309,1.183]],["body/directives/ImageDirective.html",[2,0.273,3,0.273,4,1.28,8,0.24,10,0.525,15,1.724,18,2.033,21,3.783,22,1.024,24,0.007,25,1.193,26,1.446,32,0.514,33,0.841,35,1.792,38,0.758,39,1.831,44,0.997,46,3.95,55,1.035,60,0.387,64,0.868,65,2.005,66,1.187,71,0.815,76,1.258,77,1.578,86,1.197,87,0.839,88,0.839,104,4.931,108,1.578,113,0.641,118,3.557,132,0.411,145,0.199,146,0.137,184,1.484,193,2.04,299,1.551,309,1.578,310,2.034,316,0.004,317,0.004,347,3.467,348,1.024,349,2.511,350,3.207,357,2.244,365,2.187,367,3.889,368,3.916,370,5.436,371,4.962,377,3.114,381,1.498,390,5.784,392,2.379,394,2.082,409,5.69,410,3.261,411,2.305,412,3.261,413,3.638,415,5.784,416,3.638,417,2.187,418,2.871,575,1.609,703,2.871,979,3.261,1033,5.313,1096,2.769,1102,4.072,1670,6.705,1671,3.638,1681,3.114,1721,4.668,1758,4.241,2001,4.241,2002,7.411,2003,6.499,2004,5.313,2005,6.383,2006,6.066,2007,9.065,2008,6.499,2009,6.798,2010,6.499,2011,4.765,2012,6.495,2013,5.784,2014,4.765,2015,5.784,2016,4.765,2017,4.765,2018,6.499,2019,6.499,2020,4.765,2021,6.499,2022,4.765,2023,6.499,2024,4.765,2025,4.765,2026,4.765,2027,4.765,2028,7.396,2029,4.765,2030,4.765,2031,4.765,2032,5.784,2033,4.765,2034,4.765,2035,5.313,2036,4.765,2037,6.499,2038,4.765,2039,4.765,2040,4.765,2041,6.499,2042,4.765]],["title/components/InputComponent.html",[0,0.22,110,1.183]],["body/components/InputComponent.html",[0,0.415,1,0.779,2,0.181,3,0.181,4,1.152,5,0.837,6,0.837,8,0.159,10,0.348,13,2.619,15,1.278,16,3.665,18,2.056,19,1.372,21,2.992,22,0.678,23,1.73,24,0.007,25,0.885,26,2.202,27,1.943,30,1.234,32,0.34,33,1.059,35,1.821,36,4.103,38,1.184,39,1.11,40,3.76,41,2.276,42,3.253,43,2.244,44,0.739,46,3.256,48,3.149,49,4.103,52,3.019,55,0.964,60,0.349,64,0.855,65,1.036,66,1.169,71,0.539,72,2.01,74,0.752,75,0.727,76,1.02,77,1.59,81,3.019,83,3.298,84,2.675,85,3.298,86,0.881,87,0.931,88,0.618,89,3.019,99,3.019,101,3.149,102,2.8,103,1.728,105,1.285,106,1.378,108,1.17,110,1.88,112,2.605,113,1.074,114,2.539,121,1.005,122,3.284,123,3.284,127,3.665,131,3.019,132,0.272,133,3.019,134,1.285,139,3.298,142,1.212,143,1.975,144,1.975,145,0.132,146,0.091,167,1.485,171,1.204,173,1.832,181,1.975,182,0.569,183,1.212,184,1.224,188,1.707,189,0.837,190,0.837,191,0.752,192,0.779,193,1.302,194,1.738,195,0.779,196,1.184,197,1.974,198,0.793,199,1.872,200,0.779,201,0.807,202,0.793,203,0.837,204,0.779,205,1.278,206,0.793,207,0.837,208,0.779,209,0.837,210,0.752,211,0.766,212,1.465,213,1.552,214,0.752,215,0.779,216,1.913,217,1.59,218,0.837,219,0.793,220,1.552,221,0.837,222,0.837,223,0.793,224,1.738,225,0.779,226,0.779,227,0.793,228,0.793,229,0.779,230,0.837,231,0.766,232,0.793,233,0.837,234,0.779,235,0.837,236,0.837,237,0.779,238,0.837,239,0.752,240,0.779,241,0.837,242,0.766,243,0.837,244,0.69,245,0.837,246,0.766,247,1.42,248,0.837,249,0.766,250,0.837,251,0.766,252,0.837,253,0.727,254,0.837,255,0.779,256,0.714,257,0.779,258,0.793,259,0.837,260,0.779,261,0.837,262,0.837,263,0.779,264,0.837,265,0.779,266,0.837,267,0.727,268,0.837,269,0.779,270,0.779,271,0.837,272,0.779,273,0.793,274,0.837,275,0.752,276,0.766,277,1.655,278,0.779,279,0.621,280,0.793,281,0.779,282,0.779,283,0.793,284,0.779,285,0.837,286,0.779,287,0.779,288,0.837,289,0.766,290,0.837,291,0.779,292,0.837,293,0.779,294,0.837,295,0.779,296,0.837,297,0.779,298,0.739,299,0.752,300,0.837,301,0.766,302,0.837,303,0.766,304,0.837,305,0.766,306,0.837,307,0.766,308,0.837,309,0.766,310,0.807,311,0.837,312,1.42,313,0.793,314,0.752,315,0.837,316,0.003,317,0.003,335,2.465,336,2.706,355,1.975,367,1.315,373,2.01,387,1.73,388,1.864,460,2.349,472,1.378,497,2.619,498,3.019,499,1.839,557,1.77,558,2.158,561,2.465,619,2.396,861,3.298,866,1.661,1022,3.149,1040,2.904,1137,1.9,1158,1.764,1337,2.06,1344,1.9,1391,3.679,1394,5.387,1402,4.213,1404,3.94,1405,5.354,1406,3.94,1408,2.578,1409,3.168,1411,4.782,1413,2.578,1503,3.298,1618,2.706,1651,2.578,1681,2.06,1830,2.806,1932,2.465,2035,2.578,2043,2.806,2044,6.549,2045,6.28,2046,3.153,2047,6.621,2048,3.153,2049,4.289,2050,3.153,2051,3.153,2052,3.153,2053,3.153,2054,3.153,2055,4.819,2056,4.819,2057,3.153,2058,3.153,2059,3.153,2060,3.153,2061,3.153,2062,2.806,2063,3.153,2064,3.149,2065,4.289,2066,3.94,2067,4.819,2068,4.819,2069,4.819,2070,3.153,2071,2.806,2072,2.806,2073,2.578,2074,5.829,2075,3.153,2076,4.819,2077,3.153,2078,3.153,2079,3.153,2080,3.153,2081,4.819,2082,3.153,2083,3.153,2084,3.153,2085,2.806,2086,3.153,2087,3.153,2088,3.153,2089,3.153,2090,3.153,2091,3.153,2092,3.153,2093,3.153,2094,3.153]],["title/components/InputErrorsComponent.html",[0,0.22,237,1.204]],["body/components/InputErrorsComponent.html",[0,0.384,1,1.048,2,0.243,3,0.243,4,1.369,5,1.125,6,1.125,8,0.213,10,0.468,19,0.995,22,0.912,24,0.007,26,2.228,27,1.965,30,1.535,32,0.458,33,0.776,35,1.771,39,1.381,40,4.162,44,1.159,55,0.746,60,0.36,64,0.658,66,0.978,76,0.954,86,0.639,87,0.918,88,0.448,108,1.456,110,1.03,112,2.447,113,0.807,122,3.904,126,2.39,132,0.366,134,1.729,145,0.177,146,0.122,171,1.619,182,0.765,183,1.508,184,1.12,188,1.969,189,1.125,190,1.125,191,1.012,192,1.048,193,1.547,194,2.005,195,1.048,196,1.202,197,2.195,198,1.067,199,2.115,200,1.048,201,1.086,202,1.067,203,1.125,204,1.048,205,1.591,206,1.067,207,1.125,208,1.048,209,1.125,210,1.012,211,1.03,212,1.63,213,1.845,214,1.012,215,1.048,216,1.048,217,1.03,218,1.125,219,1.067,220,1.845,221,1.125,222,1.125,223,1.067,224,2.005,225,1.048,226,1.048,227,1.067,228,1.067,229,1.048,230,1.125,231,1.03,232,1.067,233,1.125,234,1.048,235,1.125,236,1.125,237,1.868,238,1.125,239,1.012,240,1.048,241,1.125,242,1.03,243,1.125,244,0.928,245,1.125,246,1.03,247,1.689,248,1.125,249,1.03,250,1.125,251,1.03,252,1.125,253,0.978,254,1.125,255,1.048,256,0.961,257,1.048,258,1.067,259,1.125,260,1.048,261,1.125,262,1.125,263,1.048,264,1.125,265,1.048,266,1.125,267,0.978,268,1.125,269,1.048,270,1.048,271,1.125,272,1.048,273,1.067,274,1.125,275,1.012,276,1.03,277,1.841,278,1.048,279,0.835,280,1.067,281,1.048,282,1.048,283,1.067,284,1.048,285,1.125,286,1.048,287,1.048,288,1.125,289,1.03,290,1.125,291,1.048,292,1.125,293,1.048,294,1.125,295,1.048,296,1.125,297,1.048,298,0.995,299,1.012,300,1.125,301,1.03,302,1.125,303,1.03,304,1.125,305,1.03,306,1.125,307,1.03,308,1.125,309,1.03,310,1.086,311,1.125,312,1.03,313,1.067,314,1.012,315,1.125,316,0.004,317,0.004,348,0.912,357,1.998,453,3.366,499,2.288,575,2.348,616,3.683,617,4.646,887,4.078,920,3.249,921,3.45,990,2.903,1158,2.194,1305,3.483,1548,3.055,1918,5.769,2000,3.776,2095,7.095,2096,6.518,2097,3.776,2098,5.336,2099,5.995,2100,5.995,2101,7.557,2102,5.995,2103,4.242,2104,4.902,2105,4.318,2106,4.242,2107,4.242,2108,5.995,2109,4.242,2110,4.242,2111,4.242,2112,5.995]],["title/modules/IoModule.html",[318,1.047,1789,3.334]],["body/modules/IoModule.html",[2,0.332,3,0.332,8,0.291,19,1.907,23,2.183,24,0.007,35,1.158,58,1.99,60,0.433,110,2.352,132,0.498,134,2.355,141,2.977,145,0.358,146,0.166,173,3.357,182,1.042,214,1.941,215,2.373,216,2.373,217,1.792,237,2.394,269,2.394,312,2.332,313,1.453,316,0.005,317,0.005,318,1.586,320,2.303,325,3.008,326,2.205,327,1.951,329,4.144,330,2.817,355,3.62,653,3.388,654,2.587,656,5.566,1137,4.448,1138,4.161,1345,3.953,1389,4.723,1402,4.161,1414,5.142,1789,6.756,2073,4.723,2096,4.723,2113,5.142,2114,5.142,2115,5.142,2116,5.777,2117,5.777,2118,5.777,2119,5.777,2120,5.777]],["title/interfaces/ItemConfig.html",[998,1.441,1779,3.334]],["body/interfaces/ItemConfig.html",[2,0.309,3,0.309,8,0.271,10,0.594,24,0.007,32,0.581,33,1.214,34,2.43,38,1.252,41,2.352,43,2.537,55,1.144,56,3.98,60,0.355,64,0.913,65,2.043,72,2.165,74,1.683,85,4.828,88,1.028,116,2.056,118,3.98,126,2.812,145,0.225,167,2.538,171,2.693,316,0.005,317,0.005,402,4.081,457,2.206,472,3.884,475,2.879,499,3.003,506,4.828,571,2.756,600,4.828,628,4.61,819,6.279,858,5.809,893,5.386,942,3.961,998,2.086,1000,3.375,1019,3.737,1022,4.61,1026,4.417,1158,3.055,1187,5.081,1206,5.081,1508,4.251,1565,3.246,1611,5.768,1616,3.246,1619,5.768,1644,6.279,1645,4.113,1652,5.029,1779,5.711,1960,5.338,2121,4.795,2122,6.279,2123,6.279,2124,6.824,2125,6.824,2126,7.001,2127,5.768,2128,7.055,2129,7.055,2130,6.279,2131,7.055,2132,5.081,2133,6.279,2134,3.88]],["title/components/ListComponent.html",[0,0.22,239,1.163]],["body/components/ListComponent.html",[0,0.33,1,0.748,2,0.174,3,0.174,4,0.92,5,0.803,6,0.803,7,2.224,8,0.152,10,0.334,15,1.239,19,0.71,21,2.917,22,0.651,24,0.007,25,1.177,26,2.198,27,1.934,30,1.196,32,0.85,33,0.605,34,1.609,35,1.732,38,0.908,41,0.775,42,1.234,43,2.414,44,0.717,46,2.322,55,0.798,59,2.072,60,0.289,64,0.796,66,1.152,70,1.132,71,1.383,72,1.751,75,1.477,76,1.133,77,1.557,84,2.342,86,0.859,87,0.932,88,0.677,108,1.134,110,0.735,113,0.768,121,1.489,132,0.261,145,0.126,146,0.087,162,1.965,171,1.783,182,0.546,183,1.175,184,0.873,185,1.862,186,1.948,187,2.322,188,1.671,189,0.803,190,0.803,191,0.723,192,0.748,193,1.269,194,1.701,195,0.748,196,1.494,197,1.942,198,0.762,199,1.838,200,0.748,201,0.775,202,0.762,203,0.803,204,0.748,205,1.239,206,0.762,207,0.803,208,0.748,209,0.803,210,0.723,211,0.735,212,1.442,213,1.513,214,0.723,215,0.748,216,0.748,217,0.735,218,0.803,219,0.762,220,1.513,221,0.803,222,0.803,223,0.762,224,1.701,225,0.748,226,0.748,227,0.762,228,0.762,229,0.748,230,0.803,231,0.735,232,0.762,233,0.803,234,0.748,235,0.803,236,0.803,237,0.748,238,0.803,239,1.747,240,0.748,241,0.803,242,0.735,243,0.803,244,0.662,245,0.803,246,0.735,247,1.385,248,0.803,249,0.735,250,0.803,251,0.735,252,0.803,253,0.698,254,0.803,255,0.748,256,0.686,257,0.748,258,0.762,259,0.803,260,0.748,261,0.803,262,0.803,263,0.748,264,0.803,265,0.748,266,0.803,267,0.698,268,0.803,269,0.748,270,0.748,271,0.803,272,0.748,273,0.762,274,0.803,275,0.723,276,0.735,277,1.629,278,0.748,279,0.596,280,0.762,281,0.748,282,0.748,283,0.762,284,0.748,285,0.803,286,0.748,287,0.748,288,0.803,289,0.735,290,0.803,291,0.748,292,0.803,293,0.748,294,0.803,295,0.748,296,0.803,297,0.748,298,0.71,299,0.723,300,0.803,301,0.735,302,0.803,303,0.735,304,0.803,305,0.735,306,0.803,307,0.735,308,0.803,309,0.735,310,0.775,311,0.803,312,0.735,313,0.762,314,0.723,315,0.803,316,0.003,317,0.003,365,1.39,373,2.126,381,1.076,384,2.131,387,2.165,388,2.432,394,2.041,417,0.895,431,4.158,442,3.727,456,2.554,457,2.954,458,3.18,473,3.566,475,3.022,487,3.819,499,1.156,514,3.02,515,4.34,534,4.618,547,1.646,558,1.356,563,1.505,571,1.549,587,2.072,589,4.527,703,1.824,708,1.926,801,4.695,861,2.072,903,2.623,928,3.053,993,2.181,995,3.727,1002,4.433,1019,2.554,1158,2.088,1226,2.815,1340,4.108,1344,1.824,1367,3.566,1409,1.465,1525,2.475,1545,2.475,1596,2.714,1612,3.566,1614,2.072,1771,2.475,2134,2.181,2135,2.695,2136,4.671,2137,4.671,2138,4.671,2139,3.819,2140,3.819,2141,4.671,2142,6.411,2143,6.411,2144,6.411,2145,5.391,2146,3.028,2147,3.028,2148,3.028,2149,3.028,2150,3.028,2151,3.028,2152,3.028,2153,3.028,2154,3.028,2155,4.158,2156,3.028,2157,4.671,2158,4.387,2159,4.671,2160,4.671,2161,4.671,2162,3.028,2163,6.411,2164,4.671,2165,3.028,2166,3.028,2167,3.028,2168,3.364,2169,3.028,2170,4.158,2171,3.028,2172,2.072,2173,2.695,2174,2.475,2175,2.475,2176,2.475,2177,5.664,2178,5.664,2179,2.475,2180,2.072,2181,2.475,2182,2.475,2183,2.695,2184,3.566,2185,2.695,2186,3.819,2187,2.695,2188,2.475,2189,3.028,2190,2.695,2191,3.028,2192,3.028,2193,3.028,2194,5.242,2195,3.028,2196,3.028,2197,3.028,2198,4.158,2199,3.028,2200,3.028,2201,2.695,2202,2.695,2203,3.028,2204,3.028,2205,3.028,2206,3.028,2207,4.671,2208,3.028,2209,3.028,2210,4.671,2211,4.671,2212,4.671,2213,4.671,2214,6.411]],["title/interfaces/ListConfig.html",[998,1.441,1002,2.831]],["body/interfaces/ListConfig.html",[2,0.278,3,0.278,8,0.244,10,0.534,18,2.805,24,0.007,25,1.689,32,0.523,33,1.117,38,1.046,43,2.085,60,0.219,64,0.914,65,1.995,74,1.909,84,2.017,87,0.694,88,1.041,113,1.16,121,2.095,145,0.202,146,0.189,196,1.507,316,0.005,317,0.006,373,2.017,381,2.218,384,3.538,402,3.959,417,1.944,436,4.227,442,5.635,451,3.362,457,2.502,500,3.335,513,3.869,514,3.768,515,4.118,524,3.572,571,2.478,629,2.424,708,2.22,764,4.118,880,3.463,881,4.648,887,3.362,928,4.295,998,1.944,1000,3.035,1002,3.819,1226,5.196,1351,5.373,1543,7.12,1544,7.12,1602,4.497,1612,6.107,1629,5.164,1663,3.96,1721,5.038,1779,5.104,1780,3.961,2132,4.734,2180,4.497,2215,4.311,2216,7.999,2217,7.12,2218,6.54,2219,7.12,2220,7.675,2221,7.675,2222,7.999,2223,5.85,2224,3.69,2225,5.85,2226,4.734,2227,5.018,2228,6.572,2229,6.572]],["title/components/ListHeaderComponent.html",[0,0.22,240,1.204]],["body/components/ListHeaderComponent.html",[0,0.373,1,0.948,2,0.22,3,0.22,4,0.755,5,1.017,6,1.017,8,0.193,10,0.423,19,0.899,22,0.824,23,1.649,24,0.007,26,2.22,27,1.957,30,1.428,32,0.414,33,0.934,34,1.921,35,1.603,38,1.148,39,2.068,40,3.095,41,1.963,44,0.856,60,0.361,64,0.726,66,1.095,72,2.215,75,1.663,76,1.097,77,1.596,86,1.087,87,0.957,88,0.894,105,2.273,106,2.437,108,1.354,110,0.931,112,1.649,113,0.75,121,1.777,132,0.331,145,0.16,146,0.11,182,0.692,183,1.403,184,1.042,188,1.88,189,1.017,190,1.017,191,0.915,192,0.948,193,1.462,194,1.914,195,0.948,196,1.501,197,2.122,198,0.965,199,2.034,200,0.948,201,0.982,202,0.965,203,1.017,204,0.948,205,1.479,206,0.965,207,1.017,208,0.948,209,1.017,210,0.915,211,0.931,212,1.575,213,1.743,214,0.915,215,0.948,216,0.948,217,0.931,218,1.017,219,0.965,220,1.743,221,1.017,222,1.017,223,0.965,224,1.914,225,0.948,226,0.948,227,0.965,228,0.965,229,0.948,230,1.017,231,1.862,232,0.965,233,1.017,234,0.948,235,1.017,236,1.017,237,0.948,238,1.017,239,0.915,240,1.783,241,1.017,242,0.931,243,1.017,244,0.839,245,1.017,246,0.931,247,1.596,248,1.017,249,0.931,250,1.017,251,0.931,252,1.017,253,0.884,254,1.017,255,0.948,256,0.868,257,0.948,258,0.965,259,1.017,260,0.948,261,1.017,262,1.017,263,0.948,264,1.017,265,0.948,266,1.017,267,0.884,268,1.017,269,0.948,270,0.948,271,1.017,272,0.948,273,0.965,274,1.017,275,1.331,276,0.931,277,1.78,278,0.948,279,0.755,280,0.965,281,0.948,282,0.948,283,0.965,284,0.948,285,1.017,286,0.948,287,0.948,288,1.017,289,0.931,290,1.017,291,0.948,292,1.017,293,0.948,294,1.017,295,0.948,296,1.017,297,0.948,298,0.899,299,0.915,300,1.017,301,0.931,302,1.017,303,0.931,304,1.017,305,0.931,306,1.017,307,0.931,308,1.017,309,0.931,310,0.982,311,1.017,312,0.931,313,0.965,314,0.915,315,1.017,316,0.004,317,0.004,335,2.853,417,1.134,436,4.227,457,2.645,492,4.411,514,2.627,561,1.962,563,1.906,903,3.131,953,3.135,1016,3.644,1021,4.963,1036,2.928,1042,3.36,1216,4.963,1226,4.348,1926,3.816,2226,4.016,2230,7.05,2231,7.05,2232,3.413,2233,5.577,2234,5.577,2235,5.577,2236,5.577,2237,5.577,2238,3.835,2239,3.835,2240,5.577,2241,3.835,2242,5.577,2243,3.835,2244,4.963,2245,7.215,2246,3.835,2247,5.577,2248,3.835,2249,3.835,2250,3.816,2251,5.899,2252,4.963,2253,3.835,2254,3.835,2255,3.835,2256,3.835,2257,3.835,2258,3.835,2259,3.835,2260,3.835,2261,3.835,2262,3.835,2263,5.577,2264,3.835,2265,3.835]],["title/components/ListItemsComponent.html",[0,0.22,242,1.183]],["body/components/ListItemsComponent.html",[0,0.346,1,0.948,2,0.22,3,0.22,4,0.755,5,1.017,6,1.017,8,0.193,10,0.423,15,1.479,19,0.899,21,3.361,22,0.824,23,1.649,24,0.007,25,1.024,26,2.22,27,1.957,30,1.428,32,0.414,35,1.695,40,2.627,43,2.49,44,0.856,46,3.587,55,0.898,60,0.326,64,0.757,66,1.095,71,0.656,72,2.215,75,1.285,76,0.99,77,1.354,86,0.578,87,0.894,88,0.81,108,1.354,110,0.931,113,0.75,132,0.331,145,0.16,146,0.11,165,3.571,182,0.692,183,1.403,184,1.042,188,1.88,189,1.017,190,1.017,191,0.915,192,0.948,193,1.462,194,1.914,195,0.948,196,1.52,197,2.122,198,0.965,199,2.034,200,0.948,201,0.982,202,0.965,203,1.017,204,0.948,205,1.479,206,0.965,207,1.017,208,0.948,209,1.017,210,0.915,211,0.931,212,1.575,213,1.743,214,0.915,215,0.948,216,0.948,217,0.931,218,1.017,219,0.965,220,1.743,221,1.017,222,1.017,223,0.965,224,1.914,225,0.948,226,0.948,227,0.965,228,0.965,229,0.948,230,1.017,231,0.931,232,0.965,233,1.017,234,0.948,235,1.017,236,1.017,237,0.948,238,1.017,239,1.331,240,0.948,241,1.017,242,1.942,243,1.017,244,0.839,245,1.017,246,0.931,247,1.596,248,1.017,249,0.931,250,1.017,251,0.931,252,1.017,253,0.884,254,1.017,255,0.948,256,0.868,257,0.948,258,0.965,259,1.017,260,0.948,261,1.017,262,1.017,263,0.948,264,1.017,265,0.948,266,1.017,267,0.884,268,1.017,269,0.948,270,0.948,271,1.017,272,0.948,273,0.965,274,1.017,275,0.915,276,0.931,277,1.78,278,0.948,279,0.755,280,0.965,281,0.948,282,0.948,283,0.965,284,0.948,285,1.017,286,0.948,287,0.948,288,1.017,289,0.931,290,1.017,291,0.948,292,1.017,293,0.948,294,1.017,295,0.948,296,1.017,297,0.948,298,0.899,299,0.915,300,1.017,301,0.931,302,1.017,303,0.931,304,1.017,305,0.931,306,1.017,307,0.931,308,1.017,309,0.931,310,0.982,311,1.017,312,0.931,313,0.965,314,1.829,315,1.017,316,0.004,317,0.004,373,2.215,381,1.285,387,2.366,388,2.3,442,4.294,451,2.853,456,2.497,457,2.806,458,2.56,486,2.228,511,3.36,514,2.627,515,4.803,534,4.016,563,1.906,587,3.816,589,3.644,626,3.494,708,2.437,858,3.644,861,3.816,928,4.715,993,2.762,1028,2.56,1158,2.641,1171,3.494,1226,3.36,1379,2.762,1545,3.135,1581,4.016,2155,4.963,2194,5.373,2201,4.963,2202,3.413,2224,3.131,2226,4.016,2230,7.05,2266,7.05,2267,3.413,2268,5.577,2269,5.577,2270,5.577,2271,7.215,2272,5.577,2273,4.559,2274,5.577,2275,3.835,2276,3.835,2277,3.835,2278,3.835,2279,3.835,2280,3.835,2281,3.835,2282,3.835,2283,3.413,2284,3.835,2285,3.135]],["title/modules/ListModule.html",[318,1.047,2286,3.334]],["body/modules/ListModule.html",[2,0.323,3,0.323,8,0.283,23,2.145,24,0.007,58,1.936,60,0.436,132,0.485,141,2.939,145,0.354,146,0.162,182,1.014,196,1.154,239,2.283,240,2.364,242,2.323,270,2.364,284,2.364,316,0.005,317,0.005,318,1.558,320,2.24,325,2.955,326,2.145,327,1.898,330,2.768,486,3.265,653,3.329,654,2.516,1183,6.545,1781,6.545,1791,5.633,1793,5.876,1806,4.29,1809,4.595,2231,4.595,2266,4.595,2286,6.812,2287,5.002,2288,5.002,2289,5.002,2290,5.002,2291,6.153,2292,5.62,2293,5.002,2294,5.002,2295,5.62,2296,5.62,2297,5.62,2298,5.62,2299,5.62]],["title/components/LoaderComponent.html",[0,0.22,244,1.065]],["body/components/LoaderComponent.html",[0,0.36,1,0.848,2,0.197,3,0.197,4,1.213,5,0.911,6,0.911,7,1.339,8,0.173,10,0.378,19,0.805,22,0.738,24,0.007,25,0.63,26,2.21,27,1.949,28,3.097,30,1.316,32,0.371,33,0.665,35,0.688,38,0.818,44,1.179,55,1.043,59,3.517,60,0.278,61,2.885,62,2.986,64,0.583,66,1.032,71,0.879,74,1.632,75,1.687,76,0.938,77,1.248,86,0.774,87,0.885,88,0.543,102,3.974,104,3.84,108,1.661,110,0.834,113,0.986,116,3.514,118,2.758,121,1.638,126,2.726,130,1.866,132,0.296,135,1.5,142,0.864,145,0.215,146,0.177,170,2.621,182,0.619,183,1.293,184,1.151,185,1.368,186,1.431,187,1.707,188,1.782,189,0.911,190,0.911,191,0.819,192,0.848,193,1.371,194,1.814,195,0.848,196,1.088,197,2.039,198,0.864,199,1.943,200,0.848,201,0.879,202,0.864,203,0.911,204,0.848,205,1.363,206,0.864,207,0.911,208,0.848,209,0.911,210,0.819,211,0.834,212,1.514,213,1.634,214,0.819,215,0.848,216,0.848,217,0.834,218,0.911,219,0.864,220,1.634,221,0.911,222,0.911,223,0.864,224,1.814,225,0.848,226,0.848,227,0.864,228,0.864,229,0.848,230,0.911,231,0.834,232,0.864,233,0.911,234,0.848,235,0.911,236,0.911,237,0.848,238,0.911,239,0.819,240,0.848,241,0.911,242,0.834,243,0.911,244,1.742,245,0.911,246,0.834,247,1.496,248,0.911,249,0.834,250,0.911,251,0.834,252,0.911,253,0.791,254,0.911,255,0.848,256,0.777,257,0.848,258,0.864,259,0.911,260,0.848,261,0.911,262,0.911,263,0.848,264,0.911,265,0.848,266,0.911,267,0.791,268,0.911,269,0.848,270,0.848,271,0.911,272,0.848,273,0.864,274,0.911,275,0.819,276,0.834,277,1.71,278,0.848,279,0.676,280,0.864,281,0.848,282,0.848,283,0.864,284,0.848,285,0.911,286,0.848,287,0.848,288,0.911,289,0.834,290,0.911,291,0.848,292,0.911,293,0.848,294,0.911,295,0.848,296,0.911,297,0.848,298,0.805,299,0.819,300,0.911,301,0.834,302,0.911,303,0.834,304,0.911,305,0.834,306,0.911,307,0.834,308,0.911,309,0.834,310,0.879,311,0.911,312,0.834,313,0.864,314,1.999,315,0.911,316,0.004,317,0.004,327,1.159,348,0.738,365,1.576,367,3.493,375,1.248,381,0.791,392,1.257,417,1.822,421,2.243,440,4.252,445,1.5,496,1.756,500,3.557,510,3.821,513,2.98,514,4.019,522,1.465,530,1.995,548,2.793,552,3.924,561,3.151,575,3.049,615,2.069,616,2.143,629,0.927,632,1.67,703,2.069,747,4.574,801,4.177,805,1.707,826,3.097,918,3.603,1023,2.349,1028,1.576,1043,2.486,1044,2.069,1046,3.358,1203,3.924,1354,2.243,1568,2.069,1602,3.517,1610,2.243,1613,2.885,1623,1.809,1641,2.473,1662,2.473,1665,3.22,1884,3.22,1898,5.036,1901,4.574,1932,1.756,2158,4.215,2300,3.055,2301,5.139,2302,5.139,2303,4.202,2304,5.139,2305,5.139,2306,5.139,2307,6.238,2308,8.532,2309,6.284,2310,3.433,2311,5.139,2312,3.433,2313,3.433,2314,4.574,2315,3.433,2316,4.574,2317,4.574,2318,3.433,2319,3.433,2320,5.139,2321,2.243,2322,4.68,2323,4.025,2324,3.055,2325,2.069,2326,3.055,2327,3.055,2328,4.574,2329,3.055,2330,5.482,2331,3.055,2332,4.574,2333,5.482,2334,5.482,2335,3.055,2336,3.055,2337,2.807,2338,3.055,2339,3.055,2340,3.055,2341,3.055,2342,3.055,2343,3.055,2344,3.055,2345,3.433,2346,3.433,2347,3.433,2348,3.055,2349,3.055,2350,5.139,2351,3.433,2352,2.807,2353,3.433]],["title/modules/LoaderModule.html",[318,1.047,1792,3.334]],["body/modules/LoaderModule.html",[2,0.392,3,0.392,8,0.344,23,2.595,24,0.007,58,2.356,60,0.42,132,0.59,141,3.211,145,0.38,146,0.197,182,1.234,244,2.146,316,0.006,317,0.006,318,1.761,320,2.726,325,3.339,326,2.61,327,2.31,330,3.127,653,3.761,654,3.062,918,4.974,1792,6.628,2354,6.087,2355,6.087,2356,6.087,2357,6.087,2358,6.839,2359,5.591,2360,6.839]],["title/injectables/LoaderService.html",[375,1.183,918,2.567]],["body/injectables/LoaderService.html",[2,0.352,3,0.352,8,0.308,10,0.675,24,0.007,32,0.661,33,0.992,38,0.975,44,1.175,55,1.145,60,0.346,64,0.791,66,1.082,74,2.09,75,2.149,76,1.201,77,1.488,83,5.242,86,1.154,87,0.809,88,0.809,113,0.825,116,3.656,132,0.529,145,0.256,146,0.176,244,2.095,316,0.005,317,0.005,337,6.818,375,2.03,418,5.036,440,4.46,522,3.269,918,4.037,1028,3.517,1456,4.678,1602,5.242,1932,3.919,2064,5.006,2158,5.719,2309,7.517,2314,6.818,2322,6.292,2359,5.01,2361,5.454,2362,7.661,2363,6.128,2364,6.128,2365,6.128,2366,6.128]],["title/components/LocationMapComponent.html",[0,0.22,246,1.183]],["body/components/LocationMapComponent.html",[0,0.38,1,1.013,2,0.235,3,0.235,4,0.807,5,1.087,6,1.087,8,0.206,10,0.452,19,0.961,22,0.881,24,0.007,25,1.074,26,2.225,27,1.963,28,3.525,30,1.498,32,0.442,35,1.756,38,1.446,44,0.898,60,0.185,64,0.775,66,1.059,71,0.701,74,1.775,76,0.936,77,1.421,84,2.761,86,0.881,87,0.926,88,0.618,108,1.421,110,0.995,112,1.73,113,0.918,132,0.354,142,1.031,145,0.171,146,0.118,160,2.952,182,0.739,183,1.472,184,1.093,188,1.939,189,1.087,190,1.087,191,0.978,192,1.013,193,1.518,194,1.974,195,1.013,196,1.184,197,2.171,198,1.031,199,2.087,200,1.013,201,1.049,202,1.031,203,1.087,204,1.013,205,1.552,206,1.031,207,1.087,208,1.013,209,1.087,210,0.978,211,0.995,212,1.611,213,1.81,214,0.978,215,1.013,216,1.013,217,0.995,218,1.087,219,1.031,220,1.81,221,1.087,222,1.087,223,1.031,224,1.974,225,1.013,226,1.013,227,1.031,228,1.031,229,1.013,230,1.087,231,0.995,232,1.031,233,1.087,234,1.013,235,1.087,236,1.087,237,1.013,238,1.087,239,0.978,240,1.013,241,1.087,242,0.995,243,1.087,244,0.896,245,1.087,246,1.807,247,2.128,248,1.087,249,0.995,250,1.087,251,0.995,252,1.087,253,0.944,254,1.087,255,1.013,256,0.928,257,1.013,258,1.031,259,1.087,260,1.013,261,1.087,262,1.087,263,1.013,264,1.087,265,1.013,266,1.087,267,0.944,268,1.087,269,1.013,270,1.013,271,1.087,272,1.013,273,1.031,274,1.087,275,0.978,276,0.995,277,1.821,278,1.013,279,0.807,280,1.031,281,1.013,282,1.013,283,1.031,284,1.013,285,1.087,286,1.013,287,1.013,288,1.087,289,0.995,290,1.087,291,1.013,292,1.087,293,1.013,294,1.087,295,1.013,296,1.087,297,1.013,298,0.961,299,0.978,300,1.087,301,0.995,302,1.087,303,0.995,304,1.087,305,0.995,306,1.087,307,0.995,308,1.087,309,0.995,310,1.049,311,1.087,312,0.995,313,1.031,314,0.978,315,1.087,316,0.004,317,0.004,373,2.284,381,1.348,384,2.186,387,1.212,388,2.371,460,2.098,500,2.439,600,4.668,881,3.399,894,4.537,1850,4.213,1888,5.578,1889,7.003,1891,7.003,2367,6.429,2368,3.647,2369,5.85,2370,5.85,2371,5.85,2372,5.207,2373,7.495,2374,5.85,2375,5.85,2376,5.85,2377,4.098,2378,8.182,2379,4.098,2380,4.098,2381,4.098,2382,5.85,2383,4.098,2384,5.85,2385,5.207,2386,4.098,2387,5.85,2388,4.098,2389,4.098,2390,4.098,2391,4.098,2392,4.098,2393,4.098,2394,4.098]],["title/modules/LocationModule.html",[318,1.047,2395,3.72]],["body/modules/LocationModule.html",[0,0.374,2,0.345,3,0.345,8,0.302,10,0.662,23,2.45,24,0.007,58,2.07,60,0.434,132,0.518,134,2.449,135,2.626,141,3.032,142,1.511,145,0.363,146,0.173,182,1.084,246,2.333,247,2.012,249,2.333,251,2.333,316,0.005,317,0.005,318,1.926,320,2.395,325,3.084,326,2.293,327,2.029,329,4.249,330,2.888,335,3.871,441,3.388,522,3.229,651,5.513,653,3.474,654,2.69,656,5.178,1848,5.979,1874,4.912,1884,3.765,2395,7.492,2396,5.348,2397,5.348,2398,6.009,2399,5.348,2400,5.348,2401,4.912,2402,7.567,2403,7.327,2404,6.009,2405,4.912,2406,5.348,2407,6.009,2408,5.348,2409,6.009,2410,6.009,2411,6.009,2412,6.009,2413,6.009]],["title/components/LocationPickerComponent.html",[0,0.22,249,1.183]],["body/components/LocationPickerComponent.html",[0,0.375,1,0.821,2,0.191,3,0.191,4,0.654,5,0.881,6,0.881,8,0.167,10,0.366,13,2.724,15,1.784,16,4.523,18,2.139,19,1.902,22,0.714,23,1.785,24,0.007,25,1.393,26,2.207,27,1.944,28,3.02,30,1.283,32,0.358,33,0.649,35,1.812,36,4.213,38,1.402,39,1.98,40,3.575,41,1.943,42,2.741,43,1.978,44,0.769,48,3.275,49,4.213,52,3.14,55,0.624,60,0.343,64,0.825,65,1.077,66,1.179,74,1.196,76,1.041,77,1.753,81,3.14,84,2.064,86,1.013,87,0.908,88,0.711,89,3.14,99,3.14,101,3.275,102,2.912,103,1.797,105,2.043,106,2.638,108,1.217,110,1.753,112,2.245,113,0.905,114,2.641,122,4.554,123,3.776,124,2.535,125,2.535,126,1.323,127,3.14,128,2.535,129,2.535,130,1.804,131,3.14,132,0.286,133,3.14,134,1.353,135,1.451,142,0.835,143,2.08,144,2.08,145,0.139,146,0.095,175,2.715,181,2.08,182,0.599,183,1.261,184,0.936,188,1.753,189,0.881,190,0.881,191,0.792,192,0.821,193,1.343,194,1.784,195,0.821,196,1.07,197,2.014,198,0.835,199,1.915,200,0.821,201,0.85,202,0.835,203,0.881,204,0.821,205,1.33,206,0.835,207,0.881,208,0.821,209,0.881,210,0.792,211,0.806,212,1.495,213,1.602,214,0.792,215,0.821,216,0.821,217,0.806,218,0.881,219,0.835,220,1.602,221,0.881,222,0.881,223,0.835,224,1.784,225,0.821,226,0.821,227,0.835,228,0.835,229,0.821,230,0.881,231,0.806,232,0.835,233,0.881,234,0.821,235,0.881,236,0.881,237,0.821,238,0.881,239,0.792,240,0.821,241,0.881,242,0.806,243,0.881,244,0.726,245,0.881,246,1.913,247,2.211,248,0.881,249,1.753,250,0.881,251,1.913,252,0.881,253,0.765,254,0.881,255,0.821,256,0.752,257,0.821,258,0.835,259,0.881,260,0.821,261,0.881,262,0.881,263,0.821,264,0.881,265,0.821,266,0.881,267,0.765,268,0.881,269,0.821,270,0.821,271,0.881,272,0.821,273,0.835,274,0.881,275,0.792,276,0.806,277,1.689,278,0.821,279,0.654,280,0.835,281,0.821,282,0.821,283,0.835,284,0.821,285,0.881,286,0.821,287,0.821,288,0.881,289,0.806,290,0.881,291,0.821,292,0.881,293,0.821,294,0.881,295,0.821,296,0.881,297,0.821,298,0.779,299,0.792,300,0.881,301,0.806,302,0.881,303,0.806,304,0.881,305,0.806,306,0.881,307,0.806,308,0.881,309,0.806,310,0.85,311,0.881,312,0.806,313,0.835,314,0.792,315,0.881,316,0.003,317,0.003,335,2.564,348,1.077,358,2.08,381,1.391,394,1.451,438,1.998,514,2.361,523,4.461,557,3.776,732,3.14,894,4.274,1171,3.14,1188,4.098,1580,5.134,1848,5.616,1863,4.098,1866,4.098,1867,4.461,1868,4.098,2367,6.793,2372,4.461,2385,4.461,2405,2.715,2406,2.955,2408,2.955,2414,2.955,2415,5.012,2416,5.012,2417,5.012,2418,6.725,2419,6.037,2420,2.955,2421,5.012,2422,3.32,2423,3.32,2424,3.32,2425,3.32,2426,6.725,2427,3.32,2428,3.32,2429,5.012,2430,3.32,2431,3.32,2432,3.32,2433,3.32,2434,3.32,2435,3.32,2436,3.32,2437,3.32,2438,5.012,2439,5.012,2440,3.32,2441,3.32,2442,3.32,2443,6.037,2444,3.32,2445,3.32,2446,3.32,2447,3.32,2448,5.012]],["title/components/LocationSearchComponent.html",[0,0.22,251,1.183]],["body/components/LocationSearchComponent.html",[0,0.357,1,1.026,2,0.238,3,0.238,4,0.818,5,1.102,6,1.102,8,0.209,10,0.458,15,1.567,19,0.974,22,0.893,24,0.007,26,2.227,27,1.964,30,1.512,32,0.448,33,0.765,35,1.841,38,1.094,44,0.906,55,0.735,60,0.31,64,0.651,66,1.064,71,0.71,76,0.81,77,1.434,84,2.595,86,0.626,87,0.913,88,0.439,104,4.202,105,1.693,106,2.581,108,1.818,110,1.009,113,0.925,132,0.358,145,0.173,146,0.119,182,0.749,183,1.486,184,1.104,188,1.951,189,1.102,190,1.102,191,0.991,192,1.026,193,1.529,194,1.986,195,1.026,196,1.191,197,2.18,198,1.045,199,2.098,200,1.026,201,1.063,202,1.045,203,1.102,204,1.026,205,1.567,206,1.045,207,1.102,208,1.026,209,1.102,210,0.991,211,1.009,212,1.618,213,1.823,214,0.991,215,1.026,216,1.026,217,1.009,218,1.102,219,1.045,220,1.823,221,1.102,222,1.102,223,1.045,224,1.986,225,1.026,226,1.026,227,1.045,228,1.045,229,1.026,230,1.102,231,1.009,232,1.045,233,1.102,234,1.026,235,1.102,236,1.102,237,1.026,238,1.102,239,0.991,240,1.026,241,1.102,242,1.009,243,1.102,244,0.908,245,1.102,246,1.009,247,2.191,248,1.102,249,1.009,250,1.102,251,1.818,252,1.102,253,0.957,254,1.102,255,1.026,256,0.94,257,1.026,258,1.045,259,1.102,260,1.026,261,1.102,262,1.102,263,1.026,264,1.102,265,1.026,266,1.102,267,0.957,268,1.102,269,1.026,270,1.026,271,1.102,272,1.026,273,1.045,274,1.102,275,0.991,276,1.009,277,1.829,278,1.026,279,0.818,280,1.045,281,1.026,282,1.026,283,1.045,284,1.026,285,1.102,286,1.026,287,1.026,288,1.102,289,1.009,290,1.102,291,1.026,292,1.102,293,1.026,294,1.102,295,1.026,296,1.102,297,1.026,298,0.974,299,0.991,300,1.102,301,1.009,302,1.102,303,1.009,304,1.102,305,1.009,306,1.102,307,1.009,308,1.102,309,1.009,310,1.063,311,1.102,312,1.009,313,1.045,314,0.991,315,1.102,316,0.004,317,0.005,348,1.269,373,2.297,387,1.228,388,2.386,457,1.847,460,2.118,478,3.621,506,5.122,575,1.995,599,4.298,894,3.112,1110,4.952,1580,6.274,1765,5.391,1848,5.646,1850,4.254,1858,7.524,1863,4.828,1888,5.619,2367,6.454,2405,3.396,2420,3.696,2449,3.696,2450,5.619,2451,5.906,2452,7.485,2453,5.906,2454,4.153,2455,4.153,2456,4.153,2457,4.153,2458,4.153,2459,4.153,2460,4.153,2461,4.153,2462,4.153,2463,4.153]],["title/components/LoginComponent.html",[0,0.22,253,1.123]],["body/components/LoginComponent.html",[0,0.344,1,0.932,2,0.216,3,0.216,4,0.743,5,1,6,1,7,1.47,8,0.19,10,0.416,15,1.461,19,0.884,22,0.81,24,0.007,25,0.692,26,2.219,27,1.956,30,1.41,32,0.407,33,0.713,35,1.526,38,0.6,39,1.94,44,0.845,55,0.891,60,0.38,64,0.797,66,1.112,71,0.645,72,1.691,76,0.517,77,0.916,86,0.83,87,0.907,88,0.756,93,3.967,105,1.537,106,2.407,108,1.338,110,0.916,113,1.025,126,2.196,132,0.325,135,1.648,142,0.948,145,0.157,146,0.108,182,0.68,183,1.386,184,1.029,185,1.503,186,1.572,187,1.875,188,1.865,189,1,190,1,191,0.9,192,0.932,193,1.448,194,1.899,195,0.932,196,1.139,197,2.11,198,0.948,199,2.02,200,0.932,201,0.965,202,0.948,203,1,204,0.932,205,1.461,206,0.948,207,1,208,0.932,209,1,210,0.9,211,0.916,212,1.566,213,1.727,214,0.9,215,0.932,216,0.932,217,0.916,218,1,219,0.948,220,1.727,221,1,222,1,223,0.948,224,1.899,225,0.932,226,0.932,227,0.948,228,0.948,229,0.932,230,1,231,0.916,232,0.948,233,1,234,0.932,235,1,236,1,237,0.932,238,1,239,0.9,240,0.932,241,1,242,0.916,243,1,244,1.205,245,1,246,0.916,247,1.58,248,1,249,0.916,250,1,251,0.916,252,1,253,1.649,254,1,255,1.609,256,2.062,257,0.932,258,0.948,259,1,260,0.932,261,1,262,1,263,0.932,264,1,265,0.932,266,1,267,0.869,268,1,269,0.932,270,0.932,271,1,272,0.932,273,1.637,274,1,275,0.9,276,0.916,277,1.769,278,0.932,279,0.743,280,0.948,281,0.932,282,0.932,283,0.948,284,0.932,285,1,286,0.932,287,0.932,288,1,289,0.916,290,1,291,0.932,292,1,293,0.932,294,1,295,0.932,296,1,297,0.932,298,0.884,299,0.9,300,1,301,0.916,302,1,303,0.916,304,1,305,0.916,306,1,307,0.916,308,1,309,0.916,310,0.965,311,1,312,0.916,313,0.948,314,0.9,315,1,316,0.004,317,0.004,339,3.066,348,0.81,357,1.776,360,2.879,373,2.197,377,4.975,387,1.115,388,2.281,402,2.529,412,2.58,440,3.769,458,3.286,496,2.818,500,2.297,510,2.738,518,4.588,519,4.899,554,4.067,616,2.984,619,2.738,620,4.205,622,4.289,623,3.846,628,3.599,629,1.488,665,3.083,715,3.599,716,3.356,726,2.191,907,3.654,908,4.077,919,4.62,920,3.241,921,3.315,960,1.987,961,3.083,962,3.083,963,3.083,966,2.879,987,3.599,988,4.687,992,2.362,1521,3.451,1665,3.451,2464,3.356,2465,5.508,2466,5.389,2467,5.508,2468,4.503,2469,3.356,2470,5.508,2471,5.508,2472,3.77,2473,3.77,2474,3.77,2475,4.503,2476,3.77,2477,3.77,2478,3.77,2479,3.77,2480,3.356,2481,3.356,2482,3.77,2483,3.356,2484,3.77,2485,3.77,2486,3.356,2487,3.77,2488,3.356,2489,3.356]],["title/components/LoginFormComponent.html",[0,0.22,255,1.204]],["body/components/LoginFormComponent.html",[0,0.366,1,0.756,2,0.176,3,0.176,4,0.603,5,0.812,6,0.812,7,1.193,8,0.154,10,0.337,15,1.249,18,1.306,19,0.717,20,3.025,22,0.657,24,0.007,25,1.406,26,2.199,27,1.936,30,1.206,32,0.33,33,0.61,34,1.622,35,1.714,38,1.258,39,1.694,41,2.12,42,1.919,44,0.989,47,3.397,60,0.332,64,0.748,65,1.234,66,1.178,71,0.805,75,1.085,76,1.008,77,1.144,86,0.865,87,0.875,88,0.607,108,1.144,110,0.743,112,2.731,113,1.134,119,2.736,126,2.57,127,4.039,132,0.264,134,1.247,142,0.77,145,0.128,146,0.165,165,3.504,182,0.552,183,1.185,184,0.88,185,1.219,186,1.276,187,1.521,188,1.68,189,0.812,190,0.812,191,0.73,192,0.756,193,1.277,194,1.71,195,0.756,196,1.026,197,1.95,198,0.77,199,1.847,200,0.756,201,0.783,202,0.77,203,0.812,204,0.756,205,1.249,206,0.77,207,0.812,208,0.756,209,0.812,210,0.73,211,0.743,212,1.448,213,1.523,214,0.73,215,0.756,216,0.756,217,0.743,218,0.812,219,0.77,220,1.523,221,0.812,222,0.812,223,0.77,224,1.71,225,0.756,226,0.756,227,0.77,228,0.77,229,0.756,230,0.812,231,0.743,232,0.77,233,0.812,234,0.756,235,0.812,236,0.812,237,0.756,238,0.812,239,0.73,240,0.756,241,0.812,242,0.743,243,0.812,244,1.41,245,0.812,246,0.743,247,1.394,248,0.812,249,0.743,250,0.812,251,0.743,252,0.812,253,0.705,254,0.812,255,1.593,256,2.091,257,0.756,258,0.77,259,0.812,260,0.756,261,0.812,262,0.812,263,0.756,264,0.812,265,0.756,266,0.812,267,0.705,268,0.812,269,0.756,270,0.756,271,0.812,272,0.756,273,2.083,274,0.812,275,0.73,276,0.743,277,1.636,278,0.756,279,0.927,280,0.77,281,0.756,282,0.756,283,0.77,284,0.756,285,0.812,286,0.756,287,0.756,288,0.812,289,0.743,290,0.812,291,0.756,292,0.812,293,0.756,294,0.812,295,0.756,296,0.812,297,0.756,298,0.717,299,0.73,300,0.812,301,0.743,302,0.812,303,0.743,304,0.812,305,0.743,306,0.812,307,0.743,308,0.812,309,0.743,310,0.783,311,0.812,312,0.743,313,0.77,314,0.73,315,0.812,316,0.003,317,0.003,326,1.797,339,2.704,348,0.657,365,1.405,373,2.136,375,1.144,381,1.323,386,2.559,387,2.449,388,2.441,392,2.691,418,1.844,440,3.117,451,2.409,460,2.636,479,1.612,500,1.963,501,3.392,575,1.939,599,3.504,616,3.513,617,2.644,622,3.82,632,0.994,715,3.751,749,2.723,859,1.917,907,3.223,924,1.844,990,2.094,1019,3.54,1020,4.922,1025,3.595,1110,2.838,1370,3.595,1572,4.039,1932,2.409,2466,4.194,2475,4.693,2489,2.723,2490,8.141,2491,7.479,2492,2.723,2493,6.447,2494,7.792,2495,4.709,2496,4.709,2497,7.351,2498,5.738,2499,6.447,2500,5.741,2501,6.961,2502,6.961,2503,5.741,2504,5.741,2505,5.741,2506,5.741,2507,3.06,2508,7.351,2509,4.709,2510,4.709,2511,1.622,2512,3.06,2513,3.06,2514,7.036,2515,3.06,2516,4.191,2517,3.06,2518,4.709,2519,3.06,2520,6.543,2521,3.06,2522,3.06,2523,4.709,2524,3.06,2525,3.06,2526,4.709,2527,3.06,2528,4.709,2529,3.06,2530,4.709,2531,4.709,2532,3.06,2533,3.06,2534,4.709,2535,3.06,2536,3.06,2537,3.06,2538,4.709,2539,3.85,2540,3.06,2541,2.501,2542,3.06,2543,3.06,2544,3.06,2545,3.06,2546,3.06,2547,3.06,2548,4.709,2549,3.06,2550,2.501,2551,4.709,2552,3.06,2553,3.06,2554,3.06,2555,3.06,2556,3.06,2557,3.06,2558,3.06,2559,3.06,2560,3.06,2561,3.06,2562,3.06]],["title/pipes/MaxItemsPipe.html",[1180,2.567,1787,3.509]],["body/pipes/MaxItemsPipe.html",[2,0.395,3,0.395,8,0.346,10,0.759,15,1.827,22,1.48,24,0.007,38,1.096,43,2.144,44,1.057,60,0.311,64,0.652,66,0.892,76,1.129,86,1.037,87,0.93,88,0.728,113,0.927,132,0.594,145,0.288,146,0.198,316,0.006,317,0.006,384,3.534,558,3.684,708,3.193,1159,5.513,1180,4.909,1185,3.743,1191,5.63,1570,7.73,1787,5.926,2563,7.323,2564,6.129,2565,7.323,2566,8.228,2567,8.228,2568,6.886,2569,6.886]],["title/components/MediumEditorComponent.html",[0,0.22,257,1.204]],["body/components/MediumEditorComponent.html",[0,0.363,1,0.87,2,0.202,3,0.202,4,0.693,5,0.934,6,0.934,7,1.373,8,0.177,10,0.388,11,3.281,13,5.048,15,1.389,16,3.918,19,0.826,20,3.295,22,0.757,23,1.849,24,0.007,25,0.961,26,2.213,27,1.949,28,3.156,30,1.341,32,0.38,33,0.678,34,2.673,35,1.61,36,4.339,37,4.861,38,1.386,39,1.441,44,0.804,45,3.156,47,3.649,48,3.422,49,4.339,52,3.281,60,0.282,64,0.799,65,1.125,66,1.165,71,0.896,72,1.607,76,1.015,77,1.884,81,3.281,84,2.125,86,0.789,87,0.891,88,0.849,89,3.281,99,3.281,101,3.422,102,3.043,103,2.881,104,3.888,105,1.435,106,2.288,108,1.682,110,0.855,112,1.549,113,0.842,114,2.76,116,2.825,121,1.669,131,3.281,132,0.304,133,3.281,134,1.435,143,2.206,144,2.206,145,0.147,146,0.101,147,2.688,152,2.879,154,2.688,155,3.134,160,3.772,163,3.134,181,2.206,182,0.635,183,1.317,184,0.979,185,1.403,186,1.468,187,1.751,188,1.805,189,0.934,190,0.934,191,0.84,192,0.87,193,1.391,194,1.837,195,0.87,196,1.102,197,2.058,198,0.886,199,1.964,200,0.87,201,0.901,202,0.886,203,0.934,204,0.87,205,1.389,206,0.886,207,0.934,208,0.87,209,0.934,210,0.84,211,0.855,212,1.528,213,1.659,214,0.84,215,0.87,216,0.87,217,0.855,218,0.934,219,0.886,220,1.659,221,0.934,222,0.934,223,0.886,224,1.837,225,0.87,226,0.87,227,0.886,228,0.886,229,0.87,230,0.934,231,0.855,232,0.886,233,0.934,234,0.87,235,0.934,236,0.934,237,0.87,238,0.934,239,0.84,240,0.87,241,0.934,242,0.855,243,0.934,244,0.77,245,0.934,246,0.855,247,1.519,248,0.934,249,0.855,250,0.934,251,0.855,252,0.934,253,0.811,254,0.934,255,0.87,256,0.797,257,1.829,258,2.16,259,0.934,260,0.87,261,0.934,262,0.934,263,0.87,264,0.934,265,0.87,266,0.934,267,0.811,268,0.934,269,0.87,270,0.87,271,0.934,272,0.87,273,0.886,274,0.934,275,0.84,276,0.855,277,1.726,278,0.87,279,0.693,280,0.886,281,0.87,282,0.87,283,0.886,284,0.87,285,0.934,286,0.87,287,0.87,288,0.934,289,0.855,290,0.934,291,0.87,292,0.934,293,0.87,294,0.934,295,0.87,296,0.934,297,0.87,298,0.826,299,0.84,300,0.934,301,0.855,302,0.934,303,0.855,304,0.934,305,0.855,306,0.934,307,0.855,308,0.934,309,0.855,310,0.901,311,0.934,312,0.855,313,0.886,314,0.84,315,0.934,316,0.004,317,0.004,373,2.125,387,1.041,388,2.207,524,2.846,534,3.772,575,2.112,599,4.023,970,2.409,1409,2.533,1460,2.879,1649,3.134,2139,4.282,2140,4.282,2188,2.879,2570,6.923,2571,8.071,2572,3.134,2573,5.237,2574,5.237,2575,5.565,2576,5.237,2577,5.237,2578,6.163,2579,6.253,2580,3.521,2581,7.758,2582,3.521,2583,3.521,2584,3.521,2585,3.521,2586,4.661,2587,3.521,2588,3.521,2589,3.521,2590,3.521,2591,3.521,2592,3.521,2593,3.521,2594,3.521,2595,3.521,2596,3.521,2597,3.521,2598,3.521,2599,3.521,2600,3.521,2601,3.521,2602,3.521,2603,3.521,2604,2.688,2605,3.521,2606,3.134]],["title/modules/MediumModule.html",[318,1.047,2607,3.509]],["body/modules/MediumModule.html",[2,0.379,3,0.379,8,0.333,23,2.374,24,0.007,25,1.691,58,2.277,60,0.406,132,0.57,141,3.164,145,0.375,146,0.19,182,1.192,257,2.431,258,1.663,316,0.006,317,0.006,318,1.725,320,2.635,325,3.272,326,2.523,327,2.233,330,3.064,653,3.685,654,2.96,2570,5.047,2607,6.827,2608,5.883,2609,5.883,2610,6.611,2611,5.883,2612,6.611,2613,6.611]],["title/components/MenuComponent.html",[0,0.22,260,1.204]],["body/components/MenuComponent.html",[0,0.309,1,0.727,2,0.169,3,0.169,4,0.58,5,0.781,6,0.781,8,0.148,10,0.324,14,3.328,15,1.212,19,0.69,21,2.866,22,0.632,24,0.007,25,1.329,26,2.195,27,1.931,28,2.754,30,1.17,32,0.318,33,0.592,35,1.672,38,1.202,39,1.291,43,2.382,44,0.701,46,3.14,55,0.901,60,0.253,64,0.715,65,1.623,66,1.184,75,1.455,76,1.304,77,1.534,84,1.403,86,1.207,87,0.935,88,0.847,108,1.11,110,0.715,113,1.079,119,1.71,121,2.488,132,0.254,142,0.74,145,0.123,146,0.085,162,1.014,167,1.386,182,0.531,183,1.15,184,0.854,188,1.646,189,0.781,190,0.781,191,0.702,192,0.727,193,1.247,194,1.675,195,0.727,196,1.005,197,1.92,198,0.74,199,1.814,200,0.727,201,0.754,202,0.74,203,0.781,204,0.727,205,1.212,206,0.74,207,0.781,208,0.727,209,0.781,210,0.702,211,0.715,212,1.425,213,1.486,214,0.702,215,0.727,216,0.727,217,0.715,218,0.781,219,0.74,220,1.486,221,0.781,222,0.781,223,0.74,224,1.675,225,0.727,226,0.727,227,0.74,228,0.74,229,0.727,230,0.781,231,0.715,232,0.74,233,0.781,234,0.727,235,0.781,236,0.781,237,0.727,238,0.781,239,0.702,240,0.727,241,0.781,242,0.715,243,0.781,244,0.644,245,0.781,246,0.715,247,1.36,248,0.781,249,0.715,250,0.781,251,0.715,252,0.781,253,0.678,254,0.781,255,0.727,256,0.666,257,0.727,258,0.74,259,0.781,260,1.789,261,1.486,262,0.781,263,0.727,264,0.781,265,0.727,266,0.781,267,0.678,268,0.781,269,0.727,270,0.727,271,0.781,272,0.727,273,0.74,274,0.781,275,0.702,276,0.715,277,1.61,278,0.727,279,0.9,280,0.74,281,0.727,282,0.727,283,0.74,284,0.727,285,0.781,286,0.727,287,0.727,288,0.781,289,0.715,290,0.781,291,0.727,292,0.781,293,0.727,294,0.781,295,0.727,296,0.781,297,0.727,298,0.69,299,0.702,300,0.781,301,0.715,302,0.781,303,0.715,304,0.781,305,0.715,306,0.781,307,0.715,308,0.781,309,0.715,310,0.754,311,0.781,312,0.715,313,0.74,314,0.702,315,0.781,316,0.003,317,0.003,327,1.543,348,0.632,372,4.55,375,1.11,381,1.291,384,2.36,402,3.467,433,4.654,438,1.822,451,2.338,457,1.429,496,2.338,507,4.952,513,3.5,539,3.736,557,4.063,558,3.061,575,1.892,630,1.6,632,0.956,708,1.543,818,2.863,858,5.101,894,2.408,903,2.566,912,5.354,1213,6.12,1508,5.105,1568,2.754,1618,3.546,2325,2.754,2614,2.619,2615,7.729,2616,4.57,2617,4.57,2618,8.193,2619,8.193,2620,6.315,2621,4.57,2622,4.57,2623,4.57,2624,4.57,2625,4.57,2626,4.57,2627,6.315,2628,4.067,2629,4.57,2630,6.838,2631,6.838,2632,2.406,2633,4.57,2634,4.57,2635,6.315,2636,4.57,2637,4.57,2638,4.57,2639,2.943,2640,4.57,2641,3.489,2642,2.943,2643,2.943,2644,2.943,2645,2.943,2646,2.943,2647,4.57,2648,4.067,2649,2.943,2650,2.943,2651,4.067,2652,4.57,2653,2.943,2654,4.57,2655,2.943,2656,4.57,2657,2.943,2658,4.57,2659,4.57,2660,2.943,2661,4.57,2662,2.943,2663,4.067,2664,4.57,2665,2.943,2666,2.943,2667,4.57,2668,2.943,2669,4.57,2670,2.943,2671,2.943,2672,2.943,2673,4.067,2674,2.943,2675,4.57,2676,2.943,2677,2.943,2678,2.943,2679,2.943,2680,5.602,2681,2.943,2682,4.57,2683,2.943,2684,2.943,2685,7.237,2686,2.943,2687,2.943,2688,2.943,2689,2.943,2690,2.943,2691,2.943,2692,5.602,2693,3.291,2694,2.943,2695,2.943,2696,2.943,2697,6.838,2698,2.943,2699,6.315]],["title/components/MockupComponent.html",[0,0.22,263,1.204]],["body/components/MockupComponent.html",[0,0.365,1,0.889,2,0.363,3,0.206,4,0.708,5,0.954,6,0.954,8,0.181,10,0.396,19,0.843,22,0.773,24,0.006,26,2.215,27,1.951,30,1.362,35,0.721,43,1.386,60,0.162,87,0.855,108,1.292,110,0.873,113,0.716,132,0.31,145,0.15,146,0.182,162,3.421,171,2.03,182,0.648,183,1.338,184,0.994,188,1.823,189,0.954,190,0.954,191,0.858,192,0.889,193,1.409,194,1.856,195,0.889,196,1.113,197,2.074,198,0.904,199,1.981,200,0.889,201,0.92,202,0.904,203,0.954,204,0.889,205,1.411,206,0.904,207,0.954,208,0.889,209,0.954,210,0.858,211,0.873,212,1.54,213,1.679,214,0.858,215,0.889,216,0.889,217,0.873,218,0.954,219,0.904,220,1.679,221,0.954,222,0.954,223,0.904,224,1.856,225,0.889,226,0.889,227,0.904,228,0.904,229,0.889,230,0.954,231,0.873,232,0.904,233,0.954,234,0.889,235,0.954,236,0.954,237,0.889,238,0.954,239,0.858,240,0.889,241,0.954,242,0.873,243,0.954,244,0.786,245,0.954,246,0.873,247,1.537,248,0.954,249,0.873,250,0.954,251,0.873,252,0.954,253,0.828,254,0.954,255,0.889,256,0.814,257,0.889,258,0.904,259,0.954,260,0.889,261,0.954,262,0.954,263,1.729,264,0.954,265,0.889,266,0.954,267,0.828,268,0.954,269,0.889,270,0.889,271,0.954,272,0.889,273,0.904,274,0.954,275,0.858,276,0.873,277,1.74,278,0.889,279,1.912,280,0.904,281,0.889,282,0.889,283,0.904,284,0.889,285,0.954,286,0.889,287,0.889,288,0.954,289,0.873,290,0.954,291,0.889,292,0.954,293,0.889,294,0.954,295,0.889,296,0.954,297,0.889,298,0.843,299,0.858,300,0.954,301,0.873,302,0.954,303,0.873,304,0.954,305,0.873,306,0.954,307,0.873,308,0.954,309,0.873,310,0.92,311,0.954,312,0.873,313,0.904,314,0.858,315,0.954,316,0.004,317,0.004,335,2.721,457,1.663,616,2.218,1019,4.447,1354,3.476,2466,3.205,2700,3.2,2701,3.476,2702,5.319,2703,5.319,2704,5.319,2705,6.996,2706,5.319,2707,9.693,2708,9.807,2709,9.807,2710,9.662,2711,9.662,2712,4.734,2713,5.319,2714,5.319]],["title/interfaces/ModelConfig.html",[998,1.441,1496,3.184]],["body/interfaces/ModelConfig.html",[2,0.409,3,0.409,8,0.358,10,0.785,24,0.007,32,0.769,33,1.087,41,2.44,60,0.322,64,0.674,74,2.003,88,0.887,145,0.297,316,0.006,317,0.006,499,3.204,563,3.542,708,2.835,880,4.423,998,2.726,1000,4.464,1043,4.061,1045,3.668,1143,4.656,1496,5.486,1565,5.378,1652,5.554,2715,5.131,2716,6.864,2717,5.26]],["title/injectables/ModelConfigService.html",[375,1.183,1126,3.053]],["body/injectables/ModelConfigService.html",[2,0.179,3,0.179,7,2.539,8,0.157,10,0.344,18,1.33,24,0.007,25,1.554,32,0.336,33,1.208,34,1.646,38,1.179,41,2.336,42,1.947,43,1.514,44,0.999,55,0.874,60,0.388,64,0.864,65,1.971,66,1.078,70,1.785,74,1.767,75,2.076,76,1.292,77,0.757,86,1.228,87,0.945,88,0.894,103,3.231,112,1.925,113,1.12,114,3.06,116,2.485,132,0.269,142,1.638,145,0.13,146,0.167,162,1.646,167,1.468,169,4.252,316,0.003,317,0.004,336,1.75,341,2.133,347,2.422,348,0.67,350,2.768,358,1.953,368,3.067,375,1.705,381,0.718,394,2.087,402,3.223,411,1.508,417,2.28,441,2.6,453,4.465,465,2.549,467,2.993,475,3.449,488,2.38,527,4.792,530,2.776,558,1.396,570,2.245,571,2.971,575,2.371,600,2.133,615,2.879,619,2.375,626,2.993,632,1.013,708,2.371,731,1.75,815,1.643,860,2.993,866,3.43,880,3.43,892,3.269,909,2.311,920,2.367,921,2.714,960,1.643,979,2.133,1002,1.811,1019,3.561,1036,2.38,1038,4.025,1040,2.879,1060,1.878,1064,4.689,1065,4.587,1077,1.878,1102,2.993,1126,2.993,1127,3.783,1135,2.549,1143,5.532,1158,2.383,1187,2.245,1188,4.748,1214,2.25,1283,4.252,1344,1.878,1349,3.269,1503,5.068,1524,2.775,1565,1.878,1568,3.923,1571,3.441,1645,2.38,1652,5.579,1663,1.878,1676,3.974,1683,2.133,1960,1.811,2004,3.906,2124,2.549,2125,2.549,2172,3.269,2322,4.804,2323,4.84,2715,6.097,2716,6.055,2717,2.993,2718,2.38,2719,4.252,2720,7.257,2721,4.252,2722,7.406,2723,4.777,2724,4.777,2725,4.777,2726,4.777,2727,4.777,2728,4.777,2729,3.117,2730,3.117,2731,4.777,2732,2.775,2733,4.777,2734,3.117,2735,4.777,2736,3.117,2737,4.777,2738,4.252,2739,3.906,2740,4.777,2741,3.117,2742,4.252,2743,3.117,2744,3.974,2745,4.777,2746,3.117,2747,4.777,2748,3.117,2749,4.777,2750,3.117,2751,4.777,2752,4.777,2753,4.777,2754,3.117,2755,3.117,2756,3.117,2757,3.117,2758,4.777,2759,3.117,2760,3.117,2761,4.252,2762,3.117,2763,4.777,2764,3.117,2765,2.38,2766,3.117,2767,3.117,2768,3.117,2769,2.775,2770,2.775,2771,4.777,2772,4.252,2773,4.252,2774,4.777,2775,3.117,2776,3.117,2777,3.117,2778,3.117,2779,3.117,2780,5.169,2781,4.777,2782,3.117,2783,3.117,2784,4.777,2785,3.117,2786,3.117,2787,4.777,2788,4.777,2789,3.117,2790,3.117,2791,3.117,2792,3.117,2793,4.777,2794,6.511,2795,3.117,2796,3.117,2797,3.117,2798,4.777,2799,3.117,2800,3.117,2801,3.117,2802,3.117,2803,3.117,2804,3.117,2805,3.117,2806,3.117,2807,3.117,2808,3.117,2809,2.549,2810,2.549,2811,2.775,2812,2.38,2813,3.117,2814,4.777,2815,3.117,2816,3.117,2817,3.117,2818,3.117,2819,3.117]],["title/interfaces/ModelConfiguration.html",[998,1.441,2820,3.983]],["body/interfaces/ModelConfiguration.html",[2,0.409,3,0.409,8,0.358,10,0.785,24,0.007,32,0.769,33,1.087,41,2.44,60,0.322,64,0.674,74,2.003,88,0.887,145,0.297,316,0.006,317,0.006,499,3.204,563,3.542,708,2.835,880,4.423,998,2.726,1043,4.061,1045,3.668,1143,4.656,1565,5.378,1652,5.554,2715,5.131,2716,6.864,2717,5.26,2820,6.864,2821,6.341]],["title/classes/Notification.html",[146,0.14,622,2.295]],["body/classes/Notification.html",[2,0.436,3,0.289,8,0.253,10,0.838,24,0.007,25,1.238,27,1.328,32,0.543,33,0.873,38,1.073,55,0.839,60,0.227,64,0.918,65,1.97,66,1.226,74,2.21,75,2.009,86,0.758,87,0.532,88,1.029,121,2.149,126,2.687,145,0.21,146,0.194,267,2.009,314,2.081,316,0.005,317,0.005,336,3.786,348,1.634,381,1.752,384,2.842,394,2.946,402,4.155,451,3.449,456,3.019,497,3.637,510,4.039,513,4.218,514,3.176,560,5.148,561,4.156,614,4.063,616,4.041,617,4.895,619,3.352,622,4.636,708,2.744,726,5.066,919,3.918,992,5.09,1158,3.192,1206,4.856,1432,5.463,1568,4.063,1643,4.614,1646,4.114,2049,6.001,2244,6.001,2250,4.614,2466,4.063,2822,4.478,2823,6.743,2824,6.743,2825,6.743,2826,4.895,2827,5.031,2828,5.031,2829,5.031,2830,4.856,2831,5.031,2832,5.031,2833,6.743,2834,5.148,2835,5.031,2836,5.513,2837,6.743,2838,5.031,2839,5.031,2840,6.743,2841,5.031,2842,4.478,2843,5.031,2844,5.031]],["title/components/NotificationsComponent.html",[0,0.22,267,1.123]],["body/components/NotificationsComponent.html",[0,0.38,1,0.86,2,0.2,3,0.2,4,1.023,5,1.648,6,0.924,7,2.025,8,0.175,10,0.384,15,1.378,19,0.816,22,0.748,24,0.007,25,0.639,26,2.212,27,1.949,30,1.33,32,0.376,33,0.804,35,1.476,38,0.554,39,1.197,55,0.857,56,1.559,60,0.311,64,0.731,66,0.804,71,1.062,72,1.069,74,1.758,75,1.197,76,0.852,86,0.524,87,0.869,88,0.549,108,1.261,110,0.845,113,1.04,121,1.655,132,0.3,140,2.658,145,0.288,146,0.222,182,0.628,183,1.306,184,0.97,185,1.388,186,1.451,187,1.731,188,1.795,189,0.924,190,0.924,191,0.831,192,0.86,193,1.382,194,1.827,195,0.86,196,1.096,197,2.05,198,0.876,199,1.954,200,0.86,201,0.891,202,0.876,203,0.924,204,0.86,205,1.378,206,0.876,207,0.924,208,0.86,209,0.924,210,0.831,211,0.845,212,1.522,213,1.648,214,0.831,215,0.86,216,0.86,217,0.845,218,0.924,219,0.876,220,1.648,221,0.924,222,0.924,223,0.876,224,1.827,225,0.86,226,0.86,227,0.876,228,0.876,229,0.86,230,0.924,231,0.845,232,0.876,233,0.924,234,0.86,235,0.924,236,0.924,237,0.86,238,0.924,239,0.831,240,0.86,241,0.924,242,0.845,243,0.924,244,0.761,245,0.924,246,0.845,247,1.508,248,0.924,249,0.845,250,0.924,251,0.845,252,0.924,253,0.802,254,0.924,255,0.86,256,0.788,257,0.86,258,0.876,259,0.924,260,0.86,261,0.924,262,0.924,263,0.86,264,0.924,265,0.86,266,0.924,267,1.697,268,0.924,269,0.86,270,0.86,271,0.924,272,0.86,273,0.876,274,0.924,275,0.831,276,0.845,277,1.719,278,0.86,279,0.686,280,0.876,281,0.86,282,0.86,283,0.876,284,0.86,285,0.924,286,0.86,287,0.86,288,0.924,289,0.845,290,0.924,291,0.86,292,0.924,293,0.86,294,0.924,295,0.86,296,0.924,297,0.86,298,0.816,299,0.831,300,0.924,301,0.845,302,0.924,303,0.845,304,0.924,305,0.845,306,0.924,307,0.845,308,0.924,309,0.845,310,0.891,311,0.924,312,0.845,313,0.876,314,1.844,315,0.924,316,0.004,317,0.004,318,0.748,348,1.116,365,1.598,384,1.941,402,3.547,445,1.521,456,1.559,460,1.862,496,1.781,497,2.325,499,1.329,500,2.165,510,4.09,514,3.244,522,1.486,547,1.892,558,1.559,561,4.095,616,3.43,617,3.487,619,2.582,622,4.591,623,3.98,632,2.018,634,4.742,708,1.176,726,3.609,752,2.098,764,2.181,797,2.507,801,4.199,826,2.098,908,3.254,919,4.28,942,1.955,987,3.394,988,4.474,990,2.382,992,3.892,998,1.03,1025,2.658,1028,1.598,1034,2.181,1043,2.512,1045,1.521,1158,2.274,1305,2.023,1432,2.181,1568,2.098,1576,4.246,1613,1.955,1623,3.273,1663,3.743,1884,3.254,1922,3.098,1932,2.656,1953,2.658,1974,2.846,2168,3.74,2227,2.658,2273,4.246,2307,3.74,2321,3.394,2325,3.129,2344,3.098,2466,3.129,2539,2.846,2693,2.507,2744,2.382,2765,3.965,2826,2.098,2845,3.098,2846,6.129,2847,5.193,2848,5.193,2849,5.193,2850,5.193,2851,3.481,2852,3.098,2853,3.098,2854,2.382,2855,4.622,2856,3.098,2857,5.528,2858,5.078,2859,4.246,2860,2.846,2861,3.098,2862,3.098,2863,3.098,2864,2.846,2865,3.098,2866,3.098,2867,3.098,2868,3.098,2869,3.098,2870,2.507,2871,2.846,2872,2.658,2873,3.098,2874,3.098,2875,4.622,2876,3.098,2877,3.098,2878,4.622,2879,3.098,2880,3.098,2881,3.098,2882,2.507,2883,3.098,2884,3.098,2885,6.211,2886,3.481,2887,3.481,2888,3.481,2889,3.481,2890,6.211,2891,5.528,2892,3.481,2893,3.481,2894,3.481,2895,3.481,2896,3.481,2897,3.481,2898,5.193,2899,3.481,2900,3.098,2901,4.622,2902,3.098,2903,3.481]],["title/modules/NotificationsModule.html",[318,1.047,2904,3.509]],["body/modules/NotificationsModule.html",[2,0.364,3,0.364,8,0.319,23,2.622,24,0.007,58,2.187,60,0.432,132,0.548,141,3.108,145,0.37,146,0.183,182,1.145,229,2.403,267,2.241,316,0.005,317,0.005,318,1.683,320,2.53,325,3.191,326,2.423,327,2.144,330,2.989,417,1.877,623,4.486,653,3.595,654,2.842,675,4.572,1790,6.061,1791,5.811,1796,5.19,1806,4.846,2842,5.65,2884,5.65,2904,7.089,2905,5.65,2906,5.65,2907,6.348,2908,5.65,2909,5.65,2910,6.348,2911,6.348,2912,5.65]],["title/injectables/NotificationsService.html",[375,1.183,623,2.357]],["body/injectables/NotificationsService.html",[0,0.29,2,0.268,3,0.268,8,0.235,10,0.515,23,2.523,24,0.007,25,1.447,27,1.263,32,0.505,33,0.831,38,1.165,39,1.966,44,0.984,55,0.799,60,0.356,64,0.782,66,1.131,70,1.747,71,1.459,72,1.969,74,1.748,76,1.221,77,1.135,86,1.103,87,0.774,88,0.774,93,4.62,113,1.176,116,2.448,132,0.403,138,3.822,141,1.711,142,1.842,145,0.195,146,0.134,185,1.863,186,1.949,314,1.881,316,0.004,317,0.004,318,1.379,343,4.62,348,1.574,375,2.072,381,1.687,384,2.397,386,3.486,394,2.043,451,3.281,458,2.945,460,3.059,479,4.495,500,3.286,522,2.737,534,6.579,554,4.552,561,3.281,567,2.541,575,2.662,614,2.817,617,2.625,622,4.659,623,3.103,674,5.245,675,4.62,702,6.145,732,2.929,781,3.055,825,4.192,859,2.929,860,2.929,992,2.929,1006,5.245,1028,2.146,1214,3.022,1616,2.817,1663,2.817,2172,4.39,2693,3.367,2739,5.245,2882,4.62,2891,4.161,2900,4.161,2901,5.709,2902,4.161,2912,7.593,2913,3.822,2914,6.415,2915,9.364,2916,7.882,2917,6.415,2918,7.882,2919,4.675,2920,6.415,2921,6.415,2922,4.675,2923,7.882,2924,7.015,2925,8.532,2926,6.415,2927,4.675,2928,6.415,2929,4.675,2930,6.415,2931,4.675,2932,6.415,2933,4.675,2934,5.591,2935,4.161,2936,4.675,2937,4.675,2938,4.675,2939,4.675,2940,4.675,2941,4.675,2942,4.675,2943,4.161,2944,4.675,2945,4.675,2946,4.675,2947,4.675,2948,4.675,2949,4.675,2950,4.675,2951,4.675]],["title/components/OutputComponent.html",[0,0.22,269,1.204]],["body/components/OutputComponent.html",[0,0.41,1,1.015,2,0.236,3,0.236,4,1.345,5,1.089,6,1.089,8,0.206,10,0.452,15,1.554,18,2.499,19,0.963,21,3.493,22,0.882,24,0.007,26,2.226,27,1.963,30,1.5,32,0.443,33,0.964,35,1.641,38,0.653,39,1.35,41,2.405,43,2.407,44,0.899,46,3.702,55,0.85,60,0.355,64,0.798,66,1.06,72,1.798,74,1.629,75,1.814,76,0.803,77,0.997,86,0.618,87,0.91,88,0.434,105,1.673,106,1.794,108,1.422,110,0.997,113,1.002,121,1.308,123,3.834,132,0.354,145,0.171,146,0.118,171,1.567,182,0.74,183,1.473,184,1.094,188,1.941,189,1.089,190,1.089,191,0.98,192,1.015,193,1.519,194,1.975,195,1.015,196,1.185,197,2.172,198,1.033,199,2.089,200,1.015,201,1.051,202,1.033,203,1.089,204,1.015,205,1.554,206,1.033,207,1.089,208,1.015,209,1.089,210,0.98,211,0.997,212,1.612,213,1.812,214,1.879,215,1.015,216,2.082,217,1.988,218,1.089,219,1.033,220,1.812,221,1.089,222,1.089,223,1.033,224,1.975,225,1.015,226,1.015,227,1.033,228,1.033,229,1.015,230,1.089,231,0.997,232,1.033,233,1.089,234,1.015,235,1.089,236,1.089,237,1.015,238,1.089,239,0.98,240,1.015,241,1.089,242,0.997,243,1.089,244,0.898,245,1.089,246,0.997,247,1.658,248,1.089,249,0.997,250,1.089,251,0.997,252,1.089,253,0.946,254,1.089,255,1.015,256,0.93,257,1.015,258,1.033,259,1.089,260,1.015,261,1.089,262,1.089,263,1.015,264,1.089,265,1.015,266,1.089,267,0.946,268,1.089,269,1.84,270,1.015,271,1.089,272,1.015,273,1.033,274,1.089,275,0.98,276,0.997,277,1.822,278,1.015,279,0.808,280,1.033,281,1.015,282,1.015,283,1.033,284,1.015,285,1.089,286,1.015,287,1.015,288,1.089,289,0.997,290,1.089,291,1.015,292,1.089,293,1.015,294,1.089,295,1.015,296,1.089,297,1.015,298,0.963,299,0.98,300,1.089,301,0.997,302,1.089,303,0.997,304,1.089,305,0.997,306,1.089,307,0.997,308,1.089,309,0.997,310,1.051,311,1.089,312,1.658,313,1.033,314,0.98,315,1.089,316,0.004,317,0.004,364,3.669,367,2.847,373,2.513,396,4.218,497,1.838,499,2.236,557,2.305,861,4.008,903,4.18,1137,2.474,1138,2.957,1337,2.682,1344,2.474,1345,2.809,1394,6.011,1402,4.918,1404,4.788,1405,6.087,1406,4.788,1408,3.356,1409,2.833,1411,3.356,1413,3.356,2047,5.213,2062,3.654,2071,3.654,2072,3.654,2073,3.356,2074,5.213,2952,3.654,2953,4.105,2954,4.105,2955,4.105,2956,4.105]],["title/classes/Pagination.html",[146,0.14,2224,2.735]],["body/classes/Pagination.html",[2,0.341,3,0.186,7,1.264,8,0.163,10,0.357,23,1.456,24,0.007,25,1.435,32,0.35,33,0.637,38,0.783,39,1.733,40,2.318,43,2.098,44,0.755,45,2.966,55,0.741,60,0.269,64,0.809,66,1.2,71,1.222,72,1.511,74,1.175,75,1.733,76,1.32,77,2.129,84,2.764,86,1.177,87,0.826,88,0.871,113,0.894,121,2.762,142,0.816,145,0.135,146,0.191,162,3.02,316,0.003,317,0.003,340,2.966,348,0.697,365,1.488,367,3.692,381,1.733,384,3.614,386,2.675,392,1.187,394,2.6,418,4.709,421,4.668,434,5.643,438,1.962,456,2.975,457,2.078,458,3.86,475,3.32,479,3.963,499,1.879,513,2.381,547,4.645,554,3.654,558,1.452,567,1.762,571,1.658,575,2.01,616,2.77,619,2.447,629,2.654,708,2.926,778,3.758,859,2.031,891,3.758,995,2.118,1002,4.885,1028,1.488,1029,4.381,1042,4.003,1043,2.381,1203,6.615,1305,1.884,1409,2.381,1425,5.913,1426,5.913,1427,5.432,1525,4.865,1596,2.86,1602,2.218,1618,1.82,1623,1.708,1719,2.475,1721,4.798,1722,2.218,1918,4.543,2104,4.024,2105,4.286,2168,3.545,2217,5.296,2224,5.179,2565,5.913,2628,4.381,2641,3.758,2717,3.084,2742,5.913,2924,6.693,2957,2.885,2958,9.07,2959,8.052,2960,5.913,2961,6.644,2962,4.381,2963,4.381,2964,4.922,2965,6.644,2966,3.242,2967,4.922,2968,3.242,2969,3.242,2970,3.242,2971,4.024,2972,3.242,2973,3.242,2974,3.242,2975,4.922,2976,3.242,2977,3.242,2978,3.242,2979,3.242,2980,4.922,2981,3.242,2982,3.242,2983,3.242,2984,3.242,2985,4.922,2986,3.242,2987,4.922,2988,3.242,2989,4.922,2990,5.95,2991,4.922,2992,3.242,2993,4.381,2994,4.922,2995,3.242,2996,2.475,2997,2.885,2998,2.885,2999,2.885,3000,2.885,3001,3.242,3002,3.242,3003,3.242,3004,3.242,3005,7.815,3006,3.242,3007,3.242,3008,8.546,3009,5.913,3010,7.144,3011,3.242,3012,3.242,3013,6.644,3014,4.922,3015,3.242,3016,3.242,3017,3.242,3018,3.242,3019,5.95,3020,3.242,3021,3.242]],["title/components/PaginationComponent.html",[0,0.22,270,1.204]],["body/components/PaginationComponent.html",[0,0.361,1,0.861,2,0.2,3,0.2,4,0.686,5,0.924,6,0.924,8,0.175,10,0.384,15,1.378,19,0.817,20,3.274,21,3.179,22,0.749,24,0.007,26,2.212,27,1.948,30,1.33,32,0.376,33,0.673,34,3.064,35,1.549,37,3.893,38,0.554,44,0.797,45,3.744,46,3.425,47,3.63,55,0.858,60,0.311,64,0.732,65,1.117,66,1.089,71,0.889,72,2.114,75,1.197,76,1.098,77,1.509,84,2.114,86,0.783,87,0.889,88,0.549,104,4.495,105,2.533,106,2.715,108,1.673,110,0.846,113,0.699,121,1.656,132,0.301,142,1.563,145,0.145,146,0.179,147,2.66,162,2.662,167,1.641,182,0.628,183,1.307,184,0.971,188,1.795,189,0.924,190,0.924,191,0.831,192,0.861,193,1.383,194,1.828,195,0.861,196,1.096,197,2.05,198,0.876,199,1.955,200,0.861,201,0.892,202,0.876,203,0.924,204,0.861,205,1.378,206,0.876,207,0.924,208,0.861,209,0.924,210,0.831,211,0.846,212,1.522,213,1.649,214,0.831,215,0.861,216,0.861,217,0.846,218,0.924,219,0.876,220,1.649,221,0.924,222,0.924,223,0.876,224,1.828,225,0.861,226,0.861,227,0.876,228,0.876,229,0.861,230,0.924,231,0.846,232,0.876,233,0.924,234,0.861,235,0.924,236,0.924,237,0.861,238,0.924,239,0.831,240,0.861,241,0.924,242,0.846,243,0.924,244,0.762,245,0.924,246,0.846,247,1.509,248,0.924,249,0.846,250,0.924,251,0.846,252,0.924,253,0.803,254,0.924,255,0.861,256,0.789,257,0.861,258,0.876,259,0.924,260,0.861,261,0.924,262,0.924,263,0.861,264,0.924,265,0.861,266,0.924,267,0.803,268,0.924,269,0.861,270,1.703,271,0.924,272,0.861,273,0.876,274,0.924,275,0.831,276,0.846,277,1.72,278,0.861,279,0.686,280,0.876,281,0.861,282,0.861,283,0.876,284,0.861,285,0.924,286,0.861,287,0.861,288,0.924,289,0.846,290,0.924,291,0.861,292,0.924,293,0.861,294,0.924,295,0.861,296,0.924,297,0.861,298,0.817,299,0.831,300,0.924,301,0.846,302,0.924,303,0.846,304,0.924,305,0.846,306,0.924,307,0.846,308,0.924,309,0.846,310,0.892,311,0.924,312,0.846,313,0.876,314,0.831,315,0.924,316,0.004,317,0.004,364,3.255,365,1.599,381,0.803,387,1.537,396,3.742,456,2.326,475,3.012,478,2.738,514,1.641,547,2.824,563,1.732,571,1.782,575,2.841,629,2.478,815,2.738,903,2.917,920,3.587,995,3.395,1206,4.476,1214,2.447,1721,2.917,1765,2.509,1807,3.101,2145,4.252,2224,5.18,2251,5.632,2252,4.625,2283,3.101,2693,2.509,2962,4.625,3009,4.625,3022,3.101,3023,5.196,3024,6.889,3025,5.196,3026,3.484,3027,3.484,3028,5.196,3029,3.484,3030,7.486,3031,3.484,3032,3.484,3033,3.484,3034,3.484,3035,3.484,3036,5.196,3037,3.484,3038,5.196,3039,3.484,3040,4.625,3041,5.196,3042,3.484,3043,3.484,3044,5.196,3045,3.484,3046,3.484,3047,5.196,3048,3.101,3049,3.484,3050,5.196,3051,3.484,3052,6.214,3053,3.484,3054,6.214,3055,3.484,3056,6.214,3057,3.484,3058,3.484,3059,3.484,3060,3.484,3061,3.484,3062,3.484,3063,3.484,3064,3.484,3065,5.196,3066,5.196,3067,5.196,3068,5.196,3069,5.196,3070,5.196,3071,5.196,3072,5.196,3073,5.196,3074,5.196,3075,5.196,3076,5.196,3077,5.196,3078,5.196]],["title/classes/PaginationConfig.html",[146,0.14,2145,3.334]],["body/classes/PaginationConfig.html",[0,0.349,2,0.357,3,0.357,8,0.312,10,0.685,24,0.007,32,0.67,33,1,38,0.989,40,3.64,60,0.28,64,0.833,66,1.139,86,0.936,87,0.656,88,0.656,113,1.132,121,2.463,145,0.259,146,0.222,162,2.662,316,0.005,317,0.005,348,1.807,381,2.126,384,3.288,475,3.221,510,4.375,514,3.64,547,4.199,629,2.592,815,4.636,816,4.489,880,4.071,921,2.59,924,4.656,960,3.273,1000,3.892,1102,4.841,1158,2.828,1203,5.899,1618,4.338,1646,5.079,2145,6.193,2224,4.338,2963,6.877,3079,8.055,3080,8.799,3081,8.799,3082,8.416,3083,7.727,3084,6.212,3085,6.317,3086,6.212,3087,6.877,3088,7.727,3089,7.727,3090,7.727]],["title/components/PasswordResetComponent.html",[0,0.22,272,1.204]],["body/components/PasswordResetComponent.html",[0,0.343,1,0.928,2,0.216,3,0.216,4,0.74,5,0.996,6,0.996,8,0.189,10,0.414,15,1.457,19,0.881,22,0.807,24,0.007,25,1.192,26,2.218,27,1.955,30,1.406,32,0.405,33,0.711,35,1.592,38,0.598,39,1.752,41,1.406,44,0.843,55,0.89,60,0.322,64,0.796,65,1.396,66,1.129,71,0.642,72,1.686,76,0.515,77,0.912,86,0.566,87,0.889,88,0.686,105,1.531,106,2.4,108,1.334,110,0.912,112,2.113,113,0.874,132,0.324,135,1.641,142,0.945,145,0.157,146,0.108,165,2.985,171,2.097,182,0.678,183,1.382,184,1.026,188,1.862,189,0.996,190,0.996,191,0.896,192,0.928,193,1.445,194,1.896,195,0.928,196,1.137,197,2.107,198,0.945,199,2.017,200,0.928,201,0.962,202,0.945,203,0.996,204,0.928,205,1.457,206,0.945,207,0.996,208,0.928,209,0.996,210,0.896,211,0.912,212,1.564,213,1.723,214,0.896,215,0.928,216,0.928,217,0.912,218,0.996,219,0.945,220,1.723,221,0.996,222,0.996,223,0.945,224,1.896,225,0.928,226,0.928,227,0.945,228,0.945,229,0.928,230,0.996,231,0.912,232,0.945,233,0.996,234,0.928,235,0.996,236,0.996,237,0.928,238,0.996,239,0.896,240,0.928,241,0.996,242,0.912,243,0.996,244,1.201,245,0.996,246,0.912,247,1.577,248,0.996,249,0.912,250,0.996,251,0.912,252,0.996,253,0.865,254,0.996,255,0.928,256,0.851,257,0.928,258,0.945,259,0.996,260,0.928,261,0.996,262,0.996,263,0.928,264,0.996,265,0.928,266,0.996,267,0.865,268,0.996,269,0.928,270,0.928,271,0.996,272,1.766,273,2.115,274,0.996,275,0.896,276,0.912,277,1.767,278,0.928,279,0.74,280,0.945,281,0.928,282,0.928,283,0.945,284,0.928,285,0.996,286,0.928,287,0.928,288,0.996,289,0.912,290,0.996,291,0.928,292,0.996,293,0.928,294,0.996,295,0.928,296,0.996,297,0.928,298,0.881,299,0.896,300,0.996,301,0.912,302,0.996,303,0.912,304,0.996,305,0.912,306,0.996,307,0.912,308,0.996,309,0.912,310,0.962,311,0.996,312,0.912,313,0.945,314,0.896,315,0.996,316,0.004,317,0.004,326,3.328,339,3.581,348,0.807,357,1.769,360,2.868,373,2.193,376,4.491,377,4.244,381,1.496,387,1.921,388,2.277,402,2.522,412,2.57,440,3.765,456,2.459,500,2.29,518,4.581,519,4.721,599,4.132,614,4.305,616,2.29,617,2.109,622,3.961,623,3.841,634,4.194,641,3.343,661,7.224,665,3.071,715,5.495,907,3.646,966,2.868,992,3.441,1933,3.956,2012,7.127,2466,4.785,2469,3.343,2486,3.343,2488,3.343,2514,6.359,2516,4.889,2520,5.78,2864,3.071,3091,7.864,3092,3.343,3093,7.068,3094,5.493,3095,7.145,3096,5.493,3097,3.756,3098,3.756,3099,3.756,3100,3.756,3101,5.493,3102,3.756,3103,3.756,3104,5.493,3105,4.889,3106,4.889,3107,3.756,3108,3.756,3109,3.756,3110,3.756,3111,3.343,3112,3.756,3113,3.756,3114,3.756,3115,3.756,3116,3.756,3117,3.756,3118,3.756,3119,6.494,3120,3.756]],["title/components/PopComponent.html",[0,0.22,275,1.163]],["body/components/PopComponent.html",[0,0.34,1,0.905,2,0.21,3,0.21,4,0.721,5,1.698,6,0.971,7,1.428,8,0.184,10,0.404,19,0.859,22,0.787,24,0.007,25,1.445,26,2.216,27,1.958,30,1.38,32,0.395,33,0.698,34,2.431,35,1.577,38,1.123,39,1.964,44,0.827,55,0.671,56,2.414,60,0.243,64,0.745,66,1.081,71,0.626,74,2.068,76,0.968,77,1.554,84,1.655,86,0.812,87,0.9,88,0.57,108,1.309,110,0.889,113,1.095,132,0.316,145,0.153,146,0.155,182,0.66,183,1.356,184,1.007,185,1.459,186,1.527,187,1.82,188,1.84,189,0.971,190,0.971,191,0.874,192,0.905,193,1.424,194,1.873,195,0.905,196,1.123,197,2.088,198,0.921,199,1.996,200,0.905,201,0.938,202,0.921,203,0.971,204,0.905,205,1.43,206,0.921,207,0.971,208,0.905,209,0.971,210,0.874,211,0.889,212,1.55,213,1.698,214,0.874,215,0.905,216,0.905,217,0.889,218,0.971,219,0.921,220,1.698,221,0.971,222,0.971,223,0.921,224,1.873,225,0.905,226,0.905,227,0.921,228,0.921,229,0.905,230,0.971,231,0.889,232,0.921,233,0.971,234,0.905,235,0.971,236,0.971,237,0.905,238,0.971,239,0.874,240,0.905,241,0.971,242,0.889,243,0.971,244,0.801,245,0.971,246,0.889,247,1.554,248,0.971,249,0.889,250,0.971,251,0.889,252,0.971,253,0.844,254,0.971,255,0.905,256,0.829,257,0.905,258,0.921,259,0.971,260,0.905,261,0.971,262,0.971,263,0.905,264,0.971,265,0.905,266,0.971,267,0.844,268,0.971,269,0.905,270,0.905,271,0.971,272,0.905,273,0.921,274,0.971,275,1.684,276,0.889,277,1.751,278,0.905,279,0.721,280,0.921,281,0.905,282,0.905,283,0.921,284,0.905,285,0.971,286,0.905,287,0.905,288,0.971,289,0.889,290,0.971,291,0.905,292,0.971,293,0.905,294,0.971,295,0.905,296,0.971,297,0.905,298,0.859,299,0.874,300,0.971,301,0.889,302,0.971,303,0.889,304,0.971,305,0.889,306,0.971,307,0.889,308,0.971,309,0.889,310,0.938,311,0.971,312,0.889,313,0.921,314,0.874,315,0.971,316,0.004,317,0.004,348,0.787,365,1.681,373,2.166,381,1.997,384,2.015,387,1.083,388,2.25,417,2.087,458,1.681,460,2.822,492,4.754,500,3.553,504,4.116,507,5.713,510,4.151,511,4.742,513,4.25,514,4.435,516,3.259,517,4.93,530,3.132,531,3.883,547,3.836,548,3.836,550,4.408,552,5.389,558,3.16,560,4.116,561,2.758,562,4.116,574,2.994,629,0.989,1045,1.6,1380,4.798,1499,4.798,1586,2.795,1588,2.994,1616,2.206,1623,1.929,1771,2.994,1926,2.506,1966,4.009,2134,2.637,2190,3.259,2325,2.206,2348,3.259,2352,2.994,2693,3.883,2701,2.393,2826,2.206,3121,3.259,3122,4.798,3123,7.058,3124,5.391,3125,5.391,3126,5.391,3127,3.662,3128,3.662,3129,3.662,3130,3.662,3131,3.662,3132,3.662,3133,3.259,3134,3.259,3135,2.994,3136,3.259,3137,3.259,3138,3.259,3139,3.662,3140,3.662,3141,3.662,3142,3.662,3143,6.399,3144,3.662]],["title/modules/PopModule.html",[318,1.047,1790,3.184]],["body/modules/PopModule.html",[2,0.392,3,0.392,8,0.344,23,2.595,24,0.007,58,2.356,60,0.42,132,0.59,141,3.211,145,0.38,146,0.197,182,1.234,275,2.342,316,0.006,317,0.006,318,1.761,320,2.726,325,3.339,326,2.61,327,2.31,330,3.127,517,5.915,653,3.761,654,3.062,959,4.469,1790,6.329,3138,6.087,3145,6.087,3146,6.087,3147,6.087,3148,6.087,3149,6.839]],["title/injectables/PopService.html",[375,1.183,517,3.053]],["body/injectables/PopService.html",[2,0.367,3,0.367,8,0.322,10,0.705,24,0.007,32,0.69,33,1.019,38,1.018,60,0.385,64,0.606,66,1.019,71,1.346,113,0.861,121,2.508,132,0.552,142,1.609,145,0.267,146,0.184,162,2.204,275,1.526,316,0.005,317,0.005,335,4.025,348,1.831,375,2.069,387,2.52,492,4.932,510,3.912,517,4.929,548,4.276,563,3.18,801,5.05,887,4.025,959,4.18,1016,6.072,1926,5.384,2307,6.944,2846,7.912,3150,5.693,3151,9.127,3152,7.003,3153,8.89,3154,7.868,3155,6.397,3156,6.397,3157,6.397,3158,6.397,3159,6.397,3160,6.397,3161,6.397,3162,6.397,3163,6.397]],["title/injectables/ResourceConfig.html",[375,1.183,432,2.648]],["body/injectables/ResourceConfig.html",[2,0.126,3,0.126,4,0.714,8,0.269,10,0.399,24,0.007,25,1.765,27,0.714,32,0.238,34,0.759,35,0.726,38,1.395,39,1.064,41,2.305,42,2.592,44,0.821,55,0.451,60,0.303,64,0.689,65,2.004,66,0.97,70,3.277,71,0.377,74,0.526,75,0.835,76,1.294,86,0.891,87,0.88,88,0.625,94,1.961,103,1.3,112,2.432,113,0.72,114,1.161,118,2.068,130,1.197,132,0.19,145,0.092,146,0.063,167,1.038,172,1.961,173,2.106,191,0.865,193,1.415,196,1.445,201,0.928,210,0.865,212,0.909,277,1.496,279,1.054,316,0.003,317,0.003,333,1.587,336,2.035,341,3.662,342,1.801,348,0.473,370,4.806,375,1.121,381,1.84,384,0.823,402,3.599,404,5.55,417,2.791,432,1.97,436,4.072,441,2.396,456,0.986,464,1.327,475,3.139,512,2.271,527,4.232,558,2.396,570,1.587,571,1.127,575,0.744,585,1.507,592,1.587,600,3.662,614,1.327,615,1.327,632,0.716,676,1.587,679,2.767,702,4.842,708,1.56,715,3.018,730,5.017,731,1.237,732,4.212,766,3.004,767,3.985,799,1.28,866,1.161,880,1.161,881,1.28,887,1.127,892,1.507,894,1.91,920,2.41,921,2.803,960,1.161,1019,4.355,1042,1.327,1064,6.122,1096,2.106,1127,3.109,1137,1.327,1144,1.44,1156,2.893,1158,3.081,1213,1.682,1214,4.519,1548,1.587,1567,1.682,1571,6.062,1627,2.767,1641,2.611,1664,1.587,1676,3.16,1683,2.48,1684,1.587,1685,1.38,1960,4.89,2002,3.775,2009,3.775,2032,4.11,2124,6.723,2126,5.661,2321,1.44,2323,2.369,2718,1.682,2732,1.961,2769,4.11,2772,3.226,2773,3.226,2809,5.2,2810,1.801,2811,1.961,2812,5.362,2854,2.48,3164,5.53,3165,5.351,3166,7.276,3167,3.625,3168,3.625,3169,7.024,3170,2.203,3171,2.203,3172,6.361,3173,3.625,3174,3.625,3175,1.961,3176,2.203,3177,3.625,3178,2.203,3179,2.203,3180,2.203,3181,5.72,3182,2.203,3183,3.625,3184,2.203,3185,3.625,3186,2.203,3187,1.961,3188,2.203,3189,2.203,3190,2.203,3191,1.801,3192,1.961,3193,3.625,3194,2.203,3195,2.203,3196,2.203,3197,1.961,3198,2.203,3199,2.203,3200,2.203,3201,3.625,3202,2.203,3203,2.203,3204,2.203,3205,8.11,3206,4.618,3207,2.203,3208,2.203,3209,4.618,3210,2.203,3211,3.625,3212,5.351,3213,2.203,3214,2.203,3215,2.203,3216,2.203,3217,1.801,3218,2.203,3219,8.223,3220,8.223,3221,2.203,3222,2.203,3223,2.203,3224,2.203,3225,2.203,3226,2.203,3227,2.203,3228,2.203,3229,2.203,3230,2.203,3231,5.351,3232,2.203,3233,2.203,3234,1.961,3235,4.618,3236,3.625,3237,3.625,3238,2.203,3239,3.625,3240,3.625,3241,2.203,3242,2.203,3243,2.203,3244,2.203,3245,2.203,3246,2.203,3247,2.203,3248,2.203,3249,2.203,3250,2.203,3251,2.203,3252,2.203,3253,1.961,3254,2.203,3255,2.203,3256,2.203,3257,2.203,3258,2.203,3259,1.682,3260,2.203,3261,2.203,3262,2.203,3263,2.203,3264,2.203,3265,2.203,3266,2.203,3267,2.203,3268,2.203,3269,2.203,3270,2.203,3271,2.203,3272,4.618,3273,5.351,3274,3.625,3275,4.618,3276,3.625,3277,3.625,3278,2.203,3279,2.203,3280,2.203,3281,2.203,3282,2.203,3283,2.203,3284,2.203,3285,2.203,3286,2.203,3287,2.203,3288,2.203,3289,2.203,3290,2.203,3291,2.203,3292,2.203,3293,3.625,3294,2.203,3295,2.203,3296,2.203,3297,2.203,3298,2.203,3299,2.203,3300,2.203,3301,2.203,3302,2.203,3303,2.203,3304,2.203,3305,2.203,3306,2.203,3307,2.203,3308,2.203,3309,2.203,3310,2.203,3311,2.203,3312,2.203,3313,2.203,3314,3.625,3315,2.203,3316,2.203,3317,1.961,3318,1.682,3319,2.203,3320,2.203,3321,2.203,3322,2.203,3323,2.203,3324,3.625,3325,2.203,3326,3.625,3327,2.203,3328,3.625,3329,2.203,3330,2.203,3331,2.203]],["title/components/ResourceCrudComponent.html",[0,0.22,276,1.183]],["body/components/ResourceCrudComponent.html",[0,0.308,1,0.724,2,0.168,3,0.168,4,1.344,5,0.777,6,0.777,8,0.147,10,0.323,15,1.208,19,0.687,20,2.943,22,0.629,24,0.007,25,0.836,26,2.195,27,1.935,30,1.166,32,0.316,33,0.59,35,1.562,38,0.466,39,1.844,43,1.187,44,1.298,47,3.319,55,0.97,60,0.399,64,0.821,65,1.466,66,1.17,70,2.913,71,0.955,75,1.451,76,1.202,77,1.53,84,1.398,86,0.841,87,0.917,88,0.823,105,2.781,106,2.753,108,1.53,110,0.711,113,1.014,132,0.253,135,1.28,145,0.122,146,0.161,162,1.009,167,1.38,171,1.738,174,1.835,182,0.528,183,1.405,184,0.851,188,1.642,189,0.777,190,0.777,191,0.699,192,0.724,193,1.243,194,1.671,195,0.724,196,1.428,197,1.916,198,0.737,199,1.81,200,0.724,201,0.75,202,0.737,203,0.777,204,0.724,205,1.208,206,0.737,207,0.777,208,0.724,209,0.777,210,0.699,211,0.711,212,1.422,213,1.482,214,0.699,215,0.724,216,0.724,217,0.711,218,0.777,219,0.737,220,1.482,221,0.777,222,0.777,223,0.737,224,1.671,225,0.724,226,0.724,227,0.737,228,0.737,229,0.724,230,0.777,231,0.711,232,0.737,233,0.777,234,0.724,235,0.777,236,0.777,237,0.724,238,0.777,239,0.699,240,0.724,241,0.777,242,0.711,243,0.777,244,1.492,245,0.777,246,0.711,247,1.356,248,0.777,249,0.711,250,0.777,251,0.711,252,0.777,253,0.675,254,0.777,255,0.724,256,0.663,257,0.724,258,0.737,259,0.777,260,0.724,261,0.777,262,0.777,263,0.724,264,0.777,265,0.724,266,0.777,267,0.675,268,0.777,269,0.724,270,0.724,271,0.777,272,0.724,273,0.737,274,0.777,275,0.699,276,1.754,277,2.033,278,0.724,279,0.577,280,1.145,281,1.863,282,1.686,283,0.737,284,0.724,285,0.777,286,0.724,287,0.724,288,0.777,289,0.711,290,0.777,291,0.724,292,0.777,293,0.724,294,0.777,295,0.724,296,0.777,297,0.724,298,0.687,299,0.699,300,0.777,301,0.711,302,0.777,303,0.711,304,0.777,305,0.711,306,0.777,307,0.711,308,0.777,309,0.711,310,0.75,311,0.777,312,0.711,313,0.737,314,0.699,315,0.777,316,0.003,317,0.003,327,1.538,339,3.671,347,2.329,348,0.629,349,1.543,350,2.354,367,1.898,373,2.392,381,0.675,387,1.652,388,2.608,392,1.667,411,1.417,433,3.591,439,3.722,440,3.234,441,3.055,443,5.578,444,3.722,445,1.99,446,3.722,447,2.943,453,2.556,454,3.722,457,2.741,458,2.09,460,2.259,472,1.99,475,2.044,483,4.942,485,1.765,486,1.702,492,4.185,497,2.82,515,4.274,518,3.365,519,3.537,527,4.111,530,2.645,569,2.395,570,2.11,571,1.498,575,1.886,587,2.004,623,3.047,626,1.835,630,1.592,631,2.236,632,0.952,708,2.128,729,2.236,891,2.236,902,3.279,903,2.556,904,3.722,905,3.476,907,3.136,909,2.202,910,4.052,912,5.53,913,5.606,914,4.052,918,3.972,919,3.245,923,4.052,924,2.744,928,2.975,932,4.052,933,3.722,934,3.476,935,4.052,953,2.395,954,2.395,955,2.395,956,2.607,957,2.607,959,1.914,966,2.236,972,4.971,973,2.607,974,2.607,993,2.11,995,1.914,996,4.052,997,4.052,1016,2.975,1020,4.809,1537,4.052,2127,3.722,2717,2.853,2834,2.236,3164,6.545,3318,2.236,3332,7.429,3333,2.607,3334,6.299,3335,5.585,3336,4.553,3337,2.929,3338,2.929,3339,2.929,3340,2.929,3341,2.929,3342,5.15,3343,2.929,3344,2.929,3345,2.929,3346,2.929,3347,2.929,3348,2.929,3349,2.929,3350,2.929,3351,2.929,3352,2.929,3353,2.929,3354,2.929,3355,2.236,3356,2.395,3357,2.929,3358,2.929,3359,2.929,3360,2.929,3361,2.929,3362,2.929,3363,2.929,3364,2.929,3365,2.929,3366,2.929,3367,2.929,3368,2.929]],["title/components/ResourceDeletePopComponent.html",[0,0.22,278,1.204]],["body/components/ResourceDeletePopComponent.html",[0,0.349,1,0.78,2,0.181,3,0.181,4,0.622,5,0.838,6,0.838,8,0.159,10,0.348,19,0.74,22,0.678,24,0.007,26,2.202,27,1.939,30,1.235,32,0.341,33,0.625,35,1.747,38,1.043,39,1.84,44,1.142,55,0.601,60,0.319,64,0.849,65,1.893,66,1.169,71,0.54,74,1.564,75,1.784,76,1.062,77,1.422,86,0.882,87,0.882,88,0.619,105,1.287,106,2.108,108,1.171,110,0.767,113,0.95,121,1.006,132,0.272,135,1.38,139,3.301,142,0.794,145,0.132,146,0.091,182,0.569,183,1.473,184,0.901,188,1.708,189,0.838,190,0.838,191,0.753,192,0.78,193,1.303,194,1.739,195,0.78,196,1.043,197,1.975,198,0.794,199,1.873,200,0.78,201,0.808,202,0.794,203,0.838,204,0.78,205,1.28,206,0.794,207,0.838,208,0.78,209,0.838,210,0.753,211,0.767,212,1.466,213,1.553,214,0.753,215,0.78,216,0.78,217,0.767,218,0.838,219,0.794,220,1.553,221,0.838,222,0.838,223,0.794,224,1.739,225,0.78,226,0.78,227,0.794,228,0.794,229,0.78,230,0.838,231,0.767,232,0.794,233,0.838,234,0.78,235,0.838,236,0.838,237,0.78,238,0.838,239,0.753,240,0.78,241,0.838,242,0.767,243,0.838,244,0.69,245,0.838,246,0.767,247,1.422,248,0.838,249,0.767,250,0.838,251,0.767,252,0.838,253,0.727,254,0.838,255,0.78,256,0.715,257,0.78,258,0.794,259,0.838,260,0.78,261,0.838,262,0.838,263,0.78,264,0.838,265,0.78,266,0.838,267,0.727,268,0.838,269,0.78,270,0.78,271,0.838,272,0.78,273,0.794,274,0.838,275,1.685,276,0.767,277,2.147,278,1.62,279,1.94,280,0.794,281,0.78,282,0.78,283,0.794,284,0.78,285,0.838,286,0.78,287,0.78,288,0.838,289,0.767,290,0.838,291,0.78,292,0.838,293,0.78,294,0.838,295,0.78,296,0.838,297,0.78,298,0.74,299,0.753,300,0.838,301,0.767,302,0.838,303,0.767,304,0.838,305,0.767,306,0.838,307,0.767,308,0.838,309,0.767,310,0.808,311,0.838,312,0.767,313,0.794,314,0.753,315,0.838,316,0.003,317,0.003,348,0.678,357,1.487,373,2.285,375,1.171,381,0.727,387,0.934,388,2.089,392,1.766,394,2.558,400,2.803,402,2.214,440,3.333,441,3.161,451,2.467,491,2.41,492,4.507,497,2.934,500,2.011,504,3.683,510,3.258,521,2.81,543,2.81,575,1.066,616,1.316,623,3.6,774,2.274,918,4.208,919,4.325,920,3.461,921,3.329,960,1.664,987,3.152,1019,2.934,1035,7.665,1048,3.944,1080,3.152,1214,2.272,1497,4.348,1506,2.063,1536,2.81,1539,2.81,1540,2.81,1548,2.274,1618,2.708,1932,2.467,1953,2.41,2321,3.152,2352,2.581,2466,3.527,2651,4.293,2971,3.944,3164,6.546,3191,2.581,3342,3.944,3355,6.939,3369,4.824,3370,6.554,3371,6.554,3372,6.283,3373,7.06,3374,4.824,3375,3.157,3376,3.157,3377,3.683,3378,3.157,3379,3.157,3380,3.157,3381,4.824,3382,7.443,3383,4.824,3384,3.157,3385,3.157,3386,3.157,3387,3.157,3388,3.157,3389,2.81,3390,2.581,3391,3.157,3392,3.157,3393,3.157,3394,3.157,3395,3.157,3396,3.157,3397,3.157,3398,4.824,3399,4.824,3400,2.81,3401,2.81,3402,3.157,3403,3.157,3404,3.157,3405,3.157,3406,3.157,3407,3.157]],["title/modules/ResourceModule.html",[318,1.047,1123,3.334]],["body/modules/ResourceModule.html",[2,0.308,3,0.308,8,0.27,23,2.32,24,0.007,58,1.846,60,0.436,132,0.462,134,2.184,135,2.341,141,2.872,145,0.348,146,0.154,174,3.357,182,0.966,185,2.136,276,2.307,277,2.042,278,2.348,279,1.385,280,2.39,281,2.372,282,2.348,283,2.39,316,0.005,317,0.005,318,1.511,320,2.136,325,2.865,326,2.045,327,1.81,329,3.947,330,2.683,432,4.824,485,3.229,486,3.113,651,5.724,653,3.227,654,2.399,730,3.501,731,3.008,959,4.594,1123,6.799,1124,6.208,1129,5.063,1140,4.091,1147,4.381,1497,4.983,1506,3.501,1755,3.859,1756,3.501,3332,4.381,3355,5.367,3356,4.381,3408,4.769,3409,4.769,3410,5.358,3411,4.769,3412,4.769,3413,5.358,3414,5.358,3415,4.769]],["title/injectables/ResourceService.html",[375,1.183,1497,2.735]],["body/injectables/ResourceService.html",[0,0.226,2,0.19,3,0.19,8,0.167,10,0.365,24,0.007,25,1.577,32,0.358,33,1.019,38,1.52,39,1.748,41,1.281,43,1.88,44,0.768,55,0.898,56,1.484,60,0.382,64,0.856,65,1.943,66,1.112,70,3.21,71,1.347,72,1.017,75,2.132,76,1.304,79,1.997,84,2.865,86,1.25,87,0.877,88,0.877,112,0.98,113,0.673,114,1.746,116,2.895,126,1.995,132,0.286,142,1.517,145,0.209,146,0.095,162,1.141,196,0.96,212,1.323,277,2.155,279,1.665,316,0.003,317,0.005,339,3.709,340,3.633,347,2.801,348,0.712,349,1.746,350,2.511,368,1.561,375,1.751,381,1.548,386,4.122,387,1.48,388,1.056,394,1.448,411,1.603,417,1.987,432,4.122,436,4.101,438,3.808,441,3.982,447,4.149,460,2.824,464,3.015,475,2.776,478,3.177,479,3.8,485,1.997,488,2.53,499,3.451,522,2.135,524,1.801,548,2.72,554,3.879,563,1.647,567,1.801,618,3.135,632,1.077,673,2.267,729,2.53,731,1.86,752,3.633,766,2.81,767,3.135,859,2.076,866,3.54,887,3.689,909,2.421,939,2.709,998,0.98,1026,4.049,1030,2.53,1031,2.267,1038,1.801,1040,3.015,1041,3.424,1042,3.015,1043,2.421,1044,3.015,1045,2.187,1046,3.27,1047,4.454,1048,4.091,1049,4.454,1051,4.091,1053,4.091,1054,4.091,1056,3.604,1062,4.091,1064,3.604,1065,3.94,1066,4.091,1068,3.821,1069,4.091,1072,3.27,1076,3.424,1079,2.709,1080,2.165,1081,2.53,1082,2.709,1083,2.709,1084,2.709,1085,2.709,1086,2.709,1087,2.709,1088,2.709,1094,4.93,1095,2.709,1096,2.908,1097,2.709,1098,2.709,1101,4.091,1102,2.076,1104,5.493,1105,2.709,1106,2.709,1107,2.709,1108,2.709,1109,5.896,1110,1.997,1111,2.709,1475,2.949,1497,2.81,1590,2.709,1663,1.997,1960,2.908,2719,2.949,3164,6.27,3191,2.709,3416,2.949,3417,5.004,3418,3.314,3419,6.718,3420,6.718,3421,3.314,3422,5.004,3423,3.314,3424,5.004,3425,3.314,3426,3.314,3427,3.314,3428,5.004,3429,3.314,3430,5.004,3431,5.004,3432,3.314,3433,3.314,3434,3.314,3435,2.949,3436,5.004,3437,3.314,3438,3.314,3439,3.314,3440,3.314,3441,3.314,3442,3.314,3443,3.314,3444,3.314,3445,3.314,3446,6.03,3447,3.314,3448,5.004,3449,3.314,3450,3.314,3451,3.314,3452,3.314]],["title/pipes/SafeHtmlPipe.html",[1180,2.567,3453,3.509]],["body/pipes/SafeHtmlPipe.html",[2,0.395,3,0.395,8,0.346,10,0.758,15,1.824,22,1.478,24,0.007,38,1.399,44,1.055,55,1.023,60,0.371,66,0.89,76,1.128,86,1.036,87,0.929,88,0.727,132,0.593,145,0.287,146,0.198,183,2.292,185,2.741,316,0.006,317,0.006,375,1.67,632,2.234,1180,4.633,1185,4.779,1186,7.317,1191,5.625,1756,4.494,3453,5.921,3454,7.317,3455,6.121,3456,8.221,3457,6.721,3458,7.317,3459,8.221,3460,8.221,3461,6.877,3462,8.794,3463,6.877,3464,6.877]],["title/modules/SdkModule.html",[318,1.047,1124,3.184]],["body/modules/SdkModule.html",[2,0.405,3,0.405,8,0.355,23,2.63,24,0.007,58,2.433,60,0.415,132,0.609,141,3.057,145,0.371,146,0.203,182,1.274,185,2.815,316,0.006,317,0.006,318,1.795,320,2.815,325,3.404,326,2.696,327,2.386,329,3.966,330,3.188,350,3.554,1124,6.214,1755,5.087,1756,4.616,3465,6.286,3466,6.286,3467,7.063,3468,7.063]],["title/injectables/SdkService.html",[350,1.821,375,1.183]],["body/injectables/SdkService.html",[2,0.344,3,0.189,8,0.165,10,0.362,23,2.236,24,0.007,25,1.441,32,0.355,33,0.644,34,1.713,37,4.736,38,1.287,39,2.204,44,1.026,45,4.555,55,1.05,60,0.374,64,0.841,65,1.544,66,1.197,70,1.858,71,1.383,72,2.771,73,3.581,74,1.929,75,1.541,76,1.284,77,1.207,84,1.526,86,1.183,87,0.83,88,0.929,103,2.577,105,1.339,113,1.135,116,3.272,118,2.226,119,1.909,121,2.83,132,0.283,145,0.137,146,0.094,154,3.796,179,2.924,193,1.106,316,0.003,317,0.003,338,2.686,339,4.486,341,6.015,348,0.706,350,2.5,356,2.686,361,6.61,364,3.115,368,2.825,375,1.745,377,5.409,381,1.382,392,2.63,412,2.248,417,0.972,421,4.371,441,2.995,445,2.923,447,3.524,460,1.783,499,1.898,518,2.996,554,3.867,567,1.785,575,2.026,614,4.987,616,2.073,671,3.796,672,3.581,673,6.427,674,4.065,675,3.581,676,5.175,677,4.425,678,4.065,679,5.106,680,3.796,681,3.581,682,5.468,683,2.791,684,4.065,685,4.425,686,4.425,688,4.425,691,2.924,699,4.425,703,2.996,704,4.425,729,2.508,732,2.058,738,5.953,750,2.924,752,1.979,781,2.147,799,5.159,801,2.702,866,1.731,881,2.889,885,4.065,942,2.791,1206,3.581,1370,3.796,1618,2.791,1643,3.402,2012,4.065,2303,4.065,2480,5.953,2481,2.924,2483,2.924,2720,5.953,2812,3.796,3187,2.924,3253,4.425,3469,2.924,3470,6.689,3471,6.689,3472,6.689,3473,8.437,3474,4.972,3475,4.972,3476,5.998,3477,3.285,3478,4.972,3479,3.285,3480,5.998,3481,4.972,3482,3.285,3483,4.972,3484,8.085,3485,4.972,3486,3.285,3487,7.559,3488,4.972,3489,3.285,3490,4.972,3491,3.285,3492,4.425,3493,3.285,3494,3.285,3495,3.285,3496,3.402,3497,3.285,3498,5.998,3499,3.285,3500,3.285,3501,4.972,3502,3.285,3503,3.285,3504,3.285,3505,3.285,3506,3.285,3507,3.285,3508,3.285,3509,3.285,3510,3.285,3511,3.285,3512,3.285,3513,3.285,3514,3.285,3515,5.998,3516,3.285,3517,3.285,3518,4.972,3519,3.285,3520,3.285,3521,3.285,3522,5.998,3523,2.924,3524,3.285,3525,3.285,3526,3.285,3527,3.285,3528,4.972,3529,3.285,3530,3.285,3531,3.285,3532,3.285,3533,3.285,3534,4.972,3535,3.285,3536,3.285,3537,3.285,3538,3.285,3539,3.285,3540,3.285,3541,6.689,3542,3.285,3543,5.998,3544,3.285,3545,3.285,3546,3.285]],["title/components/SearchbarComponent.html",[0,0.22,284,1.204]],["body/components/SearchbarComponent.html",[0,0.342,1,0.734,2,0.17,3,0.17,4,0.585,5,0.787,6,0.787,8,0.149,10,0.327,15,1.22,19,0.696,22,0.638,24,0.007,25,1.508,26,2.196,27,1.932,30,1.178,32,0.32,33,1.138,34,1.584,35,1.815,37,2.882,38,1.398,39,2.025,43,2.04,44,0.706,55,0.573,60,0.353,64,0.804,65,1.682,66,1.172,71,1.295,74,0.708,75,1.852,76,1.102,77,1.667,86,0.956,87,0.883,88,0.67,108,1.541,110,0.721,113,1.142,132,0.256,135,1.297,142,1.157,145,0.124,146,0.085,165,2.5,182,0.535,183,1.157,184,0.859,186,1.918,188,1.653,189,0.787,190,0.787,191,0.708,192,0.734,193,1.253,194,1.683,195,0.734,196,1.422,197,1.926,198,0.747,199,1.821,200,0.734,201,0.76,202,0.747,203,0.787,204,0.734,205,1.22,206,0.747,207,0.787,208,0.734,209,0.787,210,0.708,211,0.721,212,1.43,213,1.494,214,0.708,215,0.734,216,0.734,217,0.721,218,0.787,219,0.747,220,1.494,221,0.787,222,0.787,223,0.747,224,1.683,225,0.734,226,0.734,227,0.747,228,0.747,229,0.734,230,0.787,231,0.721,232,0.747,233,0.787,234,0.734,235,0.787,236,0.787,237,0.734,238,0.787,239,1.514,240,0.734,241,0.787,242,0.721,243,0.787,244,0.649,245,0.787,246,0.721,247,1.368,248,0.787,249,0.721,250,0.787,251,0.721,252,0.787,253,0.684,254,0.787,255,0.734,256,0.672,257,0.734,258,0.747,259,0.787,260,0.734,261,0.787,262,0.787,263,0.734,264,0.787,265,0.734,266,0.787,267,0.684,268,0.787,269,0.734,270,0.734,271,0.787,272,0.734,273,0.747,274,0.787,275,0.708,276,0.721,277,1.616,278,0.734,279,0.585,280,0.747,281,0.734,282,0.734,283,0.747,284,1.568,285,0.787,286,0.734,287,0.734,288,0.787,289,0.721,290,0.787,291,0.734,292,0.787,293,0.734,294,0.787,295,0.734,296,0.787,297,0.734,298,0.696,299,0.708,300,0.787,301,0.721,302,0.787,303,0.721,304,0.787,305,0.721,306,0.787,307,0.721,308,0.787,309,0.721,310,0.76,311,0.787,312,0.721,313,0.747,314,0.708,315,0.787,316,0.003,317,0.004,348,0.638,357,1.398,373,2.229,380,3.512,386,2.5,387,2.03,388,2.561,392,1.684,417,1.36,433,3.413,436,3.785,453,2.582,457,2.513,458,2.112,460,2.275,478,1.564,483,4.969,506,5.356,507,3.147,511,2.772,554,4.495,563,1.476,567,1.613,599,4.368,630,1.613,880,1.564,887,2.353,920,2.959,921,3.027,960,1.564,1019,2.522,1023,2.031,1034,2.882,1110,4.375,1171,2.882,1214,2.167,1263,4.056,1354,3.006,1379,2.138,1456,2.266,1580,4.3,1651,2.426,1762,3.854,1764,5.646,1765,4.569,1878,2.641,1960,2.672,2158,3.147,2194,4.604,2198,2.641,2220,6.741,2285,2.426,2316,4.094,2450,4.604,2632,2.426,2872,4.3,3152,4.094,3181,3.512,3342,5.186,3377,4.3,3547,2.641,3548,7.574,3549,5.646,3550,3.761,3551,4.6,3552,6.463,3553,7.743,3554,4.6,3555,4.6,3556,4.6,3557,5.632,3558,5.632,3559,4.6,3560,4.6,3561,2.968,3562,4.094,3563,2.968,3564,2.968,3565,2.968,3566,2.968,3567,2.968,3568,2.968,3569,4.6,3570,2.968,3571,4.6,3572,2.968,3573,4.6,3574,2.968,3575,4.6,3576,4.6,3577,4.6,3578,2.968,3579,6.344,3580,4.6,3581,2.968,3582,4.6,3583,2.968,3584,2.968,3585,2.968,3586,4.6,3587,4.6,3588,2.968,3589,2.968,3590,2.968,3591,2.968,3592,4.6,3593,2.968,3594,2.968,3595,2.968,3596,2.968,3597,2.968,3598,2.968,3599,2.968,3600,2.968,3601,2.968,3602,4.6,3603,4.6,3604,2.641,3605,2.968,3606,2.968,3607,2.968,3608,4.6,3609,2.968,3610,2.968,3611,2.968,3612,2.968,3613,2.968,3614,2.968,3615,2.968,3616,2.968,3617,2.968,3618,5.012,3619,2.968,3620,2.968,3621,2.968,3622,2.968]],["title/modules/SelectModule.html",[318,1.047,3623,3.509]],["body/modules/SelectModule.html",[2,0.363,3,0.363,8,0.318,23,2.31,24,0.007,25,1.67,58,2.178,60,0.424,132,0.546,141,3.103,145,0.37,146,0.182,182,1.141,286,2.419,316,0.005,317,0.005,318,1.679,320,2.52,325,3.184,326,2.414,327,2.136,330,2.982,593,4.132,653,3.586,654,2.831,658,4.554,1131,7.545,1132,4.327,1140,4.828,2286,6.65,3623,6.932,3624,5.628,3625,5.628,3626,6.323,3627,6.323,3628,5.628,3629,6.323,3630,5.628]],["title/directives/SlotHostDirective.html",[184,0.91,312,1.183]],["body/directives/SlotHostDirective.html",[0,0.424,2,0.383,3,0.383,8,0.336,10,0.735,22,1.434,24,0.007,26,1.796,27,1.59,32,0.72,33,1.045,34,2.781,39,1.86,41,2.067,55,1.005,60,0.301,64,0.764,66,1.045,86,1.005,87,0.705,88,0.705,102,4.691,132,0.576,145,0.279,146,0.192,184,1.622,312,1.961,313,2.031,314,2.152,316,0.006,317,0.006,348,1.865,357,3.143,367,3.761,440,3.615,445,3.528,497,3.615,671,6.164,1214,3.803,1396,7.969,1440,6.164,3631,7.726,3632,5.939,3633,8.073,3634,6.673,3635,6.673,3636,8.073,3637,6.673]],["title/classes/Sorter.html",[146,0.14,3638,3.509]],["body/classes/Sorter.html",[2,0.273,3,0.273,7,1.853,8,0.239,10,0.715,24,0.007,25,1.191,32,0.797,33,1.251,34,2.733,38,1.175,43,2.473,44,1.217,55,0.592,60,0.214,64,0.868,65,1.969,66,0.956,71,0.813,75,2.022,76,1.302,86,0.977,87,0.685,88,0.927,113,0.639,118,2.904,142,1.858,145,0.331,146,0.212,162,2.544,316,0.005,317,0.004,340,2.863,365,2.181,381,1.976,384,3.104,394,3.227,445,2.076,467,4.064,472,3.467,496,3.318,499,3.17,530,2.761,540,3.105,575,2.494,615,2.863,671,3.627,708,3.189,778,6.7,825,4.239,877,4.229,893,3.627,942,4.146,1056,3.422,1148,7.492,1363,3.884,1440,3.627,1456,5.638,1613,2.668,1623,2.503,1629,5.451,1681,3.105,1780,3.884,1866,5.303,1966,4.064,2132,3.422,2218,6.791,2223,5.773,2321,4.239,2960,7.062,2996,4.952,3638,6.175,3639,3.627,3640,6.486,3641,7.935,3642,6.486,3643,5.303,3644,5.303,3645,5.303,3646,4.751,3647,6.486,3648,4.751,3649,8.306,3650,6.486,3651,4.751,3652,3.422,3653,5.303,3654,3.884,3655,4.229,3656,4.229,3657,4.229,3658,4.229,3659,4.751,3660,4.229,3661,4.229,3662,4.751,3663,6.486,3664,4.751,3665,4.751,3666,4.751,3667,4.751,3668,4.751,3669,6.486,3670,4.751,3671,4.751,3672,4.751,3673,4.751,3674,4.751,3675,4.751,3676,4.751,3677,4.751]],["title/interfaces/Symbol.html",[920,1.986,998,1.441]],["body/interfaces/Symbol.html",[2,0.399,3,0.399,8,0.35,10,0.766,24,0.007,32,0.751,33,1.072,56,3.705,64,0.783,65,2.058,74,1.975,87,1.026,88,0.934,93,5.009,139,5.663,145,0.29,316,0.006,317,0.006,823,6.189,920,3.903,998,2.448,1022,5.408,1349,5.663,1572,5.185,1937,7.366,1966,5.999,3678,6.189,3679,8.276,3680,7.366,3681,8.276]],["title/modules/SymbolModule.html",[318,1.047,1793,3.184]],["body/modules/SymbolModule.html",[2,0.406,3,0.406,8,0.356,23,2.632,24,0.007,58,2.437,60,0.424,132,0.61,141,3.06,145,0.372,146,0.203,182,1.276,316,0.006,317,0.006,318,1.796,320,2.819,325,3.407,326,2.7,327,2.389,330,3.191,653,3.838,654,3.167,921,3.966,1793,6.216,3682,6.295,3683,6.295,3684,7.073,3685,5.783,3686,6.794,3687,7.073]],["title/injectables/SymbolPipe.html",[375,1.183,3686,3.72]],["body/injectables/SymbolPipe.html",[2,0.491,3,0.37,8,0.325,10,0.711,15,1.713,24,0.007,32,0.697,44,1.214,58,2.224,60,0.386,64,0.611,65,1.967,66,0.836,75,1.823,76,1.174,86,0.972,87,1.006,88,0.682,132,0.557,145,0.27,146,0.186,183,1.624,316,0.005,317,0.005,348,1.387,375,2.078,392,2.896,445,3.457,499,2.464,632,2.097,683,4.442,920,3.955,921,3.815,1089,6.469,1180,4.699,1185,4.3,1191,5.414,1966,4.957,3030,7.042,3685,5.278,3686,6.04,3688,5.745,3689,7.912,3690,6.455,3691,7.912,3692,5.745,3693,6.455]],["title/injectables/SymbolService.html",[375,1.183,921,2.031]],["body/injectables/SymbolService.html",[2,0.284,3,0.284,8,0.249,10,0.546,24,0.007,32,0.815,33,0.864,38,1.062,39,2,44,1.024,55,1.15,60,0.364,64,0.865,65,2.041,66,1.168,71,0.848,74,2.295,75,2,76,1.237,77,1.833,83,5.525,86,1.269,87,0.992,88,0.891,93,4.807,113,1.087,118,3.887,121,2.574,132,0.428,142,1.679,145,0.207,146,0.142,162,1.707,168,4.807,316,0.005,317,0.005,348,1.622,375,1.833,421,3.238,522,3.445,726,3.878,866,2.611,881,3.878,887,4.441,920,4.038,921,2.783,1072,3.238,1664,4.807,1965,7.167,1966,4.182,2323,4.362,2721,5.94,2836,5.457,3692,4.411,3694,4.411,3695,8.681,3696,6.674,3697,4.956,3698,6.674,3699,4.956,3700,6.674,3701,4.956,3702,6.674,3703,4.956,3704,6.674,3705,5.94,3706,6.674,3707,4.956,3708,6.674,3709,4.956,3710,4.956,3711,8.074,3712,4.956,3713,6.674,3714,4.956,3715,4.956,3716,4.956,3717,4.956,3718,4.956,3719,4.956,3720,4.956,3721,4.956,3722,4.956,3723,4.956,3724,4.956,3725,4.956,3726,4.956]],["title/components/TabComponent.html",[0,0.22,287,1.204]],["body/components/TabComponent.html",[0,0.352,1,0.99,2,0.23,3,0.23,4,0.789,5,1.063,6,1.063,8,0.201,10,0.441,19,0.939,22,0.861,24,0.007,25,1.237,26,2.224,27,1.961,30,1.473,32,0.432,33,0.745,35,1.676,39,1.326,44,0.883,60,0.26,64,0.81,65,1.582,66,1.145,71,0.984,74,1.757,75,1.326,76,0.789,77,1.398,86,0.603,87,0.904,88,0.423,104,4.558,108,1.398,110,0.973,113,0.774,126,2.294,132,0.346,145,0.167,146,0.115,182,0.722,183,1.448,184,1.075,188,1.919,189,1.063,190,1.063,191,0.956,192,0.99,193,1.499,194,1.953,195,0.99,196,1.172,197,2.154,198,1.008,199,2.069,200,0.99,201,1.026,202,1.008,203,1.063,204,0.99,205,1.527,206,1.008,207,1.063,208,0.99,209,1.063,210,0.956,211,0.973,212,1.599,213,1.787,214,0.956,215,0.99,216,0.99,217,0.973,218,1.063,219,1.008,220,1.787,221,1.063,222,1.063,223,1.008,224,1.953,225,0.99,226,0.99,227,1.008,228,1.008,229,0.99,230,1.063,231,0.973,232,1.008,233,1.063,234,0.99,235,1.063,236,1.063,237,0.99,238,1.063,239,0.956,240,0.99,241,1.063,242,0.973,243,1.063,244,0.876,245,1.063,246,0.973,247,1.636,248,1.063,249,0.973,250,1.063,251,0.973,252,1.063,253,0.923,254,1.063,255,0.99,256,0.907,257,0.99,258,1.008,259,1.063,260,0.99,261,1.063,262,1.063,263,0.99,264,1.063,265,0.99,266,1.063,267,0.923,268,1.063,269,0.99,270,0.99,271,1.063,272,0.99,273,1.008,274,1.063,275,0.956,276,0.973,277,1.807,278,0.99,279,0.789,280,1.008,281,0.99,282,0.99,283,1.008,284,0.99,285,1.063,286,0.99,287,1.82,288,1.063,289,2.175,290,1.063,291,0.99,292,1.063,293,0.99,294,1.063,295,0.99,296,1.063,297,0.99,298,0.939,299,0.956,300,1.063,301,0.973,302,1.063,303,0.973,304,1.063,305,0.973,306,1.063,307,0.973,308,1.063,309,0.973,310,1.026,311,1.063,312,0.973,313,1.008,314,0.956,315,1.063,316,0.004,317,0.004,348,1.447,357,1.887,373,2.675,381,1.326,387,1.702,388,2.666,417,1.185,433,3.877,457,2.726,458,3.38,460,2.64,497,2.577,513,4.479,589,3.761,805,2.861,858,5.593,1019,3.492,1159,3.605,1326,4.394,1360,3.275,1362,6.376,1576,4.705,1884,3.605,3727,3.565,3728,7.182,3729,5.755,3730,8.716,3731,5.755,3732,5.755,3733,4.005,3734,4.005,3735,4.005,3736,4.005,3737,4.005,3738,4.005,3739,4.005,3740,5.755,3741,4.005,3742,3.565,3743,4.005,3744,4.005]],["title/components/TabsComponent.html",[0,0.22,289,1.183]],["body/components/TabsComponent.html",[0,0.374,1,0.961,2,0.223,3,0.223,4,1.11,5,1.032,6,1.032,7,1.517,8,0.196,10,0.429,15,1.495,19,0.912,22,0.836,24,0.007,26,2.221,27,1.958,30,1.442,32,0.42,33,0.729,35,1.545,44,0.864,55,0.484,56,2.522,60,0.299,64,0.73,65,1.424,66,1.073,72,1.729,73,4.058,74,1.344,75,1.674,76,1.057,77,1.764,86,0.998,87,0.929,88,0.7,105,1.585,108,1.368,110,0.944,113,0.758,119,3.273,132,0.335,142,1.417,145,0.162,146,0.112,162,1.34,167,1.832,182,0.701,183,1.417,184,1.053,185,1.55,186,1.621,187,1.933,188,1.893,189,1.032,190,1.032,191,0.928,192,0.961,193,1.474,194,1.927,195,0.961,196,1.156,197,2.132,198,0.978,199,2.045,200,0.961,201,0.996,202,0.978,203,1.032,204,0.961,205,1.495,206,0.978,207,1.032,208,0.961,209,1.032,210,0.928,211,0.944,212,1.583,213,1.757,214,0.928,215,0.961,216,0.961,217,0.944,218,1.032,219,0.978,220,1.757,221,1.032,222,1.032,223,0.978,224,1.927,225,0.961,226,0.961,227,0.978,228,0.978,229,0.961,230,1.032,231,0.944,232,0.978,233,1.032,234,0.961,235,1.032,236,1.032,237,0.961,238,1.032,239,0.928,240,0.961,241,1.032,242,0.944,243,1.032,244,0.85,245,1.032,246,0.944,247,1.609,248,1.032,249,0.944,250,1.032,251,0.944,252,1.032,253,0.896,254,1.032,255,0.961,256,0.881,257,0.961,258,0.978,259,1.032,260,0.961,261,1.032,262,1.032,263,0.961,264,1.032,265,0.961,266,1.032,267,0.896,268,1.032,269,0.961,270,0.961,271,1.032,272,0.961,273,0.978,274,1.032,275,0.928,276,0.944,277,1.789,278,0.961,279,0.766,280,0.978,281,0.961,282,0.961,283,0.978,284,0.961,285,1.032,286,0.961,287,2.2,288,1.032,289,1.952,290,1.032,291,0.961,292,1.032,293,0.961,294,1.032,295,0.961,296,1.032,297,0.961,298,0.912,299,0.928,300,1.032,301,0.944,302,1.032,303,0.944,304,1.032,305,0.944,306,1.032,307,0.944,308,1.032,309,0.944,310,0.996,311,1.032,312,0.944,313,1.417,314,0.928,315,1.032,316,0.004,317,0.005,335,2.882,348,0.836,365,1.785,387,1.15,433,3.832,457,2.784,483,4.97,531,2.801,557,3.163,575,1.313,589,3.681,619,2.801,630,2.114,632,1.263,711,3.855,866,2.049,912,5.252,1226,2.343,1508,2.343,1590,4.606,1932,2.882,2005,4.97,2035,3.179,2251,5.938,2632,3.179,2673,3.461,3728,7.185,3745,3.461,3746,4.606,3747,5.634,3748,6.624,3749,5.634,3750,7.263,3751,7.263,3752,5.634,3753,5.634,3754,3.889,3755,3.889,3756,5.634,3757,3.889,3758,5.634,3759,3.889,3760,5.634,3761,3.889,3762,5.634,3763,3.461,3764,3.889,3765,3.889,3766,3.889,3767,3.889,3768,3.889,3769,3.889,3770,5.634,3771,3.889,3772,3.889,3773,3.889,3774,3.889,3775,3.889,3776,3.889,3777,3.889,3778,3.889,3779,3.889,3780,3.889,3781,3.889,3782,3.889,3783,5.634]],["title/components/TinymceComponent.html",[0,0.22,291,1.204]],["body/components/TinymceComponent.html",[0,0.322,1,0.798,2,0.185,3,0.185,4,0.636,5,0.857,6,0.857,7,1.259,8,0.162,10,0.356,11,3.075,13,4.957,15,1.302,16,3.719,19,0.757,22,0.694,23,1.755,24,0.007,25,0.901,26,2.204,27,1.941,28,2.957,30,1.256,32,0.349,33,0.635,34,2.587,35,1.612,36,4.154,37,4.154,38,1.46,39,1.73,40,2.312,44,0.753,48,3.207,49,4.154,52,3.075,60,0.416,64,0.78,65,1.055,66,1.156,71,1.015,72,1.506,74,1.919,76,1.071,77,1.732,79,1.946,81,3.075,84,2.689,86,0.894,87,0.888,88,0.627,89,3.075,99,3.075,101,3.207,102,2.851,103,1.76,104,3.723,105,1.316,106,2.144,108,1.192,110,0.784,113,1.108,114,2.586,116,2.722,118,2.197,119,3.852,121,2.113,130,1.755,131,3.075,132,0.279,133,3.075,134,1.316,143,2.023,144,2.023,145,0.135,146,0.093,147,2.465,152,4.853,154,3.747,160,3.535,165,1.755,181,2.023,182,0.582,183,1.234,184,0.917,185,1.287,186,1.346,187,1.605,188,1.728,189,0.857,190,0.857,191,0.771,192,0.798,193,1.321,194,1.759,195,0.798,196,1.055,197,1.992,198,0.812,199,1.892,200,0.798,201,0.827,202,0.812,203,0.857,204,0.798,205,1.302,206,0.812,207,0.857,208,0.798,209,0.857,210,0.771,211,0.784,212,1.479,213,1.575,214,0.771,215,0.798,216,0.798,217,0.784,218,0.857,219,0.812,220,1.575,221,0.857,222,0.857,223,0.812,224,1.759,225,0.798,226,0.798,227,0.812,228,0.812,229,0.798,230,0.857,231,0.784,232,0.812,233,0.857,234,0.798,235,0.857,236,0.857,237,0.798,238,0.857,239,0.771,240,0.798,241,0.857,242,0.784,243,0.857,244,0.706,245,0.857,246,0.784,247,1.441,248,0.857,249,0.784,250,0.857,251,0.784,252,0.857,253,0.744,254,0.857,255,0.798,256,0.731,257,0.798,258,0.812,259,0.857,260,0.798,261,0.857,262,0.857,263,0.798,264,0.857,265,0.798,266,0.857,267,0.744,268,0.857,269,0.798,270,0.798,271,0.857,272,0.798,273,0.812,274,0.857,275,0.771,276,0.784,277,1.671,278,0.798,279,0.636,280,0.812,281,0.798,282,0.798,283,0.812,284,0.798,285,0.857,286,0.798,287,0.798,288,0.857,289,0.784,290,0.857,291,1.762,292,0.857,293,0.798,294,0.857,295,0.798,296,0.857,297,0.798,298,0.757,299,0.771,300,0.857,301,0.784,302,0.857,303,0.784,304,0.857,305,0.784,306,0.857,307,0.784,308,0.857,309,0.784,310,1.256,311,0.857,312,0.784,313,0.812,314,0.771,315,0.857,316,0.003,317,0.003,348,0.694,373,2.305,387,0.955,388,2.113,392,1.796,438,2.643,458,2.253,460,1.76,478,2.586,554,4.114,561,2.51,567,1.755,614,2.957,632,1.049,781,2.11,892,4.062,903,2.755,1171,3.075,1209,2.874,1554,2.874,1765,4.776,2013,4.368,2045,6.347,2085,2.874,2139,4.012,2140,4.012,2188,2.64,2450,4.853,2575,5.283,2578,5.901,2586,4.368,2604,2.465,2606,2.874,2854,3.358,3552,2.874,3784,2.874,3785,5.933,3786,4.907,3787,4.907,3788,4.907,3789,3.229,3790,6.63,3791,4.907,3792,4.012,3793,4.907,3794,4.012,3795,4.907,3796,3.229,3797,3.229,3798,3.229,3799,3.229,3800,3.229,3801,3.229,3802,3.229,3803,3.229,3804,3.229,3805,3.229,3806,3.229,3807,3.229,3808,3.229,3809,3.229,3810,3.229,3811,3.229,3812,3.229,3813,3.229,3814,3.229,3815,3.229,3816,3.229,3817,3.229,3818,3.229,3819,3.229,3820,3.229,3821,3.229,3822,3.229,3823,4.012,3824,3.229,3825,3.229,3826,3.229,3827,3.229,3828,3.229,3829,3.229,3830,3.229,3831,3.229,3832,3.229,3833,3.229,3834,3.229,3835,3.229,3836,3.229,3837,3.229,3838,3.229,3839,3.229,3840,3.229,3841,4.907,3842,3.229]],["title/modules/TinymceModule.html",[318,1.047,3843,3.509]],["body/modules/TinymceModule.html",[2,0.409,3,0.409,8,0.358,23,2.107,24,0.007,58,2.454,60,0.379,132,0.615,141,3.267,145,0.385,146,0.205,182,1.285,291,2.437,316,0.006,317,0.006,318,1.804,320,2.84,325,3.422,326,2.719,327,2.406,330,3.204,3843,6.929,3844,6.341,3845,6.341,3846,6.341,3847,7.124,3848,7.124]],["title/components/ToggleComponent.html",[0,0.22,293,1.204]],["body/components/ToggleComponent.html",[0,0.379,1,1.005,2,0.233,3,0.233,4,1.338,5,1.079,6,1.079,8,0.205,10,0.448,15,1.544,16,4.257,19,0.954,22,0.874,23,2.009,24,0.007,25,1.068,26,2.225,27,1.962,30,1.49,32,0.439,33,0.753,35,1.684,36,4.646,38,1.457,44,0.893,48,3.803,49,4.646,52,3.646,55,0.923,60,0.263,64,0.643,65,1.251,66,1.088,76,1.017,77,1.801,81,3.646,83,5.074,84,2.085,85,3.982,86,0.877,87,0.924,88,0.615,89,3.646,99,3.646,101,3.803,108,1.413,110,0.988,113,1.131,114,3.066,121,2.363,131,3.646,132,0.351,133,3.646,134,1.658,143,2.549,144,2.549,145,0.17,146,0.117,160,4.893,181,2.549,182,0.734,183,1.464,184,1.087,188,1.933,189,1.079,190,1.079,191,0.971,192,1.005,193,1.512,194,1.967,195,1.005,196,1.18,197,2.165,198,1.023,199,2.081,200,1.005,201,1.042,202,1.023,203,1.079,204,1.005,205,1.544,206,1.023,207,1.079,208,1.005,209,1.079,210,0.971,211,0.988,212,1.607,213,1.802,214,0.971,215,1.005,216,1.005,217,0.988,218,1.079,219,1.023,220,1.802,221,1.079,222,1.079,223,1.023,224,1.967,225,1.005,226,1.005,227,1.023,228,1.023,229,1.005,230,1.079,231,0.988,232,1.023,233,1.079,234,1.005,235,1.079,236,1.079,237,1.005,238,1.079,239,0.971,240,1.005,241,1.079,242,0.988,243,1.079,244,0.89,245,1.079,246,0.988,247,1.65,248,1.079,249,0.988,250,1.079,251,0.988,252,1.079,253,0.937,254,1.079,255,1.005,256,0.921,257,1.005,258,1.023,259,1.079,260,1.005,261,1.079,262,1.079,263,1.005,264,1.079,265,1.005,266,1.079,267,0.937,268,1.079,269,1.005,270,1.005,271,1.079,272,1.005,273,1.023,274,1.079,275,0.971,276,0.988,277,1.816,278,1.005,279,0.801,280,1.023,281,1.005,282,1.005,283,1.023,284,1.005,285,1.079,286,1.005,287,1.005,288,1.079,289,0.988,290,1.079,291,1.005,292,1.079,293,1.939,294,1.079,295,1.005,296,1.079,297,1.005,298,0.954,299,0.971,300,1.079,301,0.988,302,1.079,303,0.988,304,1.079,305,0.988,306,1.079,307,0.988,308,1.079,309,0.988,310,1.042,311,1.079,312,0.988,313,1.023,314,0.971,315,1.079,316,0.004,317,0.004,381,1.98,511,5.557,599,4.264,1171,2.549,1214,2.741,2226,4.191,2337,4.757,2604,3.106,2701,3.803,3457,4.757,3849,3.62,3850,5.819,3851,5.819,3852,4.068,3853,4.068,3854,4.068,3855,5.819,3856,4.068,3857,4.068,3858,4.068,3859,4.068]],["title/components/ToolbarComponent.html",[0,0.22,295,1.204]],["body/components/ToolbarComponent.html",[0,0.362,1,1.064,2,0.247,3,0.247,4,0.848,5,1.142,6,1.142,8,0.217,10,0.474,13,4.356,19,1.009,22,0.925,24,0.007,26,2.229,27,1.967,28,3.65,30,1.551,32,0.465,34,2.087,35,1.607,40,2.853,44,0.929,60,0.273,64,0.573,66,0.985,76,1.043,86,0.648,87,0.921,88,0.455,108,1.471,110,1.045,113,0.815,132,0.371,145,0.18,146,0.124,165,2.34,182,0.777,183,1.524,184,1.132,188,1.982,189,1.142,190,1.142,191,1.027,192,1.064,193,1.56,194,2.018,195,1.064,196,1.21,197,2.206,198,1.083,199,2.127,200,1.064,201,1.102,202,1.083,203,1.142,204,1.064,205,1.607,206,1.083,207,1.142,208,1.064,209,1.142,210,1.027,211,1.045,212,1.637,213,1.859,214,1.027,215,1.064,216,1.064,217,1.045,218,1.142,219,1.913,220,2.127,221,1.142,222,1.142,223,1.083,224,2.018,225,1.064,226,1.064,227,1.083,228,1.083,229,1.064,230,1.142,231,1.045,232,1.083,233,1.142,234,1.064,235,1.142,236,1.142,237,1.064,238,1.142,239,1.027,240,1.064,241,1.142,242,1.045,243,1.142,244,0.941,245,1.142,246,1.045,247,1.702,248,1.142,249,1.045,250,1.142,251,1.045,252,1.142,253,0.992,254,1.142,255,1.064,256,0.975,257,1.064,258,1.083,259,1.142,260,1.064,261,1.142,262,1.142,263,1.064,264,1.142,265,1.064,266,1.142,267,0.992,268,1.142,269,1.064,270,1.064,271,1.142,272,1.064,273,1.083,274,1.142,275,1.027,276,1.045,277,1.85,278,1.064,279,0.848,280,1.083,281,1.064,282,1.064,283,1.083,284,1.064,285,1.142,286,1.064,287,1.064,288,1.142,289,1.045,290,1.142,291,1.064,292,1.142,293,1.064,294,1.142,295,1.88,296,1.142,297,1.064,298,1.009,299,1.027,300,1.142,301,1.045,302,1.142,303,1.045,304,1.142,305,1.045,306,1.142,307,1.045,308,1.142,309,1.045,310,1.102,311,1.142,312,1.045,313,1.083,314,1.673,315,1.142,316,0.004,317,0.004,327,2.046,381,0.992,387,2.622,417,1.273,498,3.795,928,5.699,1171,2.697,1263,3.101,1357,6.238,1367,4.625,1379,3.101,1762,4.145,2285,3.52,3457,3.52,3860,3.831,3861,6.058,3862,6.769,3863,5.391,3864,6.058,3865,6.058,3866,6.058,3867,4.305,3868,7.009,3869,4.305,3870,6.058,3871,4.305,3872,7.134,3873,4.305,3874,3.831,3875,4.305,3876,4.305,3877,6.058,3878,4.305,3879,6.058,3880,7.606,3881,6.058,3882,6.058]],["title/injectables/TypeConfigService.html",[375,1.183,1127,2.831]],["body/injectables/TypeConfigService.html",[2,0.171,3,0.171,4,0.908,8,0.15,10,0.328,19,1.081,24,0.007,25,1.735,27,1.773,32,0.321,33,1.1,35,1.791,38,1.541,41,1.18,42,1.878,44,0.975,55,0.574,56,2.063,60,0.383,64,0.881,65,1.766,66,1.064,71,0.788,74,1.1,75,1.464,76,1.267,77,0.722,84,1.414,86,0.957,87,0.671,88,0.671,113,1.02,132,0.257,142,1.159,145,0.124,146,0.086,173,3.277,191,1.64,193,1.743,196,0.733,210,2.054,211,1.953,212,1.812,214,1.734,247,1.119,316,0.003,317,0.003,333,2.143,335,2.357,341,4.346,342,3.768,348,0.639,354,3.768,355,1.864,368,2.171,373,2.641,375,1.37,381,1.062,384,2.374,404,4.346,417,1.363,436,4.177,457,1.441,472,3.176,475,3.15,527,3.827,540,4.151,557,2.587,561,3.718,570,2.143,571,2.357,575,2.455,599,2.504,632,0.967,715,3.011,732,3.979,880,2.972,909,2.229,920,2.962,921,2.648,960,1.568,1013,4.101,1019,2.063,1043,3.072,1060,1.793,1072,1.944,1077,1.793,1102,2.887,1127,2.677,1137,2.777,1138,3.319,1144,5.255,1151,3.518,1156,4.554,1158,3.395,1175,3.153,1176,2.143,1184,5.549,1190,2.648,1201,2.432,1214,4.352,1345,2.036,1349,3.153,1548,2.143,1565,4.38,1566,7.313,1567,6.771,1571,5.918,1572,2.887,1596,2.677,1610,3.011,1645,2.271,1652,4.38,1676,3.153,1721,2.587,1722,4.346,1932,2.357,2005,3.153,2123,4.101,2712,4.101,2715,5.792,2717,2.887,2718,2.271,2761,4.101,2780,2.648,3175,2.648,3181,5.981,3317,4.101,3318,6.771,3390,2.432,3705,2.648,3883,4.608,3884,4.608,3885,7.834,3886,6.352,3887,4.608,3888,6.352,3889,2.975,3890,2.975,3891,4.608,3892,2.975,3893,4.608,3894,4.608,3895,4.608,3896,4.608,3897,2.975,3898,2.975,3899,4.608,3900,4.608,3901,2.975,3902,4.101,3903,2.975,3904,4.608,3905,4.608,3906,4.608,3907,6.352,3908,6.352,3909,6.352,3910,4.101,3911,4.608,3912,4.608,3913,4.101,3914,4.608,3915,4.608,3916,4.608,3917,4.608,3918,6.872,3919,6.352,3920,4.608,3921,4.608,3922,4.608,3923,4.608,3924,4.608,3925,2.975,3926,2.975,3927,2.975,3928,2.975,3929,2.975,3930,2.975,3931,2.975,3932,2.975,3933,2.975]],["title/modules/UiModule.html",[318,1.047,651,2.936]],["body/modules/UiModule.html",[2,0.322,3,0.322,8,0.282,23,1.658,24,0.007,58,1.931,60,0.436,132,0.484,134,2.285,141,2.052,145,0.354,146,0.161,182,1.011,316,0.005,317,0.005,318,1.556,320,2.235,325,2.951,326,2.14,327,1.894,330,2.764,651,5.998,653,3.324,654,2.51,656,5.488,1129,5.776,1781,6.543,1790,6.249,1791,5.991,1792,6.543,1793,6.249,1796,4.584,1805,4.99,1806,4.281,1809,4.584,2286,6.543,2291,6.543,2293,4.99,2294,4.99,2904,6.887,3623,6.887,3630,4.99,3934,4.99,3935,5.607,3936,4.99,3937,5.607,3938,5.607,3939,5.607]],["title/interfaces/Update.html",[438,1.942,998,1.441]],["body/interfaces/Update.html",[0,0.194,2,0.247,3,0.247,8,0.217,10,0.474,24,0.007,25,1.287,32,0.465,33,1.038,38,1.49,41,1.102,55,0.754,60,0.386,61,2.417,62,2.501,64,0.875,65,1.952,70,3.107,71,1.301,72,1.859,75,2.07,76,1.307,79,2.594,84,2.757,88,0.879,103,3.222,112,1.273,114,2.268,116,2.312,126,1.716,132,0.371,142,1.524,145,0.253,146,0.124,162,1.483,167,2.028,196,1.323,212,1.911,279,1.717,316,0.004,317,0.005,340,4.223,347,2.526,350,2.264,368,2.028,372,3.65,375,1.702,381,0.992,386,3.809,387,1.273,388,1.931,411,2.082,436,3.916,438,3.784,460,2.874,478,2.268,479,3.693,481,4.97,499,3.174,522,1.837,524,2.34,548,2.34,554,3.585,567,2.34,575,1.454,618,2.697,632,1.399,752,4.223,766,4.27,767,4.765,859,2.697,866,3.192,887,3.585,909,2.082,998,1.792,1026,3.401,1030,3.287,1031,2.946,1038,3.809,1039,3.52,1040,2.594,1041,2.946,1042,2.594,1043,2.082,1044,2.594,1045,1.881,1046,2.813,1051,3.52,1053,3.52,1054,3.52,1056,3.101,1057,3.831,1059,3.831,1060,5.255,1062,3.52,1064,3.101,1065,3.958,1066,3.52,1068,3.287,1069,3.52,1070,3.831,1072,2.813,1073,3.831,1074,3.831,1076,2.946,1077,2.594,1078,3.52,1079,3.52,1080,3.958,1081,4.625,1082,3.52,1083,3.52,1084,3.52,1085,3.52,1086,3.52,1087,3.52,1088,3.52,1089,3.52,1090,3.831,1091,3.831,1092,3.831,1093,6.238,1094,5.73,1095,3.52,1096,3.52,1097,3.52,1098,3.52,1099,3.831,1100,5.391,1101,4.953,1102,2.697,1103,3.831,1104,5.73,1105,3.52,1106,3.52,1107,3.52,1108,3.52,1109,5.73,1110,2.594,1111,3.52,1112,3.831,1113,3.52,1114,3.831,1115,3.831]],["title/interfaces/Upload.html",[298,1.142,998,1.441]],["body/interfaces/Upload.html",[0,0.172,2,0.219,3,0.219,8,0.362,10,0.42,24,0.007,25,0.7,32,0.411,33,0.719,39,1.839,43,2.456,55,0.815,60,0.4,64,0.799,65,1.771,70,2.075,71,1.516,72,1.704,75,0.878,76,1.316,79,2.296,84,2.347,87,0.403,88,0.971,103,1.367,112,1.642,116,3.046,118,3.221,126,1.519,132,0.329,142,2.008,145,0.273,146,0.11,162,2.256,171,2.119,193,2.182,196,1.344,212,1.29,277,1.457,279,0.751,298,2.139,316,0.004,317,0.005,340,4.608,347,2.73,350,2.075,368,2.615,370,4.923,375,1.59,381,1.509,386,2.071,387,1.127,388,2.437,409,5.891,410,2.608,411,1.843,417,1.642,425,2.91,432,3.559,438,2.868,441,2.932,456,1.706,460,2.348,464,4.335,478,2.008,485,2.296,512,4.507,520,2.214,522,1.626,524,2.071,558,2.486,575,2.212,585,2.608,592,2.745,618,2.388,629,1.029,632,1.238,708,2.583,730,2.49,731,3.117,766,3.676,774,2.745,781,2.49,894,2.008,909,1.843,979,3.799,998,2.128,1017,2.745,1028,1.75,1038,3.017,1040,2.296,1041,2.608,1042,2.296,1043,1.843,1044,2.296,1045,1.665,1046,2.49,1076,2.608,1080,3.628,1096,2.214,1127,3.226,1144,2.49,1344,2.296,1409,2.685,1432,2.388,1497,3.676,1506,2.49,1508,2.296,1613,3.117,1655,3.799,1656,2.91,1657,2.91,1658,4.539,1659,2.91,1660,2.91,1661,2.91,1662,2.745,1663,2.296,1664,2.745,1665,2.388,1666,3.116,1667,3.116,1668,4.539,1669,3.116,1670,4.999,1671,2.91,1672,3.116,1673,3.116,1674,3.116,1675,3.116,1676,2.608,1677,3.116,1678,3.116,1679,3.116,1680,4.539,1681,4.279,1682,3.116,1683,2.608,1684,2.745,1685,2.388,1686,3.116,1687,6.252,1688,3.116,1689,3.116,1690,5.354,1691,3.116,1692,4.539,1693,4.539,1694,4.539,1695,4.539,1696,4.539,1697,4.539,1698,4.539,1699,4.539,1700,4.539,1701,4.539,1702,4.999,1703,2.91,1704,3.116,1705,3.116,1706,3.116,1707,4.539,1708,3.116,1709,4.539,1710,3.116,1711,5.882,1712,3.116,1713,3.116,1714,3.116,1715,4.539,1716,4.539,1717,3.116,1718,3.116,1719,2.91,1720,3.116,1721,2.14,1722,2.608,1723,3.116,1724,3.116,1725,3.116,1726,3.116,1727,3.116,1728,3.116,1729,3.116,1730,3.116,1731,3.116,1732,3.116,1733,3.116,1734,3.116]],["title/components/UploadComponent.html",[0,0.22,297,1.204]],["body/components/UploadComponent.html",[0,0.332,1,0.679,2,0.158,3,0.158,4,0.541,5,0.729,6,0.729,8,0.439,10,0.303,15,1.149,19,0.644,22,0.59,24,0.007,25,1.351,26,2.187,27,1.924,30,1.109,32,0.296,33,0.561,35,1.823,38,1.119,39,1.235,41,1.109,42,3.108,44,0.933,55,0.875,60,0.363,64,0.834,65,1.307,66,1.188,71,1.04,74,1.451,76,1.186,77,1.707,84,1.645,86,1.059,87,0.893,88,0.893,104,3.415,105,1.765,106,2.342,108,1.607,110,0.667,113,1.081,116,2.046,121,1.38,132,0.237,135,1.2,145,0.115,146,0.079,165,3.999,171,2.526,182,0.496,183,1.089,184,0.809,188,1.585,189,0.729,190,0.729,191,0.656,192,0.679,193,1.823,194,1.614,195,0.679,196,0.968,197,1.865,198,0.691,199,1.756,200,0.679,201,0.703,202,0.691,203,0.729,204,0.679,205,1.149,206,0.691,207,0.729,208,0.679,209,0.729,210,0.656,211,0.667,212,1.385,213,1.422,214,0.656,215,0.679,216,0.679,217,0.667,218,0.729,219,0.691,220,1.422,221,0.729,222,0.729,223,0.691,224,1.614,225,0.679,226,0.679,227,0.691,228,0.691,229,0.679,230,0.729,231,0.667,232,0.691,233,0.729,234,0.679,235,0.729,236,0.729,237,0.679,238,0.729,239,0.656,240,0.679,241,0.729,242,0.667,243,0.729,244,1.33,245,0.729,246,0.667,247,1.302,248,0.729,249,0.667,250,0.729,251,0.667,252,0.729,253,0.633,254,0.729,255,0.679,256,0.622,257,0.679,258,0.691,259,0.729,260,0.679,261,0.729,262,0.729,263,0.679,264,0.729,265,0.679,266,0.729,267,0.633,268,0.729,269,0.679,270,0.679,271,0.729,272,0.679,273,0.691,274,0.729,275,1.579,276,0.667,277,1.565,278,0.679,279,0.853,280,0.691,281,0.679,282,0.679,283,0.691,284,0.679,285,0.729,286,0.679,287,0.679,288,0.729,289,0.667,290,0.729,291,0.679,292,0.729,293,0.679,294,0.729,295,0.679,296,0.729,297,1.503,298,2.247,299,0.656,300,0.729,301,0.667,302,0.729,303,0.667,304,0.729,305,0.667,306,0.729,307,0.667,308,0.729,309,0.667,310,0.703,311,0.729,312,0.667,313,0.691,314,0.656,315,0.729,316,0.003,317,0.003,339,4.149,347,1.805,348,0.59,349,1.447,350,2.273,373,2.031,376,3.54,377,3.502,381,0.998,387,2.255,388,2.346,392,1.585,402,1.988,411,1.329,412,1.88,417,1.799,418,1.655,420,5.368,440,3.295,442,3.975,457,2.385,460,2.181,492,4.109,496,2.215,505,4.382,509,3.854,510,2.153,512,3.358,520,4.276,544,3.854,565,2.445,572,3.54,575,2.054,577,2.445,581,5.413,585,1.88,599,3.597,615,1.655,616,2.234,622,3.924,623,2.942,632,0.892,752,1.655,799,2.516,818,1.721,825,2.83,903,2.431,907,3.009,908,3.358,918,3.877,919,3.114,920,3.339,921,2.536,960,1.447,961,2.246,962,2.246,963,2.246,987,2.83,988,3.86,990,1.88,992,1.721,1016,2.83,1065,2.83,1096,2.516,1110,4.434,1263,1.979,1379,1.979,1432,1.721,1460,2.246,1586,3.306,1618,2.431,1655,3.667,1657,3.306,1659,3.306,1660,3.306,1661,3.306,1703,3.306,1739,3.854,2064,2.83,2134,3.119,2158,5.497,2466,3.665,2663,3.854,2934,3.306,3389,2.445,3390,2.246,3400,2.445,3401,2.445,3604,2.445,3940,2.445,3941,4.33,3942,6.082,3943,6.082,3944,6.082,3945,4.33,3946,4.33,3947,2.747,3948,2.747,3949,2.747,3950,2.747,3951,2.747,3952,2.747,3953,2.747,3954,3.854,3955,2.747,3956,4.33,3957,2.747,3958,2.747,3959,4.33,3960,2.747,3961,4.33,3962,2.747,3963,2.747,3964,4.33,3965,2.747,3966,2.747,3967,2.747,3968,2.747,3969,4.33,3970,2.747,3971,2.747,3972,2.747,3973,2.747,3974,4.33,3975,2.747,3976,2.747,3977,2.747,3978,2.747,3979,2.747,3980,2.747,3981,2.445,3982,2.747,3983,2.747,3984,2.747,3985,2.747,3986,5.359,3987,2.747,3988,2.747,3989,2.747,3990,2.747,3991,2.747,3992,2.747,3993,2.747,3994,2.747,3995,2.747,3996,2.747,3997,2.747,3998,2.747,3999,4.33,4000,4.33,4001,4.33,4002,4.33,4003,4.33]],["title/modules/UtilityModule.html",[318,1.047,2291,3.334]],["body/modules/UtilityModule.html",[2,0.331,3,0.331,8,0.29,23,2.18,24,0.007,58,1.985,60,0.435,132,0.497,134,2.349,141,2.974,145,0.358,146,0.166,174,3.611,182,1.04,255,2.373,256,1.305,260,2.373,263,2.373,287,2.373,289,2.331,307,2.331,316,0.005,317,0.005,318,1.584,320,2.297,325,3.004,326,2.2,327,1.947,329,3.236,330,2.813,630,3.132,653,3.383,654,2.581,656,5.56,1129,5.852,1130,7.231,1789,6.569,1799,5.13,2291,6.782,2491,4.712,3742,5.13,3763,5.13,4004,5.13,4005,5.13,4006,5.764,4007,5.13,4008,5.764,4009,5.764,4010,5.764,4011,5.764]],["title/modules/VcModule.html",[318,1.047,4012,3.72]],["body/modules/VcModule.html",[2,0.37,3,0.37,8,0.324,23,2.338,24,0.007,58,2.221,60,0.426,132,0.556,141,3.13,145,0.372,146,0.185,182,1.163,185,2.57,219,2.467,295,2.424,316,0.005,317,0.005,318,1.699,320,2.57,325,3.222,326,2.461,327,2.177,329,4.439,330,3.018,653,3.629,654,2.887,1755,4.643,1756,4.213,3453,7.017,3458,5.738,3874,5.738,4012,7.465,4013,5.738,4014,5.738,4015,5.738,4016,6.447,4017,6.447,4018,6.447]],["title/pipes/VisibleFieldsPipe.html",[1180,2.567,1788,3.509]],["body/pipes/VisibleFieldsPipe.html",[2,0.387,3,0.387,8,0.339,10,0.743,15,1.79,22,1.45,24,0.007,41,2.409,44,1.035,60,0.367,64,0.639,66,0.873,74,1.939,76,1.196,86,1.016,87,0.922,88,0.713,112,2.677,132,0.582,145,0.282,146,0.194,316,0.006,317,0.006,327,2.745,417,2.579,436,4.264,456,3.638,708,3.129,1031,5.561,1068,6.204,1158,2.974,1180,4.595,1185,3.666,1191,5.561,1337,4.408,1788,6.52,1833,6.004,4019,7.233,4020,6.004,4021,8.126,4022,8.126,4023,6.746,4024,8.126,4025,6.746]],["title/interfaces/WithLoader.html",[907,2.735,998,1.441]],["body/interfaces/WithLoader.html",[0,0.381,2,0.412,3,0.412,8,0.361,10,0.791,24,0.007,32,0.774,33,1.092,55,1.15,60,0.324,64,0.679,145,0.3,244,2.02,316,0.006,317,0.006,367,3.515,440,4.345,467,5.282,907,4.733,998,2.732,2321,5.509,2359,5.867,4026,6.387,4027,6.387,4028,7.504]],["title/interfaces/WithNotifications.html",[908,3.053,998,1.441]],["body/interfaces/WithNotifications.html",[0,0.371,2,0.394,3,0.394,8,0.345,10,0.757,24,0.007,25,1.508,32,0.741,33,1.064,55,1.134,56,3.678,60,0.31,64,0.778,88,0.962,145,0.287,316,0.006,317,0.006,381,2.025,460,2.946,616,3.425,622,4.661,908,5.146,998,2.693,1022,5.368,1397,7.446,1568,4.95,1936,7.446,1941,7.311,4029,6.112,4030,6.112,4031,8.105]],["title/changelog.html",[1159,2.565,2830,2.949,4032,3.644]],["body/changelog.html",[0,0.341,4,0.731,15,0.985,18,1.584,24,0.005,25,0.681,27,1.905,33,0.835,34,1.278,35,1.714,37,2.325,38,0.866,39,0.855,41,2.226,42,2.219,43,0.967,44,1.09,55,1.146,59,2.539,60,0.341,61,2.084,64,0.351,70,2.035,71,1.397,72,1.139,74,1.695,76,0.509,84,2.808,88,0.799,101,2.425,102,2.156,103,1.952,112,2.101,113,1.018,116,2.078,118,1.662,119,3.163,135,1.622,146,0.157,171,2.078,174,2.325,184,1.327,186,3.407,193,2.003,196,1.258,212,1.684,217,0.901,231,0.901,239,0.886,242,0.901,253,0.855,256,1.713,273,0.934,276,0.901,277,1.903,279,1.399,281,0.917,282,0.917,298,1.277,314,0.886,316,0.004,317,0.004,318,1.17,326,1.416,336,2.084,339,1.748,347,1.547,350,2.035,368,3.563,369,3.303,372,2.236,373,1.979,387,1.61,400,2.156,404,4.413,417,1.098,433,2.707,436,1.748,440,1.662,441,2.438,445,1.622,451,1.898,453,3.057,456,1.662,457,2.88,460,1.331,464,2.236,475,3.295,486,3.163,492,3.634,496,1.898,498,2.325,500,2.27,502,4.846,511,4.281,512,2.325,513,3.436,514,3.038,515,4.04,518,2.236,519,2.084,522,1.584,524,2.017,548,4.441,557,3.057,564,3.921,593,3.558,599,2.017,600,2.539,619,2.707,658,2.673,672,5.449,676,2.673,683,3.988,702,2.673,709,2.833,718,3.303,726,3.747,766,2.084,767,2.325,805,1.845,818,2.325,825,4.214,826,5.702,880,1.955,909,2.634,921,1.547,933,5.808,934,2.833,1009,3.303,1017,2.673,1018,3.303,1019,3.54,1028,1.704,1034,2.325,1040,3.281,1044,2.236,1065,2.425,1081,2.833,1096,3.747,1116,2.539,1132,3.726,1151,4.157,1154,2.833,1156,2.325,1214,3.724,1230,3.303,1340,2.673,1354,3.558,1424,4.451,1521,2.325,1567,2.833,1569,4.642,1570,3.034,1571,2.673,1581,2.673,1582,3.303,1595,3.303,1596,3.163,1613,2.084,1614,2.539,1623,1.955,1629,3.621,1642,2.833,1643,3.726,1663,2.236,1813,2.325,1932,1.898,1933,2.673,2004,3.034,2006,2.833,2064,2.425,2134,6.036,2145,3.726,2174,3.034,2218,3.034,2219,3.303,2221,6.323,2224,3.057,2226,2.673,2227,2.833,2322,2.539,2323,2.425,2494,4.846,2511,1.278,2701,4.943,2717,2.325,2834,5.423,2836,3.034,2870,5.117,2882,3.921,2943,3.303,3082,3.303,3217,3.034,3318,2.833,3496,6.629,3618,8.013,3652,2.673,3685,3.034,3902,3.303,3954,4.846,4032,3.303,4033,3.711,4034,3.057,4035,3.711,4036,3.711,4037,3.711,4038,3.726,4039,3.711,4040,3.711,4041,3.711,4042,3.711,4043,3.711,4044,3.711,4045,3.711,4046,3.303,4047,8.381,4048,3.711,4049,3.711,4050,3.303,4051,3.711,4052,3.711,4053,3.711,4054,3.711,4055,3.711,4056,3.711,4057,4.846,4058,3.711,4059,3.711,4060,3.303,4061,3.711,4062,3.303,4063,3.711,4064,3.711,4065,3.711,4066,3.711,4067,3.711,4068,3.303,4069,3.711,4070,3.711,4071,3.711,4072,3.711,4073,3.303,4074,3.711,4075,3.711,4076,3.711,4077,3.711,4078,3.711,4079,5.445,4080,3.711,4081,3.711,4082,3.711,4083,3.711,4084,3.303,4085,3.711,4086,3.711,4087,3.711,4088,4.846,4089,4.846,4090,5.445,4091,2.833,4092,3.711,4093,3.711,4094,5.739,4095,3.711,4096,3.711,4097,3.711,4098,3.711,4099,3.711,4100,3.303,4101,3.303,4102,3.711,4103,3.711,4104,3.711,4105,3.711,4106,3.711,4107,3.711,4108,3.711,4109,3.711,4110,6.449,4111,3.711,4112,2.539,4113,2.425,4114,3.711,4115,3.711,4116,3.711,4117,3.303,4118,3.711,4119,3.711,4120,3.711,4121,3.711,4122,3.711,4123,3.711,4124,3.711,4125,3.711,4126,3.711,4127,3.303,4128,3.711,4129,3.711,4130,3.711,4131,2.833,4132,3.711,4133,6.449,4134,3.711,4135,3.711,4136,3.303,4137,2.673,4138,3.711,4139,3.303,4140,5.445,4141,3.711,4142,5.445,4143,3.711,4144,3.711]],["title/coverage.html",[4145,5.872]],["body/coverage.html",[0,0.444,1,0.769,8,0.157,9,3.9,12,2.129,19,0.73,24,0.007,41,0.797,43,0.811,64,0.295,71,0.532,110,0.756,112,0.92,146,0.253,184,1.44,191,0.742,192,0.769,195,0.769,196,1.116,198,0.783,200,0.769,202,0.783,204,0.769,206,0.783,208,0.769,210,0.742,211,0.756,212,1.143,214,0.742,215,0.769,216,0.769,219,0.783,223,0.783,225,0.769,226,0.769,227,0.783,228,0.783,229,0.769,231,0.756,232,0.783,234,0.769,237,0.769,239,0.742,240,0.769,242,0.756,244,0.68,246,0.756,249,0.756,251,0.756,253,0.717,255,0.769,257,0.769,260,0.769,263,0.769,265,0.769,267,0.717,269,0.769,270,0.769,272,0.769,275,0.742,276,0.756,278,0.769,279,0.939,280,0.783,281,0.769,282,0.769,283,0.783,284,0.769,286,0.769,287,0.769,289,0.756,291,0.769,293,0.769,295,0.769,297,0.769,298,0.73,299,0.742,301,0.756,303,0.756,305,0.756,307,0.756,309,0.756,312,0.756,316,0.003,317,0.003,332,5.577,333,2.241,334,4.178,350,1.163,355,1.949,366,2.769,375,2.215,428,2.769,429,2.544,430,4.743,432,1.691,438,1.901,457,0.973,464,1.875,472,2.842,475,1.746,481,2.033,485,2.874,489,4.246,490,2.544,491,5.355,517,1.949,519,1.747,520,1.808,527,1.875,558,2.597,594,2.769,595,2.544,596,5.789,610,2.241,611,2.769,612,2.769,616,1.297,622,1.466,623,1.505,652,2.544,661,2.544,666,2.544,670,2.769,711,6.011,730,2.033,801,1.691,802,2.769,879,2.769,901,2.769,907,1.747,908,1.949,918,1.639,920,1.268,921,1.297,951,2.544,952,3.642,958,3.642,998,2.664,999,2.769,1000,4.827,1002,1.808,1038,1.691,1039,3.9,1125,2.241,1126,1.949,1127,1.808,1137,2.874,1139,2.769,1143,3.791,1144,2.033,1150,2.769,1173,2.375,1180,3.696,1181,2.241,1182,2.769,1183,2.129,1198,4.246,1211,2.375,1333,3.9,1339,3.9,1345,2.129,1350,2.769,1388,3.9,1389,2.544,1390,2.769,1402,2.241,1403,2.769,1422,2.769,1474,2.769,1496,2.033,1497,1.747,1546,2.769,1564,2.769,1565,1.875,1652,1.875,1653,4.246,1655,2.129,1656,4.429,1685,1.949,1722,6.761,1757,2.769,1762,2.129,1763,2.769,1767,2.769,1777,2.544,1778,2.769,1779,2.129,1787,2.241,1788,2.241,1794,2.241,1812,2.769,1848,2.033,1849,3.9,1850,2.241,1912,2.769,1917,2.769,1960,1.808,1964,2.769,1969,2.033,1977,2.375,1997,2.769,1998,2.544,2001,2.769,2043,2.769,2095,2.769,2096,2.544,2097,2.769,2121,2.769,2135,2.769,2145,2.129,2215,2.769,2224,1.747,2230,3.9,2231,2.544,2232,2.769,2266,2.544,2267,2.769,2300,2.769,2361,2.769,2367,4.429,2368,2.769,2401,2.544,2403,2.544,2414,2.769,2449,2.769,2464,2.769,2490,2.769,2491,2.544,2492,5.163,2541,2.544,2550,2.544,2563,2.769,2564,2.769,2570,2.375,2571,2.769,2572,2.769,2614,2.769,2700,2.769,2715,4.685,2718,4.429,2820,2.544,2821,2.769,2822,2.769,2845,2.769,2913,3.9,2934,2.375,2952,2.769,2957,2.769,3022,2.769,3079,2.769,3091,2.769,3092,2.769,3121,2.769,3150,2.769,3164,6.094,3192,2.769,3332,2.544,3333,2.769,3355,3.642,3356,3.9,3415,2.769,3416,4.246,3453,2.241,3454,2.769,3455,2.769,3469,2.769,3547,2.769,3631,2.769,3632,2.769,3638,2.241,3639,5.355,3643,2.544,3644,2.544,3645,2.544,3654,2.544,3678,2.769,3686,3.642,3688,4.246,3694,2.769,3727,2.769,3745,2.769,3784,2.769,3823,2.544,3849,2.769,3860,2.769,3940,2.769,4019,2.769,4020,2.769,4026,2.769,4027,2.769,4029,2.769,4030,2.769,4050,6.242,4060,2.769,4062,2.769,4145,2.769,4146,3.642,4147,3.112,4148,7.704,4149,3.112,4150,9.393,4151,3.112,4152,7.401,4153,3.112,4154,3.112,4155,3.112,4156,3.112,4157,3.112,4158,4.77,4159,3.112,4160,4.77,4161,3.112,4162,3.112,4163,3.112,4164,3.112,4165,4.77,4166,3.112,4167,3.112,4168,5.801,4169,3.112,4170,3.112,4171,5.801,4172,3.112,4173,5.801,4174,3.112,4175,2.769,4176,2.769,4177,4.246,4178,2.769,4179,2.769,4180,3.112,4181,5.801,4182,3.112,4183,3.112,4184,4.77,4185,3.112,4186,4.77,4187,7.014,4188,7.014,4189,4.77,4190,5.801,4191,4.77,4192,4.77,4193,3.112,4194,3.112,4195,3.112,4196,3.112,4197,3.112,4198,3.112,4199,4.77,4200,5.801,4201,3.112,4202,3.112,4203,6.504,4204,3.112,4205,4.77,4206,3.112,4207,3.112,4208,3.112,4209,3.112,4210,4.77,4211,4.77,4212,4.77,4213,3.112,4214,3.112,4215,3.112,4216,7.014,4217,4.77,4218,6.504,4219,5.801,4220,7.014,4221,3.112,4222,3.112,4223,4.77,4224,3.112,4225,3.112,4226,3.112,4227,3.112,4228,3.112,4229,3.112,4230,3.112,4231,3.112,4232,3.112,4233,3.112,4234,3.112,4235,3.112,4236,4.77,4237,3.112,4238,5.801,4239,4.77,4240,3.112,4241,2.769,4242,2.769,4243,3.112,4244,3.112,4245,3.112,4246,3.112,4247,3.112,4248,3.112,4249,3.112,4250,3.112,4251,3.112,4252,3.112,4253,3.112,4254,3.112,4255,3.112,4256,2.769,4257,4.246,4258,2.769,4259,5.801,4260,5.801,4261,3.112,4262,5.801,4263,4.77,4264,3.112,4265,3.112,4266,4.77,4267,3.112,4268,3.112,4269,3.112,4270,3.112,4271,3.112,4272,2.769,4273,2.769,4274,2.769,4275,2.769,4276,4.246,4277,3.112,4278,3.112]],["title/dependencies.html",[58,2.014,4034,2.299]],["body/dependencies.html",[12,4.706,13,3.737,24,0.007,58,2.369,132,0.593,134,2.803,185,3.277,217,1.67,316,0.006,317,0.006,447,3.624,564,4.953,593,4.494,630,3.737,658,5.921,659,6.121,672,4.953,1132,4.706,1175,4.706,1176,4.953,1756,5.372,1874,5.622,1927,6.121,3785,4.953,4073,6.121,4091,5.25,4127,7.317,4139,6.121,4279,7.317,4280,6.877,4281,6.121,4282,9.555,4283,6.121,4284,6.877,4285,6.877,4286,6.877,4287,6.121,4288,6.121,4289,4.953,4290,6.877,4291,6.877,4292,6.877,4293,6.877,4294,6.877,4295,6.877,4296,6.121,4297,6.877,4298,6.877,4299,6.121,4300,6.877,4301,6.877,4302,6.877]],["title/miscellaneous/functions.html",[472,2.554,4303,3.126]],["body/miscellaneous/functions.html",[24,0.007,32,0.774,65,1.542,86,1.349,87,0.946,88,0.946,316,0.006,317,0.006,367,2.992,381,1.654,384,2.682,472,3.136,652,5.867,657,6.387,666,7.319,778,7.286,1629,5.026,3639,5.479,3643,6.893,3644,6.893,3645,6.893,3653,5.867,3658,6.387,3660,6.387,3661,6.387,4303,5.479,4304,7.176,4305,7.968]],["title/index.html",[32,0.442,1159,2.565,2830,2.949]],["body/index.html",[0,0.392,3,0.383,8,0.424,14,4.576,18,2.117,24,0.007,32,0.721,34,2.783,55,1.081,56,2.221,58,1.709,60,0.413,61,4.875,62,4.693,64,0.47,66,0.642,71,1.142,84,1.523,87,0.524,135,2.168,145,0.207,146,0.143,168,3.573,247,1.622,279,1.315,316,0.005,317,0.005,318,1.812,320,3.01,327,2.256,365,2.277,392,2.445,438,1.977,445,2.168,447,4.256,453,4.535,457,1.552,497,3.381,563,2.466,564,3.573,616,3.148,619,4.016,626,3.108,627,4.056,628,4.364,673,3.395,683,3.75,703,4.025,764,3.108,797,3.573,799,4.387,803,4.056,818,4.184,860,4.731,924,4.867,939,4.056,1006,6.173,1015,6.173,1045,2.168,1072,3.242,1159,4.184,1224,7.189,1326,5.765,1409,3.231,1508,4.025,1521,3.108,1581,3.573,1614,4.57,1617,5.724,1618,3.75,1643,4.57,1665,4.731,1813,5.441,1884,3.108,1936,4.056,2065,6.72,2130,4.415,2172,5.167,2307,3.573,2701,3.242,2738,4.415,2830,3.573,2834,3.787,2854,4.57,3085,4.056,3259,3.787,3435,4.415,3523,4.415,3550,4.056,3652,6.392,3746,6.173,3981,4.415,4034,5.187,4038,5.167,4091,3.787,4094,4.415,4131,3.787,4137,5.438,4146,5.099,4279,4.415,4289,6.392,4299,4.415,4306,4.961,4307,4.961,4308,7.551,4309,4.961,4310,4.961,4311,4.415,4312,4.961,4313,6.72,4314,4.961,4315,7.189,4316,4.961,4317,4.961,4318,4.961,4319,5.944,4320,4.184,4321,5.46,4322,4.961,4323,6.893,4324,6.679,4325,4.961,4326,4.961,4327,4.961,4328,4.961,4329,4.961,4330,4.415,4331,4.415,4332,4.961,4333,4.961,4334,4.961,4335,4.961,4336,4.961,4337,4.961,4338,6.888,4339,5.765,4340,4.415,4341,4.961,4342,3.787,4343,4.961,4344,4.961,4345,4.961,4346,4.961,4347,4.961,4348,4.961,4349,4.961,4350,6.679,4351,6.679,4352,4.961,4353,4.961,4354,4.961,4355,4.961,4356,4.961,4357,4.961,4358,4.961,4359,4.961,4360,4.961,4361,4.961,4362,4.961,4363,4.961,4364,4.415,4365,6.679,4366,4.961,4367,4.961,4368,4.961,4369,4.961,4370,4.961,4371,4.961,4372,4.961,4373,4.961,4374,5.944,4375,6.679,4376,4.961,4377,4.961,4378,4.961,4379,4.415,4380,4.961,4381,4.961]],["title/modules.html",[318,1.418]],["body/modules.html",[24,0.006,185,3.972,186,4.155,316,0.006,317,0.006,318,1.434,319,4.806,645,4.806,651,4.021,1116,4.566,1122,4.806,1123,4.566,1124,4.361,1781,4.566,1789,4.566,1790,4.361,1791,4.181,1792,4.566,1793,4.361,2286,4.566,2291,4.566,2395,5.094,2607,4.806,2904,4.806,3623,4.806,3843,4.806,4012,5.094,4382,9.966,4383,9.966]],["title/overview.html",[4384,5.037]],["body/overview.html",[0,0.109,1,1.858,19,1.153,23,0.714,24,0.007,25,1.38,58,0.831,110,1.697,141,0.883,145,0.101,146,0.069,182,0.435,184,0.451,191,1.173,192,1.727,195,1.727,198,1.758,200,1.727,202,1.758,204,1.727,206,1.758,208,1.727,210,1.173,211,1.194,214,1.173,215,1.727,216,1.727,219,1.758,223,1.758,225,1.727,226,1.727,227,1.758,228,1.758,229,1.727,231,1.697,232,1.758,234,1.727,237,1.727,239,1.668,240,1.727,242,1.697,244,1.528,246,1.697,249,1.697,251,1.697,253,1.61,255,1.727,257,1.858,260,1.727,263,1.727,265,1.727,267,1.61,269,1.727,270,1.727,272,1.727,275,1.668,276,1.697,278,1.727,280,1.758,281,1.727,282,1.727,283,1.758,284,1.727,286,1.858,287,1.727,289,1.697,291,1.727,293,1.727,295,1.727,297,1.727,299,1.668,301,1.697,303,1.697,305,1.697,307,1.697,309,1.697,312,1.697,316,0.003,317,0.003,318,0.839,319,4.469,320,0.962,321,2.148,322,2.148,323,2.148,324,2.148,325,1.591,326,0.921,327,0.815,350,1.838,375,0.586,432,2.673,517,3.081,519,2.761,520,2.857,610,3.542,623,2.379,645,6.377,646,2.148,647,2.148,648,2.148,649,2.148,650,2.148,651,5.696,832,1.738,918,2.591,921,2.05,998,0.714,1038,2.673,1116,6.604,1117,2.148,1118,2.148,1119,2.148,1120,2.148,1121,2.148,1122,6.809,1123,6.415,1124,5.493,1125,3.542,1126,3.081,1127,2.857,1180,1.272,1181,5.034,1183,4.783,1497,2.761,1634,1.652,1749,2.148,1750,2.148,1752,2.148,1753,2.148,1781,6.623,1782,2.148,1783,2.148,1784,2.148,1785,2.148,1786,2.148,1787,5.034,1788,5.034,1789,6.268,1790,5.554,1791,5.266,1792,5.599,1793,5.16,1794,3.542,1848,3.213,1969,3.213,1991,2.148,1992,2.148,1993,2.148,1994,2.148,2113,2.148,2114,2.148,2115,2.148,2286,6.43,2287,2.148,2288,2.148,2289,2.148,2290,2.148,2291,6.29,2354,2.148,2355,2.148,2356,2.148,2357,2.148,2395,6.417,2396,2.148,2397,2.148,2399,2.148,2400,2.148,2607,4.469,2608,2.148,2609,2.148,2611,2.148,2904,6.289,2905,2.148,2906,2.148,2908,2.148,2909,2.148,3145,2.148,3146,2.148,3147,2.148,3148,2.148,3408,2.148,3409,2.148,3411,2.148,3412,2.148,3453,5.034,3465,2.148,3466,2.148,3623,5.893,3624,2.148,3625,2.148,3628,2.148,3682,2.148,3683,2.148,3843,4.469,3844,2.148,3845,2.148,3846,2.148,3934,2.148,3936,2.148,4004,2.148,4005,2.148,4007,2.148,4012,6.029,4013,2.148,4014,2.148,4015,2.148,4179,2.148,4384,1.843,4385,2.414,4386,2.414,4387,2.414,4388,2.414]],["title/miscellaneous/variables.html",[711,4,4303,3.126]],["body/miscellaneous/variables.html",[0,0.069,4,0.695,8,0.284,9,1.249,12,2.886,13,1.444,24,0.007,25,0.774,26,1.254,27,0.301,32,0.165,34,1.215,35,0.533,38,1.179,40,0.719,41,0.391,42,0.622,54,1.359,55,0.595,60,0.069,64,0.688,65,0.328,71,0.817,74,0.634,76,0.579,87,1.065,102,0.887,108,0.645,113,0.906,122,0.857,126,0.609,130,0.83,138,2.173,139,1.045,140,1.166,141,0.973,142,1.319,146,0.18,162,1.646,165,0.83,167,1.252,168,1.914,170,1.166,183,0.384,184,0.285,196,0.671,246,0.371,247,1.45,249,0.371,251,0.371,256,0.346,279,0.301,298,0.623,310,1.08,316,0.002,317,0.002,318,0.571,325,1.083,327,0.516,336,0.857,343,1.1,358,2.21,368,1.252,372,0.92,384,0.993,392,0.559,402,3.514,404,1.045,417,1.247,436,1.252,457,0.831,458,1.22,472,1.541,475,0.559,494,1.249,496,0.781,497,1.579,498,1.665,499,2.002,500,1.108,507,1.045,510,0.759,511,0.92,513,1.285,539,2.173,540,0.998,558,0.684,593,0.998,614,1.601,616,2.186,617,1.492,622,0.719,626,2.994,635,2.365,683,1.492,684,1.249,708,0.516,711,1.045,715,3.683,764,1.665,784,3.139,805,2.097,815,3.298,831,1.166,860,0.957,866,0.805,881,1.544,887,2.445,894,1.4,905,2.693,920,1.719,934,6.003,998,1.043,1016,2.305,1019,0.684,1020,2.693,1023,2.886,1026,1.492,1028,0.701,1031,1.818,1032,1.359,1033,1.249,1045,2.463,1110,0.92,1132,1.045,1154,4.004,1156,0.957,1187,1.1,1201,2.173,1211,3.22,1213,3.22,1214,2.251,1218,2.365,1219,1.359,1349,4.456,1354,0.998,1370,4.004,1409,2.04,1427,1.249,1569,3.123,1572,1.665,1616,1.601,1622,1.249,1629,0.857,1683,2.886,1684,1.1,1685,1.665,1721,0.857,1762,1.818,1825,2.365,1849,1.249,1850,3.442,1879,1.359,1926,4.086,1933,1.1,1966,4.984,1977,2.693,1998,2.884,2002,2.173,2005,1.045,2009,2.884,2015,5.016,2168,1.1,2184,3.22,2250,1.045,2273,1.249,2317,1.359,2349,1.359,2373,3.754,2401,1.249,2403,2.884,2498,1.359,2541,2.884,2550,2.884,2648,1.359,2739,3.907,2765,1.166,2809,1.249,2810,2.884,2858,2.884,2859,1.249,2860,1.249,2913,1.249,2934,4.004,2935,1.359,3040,1.359,3048,2.365,3085,4.288,3087,5.016,3093,2.365,3105,2.365,3111,1.359,3122,2.365,3197,1.359,3217,6.347,3234,1.359,3372,2.365,3377,1.166,3549,6.169,3553,1.359,3562,1.359,3639,1.166,3653,1.249,3654,2.884,3655,1.359,3656,1.359,3657,1.359,3680,3.754,3746,1.249,3785,1.1,3823,2.884,3862,1.359,3863,3.139,3872,4.667,3910,2.365,3913,2.365,4028,1.359,4031,1.359,4084,5.314,4088,2.365,4089,2.365,4112,1.045,4117,1.359,4131,2.029,4146,3.649,4175,1.359,4176,2.365,4177,1.359,4178,3.139,4241,1.359,4242,2.365,4256,1.359,4257,3.754,4258,1.359,4272,1.359,4273,3.754,4274,1.359,4275,2.365,4276,1.359,4289,1.1,4303,1.166,4305,1.359,4342,3.22,4374,1.359,4389,1.527,4390,2.657,4391,1.527,4392,1.527,4393,1.527,4394,1.527,4395,1.527,4396,1.527,4397,1.527,4398,1.527,4399,1.527,4400,1.527,4401,1.527,4402,1.527,4403,1.527,4404,1.527,4405,2.657,4406,1.527,4407,1.527,4408,1.527,4409,1.527,4410,2.657,4411,1.527,4412,1.527,4413,5.636,4414,3.527,4415,2.657,4416,6.512,4417,1.527,4418,2.657,4419,1.527,4420,1.527,4421,4.218,4422,5.636,4423,1.527,4424,1.527,4425,4.218,4426,3.527,4427,1.527,4428,1.527,4429,1.527,4430,1.527,4431,1.527,4432,2.657,4433,4.218,4434,3.527,4435,6.26,4436,5.244,4437,4.218,4438,1.527,4439,2.657,4440,3.527,4441,1.527,4442,2.657,4443,1.527,4444,1.527,4445,2.657,4446,2.657,4447,3.527,4448,4.779,4449,1.527,4450,4.218,4451,1.527,4452,1.527,4453,2.657,4454,1.527,4455,5.636,4456,5.244,4457,5.636,4458,2.657,4459,2.657,4460,2.657,4461,2.657,4462,2.657,4463,2.657,4464,2.657,4465,1.527,4466,5.244,4467,1.527,4468,1.527,4469,2.657,4470,1.527,4471,1.527,4472,1.527,4473,1.527,4474,1.527,4475,1.527,4476,2.657,4477,4.218,4478,1.527,4479,1.527,4480,2.657,4481,1.527,4482,1.527,4483,1.527,4484,1.527,4485,1.527,4486,2.657,4487,2.657,4488,1.527,4489,1.527,4490,1.527,4491,2.657,4492,2.657,4493,2.657,4494,1.527,4495,1.527,4496,1.527,4497,1.527,4498,2.657,4499,1.527,4500,1.527,4501,1.527,4502,1.527,4503,2.657,4504,2.657,4505,1.527,4506,1.527,4507,1.527,4508,1.527,4509,1.527,4510,3.527,4511,1.527,4512,1.527,4513,1.527,4514,1.527,4515,1.527,4516,4.779,4517,1.527,4518,1.527,4519,1.527,4520,1.527,4521,1.527,4522,4.218,4523,1.527,4524,1.527,4525,1.527,4526,1.527,4527,3.527,4528,1.527,4529,1.527,4530,1.359,4531,1.527,4532,1.527,4533,1.527,4534,1.527,4535,2.657,4536,1.527,4537,1.527,4538,1.527,4539,1.527,4540,3.527,4541,2.657,4542,1.527,4543,1.527,4544,2.657,4545,1.527,4546,2.657,4547,4.218,4548,2.657,4549,3.527,4550,1.527,4551,1.527,4552,4.218,4553,1.527,4554,1.527,4555,1.527,4556,2.657,4557,1.527,4558,2.657,4559,4.779,4560,4.779,4561,1.527,4562,1.527,4563,1.527,4564,1.527,4565,1.527,4566,1.527,4567,1.527,4568,1.527,4569,1.527,4570,1.527,4571,1.527,4572,1.527,4573,1.527,4574,1.527,4575,2.657,4576,4.218,4577,1.527,4578,1.527,4579,2.657,4580,1.527,4581,1.527,4582,1.527,4583,1.527,4584,2.657,4585,2.657,4586,2.657,4587,1.527,4588,2.657,4589,1.527,4590,1.527,4591,1.527,4592,1.527,4593,1.527,4594,1.527,4595,1.527,4596,1.527,4597,4.218,4598,1.527,4599,1.527,4600,1.527,4601,1.527,4602,1.527,4603,1.527,4604,1.527,4605,1.527,4606,6.734,4607,1.527,4608,3.527,4609,2.657,4610,1.527,4611,1.527,4612,1.527,4613,1.527,4614,2.657,4615,1.527,4616,1.527,4617,1.527,4618,1.527,4619,1.527,4620,1.527,4621,1.527,4622,1.527,4623,1.527,4624,1.527,4625,1.527,4626,1.527,4627,1.527,4628,1.527,4629,2.657,4630,1.527,4631,2.657,4632,1.527,4633,1.527,4634,1.527,4635,1.527,4636,1.527,4637,1.527,4638,1.527,4639,1.527,4640,1.527,4641,2.657,4642,1.527,4643,1.527,4644,1.527,4645,1.527,4646,1.527,4647,1.527,4648,1.527,4649,1.527,4650,1.527,4651,1.527,4652,1.527,4653,1.527,4654,1.527,4655,1.527,4656,3.527,4657,1.527,4658,1.527,4659,1.527,4660,1.527,4661,1.527,4662,1.527,4663,1.527,4664,1.527,4665,1.527,4666,1.527,4667,2.657,4668,3.527,4669,1.527,4670,1.527,4671,1.527,4672,2.657,4673,2.657,4674,1.527,4675,2.657,4676,2.657,4677,2.657,4678,1.527,4679,4.218,4680,1.527,4681,1.527,4682,1.359,4683,2.657,4684,1.527,4685,1.527,4686,1.527,4687,2.657,4688,4.218,4689,2.657,4690,2.657,4691,2.657,4692,1.527,4693,1.527,4694,1.527,4695,1.527,4696,1.527,4697,1.527,4698,1.527,4699,2.657,4700,2.657,4701,2.657,4702,1.527,4703,4.218,4704,1.527,4705,1.527,4706,2.657,4707,1.527,4708,1.527,4709,1.527,4710,1.527,4711,1.527,4712,1.527,4713,1.527,4714,1.527,4715,1.527,4716,1.527,4717,1.527,4718,1.527,4719,1.527,4720,1.527,4721,1.527,4722,1.527,4723,1.527,4724,3.527,4725,1.527,4726,1.527,4727,1.527,4728,1.527,4729,1.527,4730,1.527,4731,1.527,4732,1.527,4733,1.527,4734,1.527,4735,1.527,4736,1.527,4737,1.527]],["title/additional-documentation/project-setup-tutorial.html",[629,0.838,2511,1.069,4038,2.123,4112,2.123,4113,2.028]],["body/additional-documentation/project-setup-tutorial.html",[0,0.345,2,0.292,8,0.256,14,2.681,23,2.009,24,0.007,25,1.247,27,1.675,34,1.753,44,1.042,55,1.059,56,2.278,58,1.753,60,0.425,62,2.956,71,1.454,74,1.621,85,3.482,87,0.538,88,0.538,102,2.956,103,1.825,113,0.685,132,0.439,134,2.074,141,1.862,142,1.709,145,0.319,146,0.146,162,1.753,168,3.665,185,2.708,217,1.236,316,0.005,317,0.005,318,1.093,320,2.028,330,1.942,345,5.554,417,1.505,433,3.377,441,2.278,447,2.681,453,2.857,497,2.278,498,3.188,500,2.121,522,2.171,564,5.508,617,2.857,622,3.2,630,2.765,654,2.278,673,6.522,676,4.893,678,5.554,679,6.231,681,5.508,682,5.554,683,4.294,703,3.066,726,2.956,798,6.807,799,4.444,805,4.615,815,2.681,816,2.956,825,4.439,831,3.885,832,3.665,860,3.188,920,2.074,924,4.094,942,2.857,1026,2.857,1045,2.969,1072,3.325,1116,5.584,1158,1.862,1159,4.256,1409,3.286,1596,2.956,1616,3.066,1617,4.918,1642,3.885,1685,3.188,1755,3.665,1756,4.439,1813,4.256,1868,4.16,1933,3.665,1988,4.649,2005,3.482,2180,3.482,2250,3.482,2322,4.649,2325,4.094,2701,5.557,2744,3.482,2812,5.187,2826,4.094,2854,3.482,3106,4.529,3259,5.839,3496,3.482,3550,4.16,4034,4.294,4038,6.209,4091,3.885,4101,4.529,4112,3.482,4113,4.998,4281,6.046,4283,4.529,4289,3.665,4313,6.046,4320,4.256,4321,4.16,4338,6.231,4339,3.885,4340,7.263,4379,4.529,4738,5.088,4739,5.584,4740,4.529,4741,5.088,4742,6.794,4743,6.794,4744,5.088,4745,9.36,4746,5.088,4747,5.088,4748,6.794,4749,5.088,4750,5.088,4751,4.529,4752,6.794,4753,5.088,4754,4.16,4755,5.088,4756,5.088,4757,5.088,4758,5.088,4759,5.088,4760,5.088,4761,5.088,4762,7.648,4763,5.088,4764,5.088,4765,7.648,4766,6.794,4767,5.088,4768,5.088,4769,5.088,4770,5.088,4771,5.088,4772,6.794,4773,5.088,4774,5.088,4775,4.893,4776,5.088,4777,5.088,4778,6.794,4779,4.529,4780,5.088,4781,3.885,4782,5.088,4783,5.088,4784,5.088,4785,5.088,4786,5.088,4787,5.088,4788,5.088,4789,5.088,4790,5.088,4791,5.088]],["title/additional-documentation/project-setup-tutorial/routes.html",[433,2.035,629,1.106,2511,1.41]],["body/additional-documentation/project-setup-tutorial/routes.html",[0,0.424,4,1.395,24,0.007,60,0.32,70,3.127,71,1.431,142,1.782,162,2.44,316,0.006,317,0.006,392,2.593,433,4.778,453,4.999,805,3.522,815,3.732,816,4.116,826,4.268,909,3.426,1022,4.629,1508,5.042,1617,4.268,1988,4.847,2064,4.629,2744,5.725,3492,6.304,3496,4.847,4057,6.304,4113,5.467,4338,5.408,4792,7.084,4793,7.084,4794,7.084,4795,7.084,4796,7.084,4797,7.084,4798,7.447,4799,7.084,4800,7.084]],["title/additional-documentation/project-setup-tutorial/authorization.html",[629,1.106,2511,1.41,4781,3.126]],["body/additional-documentation/project-setup-tutorial/authorization.html",[0,0.326,4,1.666,24,0.007,55,0.899,61,4.052,62,4.194,70,3.162,71,1.234,74,1.722,162,2.486,253,1.663,256,2.032,316,0.006,317,0.006,357,3.4,392,2.642,433,4.602,500,3.009,620,6.459,805,4.206,815,3.803,816,4.194,912,5.528,1045,3.154,1617,4.349,1813,4.522,1988,4.939,2064,4.717,2468,5.901,4038,4.939,4112,4.939,4113,5.864,4781,6.459,4801,6.424,4802,6.424,4803,6.424,4804,6.424]],["title/additional-documentation/project-setup-tutorial/custom-fields.html",[41,0.904,171,1.347,629,0.953,2511,1.216]],["body/additional-documentation/project-setup-tutorial/custom-fields.html",[0,0.424,4,1.183,11,2.665,14,2.241,15,1.593,16,4.362,18,3.632,19,1.408,23,2.059,24,0.007,25,1.103,26,1.337,27,1.371,28,3.619,30,1.538,33,0.98,34,1.465,35,1.907,36,3.763,38,1.508,40,3.28,41,2.361,42,3.083,44,0.653,49,2.665,52,2.665,55,1.101,56,2.689,58,1.465,60,0.374,61,3.372,62,2.471,64,0.403,66,0.551,70,1.589,71,0.727,74,1.433,76,1.136,81,2.665,84,2.322,87,0.799,88,0.449,89,2.665,99,2.665,103,2.497,110,2.067,112,2.728,114,2.241,121,1.356,122,3.372,131,3.763,132,0.518,133,3.763,134,1.733,135,3.043,141,1.557,143,2.665,144,2.665,145,0.333,146,0.229,162,1.465,171,3.603,173,2.471,175,3.477,181,2.665,196,1.108,212,0.838,217,1.033,316,0.004,317,0.004,318,0.914,329,3.909,330,1.623,334,3.063,336,3.372,346,4.585,367,1.773,368,2.003,373,1.844,384,2.245,392,1.557,400,2.471,417,1.258,438,1.695,445,1.858,451,2.176,472,1.858,475,2.549,497,3.117,500,1.773,501,4.326,510,2.115,530,2.471,540,3.925,557,2.388,618,2.665,619,2.115,628,2.779,632,1.382,683,3.372,711,2.91,764,2.665,805,4.117,815,2.241,816,2.471,826,2.563,858,2.779,880,3.669,909,2.057,928,2.779,1016,4.55,1019,3.958,1022,3.925,1023,2.91,1026,2.388,1028,3.196,1034,4.999,1065,2.779,1126,3.763,1158,1.557,1171,2.665,1175,2.91,1185,2.312,1187,3.063,1208,3.063,1211,3.247,1214,3.564,1226,3.619,1349,2.91,1391,3.247,1496,2.779,1572,4.362,1596,4.046,1617,2.563,1629,2.388,1634,4.11,1637,4.91,1638,3.477,1681,2.779,2005,4.11,2066,3.477,2098,3.785,2105,3.063,2133,3.785,2170,5.346,2225,3.785,2250,4.11,2303,3.477,2323,2.779,2604,3.247,2641,4.585,2717,2.665,2744,2.91,2770,3.785,2871,3.477,2872,3.247,3135,3.477,3377,3.247,3496,5.949,3792,3.477,4100,3.785,4338,3.247,4339,3.247,4364,3.785,4530,3.785,4740,3.785,4754,3.477,4775,3.063,4798,3.785,4805,4.253,4806,6.006,4807,4.253,4808,4.253,4809,4.253,4810,4.253,4811,4.253,4812,4.253,4813,4.253,4814,4.253,4815,5.346,4816,4.253,4817,4.253,4818,4.253,4819,4.253,4820,4.253,4821,4.253,4822,4.253,4823,8.282,4824,4.253,4825,4.253,4826,4.253,4827,6.006,4828,4.253,4829,4.253,4830,4.253,4831,4.253,4832,4.253,4833,4.253,4834,4.253,4835,6.006,4836,4.253,4837,3.785,4838,4.253,4839,4.253,4840,3.785,4841,4.253,4842,4.253,4843,4.253,4844,4.253]],["title/additional-documentation/project-setup-tutorial/adding-new-packages.html",[71,0.531,629,0.838,826,1.87,2511,1.069,4034,1.742]],["body/additional-documentation/project-setup-tutorial/adding-new-packages.html",[8,0.325,13,4.3,14,3.401,24,0.006,45,4.768,55,0.804,56,3.542,58,2.947,61,4.803,62,4.971,70,3.333,71,1.463,87,0.904,162,2.224,279,1.558,316,0.005,317,0.005,318,1.387,358,4.044,547,4.3,561,4.047,805,4.8,815,3.401,816,3.751,826,3.89,831,4.928,832,4.649,860,4.044,1034,4.044,1045,3.457,1156,4.957,1305,3.751,1581,4.649,1609,5.745,1617,3.89,1618,3.624,1634,4.417,1685,4.044,1813,4.957,1988,4.417,2006,6.04,2172,5.414,2180,4.417,2570,6.04,2971,5.278,2993,5.745,3259,4.928,3794,6.469,4034,5.471,4131,6.809,4137,4.649,4311,5.745,4315,7.042,4319,5.745,4320,5.587,4321,6.995,4323,7.291,4330,5.745,4331,5.745,4342,4.928,4751,5.745,4754,5.278,4779,7.042,4845,6.455,4846,6.455,4847,6.455,4848,6.455,4849,6.455,4850,6.455,4851,6.455,4852,6.455,4853,6.455,4854,6.455]],["title/additional-documentation/project-setup-tutorial/publishing.html",[629,1.106,2511,1.41,4323,3.347]],["body/additional-documentation/project-setup-tutorial/publishing.html",[0,0.326,4,1.666,24,0.007,55,0.899,61,4.052,62,4.194,70,3.162,71,1.234,74,1.722,162,2.486,253,1.663,256,2.032,316,0.006,317,0.006,357,3.4,392,2.642,433,4.602,500,3.009,620,6.459,805,4.206,815,3.803,816,4.194,912,5.528,1045,3.154,1617,4.349,1813,4.522,1988,4.939,2064,4.717,2468,5.901,4038,4.939,4112,4.939,4113,5.864,4781,6.459,4801,6.424,4802,6.424,4803,6.424,4804,6.424]],["title/additional-documentation/ui.html",[629,1.106,924,2.467,2511,1.41]],["body/additional-documentation/ui.html",[0,0.437,14,3.743,24,0.006,34,2.447,41,2.146,112,2.479,123,3.988,126,2.832,146,0.204,171,3.199,196,1.13,256,1.609,316,0.006,317,0.006,339,3.948,440,3.181,441,3.181,447,3.743,457,2.222,492,3.634,497,3.181,540,4.642,622,3.346,799,4.128,924,5.661,1185,3.861,1208,5.117,1340,5.117,1521,4.451,2615,6.323,2826,4.281,3496,4.861,3728,5.424,3792,5.808,4034,3.988,4068,6.323,4320,4.451,4384,5.424,4682,6.323,4739,4.861,4837,6.323,4855,7.104,4856,7.104,4857,6.323,4858,7.104,4859,7.104,4860,7.104,4861,7.104,4862,6.323]],["title/additional-documentation/ui/icons.html",[629,1.106,1569,2.675,2511,1.41]],["body/additional-documentation/ui/icons.html",[24,0.007,27,1.395,55,1.109,60,0.378,74,1.997,75,1.632,113,0.953,121,2.258,145,0.349,146,0.241,316,0.006,317,0.006,357,3.941,628,4.629,680,5.408,1158,2.593,1305,4.116,1503,6.093,1521,4.438,1569,6.439,1965,6.388,1969,6.012,1975,6.304,1976,5.791,1977,6.388,1978,7.447,1979,7.447,1980,6.304,1981,6.304]],["title/additional-documentation/ui/notificationscomponent.html",[267,0.943,629,1.106,2511,1.41]],["body/additional-documentation/ui/notificationscomponent.html",[0,0.333,4,1.138,7,2.253,15,1.958,24,0.007,25,1.061,27,1.138,33,0.748,39,1.701,55,1.067,56,2.587,64,0.77,71,0.988,72,1.773,75,1.701,76,0.792,88,0.61,113,0.777,140,4.411,145,0.34,146,0.255,267,1.331,314,1.941,316,0.005,317,0.005,318,1.242,348,1.242,402,4.066,445,2.524,456,2.587,460,2.072,496,2.955,499,2.205,510,4.635,522,2.465,547,3.14,616,3.887,617,4.144,619,3.67,622,4.605,623,4.146,632,2.398,634,6.21,708,1.951,726,4.726,752,3.481,764,3.62,797,4.161,826,3.481,908,4.624,919,3.357,942,3.244,987,4.823,988,5.858,990,3.953,992,4.624,998,1.709,1025,4.411,1034,3.62,1045,2.524,1158,2.115,1305,3.357,1432,3.62,1568,3.481,1613,3.244,1623,4.286,1884,4.624,1932,3.776,1953,4.411,1974,4.723,2168,5.316,2227,4.411,2325,4.448,2466,4.448,2539,4.723,2744,3.953,2765,5.635,2826,3.481,2852,5.142,2853,5.142,2854,3.953,2855,6.569,2856,5.142,2857,7.239,2858,6.65,2859,6.035,2860,4.723,2861,5.142,2862,5.142,2863,5.142,2864,4.723,2865,5.142,2866,5.142,2867,5.142,2868,5.142,2869,5.142,2870,4.161,2871,4.723,2872,4.411,2873,5.142,2874,5.142,2875,6.569,2876,5.142,2877,5.142,2878,6.569,2879,5.142,2880,5.142,2881,5.142,2882,4.161,2883,5.142]],["title/additional-documentation/ui/loadercomponent.html",[244,0.895,629,1.106,2511,1.41]],["body/additional-documentation/ui/loadercomponent.html",[4,1.552,24,0.007,55,1.137,59,5.392,60,0.289,74,1.881,75,1.478,113,0.863,116,3.008,118,2.872,130,3.486,135,2.802,145,0.268,146,0.227,170,4.896,184,1.198,244,1.866,316,0.005,317,0.005,327,2.166,367,3.557,381,1.478,392,2.348,421,4.191,440,4.359,445,2.802,496,3.281,513,3.102,522,2.737,530,3.726,561,3.281,615,3.865,629,1.732,632,2.084,703,3.865,918,4.689,1023,4.389,1028,2.944,1043,3.812,1044,3.865,1354,4.191,1568,3.865,1610,4.191,1613,4.424,1623,3.379,1641,4.619,1662,4.619,1884,4.937,1898,6.975,1932,3.281,2158,4.389,2307,5.676,2309,6.443,2321,4.191,2322,6.089,2323,5.575,2324,5.708,2325,3.865,2326,5.708,2327,5.708,2328,7.014,2329,5.708,2330,7.593,2331,5.708,2332,7.014,2333,7.593,2334,7.593,2335,5.708,2336,5.708,2337,5.243,2338,5.708,2339,5.708,2340,5.708,2341,5.708,2342,5.708,2343,5.708]],["title/additional-documentation/ui/listcomponent.html",[239,0.977,629,1.106,2511,1.41]],["body/additional-documentation/ui/listcomponent.html",[0,0.306,4,1.334,24,0.007,25,1.496,38,1.296,41,1.734,42,2.761,59,4.635,70,2.531,71,1.393,72,2.079,87,0.98,88,0.716,196,1.476,316,0.006,317,0.006,394,2.96,417,2.003,456,3.033,499,2.585,547,3.681,703,4.081,708,2.288,801,3.681,1002,3.935,1019,3.912,1158,3.198,1340,4.879,1367,6.219,1409,3.276,1596,4.733,1614,4.635,2172,4.635,2173,6.028,2174,5.538,2175,5.538,2176,5.538,2177,7.582,2178,7.582,2179,5.538,2180,4.635,2181,5.538,2182,5.538,2183,6.028,2184,6.219,2185,6.028,2186,6.66,2187,6.028]],["title/additional-documentation/ui/formcomponent.html",[231,0.994,629,1.106,2511,1.41]],["body/additional-documentation/ui/formcomponent.html",[24,0.006,112,2.295,316,0.006,317,0.006,4862,6.908]],["title/additional-documentation/ui/logincomponent.html",[253,0.943,629,1.106,2511,1.41]],["body/additional-documentation/ui/logincomponent.html",[0,0.395,18,3.266,24,0.006,112,2.588,126,3.05,256,1.982,316,0.006,317,0.006,339,3.605,924,4.612,2475,6.257]],["title/additional-documentation/ui/popcomponent.html",[275,0.977,629,1.106,2511,1.41]],["body/additional-documentation/ui/popcomponent.html",[24,0.006,113,1.011,146,0.216,316,0.006,317,0.006,492,4.795,500,3.133,629,2.029,1045,3.283,1586,5.736,1588,6.143,1616,4.528,1623,3.959,1926,5.141,1966,4.707,2325,4.528,2701,4.91,2826,4.528,3133,6.687,3134,6.687,3135,6.143,3136,6.687,3137,6.687]],["title/additional-documentation/ui/tabscomponent.html",[289,0.994,629,1.106,2511,1.41]],["body/additional-documentation/ui/tabscomponent.html",[4,1.512,24,0.006,55,0.956,167,3.616,313,1.931,316,0.006,317,0.006,531,5.529,1226,4.626,3728,7.026]],["title/additional-documentation/ui/selectcomponent.html",[286,1.012,629,1.106,2511,1.41]],["body/additional-documentation/ui/selectcomponent.html",[24,0.006,38,1.218,43,1.995,55,0.953,72,2.349,316,0.006,317,0.006,438,3.05,457,2.737,708,2.585,1932,3.915,4863,7.653]],["title/additional-documentation/data.html",[629,1.106,1409,1.98,2511,1.41]],["body/additional-documentation/data.html",[0,0.342,24,0.006,41,1.938,74,1.807,112,2.239,171,2.89,196,1.205,212,1.802,316,0.006,317,0.006,350,2.829,457,2.368,909,3.662,1045,3.308,1409,3.662,1496,4.948,4136,6.738,4137,5.453,4384,5.78]],["title/additional-documentation/medium.html",[258,1.03,629,1.106,2511,1.41]],["body/additional-documentation/medium.html",[11,4.616,13,5.064,14,3.882,24,0.007,55,0.917,60,0.386,145,0.308,146,0.212,184,1.377,258,1.853,316,0.006,317,0.006,318,1.583,330,2.812,805,3.663,1026,4.137,2607,6.167,4034,4.807,4287,8.055,4320,4.616,4739,6.193,4775,5.307]],["title/additional-documentation/tinymce.html",[629,1.106,2511,1.41,3785,2.949]],["body/additional-documentation/tinymce.html",[0,0.334,11,4.637,13,4.022,14,3.9,24,0.007,55,0.921,60,0.387,145,0.309,146,0.213,316,0.006,317,0.006,318,1.591,330,2.825,805,3.68,1026,4.155,3785,5.331,3843,6.183,4034,4.82,4288,8.07,4320,4.637,4739,6.205,4775,5.331]],["title/additional-documentation/ace.html",[12,2.801,629,1.106,2511,1.41]],["body/additional-documentation/ace.html",[0,0.324,11,4.496,12,6.126,13,3.9,14,3.781,24,0.007,55,1.05,60,0.431,136,6.387,145,0.3,146,0.206,316,0.006,317,0.006,318,1.542,319,6.072,330,2.739,805,4.451,1026,4.029,1034,4.496,1976,5.867,2006,5.479,2066,5.867,3794,5.867,4034,4.733,4289,5.169,4320,4.496,4739,6.126,4775,5.169,4864,8.953,4865,8.431,4866,7.176,4867,7.176,4868,7.176]],["title/additional-documentation/core-classes.html",[146,0.101,447,1.86,629,0.953,2511,1.216]],["body/additional-documentation/core-classes.html",[0,0.329,14,3.837,24,0.006,55,0.907,146,0.244,316,0.006,317,0.006,388,2.321,447,4.746,479,3.837,497,3.26,540,4.758,554,3.725,563,3.62,619,3.62,683,4.088,799,4.231,860,4.562,893,5.559,902,5.245,1028,3.343,1640,5.559,1813,4.562,2250,4.983,2826,5.427,2882,5.245,3652,5.245,4034,4.088,4113,5.557,4137,5.245,4296,6.481,4320,4.562,4339,5.559,4342,5.559,4739,4.983,4857,6.481,4869,7.282,4870,7.282,4871,7.282,4872,7.282,4873,7.282]],["title/additional-documentation/core-classes/field.html",[41,1.048,629,1.106,2511,1.41]],["body/additional-documentation/core-classes/field.html",[0,0.295,7,3.108,24,0.007,33,0.846,34,2.25,38,1.519,41,2.391,42,3.505,43,1.702,44,1.374,55,1.115,56,2.925,71,1.117,76,0.896,87,0.69,112,1.932,118,4.009,142,2.005,196,1.369,316,0.006,317,0.006,373,2.005,392,2.391,445,2.854,456,2.925,475,2.391,499,3.283,500,2.723,942,4.474,976,5.34,1028,2.999,1158,2.917,1185,4.674,1205,4.705,1208,4.705,1565,3.936,1610,4.268,1611,5.34,1612,4.987,1613,4.474,1614,4.47,1615,5.814,1616,4.802,1617,3.936,1618,3.667,1619,5.34,1620,5.814,1621,5.814,1622,5.34,1623,3.442,1624,5.814,1625,5.34,1626,5.34,1627,6.084,1628,6.515,1629,3.667,1630,5.814,1631,6.084,1632,5.814,1633,5.814,1634,4.47,1635,5.814,1636,5.814,1637,5.34,1638,5.34,1639,5.814,1640,4.987,1641,4.705,1642,4.987,1643,4.47]],["title/additional-documentation/core-classes/item.html",[43,1.067,629,1.106,2511,1.41]],["body/additional-documentation/core-classes/item.html",[24,0.007,38,1.468,41,2.253,42,2.532,43,2.485,55,1.095,71,1.548,74,1.844,85,4.251,87,0.889,118,2.781,142,2.277,146,0.179,165,3.376,316,0.005,317,0.005,392,3.078,400,3.609,402,3.547,445,3.675,472,2.715,475,3.078,499,2.949,815,3.273,1019,3.766,1043,3.005,1045,3.376,1158,2.274,1185,3.376,1307,5.529,1616,5.302,1625,5.079,1626,5.079,1627,5.899,1628,6.317,1629,3.488,1631,6.718,1634,4.251,1640,4.743,1652,3.743,1779,5.287,1932,3.178,1960,4.489,2122,5.529,2125,5.079,2127,5.079,2132,5.565,2996,4.743,4840,5.529,4874,6.212,4875,6.212,4876,6.212,4877,6.212,4878,6.212,4879,6.212,4880,8.055,4881,6.212,4882,6.212,4883,6.212,4884,6.212,4885,6.212,4886,6.212,4887,6.212,4888,6.212,4889,6.212,4890,6.212,4891,6.212,4892,6.212,4893,7.727,4894,7.727,4895,6.212,4896,6.212,4897,6.212,4898,6.212,4899,6.212,4900,6.212,4901,6.212,4902,6.212,4903,6.212,4904,6.212]],["title/additional-documentation/core-classes/form.html",[112,1.211,629,1.106,2511,1.41]],["body/additional-documentation/core-classes/form.html",[24,0.007,33,0.943,38,1.159,41,2.306,43,1.898,45,5.124,71,1.454,87,0.898,112,2.664,142,2.139,316,0.006,317,0.006,472,3.182,475,3.112,495,5.953,885,5.953,1028,3.343,1631,6.492,1665,4.562,2104,5.953,2105,5.245,3181,5.559,4880,8.016,4905,6.481,4906,8.503,4907,7.282,4908,7.282]],["title/additional-documentation/core-classes/collection.html",[629,1.106,801,2.225,2511,1.41]],["body/additional-documentation/core-classes/collection.html",[24,0.006,25,1.669,71,1.273,142,1.873,146,0.214,196,1.185,316,0.006,317,0.006,417,2.202,457,2.329,558,3.334,683,4.18,708,2.515,801,4.94,803,6.088,814,6.627,815,3.923,816,4.326,850,6.627,851,6.627,852,6.627,853,6.627,854,6.627,855,6.627,856,6.627,857,6.627,858,4.866]],["title/additional-documentation/core-classes/pagination.html",[629,1.106,2224,2.299,2511,1.41]],["body/additional-documentation/core-classes/pagination.html",[7,2.908,24,0.006,43,2.247,55,0.928,71,1.275,142,1.876,316,0.006,317,0.006,629,2.014,1305,4.333,1596,4.333,1602,5.103,1623,3.929,1721,4.187,1918,5.693,2105,5.371,2224,5.403,2641,5.693,2996,5.693,2997,6.637,2998,6.637,2999,6.637,3000,6.637]],["title/additional-documentation/core-classes/list.html",[196,0.651,629,1.106,2511,1.41]],["body/additional-documentation/core-classes/list.html",[4,1.26,7,2.495,14,3.371,24,0.007,25,1.676,33,0.828,35,1.282,38,1.415,41,2.182,42,3.207,43,2.051,44,0.981,55,0.796,65,1.375,71,1.094,72,1.963,74,1.526,87,0.995,186,3.28,196,1.479,316,0.005,317,0.005,336,4.417,368,3.013,373,1.963,381,1.474,384,2.391,417,1.892,436,3.013,475,2.341,619,3.18,708,2.161,801,3.477,816,3.717,1019,3.523,1043,3.806,1214,4.014,1572,4.008,1596,4.951,1610,4.18,1629,3.591,1721,3.591,1960,4.571,2175,5.23,2176,5.23,2177,7.462,2178,7.268,2179,5.23,2180,4.377,2181,5.23,2182,5.23,2184,6.007,2186,6.433,2224,3.591,2325,3.855,2826,3.855,2830,4.607,2870,5.667,4046,5.693,4146,4.884,4815,7.003,4905,7.003,4909,6.397,4910,7.868,4911,6.397,4912,6.397,4913,6.397,4914,6.397,4915,6.397,4916,6.397,4917,6.397,4918,6.397,4919,6.397,4920,6.397]],["title/additional-documentation/core-classes/selection.html",[457,1.28,629,1.106,2511,1.41]],["body/additional-documentation/core-classes/selection.html",[24,0.006,32,0.815,43,1.967,44,1.332,88,0.798,186,3.147,196,1.201,316,0.006,317,0.006,442,4.932,457,2.984,709,5.763,818,4.729,1503,5.165,1610,4.932,1960,4.386,2870,5.436,4921,7.548]],["title/additional-documentation/core-classes/sorter.html",[629,1.106,2511,1.41,3638,2.949]],["body/additional-documentation/core-classes/sorter.html",[7,2.971,24,0.006,64,0.721,146,0.219,316,0.006,317,0.006,445,3.329,942,4.277,1148,6.228,1363,6.228,1440,5.816,1623,4.014,1629,4.277,2132,5.487,3638,6.286,3652,5.487]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["0",{"_index":558,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/collection.html":{}}}],["0.0.1",{"_index":4143,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":4139,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.1.0",{"_index":4132,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":4130,"title":{},"body":{"changelog.html":{}}}],["0.10.0",{"_index":4073,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.12.0",{"_index":4072,"title":{},"body":{"changelog.html":{}}}],["0.13.0",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["0.14.0",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["0.15.0",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["0.16.13",{"_index":4293,"title":{},"body":{"dependencies.html":{}}}],["0.17.0",{"_index":4041,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":4127,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.21.12",{"_index":4284,"title":{},"body":{"dependencies.html":{}}}],["0.22.0",{"_index":4033,"title":{},"body":{"changelog.html":{}}}],["0.23.0",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["0.25.0",{"_index":4035,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":4124,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":4120,"title":{},"body":{"changelog.html":{}}}],["0.3.12",{"_index":4286,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":4114,"title":{},"body":{"changelog.html":{}}}],["0.4.1",{"_index":4109,"title":{},"body":{"changelog.html":{}}}],["0.5.0",{"_index":4108,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":4105,"title":{},"body":{"changelog.html":{}}}],["0.5.2",{"_index":4102,"title":{},"body":{"changelog.html":{}}}],["0.5.3",{"_index":4098,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":4092,"title":{},"body":{"changelog.html":{}}}],["0.7.0",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["0.7.1",{"_index":4128,"title":{},"body":{"changelog.html":{}}}],["0.8.0",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["0.8.1",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["0.8.2",{"_index":4078,"title":{},"body":{"changelog.html":{}}}],["0.8.20",{"_index":4302,"title":{},"body":{"dependencies.html":{}}}],["0.8.5",{"_index":4115,"title":{},"body":{"changelog.html":{}}}],["0.8.6",{"_index":4107,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["0/10",{"_index":4209,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4270,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4269,"title":{},"body":{"coverage.html":{}}}],["00b0ff",{"_index":4662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00dbf0",{"_index":2636,"title":{},"body":{"components/MenuComponent.html":{}}}],["05",{"_index":4140,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4134,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":162,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["1&&!pagination?.isfirst",{"_index":3065,"title":{},"body":{"components/PaginationComponent.html":{}}}],["1&&!pagination?.islast",{"_index":3069,"title":{},"body":{"components/PaginationComponent.html":{}}}],["1.0.0",{"_index":4279,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1.0.3",{"_index":4295,"title":{},"body":{"dependencies.html":{}}}],["1.2.9",{"_index":4290,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":4743,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["1/1",{"_index":4150,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1596,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["10/10",{"_index":4158,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":4217,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1722,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Pagination.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["10004",{"_index":1347,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["101",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["10m",{"_index":2186,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["11",{"_index":4141,"title":{},"body":{"changelog.html":{}}}],["11/11",{"_index":4186,"title":{},"body":{"coverage.html":{}}}],["11/12",{"_index":4222,"title":{},"body":{"coverage.html":{}}}],["11/13",{"_index":4174,"title":{},"body":{"coverage.html":{}}}],["11/16",{"_index":4170,"title":{},"body":{"coverage.html":{}}}],["12/12",{"_index":4205,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":4208,"title":{},"body":{"coverage.html":{}}}],["12/15",{"_index":4240,"title":{},"body":{"coverage.html":{}}}],["12/18",{"_index":4189,"title":{},"body":{"coverage.html":{}}}],["13/16",{"_index":4244,"title":{},"body":{"coverage.html":{}}}],["13/18",{"_index":4237,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":4387,"title":{},"body":{"overview.html":{}}}],["14/14",{"_index":4151,"title":{},"body":{"coverage.html":{}}}],["14/18",{"_index":4261,"title":{},"body":{"coverage.html":{}}}],["15/19",{"_index":4185,"title":{},"body":{"coverage.html":{}}}],["15/20",{"_index":4224,"title":{},"body":{"coverage.html":{}}}],["15/21",{"_index":4198,"title":{},"body":{"coverage.html":{}}}],["16/16",{"_index":4162,"title":{},"body":{"coverage.html":{}}}],["16/18",{"_index":4235,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":4388,"title":{},"body":{"overview.html":{}}}],["17/17",{"_index":4264,"title":{},"body":{"coverage.html":{}}}],["17/20",{"_index":4265,"title":{},"body":{"coverage.html":{}}}],["18/18",{"_index":4183,"title":{},"body":{"coverage.html":{}}}],["18/23",{"_index":4215,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":4386,"title":{},"body":{"overview.html":{}}}],["19/21",{"_index":4149,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":815,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/collection.html":{}}}],["2.0.1",{"_index":4294,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":4747,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["2.5.7",{"_index":4292,"title":{},"body":{"dependencies.html":{}}}],["2.html",{"_index":4839,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["2/2",{"_index":4216,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":4262,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2182,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["20/20",{"_index":4271,"title":{},"body":{"coverage.html":{}}}],["20/22",{"_index":4206,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":2013,"title":{},"body":{"directives/ImageDirective.html":{},"components/TinymceComponent.html":{}}}],["2000",{"_index":2334,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["2017",{"_index":4133,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":4385,"title":{},"body":{"overview.html":{}}}],["21/23",{"_index":4161,"title":{},"body":{"coverage.html":{}}}],["21/24",{"_index":4201,"title":{},"body":{"coverage.html":{}}}],["22/22",{"_index":4165,"title":{},"body":{"coverage.html":{}}}],["22/23",{"_index":4155,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":4135,"title":{},"body":{"changelog.html":{}}}],["23/35",{"_index":4253,"title":{},"body":{"coverage.html":{}}}],["24/26",{"_index":4231,"title":{},"body":{"coverage.html":{}}}],["24/37",{"_index":4249,"title":{},"body":{"coverage.html":{}}}],["2460",{"_index":4401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":2965,"title":{},"body":{"classes/Pagination.html":{}}}],["25/27",{"_index":4202,"title":{},"body":{"coverage.html":{}}}],["26/28",{"_index":4157,"title":{},"body":{"coverage.html":{}}}],["26/31",{"_index":4268,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":3157,"title":{},"body":{"injectables/PopService.html":{}}}],["27.05.17",{"_index":2711,"title":{},"body":{"components/MockupComponent.html":{}}}],["27/28",{"_index":4255,"title":{},"body":{"coverage.html":{}}}],["27/32",{"_index":4227,"title":{},"body":{"coverage.html":{}}}],["27/43",{"_index":4251,"title":{},"body":{"coverage.html":{}}}],["29/32",{"_index":4228,"title":{},"body":{"coverage.html":{}}}],["29a9e1",{"_index":2635,"title":{},"body":{"components/MenuComponent.html":{}}}],["3",{"_index":816,"title":{},"body":{"classes/Collection.html":{},"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["3.0.0.min.css",{"_index":4652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3/3",{"_index":4152,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":4172,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":3562,"title":{},"body":{"components/SearchbarComponent.html":{},"miscellaneous/variables.html":{}}}],["35/36",{"_index":4195,"title":{},"body":{"coverage.html":{}}}],["35/38",{"_index":4225,"title":{},"body":{"coverage.html":{}}}],["36/36",{"_index":4154,"title":{},"body":{"coverage.html":{}}}],["37/37",{"_index":4164,"title":{},"body":{"coverage.html":{}}}],["37474f",{"_index":4659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39/54",{"_index":4207,"title":{},"body":{"coverage.html":{}}}],["39;muffin",{"_index":2756,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["4",{"_index":4754,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["4.3.6",{"_index":4745,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["4.7.6",{"_index":4298,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":4168,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":4259,"title":{},"body":{"coverage.html":{}}}],["41/54",{"_index":4246,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1304,"title":{},"body":{"interfaces/Day.html":{}}}],["43/43",{"_index":4167,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":4196,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["45/53",{"_index":4232,"title":{},"body":{"coverage.html":{}}}],["48.8093253",{"_index":2375,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["49/59",{"_index":4204,"title":{},"body":{"coverage.html":{}}}],["4[0",{"_index":3200,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["4a5ea9",{"_index":2637,"title":{},"body":{"components/MenuComponent.html":{}}}],["5",{"_index":1634,"title":{},"body":{"classes/Field.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["5.0.0",{"_index":1840,"title":{},"body":{"injectables/FormService.html":{}}}],["5.2.2",{"_index":4282,"title":{},"body":{"dependencies.html":{}}}],["5.5.11",{"_index":4297,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":4187,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":4236,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":4193,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":4191,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2641,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["500",{"_index":2648,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":2930,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["52/55",{"_index":4230,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":4233,"title":{},"body":{"coverage.html":{}}}],["5identifi",{"_index":4891,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["5see",{"_index":2999,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["5the",{"_index":1636,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["6",{"_index":831,"title":{},"body":{"classes/Collection.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["6/10",{"_index":4180,"title":{},"body":{"coverage.html":{}}}],["6/11",{"_index":4234,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":4212,"title":{},"body":{"coverage.html":{}}}],["6/62",{"_index":4277,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":4239,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":4179,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["62",{"_index":4190,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":4213,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":4248,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":4252,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":4188,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":4169,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":832,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["7/11",{"_index":4214,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":4223,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":4210,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":4263,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":4192,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":4181,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":4171,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":4260,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":4184,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2180,"title":{},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["8/10",{"_index":4221,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":4182,"title":{},"body":{"coverage.html":{}}}],["8/18",{"_index":4197,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":4266,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":4219,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":4220,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":4649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81",{"_index":4243,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":4203,"title":{},"body":{"coverage.html":{}}}],["83cc6374",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["84",{"_index":4173,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":4238,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":4200,"title":{},"body":{"coverage.html":{}}}],["879195",{"_index":4660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88",{"_index":4218,"title":{},"body":{"coverage.html":{}}}],["89",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["89ab][0",{"_index":3202,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["9",{"_index":1685,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["9.159388100000001",{"_index":2376,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["9/10",{"_index":4211,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":4148,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":4160,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":4050,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["93",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["94",{"_index":4229,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":4060,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["96",{"_index":4062,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["97",{"_index":4194,"title":{},"body":{"coverage.html":{}}}],["9776",{"_index":2265,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["98",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["9]+))?.+v=)?([a",{"_index":4709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]+\\.)+[a",{"_index":4726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{1,3}\\.[0",{"_index":4724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{1,3}])|(([a",{"_index":4725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9_",{"_index":4710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9a",{"_index":2809,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":114,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["_]{22",{"_index":3204,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["_]{22}$/.test(id",{"_index":1686,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["_]{7,14",{"_index":2811,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["_api",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["_api.login(email",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{}}}],["_api.resetpassword(email",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{}}}],["_creat",{"_index":2770,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["_creator",{"_index":2777,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_entri",{"_index":1093,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["_entrytitl",{"_index":2798,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_item",{"_index":3666,"title":{},"body":{"classes/Sorter.html":{}}}],["_item.id",{"_index":1469,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["_items.indexof(item",{"_index":3667,"title":{},"body":{"classes/Sorter.html":{}}}],["_method",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{}}}],["_methods.filter(x",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{}}}],["_modifi",{"_index":2775,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_moment",{"_index":1316,"title":{},"body":{"interfaces/Day.html":{}}}],["_resourc",{"_index":3446,"title":{},"body":{"injectables/ResourceService.html":{}}}],["_toggl",{"_index":3140,"title":{},"body":{"components/PopComponent.html":{}}}],["_upload",{"_index":3992,"title":{},"body":{"components/UploadComponent.html":{}}}],["a'default",{"_index":4879,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["a.then(r",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{}}}],["abov",{"_index":1637,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{}}}],["absatz",{"_index":4678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstract",{"_index":893,"title":{},"body":{"classes/Config.html":{},"interfaces/ItemConfig.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes.html":{}}}],["abstractcontrol",{"_index":1831,"title":{},"body":{"injectables/FormService.html":{}}}],["ac",{"_index":12,"title":{"additional-documentation/ace.html":{}},"body":{"components/AceComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/ace.html":{}}}],["acc:edit",{"_index":3237,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["acc:list",{"_index":3236,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["accept",{"_index":2943,"title":{},"body":{"injectables/NotificationsService.html":{},"changelog.html":{}}}],["access",{"_index":1022,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/Symbol.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["access=publ",{"_index":4329,"title":{},"body":{"index.html":{}}}],["access=publicse",{"_index":4853,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["accessor",{"_index":3187,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{}}}],["accord",{"_index":2993,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["account",{"_index":341,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{}}}],["account_not_found",{"_index":4402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accountid",{"_index":3235,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["accountresourc",{"_index":2480,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{}}}],["accounts(environment.environ",{"_index":3530,"title":{},"body":{"injectables/SdkService.html":{}}}],["ace'},{'nam",{"_index":190,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ace.compon",{"_index":331,"title":{},"body":{"modules/AceModule.html":{}}}],["ace.component.html",{"_index":31,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.component.scss",{"_index":29,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.edit(this.container.nativeel",{"_index":153,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/mod",{"_index":95,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/them",{"_index":98,"title":{},"body":{"components/AceComponent.html":{}}}],["acecompon",{"_index":1,"title":{"components/AceComponent.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acemodul",{"_index":319,"title":{"modules/AceModule.html":{}},"body":{"modules/AceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/ace.html":{}}}],["act",{"_index":1363,"title":{},"body":{"directives/DropzoneDirective.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["action",{"_index":1044,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["activ",{"_index":513,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/TabComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["activatedrout",{"_index":483,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SearchbarComponent.html":{},"components/TabsComponent.html":{}}}],["active/vis",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["activi",{"_index":2342,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["actual",{"_index":2268,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["actual_compon",{"_index":315,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ad",{"_index":826,"title":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}},"body":{"classes/Collection.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["add",{"_index":805,"title":{},"body":{"classes/Collection.html":{},"injectables/FormService.html":{},"components/LoaderComponent.html":{},"components/TabComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["add(item",{"_index":822,"title":{},"body":{"classes/Collection.html":{}}}],["addal",{"_index":806,"title":{},"body":{"classes/Collection.html":{}}}],["addall(item",{"_index":828,"title":{},"body":{"classes/Collection.html":{}}}],["addfield",{"_index":1814,"title":{},"body":{"injectables/FormService.html":{}}}],["addfield(field",{"_index":1818,"title":{},"body":{"injectables/FormService.html":{}}}],["addit",{"_index":2511,"title":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}},"body":{"components/LoginFormComponent.html":{},"changelog.html":{}}}],["addregist",{"_index":3319,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["address",{"_index":1867,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{}}}],["addsystempropertiestofieldconfig",{"_index":2723,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["addsystempropertiestofieldconfig(config",{"_index":2731,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["addunregist",{"_index":3321,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["adhes",{"_index":4617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":345,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["adminentryinputcompon",{"_index":191,"title":{"components/AdminEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminservic",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["adress",{"_index":2516,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{}}}],["advanc",{"_index":2865,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["advantag",{"_index":2338,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["aftercontentinit",{"_index":3748,"title":{},"body":{"components/TabsComponent.html":{}}}],["afterviewinit",{"_index":2450,"title":{},"body":{"components/LocationSearchComponent.html":{},"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{}}}],["agm/cor",{"_index":1874,"title":{},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":2404,"title":{},"body":{"modules/LocationModule.html":{}}}],["agmcoremodule.forroot",{"_index":2409,"title":{},"body":{"modules/LocationModule.html":{}}}],["agnost",{"_index":4858,"title":{},"body":{"additional-documentation/ui.html":{}}}],["aizasyadgeue1yxo1f",{"_index":2411,"title":{},"body":{"modules/LocationModule.html":{}}}],["al",{"_index":4815,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["alarm",{"_index":4414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":4496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algorithm",{"_index":3649,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.resolv",{"_index":3673,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.sort(properti",{"_index":3675,"title":{},"body":{"classes/Sorter.html":{}}}],["align",{"_index":4416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aligncent",{"_index":4689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alignjustifi",{"_index":4691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alignleft",{"_index":4687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alignright",{"_index":4690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"changelog.html":{},"additional-documentation/core-classes/selection.html":{}}}],["along",{"_index":4776,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["alreadi",{"_index":2924,"title":{},"body":{"injectables/NotificationsService.html":{},"classes/Pagination.html":{}}}],["alt",{"_index":4549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alter(valu",{"_index":1327,"title":{},"body":{"interfaces/Day.html":{}}}],["altern",{"_index":2337,"title":{},"body":{"components/LoaderComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["alway",{"_index":1015,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"index.html":{}}}],["alwaysloadentri",{"_index":1003,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["alwaysshowhead",{"_index":2216,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["amaz",{"_index":4812,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["amazement_factor",{"_index":4811,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["amount",{"_index":560,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Notification.html":{},"components/PopComponent.html":{}}}],["android",{"_index":4591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angezeigt",{"_index":639,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["angl",{"_index":4420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":14,"title":{},"body":{"components/AceComponent.html":{},"injectables/FormService.html":{},"components/MenuComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/list.html":{}}}],["angular+datamanag",{"_index":4307,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":4744,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/cli",{"_index":4742,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/clith",{"_index":4741,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/common",{"_index":654,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/compil",{"_index":4281,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/cor",{"_index":132,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["angular/core/src/metadata/lifecycle_hook",{"_index":2283,"title":{},"body":{"components/ListItemsComponent.html":{},"components/PaginationComponent.html":{}}}],["angular/form",{"_index":134,"title":{},"body":{"components/AceComponent.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/ResourceModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["angular/http",{"_index":4283,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/languag",{"_index":4746,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/platform",{"_index":1756,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"modules/VcModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/rout",{"_index":630,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SearchbarComponent.html":{},"components/TabsComponent.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["anoth",{"_index":628,"title":{},"body":{"injectables/AuthGuard.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoginComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{}}}],["antwort",{"_index":4685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anweisungen",{"_index":3114,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["anywher",{"_index":1588,"title":{},"body":{"classes/Field.html":{},"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["aot",{"_index":4121,"title":{},"body":{"changelog.html":{}}}],["api",{"_index":339,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["api(api",{"_index":3520,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.asset(this.assetid",{"_index":424,"title":{},"body":{"directives/AssetDirective.html":{}}}],["api.checkpermission(permiss",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.create(rel",{"_index":3450,"title":{},"body":{"injectables/ResourceService.html":{}}}],["api.createdmassets(assetgroupid",{"_index":1691,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["api.getschema(model",{"_index":3544,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.logout",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.me().then((account",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["api.resourcelist",{"_index":454,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["api.signup",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{}}}],["apikey",{"_index":2410,"title":{},"body":{"modules/LocationModule.html":{}}}],["apiresolv",{"_index":3470,"title":{},"body":{"injectables/SdkService.html":{}}}],["app",{"_index":2854,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/ResourceConfig.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["app.compon",{"_index":4791,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["app.modul",{"_index":4866,"title":{},"body":{"additional-documentation/ace.html":{}}}],["app::delet",{"_index":3262,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["app::edit",{"_index":3263,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["appcompon",{"_index":4772,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["appear",{"_index":1586,"title":{},"body":{"classes/Field.html":{},"components/PopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["append",{"_index":1432,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["appid",{"_index":3261,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["appl",{"_index":4592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appletre",{"_index":2176,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["appli",{"_index":1216,"title":{},"body":{"interfaces/Day.html":{},"components/ListHeaderComponent.html":{}}}],["applic",{"_index":3792,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{}}}],["applicationref",{"_index":3790,"title":{},"body":{"components/TinymceComponent.html":{}}}],["applyfilt",{"_index":2234,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["applyfilter(properti",{"_index":2240,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["appmodul",{"_index":4775,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["appoint",{"_index":4624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodul",{"_index":4773,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["arbitrari",{"_index":2996,"title":{},"body":{"classes/Pagination.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["area",{"_index":3122,"title":{},"body":{"components/PopComponent.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":1367,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListComponent.html":{},"components/ToolbarComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["around",{"_index":3041,"title":{},"body":{"components/PaginationComponent.html":{}}}],["arrang",{"_index":4421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["array(42",{"_index":1286,"title":{},"body":{"interfaces/Day.html":{}}}],["array(math.ceil(this.tot",{"_index":3015,"title":{},"body":{"classes/Pagination.html":{}}}],["array.from(new",{"_index":3002,"title":{},"body":{"classes/Pagination.html":{}}}],["array.isarray(asset",{"_index":1678,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["array.isarray(pattern",{"_index":1195,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["array.slice(start",{"_index":2569,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["arrow",{"_index":3549,"title":{},"body":{"components/SearchbarComponent.html":{},"miscellaneous/variables.html":{}}}],["arrowdown",{"_index":3619,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["arrownavig",{"_index":3554,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["arrownavigation(",{"_index":3569,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["arrowup",{"_index":3616,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["artboard",{"_index":4423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["articl",{"_index":4628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact",{"_index":4345,"title":{},"body":{"index.html":{}}}],["asc",{"_index":4061,"title":{},"body":{"changelog.html":{}}}],["ask",{"_index":2923,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["asobserv",{"_index":3824,"title":{},"body":{"components/TinymceComponent.html":{}}}],["asset",{"_index":193,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["asset.assetid",{"_index":1682,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["asset.getfilevariant(this.s",{"_index":2036,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimagethumburl(this.s",{"_index":2038,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimageurl(200",{"_index":3274,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.getimageurl(this.s",{"_index":2039,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.id",{"_index":2034,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.reduc",{"_index":1679,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["asset.thumbnail",{"_index":3294,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.thumbnails.length",{"_index":3295,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.thumbnails[0].url",{"_index":3296,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.typ",{"_index":2032,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{}}}],["asset/asset",{"_index":4126,"title":{},"body":{"changelog.html":{}}}],["asset/asset.direct",{"_index":1758,"title":{},"body":{"modules/FilesModule.html":{},"directives/ImageDirective.html":{}}}],["assetdirect",{"_index":299,"title":{"directives/AssetDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetgroup",{"_index":201,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["assetgroup#definitions/condit",{"_index":3290,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["assetgroupid",{"_index":512,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["assetgrouplist",{"_index":1674,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetgrouplist(forcereload",{"_index":1731,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetgrouplistpromis",{"_index":1675,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetgroups[0",{"_index":584,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["assetgroupselectcompon",{"_index":200,"title":{"components/AssetgroupSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetid",{"_index":370,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{}}}],["assetid'",{"_index":4104,"title":{},"body":{"changelog.html":{}}}],["assetinput",{"_index":4125,"title":{},"body":{"changelog.html":{}}}],["assetlist.getallitem",{"_index":1694,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetlistcompon",{"_index":192,"title":{"components/AssetListComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetlistpopcompon",{"_index":195,"title":{"components/AssetListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assets.map((asset",{"_index":1728,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assets.map(asset",{"_index":1698,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assets.reduce((id",{"_index":1712,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assets[0",{"_index":1695,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["assetselectcompon",{"_index":198,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assign",{"_index":1102,"title":{},"body":{"injectables/CrudService.html":{},"classes/Field.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{}}}],["associ",{"_index":1590,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceService.html":{},"components/TabsComponent.html":{}}}],["assum",{"_index":4786,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["asterisk",{"_index":4424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attempt",{"_index":2881,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["auth",{"_index":518,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"changelog.html":{}}}],["auth.servic",{"_index":665,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["auth/auth.modul",{"_index":1133,"title":{},"body":{"modules/DataModule.html":{}}}],["auth/auth.servic",{"_index":569,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["authent",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["authguard",{"_index":610,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["authmodul",{"_index":645,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":4781,"title":{"additional-documentation/project-setup-tutorial/authorization.html":{}},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["authservic",{"_index":519,"title":{"injectables/AuthService.html":{}},"body":{"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":2004,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"changelog.html":{}}}],["autocomplet",{"_index":1863,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["autocomplete.addlistener('place_chang",{"_index":1882,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocomplete.getplac",{"_index":1885,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress",{"_index":1852,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress(el",{"_index":1861,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autofocu",{"_index":3548,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["autofocus",{"_index":3560,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["autolink",{"_index":4643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoload",{"_index":371,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["autoload=fals",{"_index":393,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{}}}],["automat",{"_index":1643,"title":{},"body":{"classes/Field.html":{},"classes/Notification.html":{},"injectables/SdkService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/core-classes/field.html":{}}}],["automatisch",{"_index":4719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autores",{"_index":4640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoresize_max_height",{"_index":4648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoresize_min_height",{"_index":4647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avail",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["availab",{"_index":63,"title":{},"body":{"components/AceComponent.html":{}}}],["available.validator.t",{"_index":4176,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["availables",{"_index":2217,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Pagination.html":{}}}],["avoid",{"_index":1507,"title":{},"body":{"components/EntryListComponent.html":{}}}],["ayq",{"_index":4894,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["b",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["b(r",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{}}}],["b.resolv",{"_index":3674,"title":{},"body":{"classes/Sorter.html":{}}}],["b.sort(properti",{"_index":3676,"title":{},"body":{"classes/Sorter.html":{}}}],["back",{"_index":1031,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":4404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backenderrorcod",{"_index":4178,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":1217,"title":{},"body":{"interfaces/Day.html":{}}}],["bag",{"_index":4548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bake",{"_index":2875,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["baken",{"_index":2877,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["bakery:bakeryservic",{"_index":2874,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["ball",{"_index":2866,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["bank",{"_index":4426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":4607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["barcod",{"_index":4429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base",{"_index":540,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["base64",{"_index":3173,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["base64uuid",{"_index":3165,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["baseurl",{"_index":4369,"title":{},"body":{"index.html":{}}}],["basi",{"_index":1319,"title":{},"body":{"interfaces/Day.html":{}}}],["basic",{"_index":1340,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/ListComponent.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["basket",{"_index":4550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["be",{"_index":2971,"title":{},"body":{"classes/Pagination.html":{},"components/ResourceDeletePopComponent.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["befor",{"_index":1618,"title":{},"body":{"classes/Field.html":{},"components/InputComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes/field.html":{}}}],["began",{"_index":4123,"title":{},"body":{"changelog.html":{}}}],["begin",{"_index":1283,"title":{},"body":{"interfaces/Day.html":{},"injectables/ModelConfigService.html":{}}}],["begin.clone().add(index",{"_index":1289,"title":{},"body":{"interfaces/Day.html":{}}}],["behaviour",{"_index":2717,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["beim",{"_index":3118,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["belong",{"_index":2047,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["below",{"_index":2833,"title":{},"body":{"classes/Notification.html":{}}}],["beneath",{"_index":2099,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["berschrift",{"_index":4676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beschreibung",{"_index":2861,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["beta.3",{"_index":4280,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":2341,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["between",{"_index":562,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/FormService.html":{},"components/PopComponent.html":{}}}],["big",{"_index":4536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bigger",{"_index":4630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bild/datei",{"_index":4718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bilder",{"_index":4807,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["bind",{"_index":502,"title":{},"body":{"components/AssetListPopComponent.html":{},"changelog.html":{}}}],["binocular",{"_index":4431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["birch",{"_index":2181,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["bitcoin",{"_index":4432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["block",{"_index":3872,"title":{},"body":{"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["blockevent(",{"_index":3876,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["blood",{"_index":4485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bluetooth",{"_index":4570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blur",{"_index":1839,"title":{},"body":{"injectables/FormService.html":{}}}],["bobbi",{"_index":1631,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{}}}],["bobby.display('nam",{"_index":4888,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bobby.group('nam",{"_index":4889,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bobby.resolve('nam",{"_index":4887,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bobby.sort('nam",{"_index":4890,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bodi",{"_index":1616,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["body+1",{"_index":4902,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["body.value.nam",{"_index":1625,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["bold",{"_index":4629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["book",{"_index":4464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bookmark",{"_index":4434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":381,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["bootstrap",{"_index":320,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["bootstrap/publish",{"_index":4851,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["border",{"_index":4435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["both",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{},"changelog.html":{}}}],["bottl",{"_index":4623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":4089,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["bound",{"_index":503,"title":{},"body":{"components/AssetListPopComponent.html":{},"directives/DropzoneDirective.html":{}}}],["box",{"_index":905,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{},"miscellaneous/variables.html":{}}}],["bracket",{"_index":4419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brand",{"_index":4636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":3618,"title":{},"body":{"components/SearchbarComponent.html":{},"changelog.html":{}}}],["breit",{"_index":4720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["briefcas",{"_index":4438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bright",{"_index":4449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bring",{"_index":4892,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["broadcast",{"_index":3436,"title":{},"body":{"injectables/ResourceService.html":{}}}],["broken",{"_index":4501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brows",{"_index":4383,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":185,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"modules/FilesModule.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"modules/ResourceModule.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/VcModule.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["browsermodul",{"_index":1755,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/VcModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["brush",{"_index":4517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["btn",{"_index":4668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bu",{"_index":4439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bubbl",{"_index":4456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buchstaben",{"_index":1628,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["bucket",{"_index":4518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bug",{"_index":4526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":4289,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ace.html":{}}}],["builds/blob/master/src/ext",{"_index":149,"title":{},"body":{"components/AceComponent.html":{}}}],["builds/src",{"_index":136,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/ace.html":{}}}],["bullet",{"_index":4502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bullist",{"_index":4694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["busi",{"_index":4598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button",{"_index":1020,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoginFormComponent.html":{},"components/ResourceCrudComponent.html":{},"miscellaneous/variables.html":{}}}],["buttonclass",{"_index":2500,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["buttonlabel",{"_index":2501,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["bypasssecuritytrusthtml",{"_index":3459,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["c",{"_index":4819,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["c9c8d4",{"_index":2638,"title":{},"body":{"components/MenuComponent.html":{}}}],["cach",{"_index":3483,"title":{},"body":{"injectables/SdkService.html":{}}}],["calcul",{"_index":4445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calculc",{"_index":2989,"title":{},"body":{"classes/Pagination.html":{}}}],["calendar",{"_index":1154,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["calendar'},{'nam",{"_index":203,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["calendar.compon",{"_index":1177,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["calendarcompon",{"_index":202,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calendarish",{"_index":1210,"title":{},"body":{"interfaces/Day.html":{}}}],["call",{"_index":392,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"injectables/SymbolPipe.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["callback",{"_index":85,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/core-classes/item.html":{}}}],["callbackurl",{"_index":3307,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["camera",{"_index":4448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactiv",{"_index":621,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canalter(valu",{"_index":1322,"title":{},"body":{"interfaces/Day.html":{}}}],["cancel",{"_index":2651,"title":{},"body":{"components/MenuComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["canceltimeout",{"_index":2620,"title":{},"body":{"components/MenuComponent.html":{}}}],["cand",{"_index":2387,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["candelet",{"_index":3371,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["cap",{"_index":4418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabl",{"_index":4099,"title":{},"body":{"changelog.html":{}}}],["caption",{"_index":3298,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["car",{"_index":4451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":4489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caret",{"_index":4627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cart",{"_index":4551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2872,"title":{},"body":{"components/NotificationsComponent.html":{},"components/SearchbarComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["catch",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{},"components/LoaderComponent.html":{}}}],["catch((err",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["catch((error",{"_index":2486,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["catch(err",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch(error",{"_index":1953,"title":{},"body":{"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{},"components/ResourceDeletePopComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["caution",{"_index":3435,"title":{},"body":{"injectables/ResourceService.html":{},"index.html":{}}}],["ccc",{"_index":1222,"title":{},"body":{"interfaces/Day.html":{}}}],["cd",{"_index":4751,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["cdn",{"_index":4865,"title":{},"body":{"additional-documentation/ace.html":{}}}],["cell",{"_index":1208,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes/field.html":{}}}],["center",{"_index":2373,"title":{},"body":{"components/LocationMapComponent.html":{},"miscellaneous/variables.html":{}}}],["certain",{"_index":2123,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/TypeConfigService.html":{}}}],["chang",{"_index":84,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["change(",{"_index":3956,"title":{},"body":{"components/UploadComponent.html":{}}}],["change(filt",{"_index":1051,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["change)=\"updatesize($event.target.valu",{"_index":3076,"title":{},"body":{"components/PaginationComponent.html":{}}}],["change.broadcast",{"_index":3438,"title":{},"body":{"injectables/ResourceService.html":{}}}],["change.color",{"_index":1278,"title":{},"body":{"interfaces/Day.html":{}}}],["change.d",{"_index":1275,"title":{},"body":{"interfaces/Day.html":{}}}],["change.heatmap",{"_index":1279,"title":{},"body":{"interfaces/Day.html":{}}}],["change.select",{"_index":1273,"title":{},"body":{"interfaces/Day.html":{}}}],["change.timespan",{"_index":1277,"title":{},"body":{"interfaces/Day.html":{}}}],["change[key",{"_index":1084,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["changelog",{"_index":4032,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changesenviron",{"_index":3471,"title":{},"body":{"injectables/SdkService.html":{}}}],["changespan",{"_index":1232,"title":{},"body":{"interfaces/Day.html":{}}}],["chat",{"_index":4455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":626,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/ListItemsComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["checkbox",{"_index":2226,"title":{},"body":{"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["checklist",{"_index":4683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkmark",{"_index":4631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkpermiss",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkpermission(permiss",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["chevron",{"_index":4588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["child",{"_index":2663,"title":{},"body":{"components/MenuComponent.html":{},"components/UploadComponent.html":{}}}],["children",{"_index":4057,"title":{},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["cinnamon",{"_index":4909,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["circl",{"_index":4413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":146,"title":{"classes/Collection.html":{},"classes/Config.html":{},"classes/Field.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"directives/FocusDirective.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["class.i",{"_index":1356,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["class=\"input",{"_index":3077,"title":{},"body":{"components/PaginationComponent.html":{}}}],["clean",{"_index":1047,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{}}}],["clean(valu",{"_index":1054,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["clear",{"_index":1110,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["clearselect",{"_index":1318,"title":{},"body":{"interfaces/Day.html":{}}}],["cleartimeout(this.timeout",{"_index":2695,"title":{},"body":{"components/MenuComponent.html":{}}}],["cli",{"_index":4313,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["click",{"_index":928,"title":{},"body":{"components/CrudComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ToolbarComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["click(",{"_index":3868,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["clickabl",{"_index":4056,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["clientid",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["clip",{"_index":4580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clock",{"_index":4415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clone",{"_index":2808,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["close",{"_index":1926,"title":{},"body":{"injectables/HistoryService.html":{},"components/ListHeaderComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["cloud",{"_index":4457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clubapp",{"_index":4821,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["cluster_acemodul",{"_index":321,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_acecomponent_provid",{"_index":323,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_declar",{"_index":322,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_export",{"_index":324,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":646,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":647,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_export",{"_index":649,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":648,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_provid",{"_index":650,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_datamodul",{"_index":1117,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_declar",{"_index":1118,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_export",{"_index":1120,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_import",{"_index":1119,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_provid",{"_index":1121,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_filesmodul",{"_index":1749,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_declar",{"_index":1750,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_export",{"_index":1752,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_import",{"_index":1751,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_provid",{"_index":1753,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_formmodul",{"_index":1782,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declar",{"_index":1783,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_export",{"_index":1785,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_import",{"_index":1784,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_provid",{"_index":1786,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_iconmodul",{"_index":1991,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_declar",{"_index":1992,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_export",{"_index":1993,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_provid",{"_index":1994,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iomodul",{"_index":2113,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_declar",{"_index":2114,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_export",{"_index":2115,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_listmodul",{"_index":2287,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_declar",{"_index":2288,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_export",{"_index":2290,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_import",{"_index":2289,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_loadermodul",{"_index":2354,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_declar",{"_index":2355,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_export",{"_index":2356,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_provid",{"_index":2357,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_locationmodul",{"_index":2396,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_declar",{"_index":2397,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_export",{"_index":2399,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_import",{"_index":2398,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_provid",{"_index":2400,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_mediummodul",{"_index":2608,"title":{},"body":{"modules/MediumModule.html":{},"overview.html":{}}}],["cluster_mediummodule_declar",{"_index":2609,"title":{},"body":{"modules/MediumModule.html":{},"overview.html":{}}}],["cluster_mediummodule_export",{"_index":2611,"title":{},"body":{"modules/MediumModule.html":{},"overview.html":{}}}],["cluster_mediummodule_mediumeditorcomponent_provid",{"_index":2610,"title":{},"body":{"modules/MediumModule.html":{}}}],["cluster_notificationsmodul",{"_index":2905,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_declar",{"_index":2906,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_export",{"_index":2908,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_import",{"_index":2907,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["cluster_notificationsmodule_provid",{"_index":2909,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_popmodul",{"_index":3145,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_declar",{"_index":3146,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_export",{"_index":3147,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_provid",{"_index":3148,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_resourcemodul",{"_index":3408,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_declar",{"_index":3409,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_export",{"_index":3411,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_import",{"_index":3410,"title":{},"body":{"modules/ResourceModule.html":{}}}],["cluster_resourcemodule_provid",{"_index":3412,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_sdkmodul",{"_index":3465,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_sdkmodule_provid",{"_index":3466,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_selectmodul",{"_index":3624,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_declar",{"_index":3625,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_export",{"_index":3628,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_import",{"_index":3627,"title":{},"body":{"modules/SelectModule.html":{}}}],["cluster_selectmodule_selectcomponent_provid",{"_index":3626,"title":{},"body":{"modules/SelectModule.html":{}}}],["cluster_symbolmodul",{"_index":3682,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_provid",{"_index":3683,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_tinymcemodul",{"_index":3844,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_declar",{"_index":3845,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_export",{"_index":3846,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_uimodul",{"_index":3934,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_export",{"_index":3936,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_import",{"_index":3935,"title":{},"body":{"modules/UiModule.html":{}}}],["cluster_utilitymodul",{"_index":4004,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_declar",{"_index":4005,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_export",{"_index":4007,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_import",{"_index":4006,"title":{},"body":{"modules/UtilityModule.html":{}}}],["cluster_vcmodul",{"_index":4013,"title":{},"body":{"modules/VcModule.html":{},"overview.html":{}}}],["cluster_vcmodule_declar",{"_index":4014,"title":{},"body":{"modules/VcModule.html":{},"overview.html":{}}}],["cluster_vcmodule_export",{"_index":4015,"title":{},"body":{"modules/VcModule.html":{},"overview.html":{}}}],["cmd+click",{"_index":4824,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["code",{"_index":4342,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes.html":{}}}],["codesourc",{"_index":3323,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["codesourceid",{"_index":3324,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["codesourcetyp",{"_index":3325,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["coin",{"_index":4433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collat",{"_index":3654,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["collator.compare(a",{"_index":3659,"title":{},"body":{"classes/Sorter.html":{}}}],["collect",{"_index":801,"title":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}},"body":{"classes/Collection.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"injectables/SdkService.html":{},"coverage.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["collection([1",{"_index":814,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.add(4",{"_index":852,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.addall([10,11,12",{"_index":855,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.has(1",{"_index":850,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.has(4",{"_index":851,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.hasall([1,10,11",{"_index":856,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.index(1",{"_index":854,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.remove(4",{"_index":853,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.removeall();it",{"_index":857,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["color",{"_index":1213,"title":{},"body":{"interfaces/Day.html":{},"components/MenuComponent.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["colorpick",{"_index":4646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":1612,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"additional-documentation/core-classes/field.html":{}}}],["columnclick",{"_index":515,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{}}}],["columnclick(item",{"_index":2155,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["com",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["combin",{"_index":2852,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["come",{"_index":343,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":4554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comment",{"_index":2340,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["commonmodul",{"_index":653,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{}}}],["commun",{"_index":2475,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["compani",{"_index":4590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compat",{"_index":4122,"title":{},"body":{"changelog.html":{}}}],["compil",{"_index":4360,"title":{},"body":{"index.html":{}}}],["compileropt",{"_index":4366,"title":{},"body":{"index.html":{}}}],["complain",{"_index":2935,"title":{},"body":{"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":3954,"title":{},"body":{"components/UploadComponent.html":{},"changelog.html":{}}}],["compon",{"_index":0,"title":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{}}}],["component_templ",{"_index":189,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["componentfactori",{"_index":1416,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["componentfactoryresolv",{"_index":1394,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentinst",{"_index":2044,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref",{"_index":1411,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentref.inst",{"_index":2082,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref.instance.control",{"_index":2083,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref.instance.control.valuechang",{"_index":2084,"title":{},"body":{"components/InputComponent.html":{}}}],["components/class",{"_index":4333,"title":{},"body":{"index.html":{}}}],["comput",{"_index":4462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["concat(this.config.availables",{"_index":3004,"title":{},"body":{"classes/Pagination.html":{}}}],["concat(this.timespan",{"_index":1248,"title":{},"body":{"interfaces/Day.html":{}}}],["concept",{"_index":1640,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["condit",{"_index":3288,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config",{"_index":475,"title":{"classes/Config.html":{}},"body":{"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["config.input",{"_index":3927,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.interfac",{"_index":571,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{}}}],["config.interface.t",{"_index":1000,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FieldConfig.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"classes/PaginationConfig.html":{},"coverage.html":{}}}],["config.interface.ts:11",{"_index":3083,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:4",{"_index":1654,"title":{},"body":{"interfaces/FieldConfig.html":{}}}],["config.interface.ts:7",{"_index":3086,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:9",{"_index":3084,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.output",{"_index":3928,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.popclass",{"_index":932,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["config.servic",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{}}}],["config.service.t",{"_index":2718,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["config.service.ts:11",{"_index":3170,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:112",{"_index":2750,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:129",{"_index":2736,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:137",{"_index":3889,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:141",{"_index":3897,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:15",{"_index":3178,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:157",{"_index":3901,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:166",{"_index":3892,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:172",{"_index":3890,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:177",{"_index":3898,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:178",{"_index":2734,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:18",{"_index":3903,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:195",{"_index":2746,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:20",{"_index":2759,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:25",{"_index":3175,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{}}}],["config.service.ts:26",{"_index":2730,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:37",{"_index":3180,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:42",{"_index":2741,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:45",{"_index":3186,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:54",{"_index":3184,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:57",{"_index":2754,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:62",{"_index":2748,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:63",{"_index":3182,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:67",{"_index":2732,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["config.service.ts:71",{"_index":3171,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:76",{"_index":3189,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.view",{"_index":3926,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config/field",{"_index":1644,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{}}}],["config/model",{"_index":1143,"title":{},"body":{"modules/DataModule.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["config/resourc",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config/resource.servic",{"_index":1506,"title":{},"body":{"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{}}}],["config/resource.service.t",{"_index":3416,"title":{},"body":{"injectables/ResourceService.html":{},"coverage.html":{}}}],["config/resource.service.ts:102",{"_index":3421,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:120",{"_index":3423,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:131",{"_index":3425,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:36",{"_index":3417,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:39",{"_index":3433,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:48",{"_index":3427,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:54",{"_index":3418,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:63",{"_index":3429,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:81",{"_index":3432,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:96",{"_index":3426,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/typ",{"_index":1144,"title":{},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config?.createlabel",{"_index":997,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["config[properti",{"_index":2782,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["configinput",{"_index":2192,"title":{},"body":{"components/ListComponent.html":{}}}],["configur",{"_index":880,"title":{},"body":{"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/FieldConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"components/SearchbarComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["configuration.interface.t",{"_index":2821,"title":{},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["configure(key",{"_index":883,"title":{},"body":{"classes/Config.html":{}}}],["configure?(key",{"_index":897,"title":{},"body":{"classes/Config.html":{}}}],["confirm",{"_index":1035,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ResourceDeletePopComponent.html":{}}}],["confirm(resourc",{"_index":3381,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["confirminput",{"_index":3370,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["connector",{"_index":443,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["consist",{"_index":1307,"title":{},"body":{"interfaces/Day.html":{},"additional-documentation/core-classes/item.html":{}}}],["console.error('cannot",{"_index":3390,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["console.error('miss",{"_index":3925,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["console.error('model",{"_index":2800,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["console.error(`${relationnam",{"_index":3194,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["console.error(err",{"_index":3993,"title":{},"body":{"components/UploadComponent.html":{}}}],["console.log('could",{"_index":2488,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["console.log('cr",{"_index":1114,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["console.log('error",{"_index":989,"title":{},"body":{"components/CrudComponent.html":{}}}],["console.log('old",{"_index":1726,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["console.log('raw",{"_index":1192,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["console.log('receiv",{"_index":4836,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["console.log('resolv",{"_index":1714,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["console.log('select",{"_index":590,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["console.warn('cannot",{"_index":1456,"title":{},"body":{"directives/EntriesDirective.html":{},"injectables/LoaderService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{}}}],["console.warn('could",{"_index":3607,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["console.warn('ha",{"_index":867,"title":{},"body":{"classes/Collection.html":{}}}],["console.warn('no",{"_index":2389,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["console.warn('not",{"_index":3392,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["console.warn('notification.tim",{"_index":2902,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["console.warn('pag",{"_index":3051,"title":{},"body":{"components/PaginationComponent.html":{}}}],["console.warn('thi",{"_index":2947,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["console.warn('tri",{"_index":2892,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["console.warn('wont",{"_index":1718,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["console.warn(`icon",{"_index":1986,"title":{},"body":{"components/IconComponent.html":{}}}],["console.warn(`rel",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":142,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/PopService.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["construct",{"_index":813,"title":{},"body":{"classes/Collection.html":{},"classes/Field.html":{}}}],["constructor",{"_index":348,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["constructor(@inject('environ",{"_index":3524,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(@inject('usedesktopnotif",{"_index":2936,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(app",{"_index":3789,"title":{},"body":{"components/TinymceComponent.html":{}}}],["constructor(auth",{"_index":2469,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["constructor(componentfactoryresolv",{"_index":1393,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["constructor(config",{"_index":2963,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationConfig.html":{}}}],["constructor(crud",{"_index":2729,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["constructor(el",{"_index":1360,"title":{},"body":{"directives/DropzoneDirective.html":{},"directives/FocusDirective.html":{},"components/TabComponent.html":{}}}],["constructor(environ",{"_index":3477,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(fb",{"_index":2507,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["constructor(fileservic",{"_index":601,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["constructor(geocodeservic",{"_index":2420,"title":{},"body":{"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["constructor(host",{"_index":2310,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(iconservic",{"_index":1968,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(item",{"_index":811,"title":{},"body":{"classes/Collection.html":{}}}],["constructor(loaderservic",{"_index":1495,"title":{},"body":{"components/EntryListComponent.html":{}}}],["constructor(mapload",{"_index":1856,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["constructor(modelconfig",{"_index":1530,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["constructor(notif",{"_index":2824,"title":{},"body":{"classes/Notification.html":{}}}],["constructor(notificationservic",{"_index":1922,"title":{},"body":{"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{}}}],["constructor(popservic",{"_index":516,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/PopComponent.html":{}}}],["constructor(priv",{"_index":632,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["constructor(properti",{"_index":1574,"title":{},"body":{"classes/Field.html":{}}}],["constructor(protect",{"_index":574,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListComponent.html":{},"components/PopComponent.html":{}}}],["constructor(publ",{"_index":357,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DynamicSlotComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/icons.html":{}}}],["constructor(resourceconfig",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(rout",{"_index":2632,"title":{},"body":{"components/MenuComponent.html":{},"components/SearchbarComponent.html":{},"components/TabsComponent.html":{}}}],["constructor(sdk",{"_index":349,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/UploadComponent.html":{}}}],["constructor(symbol",{"_index":1548,"title":{},"body":{"components/ErrorComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/TypeConfigService.html":{}}}],["constructor(usedesktopnotif",{"_index":2919,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(viewcontainerref",{"_index":3634,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["contact",{"_index":4028,"title":{},"body":{"interfaces/WithLoader.html":{},"miscellaneous/variables.html":{}}}],["contain",{"_index":34,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes/field.html":{}}}],["content",{"_index":1966,"title":{},"body":{"components/IconComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["content_css",{"_index":4650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contentchildren",{"_index":3760,"title":{},"body":{"components/TabsComponent.html":{}}}],["contentchildren(tabcompon",{"_index":3764,"title":{},"body":{"components/TabsComponent.html":{}}}],["context",{"_index":2133,"title":{},"body":{"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["contextmenu",{"_index":4644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contrast",{"_index":4460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control",{"_index":40,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["control'",{"_index":2098,"title":{},"body":{"components/InputErrorsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["control.reset",{"_index":2262,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["control[field.properti",{"_index":1836,"title":{},"body":{"injectables/FormService.html":{}}}],["controlvalueaccessor",{"_index":16,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["convert",{"_index":1505,"title":{},"body":{"components/EntryListComponent.html":{}}}],["cooki",{"_index":659,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["cookiefactori",{"_index":666,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["cookiemodul",{"_index":657,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/functions.html":{}}}],["cookiemodule.forroot",{"_index":669,"title":{},"body":{"modules/AuthModule.html":{}}}],["cool",{"_index":4847,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["coolstringcompon",{"_index":4910,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["coord",{"_index":1888,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{}}}],["coords.lat",{"_index":2392,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["coords.lng",{"_index":2391,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["copi",{"_index":4479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core",{"_index":447,"title":{"additional-documentation/core-classes.html":{}},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"injectables/FormService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["core/ui/data",{"_index":4325,"title":{},"body":{"index.html":{}}}],["correct",{"_index":4848,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["count",{"_index":2990,"title":{},"body":{"classes/Pagination.html":{}}}],["cours",{"_index":1638,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{}}}],["coverag",{"_index":4145,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":70,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["create(model",{"_index":1057,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["create(rel",{"_index":3422,"title":{},"body":{"injectables/ResourceService.html":{}}}],["create/edit/delet",{"_index":904,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["create/read/update/delet",{"_index":1081,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"changelog.html":{}}}],["createclick",{"_index":3335,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["created(label",{"_index":3174,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["created.otherwis",{"_index":3430,"title":{},"body":{"injectables/ResourceService.html":{}}}],["createlabel",{"_index":1004,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["createlist",{"_index":435,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["creates/upd",{"_index":477,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["creator",{"_index":2758,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["credenti",{"_index":2493,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["crop",{"_index":4465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cross",{"_index":4632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crud",{"_index":909,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/data.html":{}}}],["crud'",{"_index":923,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud'},{'nam",{"_index":205,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["crud.compon",{"_index":3414,"title":{},"body":{"modules/ResourceModule.html":{}}}],["crud.component.html",{"_index":910,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud.component.t",{"_index":3333,"title":{},"body":{"components/ResourceCrudComponent.html":{},"coverage.html":{}}}],["crud.component.ts:32",{"_index":3337,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:34",{"_index":3339,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:36",{"_index":3338,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:38",{"_index":3340,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:40",{"_index":3350,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:42",{"_index":3352,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:44",{"_index":3351,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:46",{"_index":3341,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:48",{"_index":3343,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:50",{"_index":3336,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:56",{"_index":3354,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:57",{"_index":3353,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:60",{"_index":3348,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:64",{"_index":3347,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:75",{"_index":3346,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:80",{"_index":3349,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:93",{"_index":3345,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:97",{"_index":3344,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud/crud",{"_index":570,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{}}}],["crud/crud.compon",{"_index":1134,"title":{},"body":{"modules/DataModule.html":{}}}],["crud/crud.servic",{"_index":1135,"title":{},"body":{"modules/DataModule.html":{},"components/EntryListComponent.html":{},"injectables/ModelConfigService.html":{}}}],["crud/resourc",{"_index":3332,"title":{},"body":{"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["crudcompon",{"_index":204,"title":{"components/CrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["crudcomponent#loadentri",{"_index":3363,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crudconfig",{"_index":527,"title":{"interfaces/CrudConfig.html":{}},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["crudservic",{"_index":1038,"title":{"injectables/CrudService.html":{}},"body":{"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["current",{"_index":121,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{}}}],["cursor",{"_index":4466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom",{"_index":171,"title":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/MockupComponent.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/data.html":{}}}],["customfieldcompon",{"_index":1399,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["custominputcompon",{"_index":4823,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["customnam",{"_index":1657,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["cycl",{"_index":4852,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["da",{"_index":2857,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["darf",{"_index":4817,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["dashboard",{"_index":4452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":1409,"title":{"additional-documentation/data.html":{}},"body":{"components/DynamicSlotComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{}}}],["data.entryid",{"_index":1961,"title":{},"body":{"injectables/HistoryService.html":{}}}],["databas",{"_index":4539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datamanag",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["datamanager(environment.environ",{"_index":3536,"title":{},"body":{"injectables/SdkService.html":{}}}],["datamanager.api().emailavailable(control.value).then((avail",{"_index":4721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datamanagerid",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["datamanagerlistcompon",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["datamanagerresourc",{"_index":338,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["datamodul",{"_index":1116,"title":{"modules/DataModule.html":{}},"body":{"modules/DataModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["datamodule.forenvironment(environ",{"_index":4774,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["dataroutingmodul",{"_index":4103,"title":{},"body":{"changelog.html":{}}}],["datasourc",{"_index":3327,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["datasourceid",{"_index":3328,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["date",{"_index":1156,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["date()).format(this.symbol.resolve('moment.format.d",{"_index":3916,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date(0",{"_index":3917,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date.clon",{"_index":1310,"title":{},"body":{"interfaces/Day.html":{}}}],["date.clone().startof('day').issame(this.timespan[0].clone().startof('day",{"_index":1292,"title":{},"body":{"interfaces/Day.html":{}}}],["date.clone().startof('day').issame(this.timespan[1].clone().startof('day",{"_index":1294,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('dd",{"_index":1301,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('mm",{"_index":1295,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format(this.monthformat",{"_index":1312,"title":{},"body":{"interfaces/Day.html":{}}}],["date.isbetween(this.timespan[0",{"_index":1297,"title":{},"body":{"interfaces/Day.html":{}}}],["date.now",{"_index":2349,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["datenschutz",{"_index":4381,"title":{},"body":{"index.html":{}}}],["daterange'},{'nam",{"_index":207,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["daterangecompon",{"_index":206,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetim",{"_index":1151,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["datetime'},{'nam",{"_index":209,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["datetime.component.html",{"_index":1153,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["datetime/calendar.compon",{"_index":1804,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/daterange.compon",{"_index":1811,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/datetime.compon",{"_index":1800,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/datetime.pip",{"_index":1802,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/heatmap.compon",{"_index":1810,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/month.compon",{"_index":1801,"title":{},"body":{"modules/FormModule.html":{}}}],["datetimecompon",{"_index":208,"title":{"components/DatetimeComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetimepip",{"_index":1181,"title":{"pipes/DatetimePipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"modules/FormModule.html":{},"coverage.html":{},"overview.html":{}}}],["datum",{"_index":3914,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["day",{"_index":1173,"title":{"interfaces/Day.html":{}},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"coverage.html":{}}}],["day.clone().startof('month').startof('week",{"_index":1284,"title":{},"body":{"interfaces/Day.html":{}}}],["day.date.clon",{"_index":1250,"title":{},"body":{"interfaces/Day.html":{}}}],["day.first",{"_index":1243,"title":{},"body":{"interfaces/Day.html":{}}}],["day.format('mm",{"_index":1296,"title":{},"body":{"interfaces/Day.html":{}}}],["day.last",{"_index":1245,"title":{},"body":{"interfaces/Day.html":{}}}],["dayclick",{"_index":1230,"title":{},"body":{"interfaces/Day.html":{},"changelog.html":{}}}],["de",{"_index":3695,"title":{},"body":{"injectables/SymbolService.html":{}}}],["deactiv",{"_index":3730,"title":{},"body":{"components/TabComponent.html":{}}}],["debit",{"_index":4427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debounc",{"_index":2045,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["debouncetim",{"_index":3557,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["debouncetime(this.debounc",{"_index":2085,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["decid",{"_index":2170,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["decim",{"_index":3906,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["declar",{"_index":141,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/GeocodeService.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["decor",{"_index":105,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["decreas",{"_index":4492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deeper",{"_index":4063,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":113,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"modules/FormModule.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["defaultconfig",{"_index":2768,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["defaultconfig[properti",{"_index":2781,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["defaultentryinputcompon",{"_index":210,"title":{"components/DefaultEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultentryoutputcompon",{"_index":211,"title":{"components/DefaultEntryOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultinputcompon",{"_index":19,"title":{"components/DefaultInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["defaultinputcomponent:12",{"_index":125,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:14",{"_index":129,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:16",{"_index":128,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:18",{"_index":124,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultlocal",{"_index":3213,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["defaultoutputcompon",{"_index":214,"title":{"components/DefaultOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultplacehold",{"_index":3558,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["defaulttim",{"_index":2916,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["defin",{"_index":66,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["definit",{"_index":4886,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["del",{"_index":1048,"title":{},"body":{"injectables/CrudService.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{}}}],["del(model",{"_index":1059,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["del(rel",{"_index":3424,"title":{},"body":{"injectables/ResourceService.html":{}}}],["delay",{"_index":507,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{},"components/MenuComponent.html":{},"components/PopComponent.html":{},"components/SearchbarComponent.html":{},"miscellaneous/variables.html":{}}}],["delet",{"_index":279,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["delete(resourc",{"_index":3383,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["deletenullproperti",{"_index":3420,"title":{},"body":{"injectables/ResourceService.html":{}}}],["deleteonremov",{"_index":1005,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["demo",{"_index":4137,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes.html":{}}}],["demonstr",{"_index":4792,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["deni",{"_index":2946,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["depend",{"_index":58,"title":{"dependencies.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["deprec",{"_index":4043,"title":{},"body":{"changelog.html":{}}}],["der",{"_index":2859,"title":{},"body":{"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["desc",{"_index":2218,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"changelog.html":{}}}],["descend",{"_index":2223,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["describ",{"_index":1611,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/core-classes/field.html":{}}}],["descript",{"_index":10,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}}}],["deselect",{"_index":3740,"title":{},"body":{"components/TabComponent.html":{}}}],["desir",{"_index":2374,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["desktop",{"_index":2915,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotif",{"_index":2917,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotification(notif",{"_index":2921,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["destroy",{"_index":2586,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["determin",{"_index":1206,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ItemConfig.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{}}}],["dev",{"_index":4340,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["develop",{"_index":1006,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["diagon",{"_index":4553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dial",{"_index":4470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialog",{"_index":3123,"title":{},"body":{"components/PopComponent.html":{}}}],["diamond",{"_index":4472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["didact",{"_index":4871,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["die",{"_index":2860,"title":{},"body":{"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["dies",{"_index":635,"title":{},"body":{"injectables/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["differ",{"_index":942,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["direct",{"_index":184,"title":{"directives/AssetDirective.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{}}}],["directive/pipe/service/class/modul",{"_index":4344,"title":{},"body":{"index.html":{}}}],["directli",{"_index":400,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ResourceDeletePopComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/item.html":{}}}],["directori",{"_index":4347,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":1354,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/LoaderComponent.html":{},"components/MockupComponent.html":{},"components/SearchbarComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["disablecreatepop",{"_index":1007,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disabledragend",{"_index":1225,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledragstart",{"_index":1223,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledtyp",{"_index":3282,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["disablehead",{"_index":1544,"title":{},"body":{"components/EntryListPopComponent.html":{},"interfaces/ListConfig.html":{}}}],["disablelegaci",{"_index":598,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["disablelistpop",{"_index":1008,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disableselect",{"_index":1009,"title":{},"body":{"interfaces/CrudConfig.html":{},"changelog.html":{}}}],["disableselectswitch",{"_index":1010,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disablestrategi",{"_index":3311,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["disabletim",{"_index":1157,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["disableupd",{"_index":1920,"title":{},"body":{"injectables/HistoryService.html":{}}}],["disableupdates(key",{"_index":1924,"title":{},"body":{"injectables/HistoryService.html":{}}}],["discuss",{"_index":4855,"title":{},"body":{"additional-documentation/ui.html":{}}}],["display",{"_index":1158,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["displayaccount",{"_index":3886,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displayd",{"_index":3887,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displaydate(tim",{"_index":3891,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["dist",{"_index":4346,"title":{},"body":{"index.html":{}}}],["distinctuntilchang",{"_index":3588,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["div",{"_index":3036,"title":{},"body":{"components/PaginationComponent.html":{}}}],["divid",{"_index":4473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dm",{"_index":3206,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dm::delet",{"_index":3208,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dm::edit",{"_index":3207,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dmaccount",{"_index":3251,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dmasset",{"_index":592,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{}}}],["dmassetlist",{"_index":1668,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["dmassetlist.getallitem",{"_index":1724,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["dmassetresourc",{"_index":1670,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["dmclient",{"_index":3305,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dmuser",{"_index":3287,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dndmodul",{"_index":1131,"title":{},"body":{"modules/DataModule.html":{},"modules/SelectModule.html":{}}}],["doc",{"_index":1582,"title":{},"body":{"classes/Field.html":{},"changelog.html":{}}}],["document",{"_index":4146,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/list.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["domsanit",{"_index":3462,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["dosomethingriski",{"_index":2862,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["down",{"_index":4422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["download",{"_index":4458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["drag",{"_index":1132,"title":{},"body":{"modules/DataModule.html":{},"interfaces/Day.html":{},"modules/SelectModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["dragend",{"_index":2384,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["draggabl",{"_index":1200,"title":{},"body":{"interfaces/Day.html":{}}}],["dragleav",{"_index":1358,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragleave(",{"_index":1368,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragov",{"_index":1359,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragover(",{"_index":1371,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragstart(day",{"_index":1260,"title":{},"body":{"interfaces/Day.html":{}}}],["drawer",{"_index":3124,"title":{},"body":{"components/PopComponent.html":{}}}],["drop",{"_index":593,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/DataModule.html":{},"directives/DropzoneDirective.html":{},"modules/SelectModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["drop(",{"_index":1373,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dropday(day",{"_index":1241,"title":{},"body":{"interfaces/Day.html":{}}}],["dropdown",{"_index":1021,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ListHeaderComponent.html":{}}}],["dropzone/dropzone.direct",{"_index":1759,"title":{},"body":{"modules/FilesModule.html":{}}}],["dropzonedirect",{"_index":301,"title":{"directives/DropzoneDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dublic",{"_index":2707,"title":{},"body":{"components/MockupComponent.html":{}}}],["due",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["dumbbel",{"_index":4620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplic",{"_index":1664,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"injectables/SymbolService.html":{},"interfaces/Upload.html":{}}}],["dure",{"_index":2518,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["dynam",{"_index":217,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["dynamicrackcompon",{"_index":215,"title":{"components/DynamicRackComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcompon",{"_index":216,"title":{"components/DynamicSlotComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcomponent:11",{"_index":2072,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:14",{"_index":2071,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:18",{"_index":2062,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["e",{"_index":165,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Day.html":{},"injectables/HistoryService.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/item.html":{}}}],["e.clipboarddata).getdata('text",{"_index":3594,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["e.data.yt",{"_index":4705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.datatransfer.fil",{"_index":1383,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.datatransfer.files.length",{"_index":1384,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.display",{"_index":4897,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["e.g",{"_index":56,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthGuard.html":{},"classes/Config.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Symbol.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["e.id",{"_index":4896,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["e.key",{"_index":3615,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["e.preventdefault",{"_index":1263,"title":{},"body":{"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/SearchbarComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["e.stopimmediatepropag",{"_index":2285,"title":{},"body":{"components/ListItemsComponent.html":{},"components/SearchbarComponent.html":{},"components/ToolbarComponent.html":{}}}],["e.stoppropag",{"_index":1379,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListItemsComponent.html":{},"components/SearchbarComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["e.target",{"_index":3976,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.fil",{"_index":3977,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.files.length",{"_index":3978,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.localnam",{"_index":3836,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e.toel",{"_index":3838,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e2",{"_index":4377,"title":{},"body":{"index.html":{}}}],["each",{"_index":1043,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["easi",{"_index":4046,"title":{},"body":{"changelog.html":{},"additional-documentation/core-classes/list.html":{}}}],["ec",{"_index":27,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["ec.api",{"_index":344,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["ec.asset",{"_index":3271,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ec.compon",{"_index":1813,"title":{},"body":{"injectables/FormService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes.html":{}}}],["ec.components//src/_",{"_index":4118,"title":{},"body":{"changelog.html":{}}}],["ec.components/_",{"_index":4116,"title":{},"body":{"changelog.html":{}}}],["ec.components/ac",{"_index":4864,"title":{},"body":{"additional-documentation/ace.html":{}}}],["ec.components/cor",{"_index":563,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/EntryListPopComponent.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/PaginationComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"index.html":{},"additional-documentation/core-classes.html":{}}}],["ec.components/core/src/collection/collect",{"_index":2344,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{}}}],["ec.components/core/src/config/config",{"_index":2760,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["ec.components/core/src/config/field",{"_index":2761,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["ec.components/core/src/field/field",{"_index":1337,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["ec.components/core/src/form/form",{"_index":1830,"title":{},"body":{"injectables/FormService.html":{},"components/InputComponent.html":{}}}],["ec.components/core/src/item/item",{"_index":1344,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"interfaces/Upload.html":{}}}],["ec.components/core/src/list/list",{"_index":1036,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{}}}],["ec.components/core/src/selection/select",{"_index":953,"title":{},"body":{"components/CrudComponent.html":{},"components/ListHeaderComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/data",{"_index":564,"title":{},"body":{"components/AssetListPopComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/data/src/entri",{"_index":3190,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ec.components/data/src/resourc",{"_index":1946,"title":{},"body":{"injectables/HistoryService.html":{}}}],["ec.components/data/src/sdk/sdk.servic",{"_index":353,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthGuard.html":{},"components/DefaultEntryInputComponent.html":{}}}],["ec.components/loc",{"_index":4285,"title":{},"body":{"dependencies.html":{}}}],["ec.components/medium",{"_index":4287,"title":{},"body":{"dependencies.html":{},"additional-documentation/medium.html":{}}}],["ec.components/styl",{"_index":4091,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/style/components.scss\";5",{"_index":4760,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/tinymc",{"_index":4288,"title":{},"body":{"dependencies.html":{},"additional-documentation/tinymce.html":{}}}],["ec.components/ui",{"_index":135,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SearchbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["ec.components/ui/src/form/default",{"_index":354,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["ec.components/ui/src/icon/emoji",{"_index":1978,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["ec.components/ui/src/loader/loader.compon",{"_index":954,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/ui/src/loader/loader.servic",{"_index":955,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/ui/src/notifications/notif",{"_index":963,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/UploadComponent.html":{}}}],["ec.components/ui/src/notifications/notifications.compon",{"_index":1037,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["ec.components/ui/src/notifications/notifications.servic",{"_index":631,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/ui/src/notifications/with",{"_index":961,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/UploadComponent.html":{}}}],["ec.components/ui/src/pop/pop.compon",{"_index":565,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/UploadComponent.html":{}}}],["ec.components/ui/src/pop/pop.servic",{"_index":566,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{}}}],["ec.components/ui/src/symbol/symbol.servic",{"_index":960,"title":{},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["ec.components/ui/src/ui.modul",{"_index":660,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{}}}],["ec.components/uidemo",{"_index":4861,"title":{},"body":{"additional-documentation/ui.html":{}}}],["ec.list",{"_index":2705,"title":{},"body":{"components/MockupComponent.html":{}}}],["ec.list.card",{"_index":2713,"title":{},"body":{"components/MockupComponent.html":{}}}],["ec.list.simpl",{"_index":2714,"title":{},"body":{"components/MockupComponent.html":{}}}],["ec.sdk",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{},"classes/Field.html":{},"injectables/SdkService.html":{},"changelog.html":{},"dependencies.html":{}}}],["ec.sdk/lib/account",{"_index":3511,"title":{},"body":{"injectables/SdkService.html":{}}}],["ec.sdk/lib/cor",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/datamanag",{"_index":3512,"title":{},"body":{"injectables/SdkService.html":{}}}],["ec.sdk/lib/publicapi",{"_index":412,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{}}}],["ec.sdk/lib/resources/accounts/accountresourc",{"_index":2481,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/resources/datamanager/datamanagerresourc",{"_index":356,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/resources/datamanager/modelresourc",{"_index":1945,"title":{},"body":{"injectables/HistoryService.html":{}}}],["ec.sdk/lib/resources/listresourc",{"_index":1452,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetlist",{"_index":1669,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetresourc",{"_index":1671,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/entrylist",{"_index":1078,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/resources/publicapi/entryresourc",{"_index":1077,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetlist",{"_index":1673,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetresourc",{"_index":410,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/resourc",{"_index":3191,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{}}}],["ec.sdk/lib/sess",{"_index":3513,"title":{},"body":{"injectables/SdkService.html":{}}}],["ecasset",{"_index":369,"title":{},"body":{"directives/AssetDirective.html":{},"changelog.html":{}}}],["ecasset]'},{'nam",{"_index":300,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecdropzon",{"_index":1353,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ecdropzone]'},{'nam",{"_index":302,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecentri",{"_index":1424,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"changelog.html":{}}}],["ecentries]'},{'nam",{"_index":304,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecentry]'},{'nam",{"_index":306,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecfocu",{"_index":1768,"title":{},"body":{"directives/FocusDirective.html":{}}}],["ecfocus]'},{'nam",{"_index":308,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecicon",{"_index":1998,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ecimag",{"_index":2007,"title":{},"body":{"directives/ImageDirective.html":{}}}],["ecimage]'},{'nam",{"_index":311,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["ecpublicasset",{"_index":4077,"title":{},"body":{"changelog.html":{}}}],["ecvc",{"_index":3861,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["edg",{"_index":1257,"title":{},"body":{"interfaces/Day.html":{}}}],["edit",{"_index":498,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/ToolbarComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["editfilt",{"_index":2235,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["editfilter(pop",{"_index":2242,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["editor",{"_index":13,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["editor#mediumeditor",{"_index":2598,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor'},{'nam",{"_index":259,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["editor,[ec",{"_index":221,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["editor.addbutton('imag",{"_index":4717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor.addbutton('youtub",{"_index":4697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor.caret?.flow?.typ",{"_index":3881,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["editor.caret?.phrasing?.typ",{"_index":3882,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["editor.compon",{"_index":2613,"title":{},"body":{"modules/MediumModule.html":{}}}],["editor.component.html",{"_index":2577,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.scss",{"_index":2576,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.t",{"_index":2572,"title":{},"body":{"components/MediumEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:35",{"_index":2580,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":2582,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":2583,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":2584,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":2591,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:45",{"_index":2595,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":2592,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":2594,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":2587,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":2585,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:68",{"_index":2590,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:75",{"_index":2593,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:78",{"_index":2588,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:82",{"_index":2589,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.destroy",{"_index":3842,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor.getcont",{"_index":3826,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor.insertcont",{"_index":4716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor.on('chang",{"_index":164,"title":{},"body":{"components/AceComponent.html":{}}}],["editor.setcontent(this.valu",{"_index":2606,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["editor.setvalue(this.valu",{"_index":180,"title":{},"body":{"components/AceComponent.html":{}}}],["editor.windowmanager.open",{"_index":4700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor/dist/js/medium",{"_index":2596,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor/editor.compon",{"_index":3874,"title":{},"body":{"components/ToolbarComponent.html":{},"modules/VcModule.html":{}}}],["editor/src/medium",{"_index":2571,"title":{},"body":{"components/MediumEditorComponent.html":{},"coverage.html":{}}}],["editor/src/medium.module.t",{"_index":2612,"title":{},"body":{"modules/MediumModule.html":{}}}],["editor?.caret?.phrasing?.typ",{"_index":3879,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["editor[0",{"_index":3833,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor]'},{'nam",{"_index":222,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["editorcompon",{"_index":219,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/VcModule.html":{},"coverage.html":{},"overview.html":{}}}],["editorset",{"_index":3823,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ein",{"_index":3111,"title":{},"body":{"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["einfach",{"_index":4667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["einfügen",{"_index":4701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eingab",{"_index":4410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eingeloggt",{"_index":643,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["einleitung",{"_index":4680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eject",{"_index":4581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["el",{"_index":1362,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{},"components/TabComponent.html":{}}}],["el.tag",{"_index":3880,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["element",{"_index":108,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["elementref",{"_index":104,"title":{},"body":{"components/AceComponent.html":{},"directives/DropzoneDirective.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["elimin",{"_index":4859,"title":{},"body":{"additional-documentation/ui.html":{}}}],["email",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["emailavail",{"_index":2550,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emaillabel",{"_index":2502,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["emailplacehold",{"_index":2503,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["emailunavail",{"_index":4405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailvalid",{"_index":4273,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["embed",{"_index":1398,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["embedd",{"_index":1975,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["emit",{"_index":460,"title":{},"body":{"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["emit(host",{"_index":2867,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["emit(notif",{"_index":2926,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["emitt",{"_index":534,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/NotificationsService.html":{}}}],["emoji",{"_index":4737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emojiicon",{"_index":1977,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/icons.html":{}}}],["empti",{"_index":524,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ListConfig.html":{},"components/MediumEditorComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["en",{"_index":3711,"title":{},"body":{"injectables/SymbolService.html":{}}}],["enabl",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{},"index.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["enableupd",{"_index":1921,"title":{},"body":{"injectables/HistoryService.html":{}}}],["enableupdates(resourc",{"_index":1929,"title":{},"body":{"injectables/HistoryService.html":{}}}],["encapsul",{"_index":2139,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["end",{"_index":1224,"title":{},"body":{"interfaces/Day.html":{},"index.html":{}}}],["endless",{"_index":1429,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["enforc",{"_index":4783,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["enhanc",{"_index":3704,"title":{},"body":{"injectables/SymbolService.html":{}}}],["enough",{"_index":4763,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["enrich",{"_index":3196,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ensur",{"_index":3104,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["enter",{"_index":3377,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["entiti",{"_index":2122,"title":{},"body":{"interfaces/ItemConfig.html":{},"additional-documentation/core-classes/item.html":{}}}],["entri",{"_index":212,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/data.html":{}}}],["entries/entries.direct",{"_index":1136,"title":{},"body":{"modules/DataModule.html":{}}}],["entriesdirect",{"_index":303,"title":{"directives/EntriesDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entry.del().then((r",{"_index":1115,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["entry.getimagethumburl(properti",{"_index":3907,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.gettitle(properti",{"_index":3918,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.sav",{"_index":1089,"title":{},"body":{"injectables/CrudService.html":{},"injectables/SymbolPipe.html":{},"interfaces/Update.html":{}}}],["entry.save().then((_entri",{"_index":1103,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["entry/entry.direct",{"_index":1141,"title":{},"body":{"modules/DataModule.html":{}}}],["entry[key",{"_index":1099,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["entrycompon",{"_index":329,"title":{},"body":{"modules/AceModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["entrydirect",{"_index":305,"title":{"directives/EntryDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryformcompon",{"_index":223,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryformcomponent.deleteentri",{"_index":4093,"title":{},"body":{"changelog.html":{}}}],["entryid",{"_index":1475,"title":{},"body":{"directives/EntryDirective.html":{},"injectables/ResourceService.html":{}}}],["entrylist",{"_index":481,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["entrylist(this.model",{"_index":1527,"title":{},"body":{"components/EntryListComponent.html":{}}}],["entrylistcompon",{"_index":225,"title":{"components/EntryListComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrylistpopcompon",{"_index":226,"title":{"components/EntryListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrypop",{"_index":911,"title":{},"body":{"components/CrudComponent.html":{}}}],["entrypopcompon",{"_index":227,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryresourc",{"_index":1060,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{}}}],["entryselectcompon",{"_index":228,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["env",{"_index":3498,"title":{},"body":{"injectables/SdkService.html":{}}}],["env=prod",{"_index":4348,"title":{},"body":{"index.html":{}}}],["env=stag",{"_index":4349,"title":{},"body":{"index.html":{}}}],["envelop",{"_index":4474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environ",{"_index":673,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["environment.clientid",{"_index":3528,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.datamanagerid",{"_index":3531,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.environ",{"_index":3538,"title":{},"body":{"injectables/SdkService.html":{}}}],["environments/environ",{"_index":4771,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["equal",{"_index":976,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["equalis",{"_index":4475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eras",{"_index":4476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erhalten",{"_index":3115,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["err",{"_index":990,"title":{},"body":{"components/CrudComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["err.messag",{"_index":2552,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["error",{"_index":616,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["error'},{'nam",{"_index":230,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["error('cannot",{"_index":422,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{}}}],["error('get",{"_index":3519,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('no",{"_index":3514,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('th",{"_index":3717,"title":{},"body":{"injectables/SymbolService.html":{}}}],["error(`cannot",{"_index":3016,"title":{},"body":{"classes/Pagination.html":{}}}],["error.cod",{"_index":1559,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.code}}{{error.datapath}}{{error?.message}}{{error.detail",{"_index":1563,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":1547,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.datapath",{"_index":1560,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.detail",{"_index":1562,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.messag",{"_index":2112,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["error/error.compon",{"_index":2911,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["error?.messag",{"_index":1561,"title":{},"body":{"components/ErrorComponent.html":{}}}],["errorcompon",{"_index":229,"title":{"components/ErrorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormessag",{"_index":2497,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["errors'},{'nam",{"_index":238,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["errors.compon",{"_index":2119,"title":{},"body":{"modules/IoModule.html":{}}}],["errors.component.html",{"_index":2100,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.t",{"_index":2097,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["errors.component.ts:12",{"_index":2102,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:14",{"_index":2106,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:18",{"_index":2103,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors/input",{"_index":2096,"title":{},"body":{"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["errs.push",{"_index":2111,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["erstellt",{"_index":4809,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["es2015",{"_index":4350,"title":{},"body":{"index.html":{}}}],["es6",{"_index":1176,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{}}}],["escap",{"_index":3151,"title":{},"body":{"injectables/PopService.html":{}}}],["etc",{"_index":1581,"title":{},"body":{"classes/Field.html":{},"components/ListItemsComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["euro",{"_index":4555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["even",{"_index":1017,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["event",{"_index":387,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["event.key",{"_index":3158,"title":{},"body":{"injectables/PopService.html":{}}}],["event.keycod",{"_index":3156,"title":{},"body":{"injectables/PopService.html":{}}}],["eventemitt",{"_index":388,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/core-classes.html":{}}}],["eventemitter.t",{"_index":896,"title":{},"body":{"classes/Config.html":{}}}],["eventsourc",{"_index":1919,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventu",{"_index":3981,"title":{},"body":{"components/UploadComponent.html":{},"index.html":{}}}],["everyth",{"_index":2719,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{}}}],["everytim",{"_index":1076,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["exact",{"_index":1184,"title":{},"body":{"pipes/DatetimePipe.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"injectables/TypeConfigService.html":{}}}],["exampl",{"_index":7,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["exclud",{"_index":4365,"title":{},"body":{"index.html":{}}}],["execut",{"_index":4375,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1072,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["expand",{"_index":4477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect",{"_index":139,"title":{},"body":{"components/AceComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ResourceDeletePopComponent.html":{},"interfaces/Symbol.html":{},"miscellaneous/variables.html":{}}}],["experiment",{"_index":2229,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["explicitli",{"_index":4364,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["export",{"_index":145,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["exporta",{"_index":413,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["expos",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{}}}],["exposur",{"_index":4478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extend",{"_index":18,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FormConfig.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["extens",{"_index":493,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FormConfig.html":{}}}],["extensions/modes/them",{"_index":4868,"title":{},"body":{"additional-documentation/ace.html":{}}}],["extern",{"_index":1029,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Pagination.html":{}}}],["extra",{"_index":495,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"additional-documentation/core-classes/form.html":{}}}],["extract",{"_index":1824,"title":{},"body":{"injectables/FormService.html":{}}}],["ey",{"_index":4486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f.name",{"_index":4003,"title":{},"body":{"components/UploadComponent.html":{}}}],["f]{12}$/i",{"_index":3203,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["f]{3",{"_index":3201,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["f]{4",{"_index":3199,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["f]{8",{"_index":3198,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["facebook",{"_index":4593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factori",{"_index":4600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fail",{"_index":627,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Collection.html":{},"index.html":{}}}],["failiur",{"_index":2880,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["faktor",{"_index":4813,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["fall",{"_index":1030,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fallback",{"_index":2160,"title":{},"body":{"components/ListComponent.html":{}}}],["fals",{"_index":417,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"modules/NotificationsModule.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["fancier",{"_index":3850,"title":{},"body":{"components/ToggleComponent.html":{}}}],["fax",{"_index":4601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fb",{"_index":2510,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["featur",{"_index":2870,"title":{},"body":{"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["feature=oembed&rel=0",{"_index":4715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fehler",{"_index":2864,"title":{},"body":{"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["feld",{"_index":4408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff5353",{"_index":4663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffff8d",{"_index":4664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":3197,"title":{},"body":{"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["ffnungszeiten",{"_index":4828,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["field",{"_index":41,"title":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"directives/SlotHostDirective.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["field'",{"_index":1600,"title":{},"body":{"classes/Field.html":{}}}],["field('nam",{"_index":1624,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.compon",{"_index":1400,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["field.display(nam",{"_index":1632,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.form",{"_index":1833,"title":{},"body":{"injectables/FormService.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["field.group(nam",{"_index":1633,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.label",{"_index":2263,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.maxitems||10",{"_index":1346,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["field.properti",{"_index":2264,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.queryfilt",{"_index":1516,"title":{},"body":{"components/EntryListComponent.html":{}}}],["field.queryfilter(valu",{"_index":1517,"title":{},"body":{"components/EntryListComponent.html":{}}}],["field.requir",{"_index":1844,"title":{},"body":{"injectables/FormService.html":{}}}],["field.resolve({value:{name:'bobbi",{"_index":1630,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.sort(nam",{"_index":1635,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.title).filter(field",{"_index":3224,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["field.typ",{"_index":363,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["field.valid",{"_index":1828,"title":{},"body":{"injectables/FormService.html":{}}}],["field.validate(control.valu",{"_index":1847,"title":{},"body":{"injectables/FormService.html":{}}}],["field[0",{"_index":3225,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["fieldconfig",{"_index":1652,"title":{"interfaces/FieldConfig.html":{}},"body":{"interfaces/FieldConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"additional-documentation/core-classes/item.html":{}}}],["fieldconfig).then((field",{"_index":2816,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[properti",{"_index":2794,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfigproperti",{"_index":1565,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"additional-documentation/core-classes/field.html":{}}}],["fieldfilt",{"_index":471,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["fieldhost",{"_index":1405,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldhostdirect",{"_index":1413,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldlabel",{"_index":2236,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["fieldlabel(field",{"_index":2245,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["fieldnam",{"_index":1658,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["fields.filter((field",{"_index":4025,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pip",{"_index":1798,"title":{},"body":{"modules/FormModule.html":{}}}],["fields.pipe.t",{"_index":4020,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["fields.pipe.ts:10",{"_index":4023,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fieldvalid",{"_index":2541,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fieldvalidators.email",{"_index":2549,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["file.servic",{"_index":572,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/FilesModule.html":{},"components/UploadComponent.html":{}}}],["fileinput",{"_index":3942,"title":{},"body":{"components/UploadComponent.html":{}}}],["filelist",{"_index":1689,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["filenam",{"_index":1667,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["fileopt",{"_index":1655,"title":{"interfaces/FileOptions.html":{}},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"coverage.html":{}}}],["files.length",{"_index":1690,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["files/files.modul",{"_index":1142,"title":{},"body":{"modules/DataModule.html":{}}}],["fileservic",{"_index":520,"title":{"injectables/FileService.html":{}},"body":{"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filesmodul",{"_index":1122,"title":{"modules/FilesModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filestoupload",{"_index":3943,"title":{},"body":{"components/UploadComponent.html":{}}}],["fill",{"_index":4614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill(0",{"_index":1287,"title":{},"body":{"interfaces/Day.html":{}}}],["filter",{"_index":436,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/list.html":{}}}],["filter((item",{"_index":3665,"title":{},"body":{"classes/Sorter.html":{}}}],["filter(properti",{"_index":465,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{},"injectables/ModelConfigService.html":{}}}],["filter(rout",{"_index":2675,"title":{},"body":{"components/MenuComponent.html":{}}}],["filter[key",{"_index":1085,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["filterlist",{"_index":3555,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["filterlist(valu",{"_index":3573,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["filteroper",{"_index":1566,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{}}}],["filteropt",{"_index":1437,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["filterpopclass",{"_index":1567,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["find",{"_index":168,"title":{},"body":{"components/AceComponent.html":{},"injectables/SymbolService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["finish",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["fire",{"_index":386,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["first",{"_index":547,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["fit",{"_index":1069,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fix",{"_index":4094,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["flag",{"_index":825,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"injectables/NotificationsService.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["flash",{"_index":4480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flat",{"_index":4334,"title":{},"body":{"index.html":{}}}],["flexibl",{"_index":2174,"title":{},"body":{"components/ListComponent.html":{},"changelog.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["flip",{"_index":1370,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/LoginFormComponent.html":{},"injectables/SdkService.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":4801,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["fn",{"_index":89,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["focu",{"_index":1762,"title":{"interfaces/Focus.html":{}},"body":{"interfaces/Focus.html":{},"components/SearchbarComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["focus",{"_index":3579,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["focus/focus.direct",{"_index":4009,"title":{},"body":{"modules/UtilityModule.html":{}}}],["focusdirect",{"_index":307,"title":{"directives/FocusDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["focusev",{"_index":1764,"title":{},"body":{"interfaces/Focus.html":{},"components/SearchbarComponent.html":{}}}],["focusout",{"_index":3866,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["focusout(",{"_index":3870,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["folder",{"_index":4131,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["follow",{"_index":1988,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["font",{"_index":3680,"title":{},"body":{"interfaces/Symbol.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":3136,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["forcereload",{"_index":1732,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["foreach((field",{"_index":1834,"title":{},"body":{"injectables/FormService.html":{}}}],["forecolor",{"_index":4693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forenviron",{"_index":4777,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["forenvironment(environ",{"_index":1149,"title":{},"body":{"modules/DataModule.html":{}}}],["forev",{"_index":2837,"title":{},"body":{"classes/Notification.html":{}}}],["form",{"_index":112,"title":{"additional-documentation/core-classes/form.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/form.html":{}}}],["form'",{"_index":2068,"title":{},"body":{"components/InputComponent.html":{}}}],["form'},{'nam",{"_index":224,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["form(nul",{"_index":4907,"title":{},"body":{"additional-documentation/core-classes/form.html":{}}}],["form.compon",{"_index":174,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FormModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"modules/UtilityModule.html":{},"changelog.html":{}}}],["form.component.html",{"_index":2496,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.t",{"_index":2492,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:17",{"_index":2537,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:19",{"_index":2540,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:21",{"_index":2536,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:23",{"_index":2527,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:25",{"_index":2525,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:27",{"_index":2519,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:29",{"_index":2524,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:31",{"_index":2515,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:33",{"_index":2517,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:35",{"_index":2521,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:37",{"_index":2522,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:39",{"_index":2513,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:41",{"_index":2512,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:43",{"_index":2509,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:50",{"_index":2532,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:58",{"_index":2535,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:66",{"_index":2529,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:71",{"_index":2533,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.fields.filter((field",{"_index":1832,"title":{},"body":{"injectables/FormService.html":{}}}],["form.servic",{"_index":1797,"title":{},"body":{"modules/FormModule.html":{}}}],["form.t",{"_index":4226,"title":{},"body":{"coverage.html":{}}}],["form/admin",{"_index":333,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"modules/DataModule.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/default",{"_index":1137,"title":{},"body":{"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/entri",{"_index":951,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"coverage.html":{}}}],["form/form.compon",{"_index":2255,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["form/form.modul",{"_index":2293,"title":{},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["form/login",{"_index":2491,"title":{},"body":{"components/LoginFormComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{}}}],["form/resourc",{"_index":3356,"title":{},"body":{"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["format",{"_index":1201,"title":{},"body":{"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["formattedtext",{"_index":3904,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["formbuild",{"_index":2508,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formcompon",{"_index":231,"title":{"additional-documentation/ui/formcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["formcomponent#input",{"_index":2069,"title":{},"body":{"components/InputComponent.html":{}}}],["formcomponent.submit",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["formconfig",{"_index":1777,"title":{"interfaces/FormConfig.html":{}},"body":{"interfaces/FormConfig.html":{},"coverage.html":{}}}],["formcontrol",{"_index":122,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/LocationPickerComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["formcontrol(form.getvalue(field.properti",{"_index":1837,"title":{},"body":{"injectables/FormService.html":{}}}],["formdata",{"_index":1687,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["former",{"_index":4085,"title":{},"body":{"changelog.html":{}}}],["formgroup",{"_index":127,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{}}}],["formgroup(control",{"_index":1842,"title":{},"body":{"injectables/FormService.html":{}}}],["formmodul",{"_index":1781,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["formservic",{"_index":1794,"title":{"injectables/FormService.html":{}},"body":{"modules/FormModule.html":{},"injectables/FormService.html":{},"coverage.html":{},"overview.html":{}}}],["formsmodul",{"_index":1129,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{}}}],["forwardref",{"_index":131,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["found",{"_index":615,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["foundat",{"_index":4874,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["fourth",{"_index":4309,"title":{},"body":{"index.html":{}}}],["fox",{"_index":2709,"title":{},"body":{"components/MockupComponent.html":{}}}],["frage",{"_index":4684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frame",{"_index":4481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frompromis",{"_index":1875,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["frompromise(this.maploader.load",{"_index":1895,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["fromsearch",{"_index":2426,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["front",{"_index":4510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fruit",{"_index":2178,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["früchte",{"_index":4917,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["full",{"_index":539,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["fullscreen",{"_index":4641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fun",{"_index":4787,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["function",{"_index":472,"title":{"miscellaneous/functions.html":{}},"body":{"components/AssetListComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{}}}],["fundament",{"_index":804,"title":{},"body":{"classes/Collection.html":{}}}],["further",{"_index":2834,"title":{},"body":{"classes/Notification.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{},"index.html":{}}}],["g",{"_index":4740,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["gener",{"_index":453,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"components/InputErrorsComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"components/SearchbarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["generateconfig",{"_index":2724,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generateconfig(model",{"_index":2733,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generatefieldconfig",{"_index":2725,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generatefieldconfig(model",{"_index":2735,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["geo",{"_index":2429,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["geocod",{"_index":1851,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode.servic",{"_index":2405,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["geocodelatlng",{"_index":1853,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodelatlng(geocod",{"_index":1864,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocoder.geocod",{"_index":1900,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservic",{"_index":1848,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["get",{"_index":2830,"title":{"changelog.html":{},"index.html":{}},"body":{"classes/Notification.html":{},"index.html":{},"additional-documentation/core-classes/list.html":{}}}],["get(nam",{"_index":3698,"title":{},"body":{"injectables/SymbolService.html":{}}}],["get(properti",{"_index":2740,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["get(relationnam",{"_index":3177,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["get(typ",{"_index":3896,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["getaccount",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getaccount(api",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getalgorithm",{"_index":3642,"title":{},"body":{"classes/Sorter.html":{}}}],["getalgorithm(item",{"_index":3647,"title":{},"body":{"classes/Sorter.html":{}}}],["getallowedmodelmethod",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedmodelmethods(model",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethod",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethods(rel",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["getapi",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getapi(email",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcolor",{"_index":2621,"title":{},"body":{"components/MenuComponent.html":{}}}],["getcolor(level",{"_index":2652,"title":{},"body":{"components/MenuComponent.html":{}}}],["getconfig",{"_index":3188,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["getdaycolor(_mo",{"_index":1267,"title":{},"body":{"interfaces/Day.html":{}}}],["getdayheat(_mo",{"_index":1270,"title":{},"body":{"interfaces/Day.html":{}}}],["geterror",{"_index":2101,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["getformdata",{"_index":1735,"title":{},"body":{"injectables/FileService.html":{}}}],["getformdata(fil",{"_index":1688,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["getgroup",{"_index":1815,"title":{},"body":{"injectables/FormService.html":{}}}],["getgroup(form",{"_index":1820,"title":{},"body":{"injectables/FormService.html":{}}}],["getgrouprel",{"_index":508,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["getitemcolor",{"_index":2622,"title":{},"body":{"components/MenuComponent.html":{}}}],["getitemcolor(item",{"_index":2654,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlevel",{"_index":2623,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlevel(level",{"_index":2656,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlightmodel",{"_index":2726,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getlightmodel(model",{"_index":2745,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getmonth(day",{"_index":1282,"title":{},"body":{"interfaces/Day.html":{}}}],["getnearestaddress",{"_index":1854,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getnearestaddress(loc",{"_index":1869,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getpag",{"_index":2959,"title":{},"body":{"classes/Pagination.html":{}}}],["getpath",{"_index":2624,"title":{},"body":{"components/MenuComponent.html":{}}}],["getpath(item",{"_index":2659,"title":{},"body":{"components/MenuComponent.html":{}}}],["getpermiss",{"_index":2918,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getplacehold",{"_index":1573,"title":{},"body":{"classes/Field.html":{}}}],["getpopclass",{"_index":913,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["getroot",{"_index":3506,"title":{},"body":{"injectables/SdkService.html":{}}}],["getschema",{"_index":3474,"title":{},"body":{"injectables/SdkService.html":{}}}],["getschema(model",{"_index":3481,"title":{},"body":{"injectables/SdkService.html":{}}}],["getter",{"_index":885,"title":{},"body":{"classes/Config.html":{},"injectables/SdkService.html":{},"additional-documentation/core-classes/form.html":{}}}],["getvalid",{"_index":1816,"title":{},"body":{"injectables/FormService.html":{}}}],["getvalidators(field",{"_index":1822,"title":{},"body":{"injectables/FormService.html":{}}}],["git+https://github.com/entrecode/x.ui.git#develop",{"_index":4300,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":4615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["give",{"_index":1068,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["given",{"_index":75,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["glass",{"_index":4587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["global",{"_index":2322,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["globalload",{"_index":2328,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["globe",{"_index":4503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glue",{"_index":4616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glyph",{"_index":3681,"title":{},"body":{"interfaces/Symbol.html":{}}}],["go",{"_index":4379,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["googl",{"_index":1850,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["google.maps.geocod",{"_index":1907,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.places.autocomplete(el",{"_index":1881,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["googlemap",{"_index":2458,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["gp",{"_index":4504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradient",{"_index":4482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":2925,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["graph",{"_index":4440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":4656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":42,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["group.addcontrol(field.properti",{"_index":1843,"title":{},"body":{"injectables/FormService.html":{}}}],["group.nam",{"_index":3249,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["group.pip",{"_index":2295,"title":{},"body":{"modules/ListModule.html":{}}}],["group.valu",{"_index":487,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{}}}],["groupchang",{"_index":505,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/UploadComponent.html":{}}}],["groupdat",{"_index":3888,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["groupid",{"_index":3331,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["groupnam",{"_index":2706,"title":{},"body":{"components/MockupComponent.html":{}}}],["grouppip",{"_index":1183,"title":{"pipes/GroupPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"modules/ListModule.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":1433,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["größer",{"_index":4814,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["guard",{"_index":613,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.servic",{"_index":664,"title":{},"body":{"modules/AuthModule.html":{}}}],["guard.service.t",{"_index":612,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["guard.service.ts:12",{"_index":624,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.service.ts:17",{"_index":625,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guid",{"_index":4311,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["h",{"_index":2184,"title":{},"body":{"components/ListComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["h2",{"_index":4672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h3",{"_index":4673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h4",{"_index":4675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h5",{"_index":4677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haben",{"_index":3109,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["hacki",{"_index":2094,"title":{},"body":{"components/InputComponent.html":{}}}],["halfr",{"_index":1944,"title":{},"body":{"injectables/HistoryService.html":{}}}],["hamburg",{"_index":4514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hand",{"_index":4467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handl",{"_index":496,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListComponent.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["handler",{"_index":2157,"title":{},"body":{"components/ListComponent.html":{}}}],["happen",{"_index":1080,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["harri",{"_index":4506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["has(item",{"_index":833,"title":{},"body":{"classes/Collection.html":{}}}],["hasactivepath",{"_index":2625,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasactivepath(item",{"_index":2661,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasal",{"_index":807,"title":{},"body":{"classes/Collection.html":{}}}],["hasall(item",{"_index":836,"title":{},"body":{"classes/Collection.html":{}}}],["hasentri",{"_index":3227,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["hash",{"_index":4483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hasmethod",{"_index":914,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["hasmethod(method",{"_index":935,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["haspassword",{"_index":3240,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["haspendingemail",{"_index":3242,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["have",{"_index":337,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/LoaderService.html":{}}}],["header",{"_index":1226,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["header'},{'nam",{"_index":241,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["header.compon",{"_index":2296,"title":{},"body":{"modules/ListModule.html":{}}}],["header.component.html",{"_index":2233,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.t",{"_index":2232,"title":{},"body":{"components/ListHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:15",{"_index":2238,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:17",{"_index":2239,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:19",{"_index":2253,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:21",{"_index":2249,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:24",{"_index":2243,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:30",{"_index":2241,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:34",{"_index":2248,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:38",{"_index":2246,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header/list",{"_index":2231,"title":{},"body":{"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["headlin",{"_index":2840,"title":{},"body":{"classes/Notification.html":{}}}],["health",{"_index":4484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heart",{"_index":4584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heat",{"_index":1202,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap",{"_index":1215,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap'},{'nam",{"_index":233,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["heatmapcompon",{"_index":232,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":2177,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["help",{"_index":2065,"title":{},"body":{"components/InputComponent.html":{},"index.html":{}}}],["helper",{"_index":1440,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["here",{"_index":2325,"title":{},"body":{"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["hexcolor",{"_index":3166,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["hidden",{"_index":1568,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["hide",{"_index":510,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["hidefirstlast",{"_index":3080,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hidepag",{"_index":3081,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hidepagin",{"_index":1543,"title":{},"body":{"components/EntryListPopComponent.html":{},"interfaces/ListConfig.html":{}}}],["high",{"_index":4561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["higher",{"_index":2185,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["highlight",{"_index":4487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hint",{"_index":4873,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["histori",{"_index":1941,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{}}}],["historyservic",{"_index":1125,"title":{"injectables/HistoryService.html":{}},"body":{"modules/DataModule.html":{},"injectables/HistoryService.html":{},"coverage.html":{},"overview.html":{}}}],["hold",{"_index":335,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MockupComponent.html":{},"injectables/PopService.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{}}}],["holder",{"_index":1492,"title":{},"body":{"components/EntryListComponent.html":{}}}],["home",{"_index":4531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hook",{"_index":172,"title":{},"body":{"components/AceComponent.html":{},"injectables/ResourceConfig.html":{}}}],["hook.method",{"_index":3229,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["horizont",{"_index":4437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":314,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["host.direct",{"_index":1414,"title":{},"body":{"components/DynamicSlotComponent.html":{},"modules/IoModule.html":{}}}],["host.directive.t",{"_index":3632,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["host.directive.ts:11",{"_index":3637,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["host.directive.ts:9",{"_index":3635,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["hostbind",{"_index":1355,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostbinding('class.i",{"_index":1375,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlisten",{"_index":1357,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ToolbarComponent.html":{}}}],["hostlistener('click",{"_index":3875,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["hostlistener('dragleav",{"_index":1386,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('dragov",{"_index":1376,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('drop",{"_index":1381,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('focusout",{"_index":3878,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["hour",{"_index":4832,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["hourglass",{"_index":4488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hours.component.html",{"_index":4833,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["hours.component.scss",{"_index":4834,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["hover",{"_index":2618,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverdelay",{"_index":2630,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem",{"_index":2626,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem(item",{"_index":2664,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverout",{"_index":2627,"title":{},"body":{"components/MenuComponent.html":{}}}],["html",{"_index":183,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchbarComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["html.pipe",{"_index":4017,"title":{},"body":{"modules/VcModule.html":{}}}],["html.pipe.t",{"_index":3455,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["html.pipe.ts:10",{"_index":3461,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["http",{"_index":4784,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["http://localhost:4200",{"_index":4341,"title":{},"body":{"index.html":{}}}],["https://angular.io/guide/dynam",{"_index":3633,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["https://blog.thoughtram.io/angular/2016/07/27/custom",{"_index":4838,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["https://components.entrecode.d",{"_index":4312,"title":{},"body":{"index.html":{}}}],["https://components.entrecode.de/auth/auth",{"_index":2467,"title":{},"body":{"components/LoginComponent.html":{}}}],["https://components.entrecode.de/data/crud",{"_index":906,"title":{},"body":{"components/CrudComponent.html":{}}}],["https://components.entrecode.de/data/entri",{"_index":1423,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{}}}],["https://components.entrecode.de/misc/ac",{"_index":17,"title":{},"body":{"components/AceComponent.html":{}}}],["https://components.entrecode.de/misc/medium",{"_index":2574,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["https://components.entrecode.de/misc/tinymc",{"_index":3786,"title":{},"body":{"components/TinymceComponent.html":{}}}],["https://components.entrecode.de/ui/datetim",{"_index":1152,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["https://components.entrecode.de/ui/list/bas",{"_index":2136,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/list/transform",{"_index":2138,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/load",{"_index":2304,"title":{},"body":{"components/LoaderComponent.html":{}}}],["https://components.entrecode.de/ui/login",{"_index":2495,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["https://components.entrecode.de/ui/notif",{"_index":2848,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["https://components.entrecode.de/ui/pop",{"_index":3125,"title":{},"body":{"components/PopComponent.html":{}}}],["https://components.entrecode.de/ui/tab",{"_index":3747,"title":{},"body":{"components/TabsComponent.html":{}}}],["https://doc.entrecode.de/en/develop/resources/dm",{"_index":3278,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["https://docs.npmjs.com/cli/access#detail",{"_index":4854,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["https://entrecode.de/schema/dm",{"_index":3289,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["https://entrecode.github.io/ec.compon",{"_index":4310,"title":{},"body":{"index.html":{}}}],["https://entrecode.github.io/ec.sdk/#api",{"_index":446,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["https://entrecode.github.io/ec.sdk/#environ",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["https://github.com/ajaxorg/ac",{"_index":148,"title":{},"body":{"components/AceComponent.html":{}}}],["https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4",{"_index":1841,"title":{},"body":{"injectables/FormService.html":{}}}],["https://github.com/auth0/angular2",{"_index":667,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://github.com/mishoo/uglifyjs2/issues/659",{"_index":4354,"title":{},"body":{"index.html":{}}}],["https://icons.entrecode.de/ec",{"_index":4651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://localhost:4200",{"_index":4790,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["https://localhost:4200/muffin",{"_index":4800,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["https://www.youtube.com/emb",{"_index":4713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https?:\\/\\/(?:[a",{"_index":4707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["human",{"_index":1619,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/core-classes/field.html":{}}}],["höhe",{"_index":4911,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["höher",{"_index":4912,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["i+1",{"_index":3068,"title":{},"body":{"components/PaginationComponent.html":{}}}],["icon",{"_index":1569,"title":{"additional-documentation/ui/icons.html":{}},"body":{"classes/Field.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/icons.html":{}}}],["icon'},{'nam",{"_index":235,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["icon.compon",{"_index":1996,"title":{},"body":{"modules/IconModule.html":{}}}],["icon.component.html",{"_index":1967,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.cont",{"_index":1990,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.servic",{"_index":1982,"title":{},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{}}}],["icon/icon.modul",{"_index":1806,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{}}}],["iconcompon",{"_index":234,"title":{"components/IconComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconmodul",{"_index":1791,"title":{"modules/IconModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["icons.t",{"_index":4257,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["iconservic",{"_index":1969,"title":{"injectables/IconService.html":{}},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/icons.html":{}}}],["id",{"_index":368,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["idea",{"_index":2173,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["identifi",{"_index":1960,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"coverage.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["identifierpattern",{"_index":2124,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["ids.push(asset",{"_index":1713,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["ifram",{"_index":187,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["ignor",{"_index":1663,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["ignoredupl",{"_index":1659,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["imag",{"_index":2002,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["image/image.direct",{"_index":1760,"title":{},"body":{"modules/FilesModule.html":{}}}],["imagedirect",{"_index":309,"title":{"directives/ImageDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["images",{"_index":3283,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["img",{"_index":310,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["img'",{"_index":2003,"title":{},"body":{"directives/ImageDirective.html":{}}}],["immedi",{"_index":380,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/SearchbarComponent.html":{}}}],["immut",{"_index":1064,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["immuta",{"_index":3176,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["implement",{"_index":15,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchbarComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["impli",{"_index":4332,"title":{},"body":{"index.html":{}}}],["import",{"_index":60,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["impressum",{"_index":4380,"title":{},"body":{"index.html":{}}}],["improv",{"_index":4142,"title":{},"body":{"changelog.html":{}}}],["inbox",{"_index":4490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includ",{"_index":1665,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/core-classes/form.html":{}}}],["includeassetidinpath",{"_index":1660,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["incom",{"_index":3457,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{}}}],["incompat",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["increas",{"_index":4493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indent",{"_index":4491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":32,"title":{"index.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/selection.html":{}}}],["index(item",{"_index":839,"title":{},"body":{"classes/Collection.html":{}}}],["index.html",{"_index":1976,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ace.html":{}}}],["index.t",{"_index":4336,"title":{},"body":{"index.html":{}}}],["indic",{"_index":1662,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["infin",{"_index":4494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["inform",{"_index":2250,"title":{},"body":{"components/ListHeaderComponent.html":{},"classes/Notification.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes.html":{}}}],["inhabit",{"_index":2128,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["inherit",{"_index":123,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/OutputComponent.html":{},"additional-documentation/ui.html":{}}}],["init",{"_index":45,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"components/MediumEditorComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes/form.html":{}}}],["init(environ",{"_index":3485,"title":{},"body":{"injectables/SdkService.html":{}}}],["initfilt",{"_index":1494,"title":{},"body":{"components/EntryListComponent.html":{}}}],["initfilterqueri",{"_index":437,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["initfilterquery(fieldfilt",{"_index":468,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["initi",{"_index":119,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{}}}],["initmethod",{"_index":3334,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["inittab",{"_index":3750,"title":{},"body":{"components/TabsComponent.html":{}}}],["inject",{"_index":375,"title":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":4682,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/ui.html":{}}}],["input",{"_index":35,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["input#id",{"_index":4055,"title":{},"body":{"changelog.html":{}}}],["input'",{"_index":1164,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["input'},{'nam",{"_index":236,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["input('config",{"_index":2191,"title":{},"body":{"components/ListComponent.html":{}}}],["input.compon",{"_index":173,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["input.component.html",{"_index":346,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["input.component.scss",{"_index":4822,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["input.component.t",{"_index":334,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["input.component.ts:10",{"_index":1332,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input.component.ts:12",{"_index":1342,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:13",{"_index":351,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["input.component.ts:14",{"_index":352,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultInputComponent.html":{}}}],["input.component.ts:16",{"_index":1343,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:18",{"_index":1341,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:9",{"_index":1331,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input/default",{"_index":355,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["input/input.compon",{"_index":2118,"title":{},"body":{"modules/IoModule.html":{}}}],["input/output",{"_index":4136,"title":{},"body":{"changelog.html":{},"additional-documentation/data.html":{}}}],["input[type=fil",{"_index":3969,"title":{},"body":{"components/UploadComponent.html":{}}}],["inputcompon",{"_index":110,"title":{"components/InputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["inputcomponent;and",{"_index":4843,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["inputerrorscompon",{"_index":237,"title":{"components/InputErrorsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputs/output",{"_index":4106,"title":{},"body":{"changelog.html":{}}}],["inputthi",{"_index":4820,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["insid",{"_index":497,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["inspir",{"_index":3364,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["instagram",{"_index":4621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instal",{"_index":4739,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{}}}],["instanc",{"_index":72,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["instanceof",{"_index":2035,"title":{},"body":{"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/TabsComponent.html":{}}}],["instanti",{"_index":4905,"title":{},"body":{"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["instead",{"_index":2882,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes.html":{}}}],["integr",{"_index":4850,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["interact",{"_index":2914,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["interfac",{"_index":998,"title":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["interfer",{"_index":2343,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["intern",{"_index":1032,"title":{},"body":{"interfaces/CrudConfig.html":{},"miscellaneous/variables.html":{}}}],["intersect",{"_index":4497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intial",{"_index":2067,"title":{},"body":{"components/InputComponent.html":{}}}],["intl.collator(undefin",{"_index":3655,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/variables.html":{}}}],["introduct",{"_index":4869,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["invalid",{"_index":2712,"title":{},"body":{"components/MockupComponent.html":{},"injectables/TypeConfigService.html":{}}}],["invert",{"_index":4067,"title":{},"body":{"changelog.html":{}}}],["invit",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{}}}],["invok",{"_index":2127,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/core-classes/item.html":{}}}],["io/io.modul",{"_index":1799,"title":{},"body":{"modules/FormModule.html":{},"modules/UtilityModule.html":{}}}],["iomodul",{"_index":1789,"title":{"modules/IoModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["isact",{"_index":2628,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{}}}],["isactive(item",{"_index":2667,"title":{},"body":{"components/MenuComponent.html":{}}}],["isactive(pag",{"_index":2975,"title":{},"body":{"classes/Pagination.html":{}}}],["isclick",{"_index":2271,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["isempti",{"_index":808,"title":{},"body":{"classes/Collection.html":{}}}],["isend",{"_index":1293,"title":{},"body":{"interfaces/Day.html":{}}}],["isfirst",{"_index":1425,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isimmutableproperti",{"_index":1049,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{}}}],["isimmutableproperty(key",{"_index":1062,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["islast",{"_index":1426,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isnewasset",{"_index":1736,"title":{},"body":{"injectables/FileService.html":{}}}],["isnewasset(asset",{"_index":1677,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["iso",{"_index":4129,"title":{},"body":{"changelog.html":{}}}],["isselect",{"_index":2629,"title":{},"body":{"components/MenuComponent.html":{}}}],["isselected(_mo",{"_index":1320,"title":{},"body":{"interfaces/Day.html":{}}}],["isselected(item",{"_index":2669,"title":{},"body":{"components/MenuComponent.html":{}}}],["isstart",{"_index":1291,"title":{},"body":{"interfaces/Day.html":{}}}],["issystemproperti",{"_index":2727,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["issystemproperty(properti",{"_index":2747,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["ist",{"_index":2858,"title":{},"body":{"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["isvis",{"_index":3025,"title":{},"body":{"components/PaginationComponent.html":{}}}],["isvisible(pag",{"_index":3028,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ital",{"_index":4498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item",{"_index":43,"title":{"additional-documentation/core-classes/item.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["item'",{"_index":2272,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["item(",{"_index":3961,"title":{},"body":{"components/UploadComponent.html":{}}}],["item('a",{"_index":4877,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["item(1",{"_index":4901,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["item(asset",{"_index":1699,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["item(assets[0",{"_index":1696,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["item.config.fields[property].form",{"_index":978,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.fields[property].list",{"_index":977,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.onsav",{"_index":3439,"title":{},"body":{"injectables/ResourceService.html":{}}}],["item.data?.titl",{"_index":2699,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.deleteimmutableproperties(valu",{"_index":3441,"title":{},"body":{"injectables/ResourceService.html":{}}}],["item.getbodi",{"_index":488,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{}}}],["item.group(properti",{"_index":1916,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["item.id",{"_index":984,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{}}}],["item.path",{"_index":2697,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.sav",{"_index":4899,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["item.sort(properti",{"_index":3663,"title":{},"body":{"classes/Sorter.html":{}}}],["item/item",{"_index":1780,"title":{},"body":{"interfaces/FormConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["item?.display(field.properti",{"_index":1338,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["item?.display(field.property)?.length",{"_index":1348,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["itemconfig",{"_index":1779,"title":{"interfaces/ItemConfig.html":{}},"body":{"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"coverage.html":{},"additional-documentation/core-classes/item.html":{}}}],["items'},{'nam",{"_index":243,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["items.compon",{"_index":2297,"title":{},"body":{"modules/ListModule.html":{}}}],["items.component.html",{"_index":2270,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.t",{"_index":2267,"title":{},"body":{"components/ListItemsComponent.html":{},"coverage.html":{}}}],["items.component.ts:14",{"_index":2276,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:16",{"_index":2277,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:18",{"_index":2275,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:20",{"_index":2278,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:22",{"_index":2279,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:25",{"_index":2282,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:31",{"_index":2281,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:36",{"_index":2280,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.filter((item",{"_index":1915,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["items.foreach((item",{"_index":862,"title":{},"body":{"classes/Collection.html":{}}}],["items.length",{"_index":877,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{}}}],["items.pip",{"_index":1808,"title":{},"body":{"modules/FormModule.html":{}}}],["items.pipe.t",{"_index":2564,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["items.pipe.ts:8",{"_index":2568,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["items.reduce((ha",{"_index":868,"title":{},"body":{"classes/Collection.html":{}}}],["items.revers",{"_index":3677,"title":{},"body":{"classes/Sorter.html":{}}}],["items.slice((this.config.pag",{"_index":3018,"title":{},"body":{"classes/Pagination.html":{}}}],["items.sort((a",{"_index":3672,"title":{},"body":{"classes/Sorter.html":{}}}],["items/list",{"_index":2266,"title":{},"body":{"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["itemwidth",{"_index":3052,"title":{},"body":{"components/PaginationComponent.html":{}}}],["itemwidth}px",{"_index":3063,"title":{},"body":{"components/PaginationComponent.html":{}}}],["iter",{"_index":2104,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/core-classes/form.html":{}}}],["itself",{"_index":1576,"title":{},"body":{"classes/Field.html":{},"components/NotificationsComponent.html":{},"components/TabComponent.html":{}}}],["ja",{"_index":4914,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["javascript",{"_index":57,"title":{},"body":{"components/AceComponent.html":{}}}],["join",{"_index":3230,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["js",{"_index":4291,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{}}}],["json.parse(e.data",{"_index":1959,"title":{},"body":{"injectables/HistoryService.html":{}}}],["json.stringify(json",{"_index":3280,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["json.stringify(valu",{"_index":3920,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["jsoneditorcompon",{"_index":4841,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["json}}todo",{"_index":4863,"title":{},"body":{"additional-documentation/ui/selectcomponent.html":{}}}],["justifi",{"_index":4417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt/issues/305",{"_index":668,"title":{},"body":{"modules/AuthModule.html":{}}}],["kann",{"_index":637,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["karma",{"_index":4376,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1305,"title":{},"body":{"interfaces/Day.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputErrorsComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["keeppopopen",{"_index":1011,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["key",{"_index":887,"title":{},"body":{"classes/Config.html":{},"injectables/CrudService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"interfaces/ListConfig.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{}}}],["key[0",{"_index":1106,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["keydown",{"_index":3152,"title":{},"body":{"injectables/PopService.html":{},"components/SearchbarComponent.html":{}}}],["keyup",{"_index":3552,"title":{},"body":{"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{}}}],["kind",{"_index":2321,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"classes/Sorter.html":{},"interfaces/WithLoader.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["kleiner",{"_index":4816,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["know",{"_index":1719,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{}}}],["known",{"_index":396,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{}}}],["kununu",{"_index":4611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kurz",{"_index":4412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":1019,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/DefaultOutputComponent.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/LoginFormComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["label#for",{"_index":4054,"title":{},"body":{"changelog.html":{}}}],["landscap",{"_index":4528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["languag",{"_index":94,"title":{},"body":{"components/AceComponent.html":{},"injectables/ResourceConfig.html":{}}}],["laptop",{"_index":4499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":1203,"title":{},"body":{"interfaces/Day.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{}}}],["lat",{"_index":1908,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["later",{"_index":1397,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"interfaces/WithNotifications.html":{}}}],["latest",{"_index":3153,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop",{"_index":3160,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop.hid",{"_index":3162,"title":{},"body":{"injectables/PopService.html":{}}}],["latitud",{"_index":1889,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["lay",{"_index":4857,"title":{},"body":{"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["layer",{"_index":2739,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["layout",{"_index":1306,"title":{},"body":{"interfaces/Day.html":{}}}],["lead",{"_index":4117,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["leav",{"_index":4505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":934,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["legaci",{"_index":525,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{}}}],["legacyasset",{"_index":585,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["legend",{"_index":182,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"modules/UiModule.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"overview.html":{}}}],["lemontre",{"_index":2179,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["length",{"_index":871,"title":{},"body":{"classes/Collection.html":{}}}],["lerna",{"_index":4315,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["lerna.json",{"_index":4849,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["let",{"_index":4856,"title":{},"body":{"additional-documentation/ui.html":{}}}],["let'",{"_index":2944,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["letter",{"_index":1041,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["level",{"_index":372,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"components/MenuComponent.html":{},"interfaces/Update.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["li",{"_index":3038,"title":{},"body":{"components/PaginationComponent.html":{}}}],["lib",{"_index":4352,"title":{},"body":{"index.html":{}}}],["librari",{"_index":2413,"title":{},"body":{"modules/LocationModule.html":{}}}],["light",{"_index":4661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lightbulb",{"_index":4500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lightmodel",{"_index":1529,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["line",{"_index":170,"title":{},"body":{"components/AceComponent.html":{},"components/LoaderComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["line:direct",{"_index":1772,"title":{},"body":{"directives/FocusDirective.html":{}}}],["line:no",{"_index":2190,"title":{},"body":{"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["link",{"_index":3085,"title":{},"body":{"classes/PaginationConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["link_class_list",{"_index":4666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkedin",{"_index":4594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list",{"_index":196,"title":{"additional-documentation/core-classes/list.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["list#toggleselectmod",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["list'},{'nam",{"_index":194,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["list(this.collection.item",{"_index":2197,"title":{},"body":{"components/ListComponent.html":{}}}],["list(this.item",{"_index":2195,"title":{},"body":{"components/ListComponent.html":{}}}],["list.compon",{"_index":486,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"modules/FilesModule.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"changelog.html":{}}}],["list.component.html",{"_index":431,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{}}}],["list.component.t",{"_index":430,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":462,"title":{},"body":{"components/AssetListComponent.html":{}}}],["list.component.ts:24",{"_index":1500,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:26",{"_index":1498,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:36",{"_index":1504,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:47",{"_index":1502,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.component.ts:60",{"_index":1501,"title":{},"body":{"components/EntryListComponent.html":{}}}],["list.config.identifierpattern",{"_index":3576,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["list.config.label",{"_index":3575,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["list.t",{"_index":4199,"title":{},"body":{"coverage.html":{}}}],["list.ts/list.compon",{"_index":3000,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["list/asset",{"_index":429,"title":{},"body":{"components/AssetListComponent.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["list/entri",{"_index":952,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListComponent.html":{},"coverage.html":{}}}],["list/list",{"_index":3001,"title":{},"body":{"classes/Pagination.html":{}}}],["list/list.modul",{"_index":3630,"title":{},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{}}}],["list/resourc",{"_index":485,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["list/upload",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["listcompon",{"_index":239,"title":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["listconfig",{"_index":1002,"title":{"interfaces/ListConfig.html":{}},"body":{"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"coverage.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["listen",{"_index":2846,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/PopService.html":{}}}],["listheadercompon",{"_index":240,"title":{"components/ListHeaderComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listitemscompon",{"_index":242,"title":{"components/ListItemsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["listmodul",{"_index":2286,"title":{"modules/ListModule.html":{}},"body":{"modules/ListModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["listresourc",{"_index":439,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["liter",{"_index":881,"title":{},"body":{"classes/Config.html":{},"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"miscellaneous/variables.html":{}}}],["live",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["lng",{"_index":1910,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["load",{"_index":367,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"directives/SlotHostDirective.html":{},"interfaces/WithLoader.html":{},"miscellaneous/functions.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["load(config",{"_index":2980,"title":{},"body":{"classes/Pagination.html":{}}}],["load(id",{"_index":390,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["loadcompon",{"_index":1406,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loadcomponent(compon",{"_index":1408,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loadentri",{"_index":915,"title":{},"body":{"components/CrudComponent.html":{}}}],["loadentry(item",{"_index":937,"title":{},"body":{"components/CrudComponent.html":{}}}],["loader",{"_index":440,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"directives/SlotHostDirective.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["loader'",{"_index":2320,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'nam",{"_index":245,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["loader.compon",{"_index":2359,"title":{},"body":{"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"interfaces/WithLoader.html":{}}}],["loader.component.html",{"_index":2306,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":2305,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.interfac",{"_index":2545,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loader.interface.t",{"_index":4027,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["loader.servic",{"_index":2360,"title":{},"body":{"modules/LoaderModule.html":{}}}],["loader.wait(promis",{"_index":2366,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loader/loader.compon",{"_index":2543,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loader/loader.modul",{"_index":1805,"title":{},"body":{"modules/FormModule.html":{},"modules/UiModule.html":{}}}],["loader/with",{"_index":2544,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loadercompon",{"_index":244,"title":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["loadermodul",{"_index":1792,"title":{"modules/LoaderModule.html":{}},"body":{"modules/FormModule.html":{},"modules/LoaderModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["loaderservic",{"_index":918,"title":{"injectables/LoaderService.html":{}},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["loaderth",{"_index":2324,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["local",{"_index":2323,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SymbolService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["localload",{"_index":2330,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["locat",{"_index":247,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["location.latitud",{"_index":1909,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location.longitud",{"_index":1911,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location/map",{"_index":2402,"title":{},"body":{"modules/LocationModule.html":{}}}],["location_compon",{"_index":2403,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["locationmapcompon",{"_index":246,"title":{"components/LocationMapComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["locationmodul",{"_index":2395,"title":{"modules/LocationModule.html":{}},"body":{"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationpickercompon",{"_index":249,"title":{"components/LocationPickerComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["locationsearchcompon",{"_index":251,"title":{"components/LocationSearchComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["lock",{"_index":3105,"title":{},"body":{"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["lockform",{"_index":3095,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["log",{"_index":1974,"title":{},"body":{"components/IconComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["logic",{"_index":4837,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{}}}],["login",{"_index":256,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["login'",{"_index":2538,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["login'},{'nam",{"_index":254,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["login(undefin",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login(valu",{"_index":2528,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["login.component.html",{"_index":2468,"title":{},"body":{"components/LoginComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["login.component.t",{"_index":4803,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["login/login.compon",{"_index":663,"title":{},"body":{"modules/AuthModule.html":{}}}],["login/signup",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["logincompon",{"_index":253,"title":{"components/LoginComponent.html":{},"additional-documentation/ui/logincomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["loginformcompon",{"_index":255,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(api",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":2227,"title":{},"body":{"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["longitud",{"_index":1891,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["look",{"_index":2826,"title":{},"body":{"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/list.html":{}}}],["lookup",{"_index":1868,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["loop",{"_index":4495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["low",{"_index":4562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lower",{"_index":2187,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["lvl1",{"_index":1018,"title":{},"body":{"interfaces/CrudConfig.html":{},"changelog.html":{}}}],["löschen",{"_index":3369,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["machin",{"_index":4428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mail",{"_index":2514,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{}}}],["main",{"_index":2172,"title":{},"body":{"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["mainli",{"_index":4875,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["major",{"_index":4870,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["make",{"_index":61,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"components/LoaderComponent.html":{},"interfaces/Update.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["man",{"_index":4599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manag",{"_index":4318,"title":{},"body":{"index.html":{}}}],["mani",{"_index":1027,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["manual",{"_index":3794,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ace.html":{}}}],["map",{"_index":894,"title":{},"body":{"classes/Config.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/MenuComponent.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["map'},{'nam",{"_index":248,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["map((d",{"_index":1288,"title":{},"body":{"interfaces/Day.html":{}}}],["map((dat",{"_index":1290,"title":{},"body":{"interfaces/Day.html":{}}}],["map((method",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{}}}],["map(field",{"_index":3223,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map(hook",{"_index":3228,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map(item",{"_index":3664,"title":{},"body":{"classes/Sorter.html":{}}}],["map(p",{"_index":3285,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map(polici",{"_index":3232,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map.compon",{"_index":2406,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["map.component.html",{"_index":2370,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.scss",{"_index":2369,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.t",{"_index":2368,"title":{},"body":{"components/LocationMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:12",{"_index":2377,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:14",{"_index":2379,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:16",{"_index":2381,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:18",{"_index":2380,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:24",{"_index":2386,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:31",{"_index":2383,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.valu",{"_index":2448,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["mapload",{"_index":1860,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["mapsapiload",{"_index":1857,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["mark",{"_index":1219,"title":{},"body":{"interfaces/Day.html":{},"miscellaneous/variables.html":{}}}],["marker",{"_index":2378,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend",{"_index":2371,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend(coord",{"_index":2382,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markup",{"_index":3135,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["match",{"_index":317,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["match.length",{"_index":2784,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["match[1",{"_index":2785,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["match[3",{"_index":2786,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["matches(chang",{"_index":1066,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["math.abs(curr",{"_index":3064,"title":{},"body":{"components/PaginationComponent.html":{}}}],["math.max(0",{"_index":3055,"title":{},"body":{"components/PaginationComponent.html":{}}}],["math.min(this.getpag",{"_index":3020,"title":{},"body":{"classes/Pagination.html":{}}}],["math.min(transl",{"_index":3057,"title":{},"body":{"components/PaginationComponent.html":{}}}],["matter",{"_index":4769,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["max",{"_index":1807,"title":{},"body":{"modules/FormModule.html":{},"components/PaginationComponent.html":{}}}],["maxcolumn",{"_index":2219,"title":{},"body":{"interfaces/ListConfig.html":{},"changelog.html":{}}}],["maxim",{"_index":2225,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["maximum",{"_index":1595,"title":{},"body":{"classes/Field.html":{},"changelog.html":{}}}],["maxitem",{"_index":1570,"title":{},"body":{"classes/Field.html":{},"pipes/MaxItemsPipe.html":{},"changelog.html":{}}}],["maxitemspip",{"_index":1787,"title":{"pipes/MaxItemsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/MaxItemsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["mean",{"_index":4068,"title":{},"body":{"changelog.html":{},"additional-documentation/ui.html":{}}}],["meant",{"_index":126,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"injectables/ResourceService.html":{},"components/TabComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["measur",{"_index":4508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":4698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["medium",{"_index":258,"title":{"additional-documentation/medium.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/medium.html":{}}}],["mediumeditor",{"_index":2581,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditor(this.container.nativeel",{"_index":2601,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditorcompon",{"_index":257,"title":{"components/MediumEditorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mediummodul",{"_index":2607,"title":{"modules/MediumModule.html":{}},"body":{"modules/MediumModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/medium.html":{}}}],["megaphon",{"_index":4542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":4842,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["menu",{"_index":2615,"title":{},"body":{"components/MenuComponent.html":{},"additional-documentation/ui.html":{}}}],["menu,[ec",{"_index":261,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["menu.component.html",{"_index":2617,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":2616,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/menu.compon",{"_index":4010,"title":{},"body":{"modules/UtilityModule.html":{}}}],["menu]'},{'nam",{"_index":262,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["menubar",{"_index":4635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menucompon",{"_index":260,"title":{"components/MenuComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["merg",{"_index":891,"title":{},"body":{"classes/Config.html":{},"components/CrudComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{}}}],["merge(route.data",{"_index":967,"title":{},"body":{"components/CrudComponent.html":{}}}],["messag",{"_index":617,"title":{},"body":{"injectables/AuthGuard.html":{},"components/ErrorComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["message.clos",{"_index":2950,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["met",{"_index":4829,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["method",{"_index":44,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["middl",{"_index":3048,"title":{},"body":{"components/PaginationComponent.html":{},"miscellaneous/variables.html":{}}}],["migrat",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":3090,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["minlength",{"_index":4411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minor",{"_index":4670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minu",{"_index":4509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellan",{"_index":4303,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":4359,"title":{},"body":{"index.html":{}}}],["mit",{"_index":3112,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["mkdir",{"_index":4845,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["mmmm",{"_index":1228,"title":{},"body":{"interfaces/Day.html":{}}}],["mobil",{"_index":4511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockup",{"_index":2703,"title":{},"body":{"components/MockupComponent.html":{}}}],["mockup'},{'nam",{"_index":264,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["mockup.component.html",{"_index":2704,"title":{},"body":{"components/MockupComponent.html":{}}}],["mockup/mockup.compon",{"_index":4011,"title":{},"body":{"modules/UtilityModule.html":{}}}],["mockupcompon",{"_index":263,"title":{"components/MockupComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["modal",{"_index":3133,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["mode",{"_index":53,"title":{},"body":{"components/AceComponent.html":{},"interfaces/CrudConfig.html":{}}}],["model",{"_index":103,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["model'",{"_index":2716,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{}}}],["model.field",{"_index":890,"title":{},"body":{"classes/Config.html":{}}}],["modelchang",{"_index":2579,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["modelconfig",{"_index":1496,"title":{"interfaces/ModelConfig.html":{}},"body":{"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/ModelConfig.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/data.html":{}}}],["modelconfig.get(&#39;muffin&#39",{"_index":2743,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.get('muffin",{"_index":2762,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set(&#39;muffin&#39",{"_index":2755,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set('muffin",{"_index":2764,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigservic",{"_index":1126,"title":{"injectables/ModelConfigService.html":{}},"body":{"modules/DataModule.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["modelconfigur",{"_index":2820,"title":{"interfaces/ModelConfiguration.html":{}},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["modelid",{"_index":3221,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["modelist.j",{"_index":150,"title":{},"body":{"components/AceComponent.html":{}}}],["modellistcompon",{"_index":4071,"title":{},"body":{"changelog.html":{}}}],["modelresourc",{"_index":1930,"title":{},"body":{"injectables/HistoryService.html":{}}}],["models[model",{"_index":2819,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modern",{"_index":4634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modifi",{"_index":1040,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["modified'].indexof(key",{"_index":1107,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["modul",{"_index":318,"title":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"modules.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["module'",{"_index":674,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["modules.sh",{"_index":4331,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["modulewithprovid",{"_index":655,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{}}}],["moment",{"_index":1175,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["moment'",{"_index":1303,"title":{},"body":{"interfaces/Day.html":{}}}],["moment().startof('day').diff(d",{"_index":1302,"title":{},"body":{"interfaces/Day.html":{}}}],["moment(new",{"_index":3915,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(valu",{"_index":1193,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format('yyyi",{"_index":4810,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["moment(value).format(format",{"_index":3931,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).format(pattern",{"_index":1197,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format(this.symbol.resolve('moment.format.month",{"_index":3933,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).isvalid",{"_index":3912,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.d",{"_index":3894,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.month",{"_index":3899,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.tim",{"_index":3895,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.locale('d",{"_index":4805,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["moment.mo",{"_index":1160,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["money",{"_index":4512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["monorepo",{"_index":4317,"title":{},"body":{"index.html":{}}}],["month",{"_index":1199,"title":{},"body":{"interfaces/Day.html":{}}}],["month'},{'nam",{"_index":266,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["month.compon",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["month.component.html",{"_index":1212,"title":{},"body":{"interfaces/Day.html":{}}}],["monthcompon",{"_index":265,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["monthformat",{"_index":1227,"title":{},"body":{"interfaces/Day.html":{}}}],["more",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/collection.html":{}}}],["mouseout",{"_index":2647,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseov",{"_index":2640,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseover(day",{"_index":1265,"title":{},"body":{"interfaces/Day.html":{}}}],["mouseup(day",{"_index":1264,"title":{},"body":{"interfaces/Day.html":{}}}],["move",{"_index":4084,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ms",{"_index":2049,"title":{},"body":{"components/InputComponent.html":{},"classes/Notification.html":{}}}],["much",{"_index":4138,"title":{},"body":{"changelog.html":{}}}],["muffin",{"_index":2744,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["muffin.entry?.nam",{"_index":1486,"title":{},"body":{"directives/EntryDirective.html":{}}}],["muffin.nam",{"_index":1451,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["muffincompon",{"_index":2873,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["muffins/muffins.compon",{"_index":4799,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinsadd",{"_index":4794,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinscompon",{"_index":4798,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["multi",{"_index":144,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["multipl",{"_index":1613,"title":{},"body":{"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["music",{"_index":4513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mustreload",{"_index":916,"title":{},"body":{"components/CrudComponent.html":{}}}],["mustreload(item",{"_index":940,"title":{},"body":{"components/CrudComponent.html":{}}}],["myapp",{"_index":2326,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["myasset.asset?.assetid",{"_index":401,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.cr",{"_index":406,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.files?.length",{"_index":408,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.tag",{"_index":405,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.titl",{"_index":403,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.typ",{"_index":407,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myclient",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{}}}],["mycompon",{"_index":2855,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["myimage.asset?.assetid",{"_index":2026,"title":{},"body":{"directives/ImageDirective.html":{}}}],["n",{"_index":4900,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["n.resolv",{"_index":4904,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["n.save",{"_index":4903,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["nach",{"_index":4919,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["name",{"_index":87,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["name[0].touppercas",{"_index":4808,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["namespac",{"_index":1879,"title":{},"body":{"injectables/GeocodeService.html":{},"miscellaneous/variables.html":{}}}],["nativ",{"_index":2019,"title":{},"body":{"directives/ImageDirective.html":{}}}],["natur",{"_index":3653,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["navig",{"_index":3550,"title":{},"body":{"components/SearchbarComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["navigationend",{"_index":3762,"title":{},"body":{"components/TabsComponent.html":{}}}],["nearest",{"_index":1871,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["need",{"_index":1034,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/NotificationsComponent.html":{},"components/SearchbarComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ace.html":{}}}],["nein",{"_index":4915,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["nest",{"_index":557,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["nestedcrudconfig",{"_index":3885,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["nestedpopclass",{"_index":1012,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["new",{"_index":71,"title":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["newdat",{"_index":1323,"title":{},"body":{"interfaces/Day.html":{}}}],["newdate.isbetween(this.timespan[0",{"_index":1325,"title":{},"body":{"interfaces/Day.html":{}}}],["newhistori",{"_index":1957,"title":{},"body":{"injectables/HistoryService.html":{}}}],["newtimespan",{"_index":1247,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan.revers",{"_index":1252,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[0].isafter(newtimespan[1",{"_index":1251,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[this.dragged.first",{"_index":1249,"title":{},"body":{"interfaces/Day.html":{}}}],["next",{"_index":458,"title":{},"body":{"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"directives/FocusDirective.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"miscellaneous/variables.html":{}}}],["next/prev",{"_index":3571,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["ng",{"_index":4338,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["ng_value_accessor",{"_index":133,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["ngaftercontentinit",{"_index":3751,"title":{},"body":{"components/TabsComponent.html":{}}}],["ngafterviewinit",{"_index":1765,"title":{},"body":{"interfaces/Focus.html":{},"components/LocationSearchComponent.html":{},"components/PaginationComponent.html":{},"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{}}}],["ngif",{"_index":531,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{},"components/PopComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["ngmodel",{"_index":4100,"title":{},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["ngmodul",{"_index":330,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["ngonchang",{"_index":46,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{}}}],["ngonchanges(chang",{"_index":473,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{}}}],["ngondestroy",{"_index":2578,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ngoninit",{"_index":47,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ngx",{"_index":658,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/SelectModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["ngzone",{"_index":1858,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationSearchComponent.html":{}}}],["nicht",{"_index":638,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["niedrig",{"_index":4913,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["noapi",{"_index":3475,"title":{},"body":{"injectables/SdkService.html":{}}}],["noapi(api",{"_index":3488,"title":{},"body":{"injectables/SdkService.html":{}}}],["noclientid",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["noconflict/ace.j",{"_index":137,"title":{},"body":{"components/AceComponent.html":{}}}],["noconflict/ace.js';when",{"_index":4867,"title":{},"body":{"additional-documentation/ace.html":{}}}],["node_modul",{"_index":4322,"title":{},"body":{"index.html":{}}}],["node_modules/@ec.components/**/*.spec.t",{"_index":4372,"title":{},"body":{"index.html":{}}}],["node_modules/@ec.components/**/*.t",{"_index":4373,"title":{},"body":{"index.html":{}}}],["node_modules/@ec.components/data/src/auth/auth.service.t",{"_index":4357,"title":{},"body":{"index.html":{}}}],["non",{"_index":3705,"title":{},"body":{"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}}}],["none",{"_index":2273,"title":{},"body":{"components/ListItemsComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["normal",{"_index":494,"title":{},"body":{"components/AssetListPopComponent.html":{},"directives/DropzoneDirective.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":3087,"title":{},"body":{"classes/PaginationConfig.html":{},"miscellaneous/variables.html":{}}}],["noth",{"_index":3679,"title":{},"body":{"interfaces/Symbol.html":{}}}],["notif",{"_index":622,"title":{"classes/Notification.html":{}},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notification(notif",{"_index":2937,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notification.append",{"_index":2893,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.append.push(notif",{"_index":2894,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.component.t",{"_index":2883,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notification.error",{"_index":2843,"title":{},"body":{"classes/Notification.html":{}}}],["notification.hid",{"_index":2888,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.host",{"_index":2898,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.messag",{"_index":2891,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.replac",{"_index":2895,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.length",{"_index":2896,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.push(notif",{"_index":2897,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.sticki",{"_index":2900,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.tim",{"_index":2901,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.titl",{"_index":2890,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationcompon",{"_index":2823,"title":{},"body":{"classes/Notification.html":{}}}],["notifications'},{'nam",{"_index":268,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["notifications.compon",{"_index":2842,"title":{},"body":{"classes/Notification.html":{},"modules/NotificationsModule.html":{}}}],["notifications.component.html",{"_index":2849,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.interfac",{"_index":962,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/UploadComponent.html":{}}}],["notifications.interface.t",{"_index":4030,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["notifications.servic",{"_index":2884,"title":{},"body":{"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{}}}],["notifications/notifications.modul",{"_index":3938,"title":{},"body":{"modules/UiModule.html":{}}}],["notificationscompon",{"_index":267,"title":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notificationservic",{"_index":919,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notificationservice.$emitt",{"_index":2847,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationsmodul",{"_index":2904,"title":{"modules/NotificationsModule.html":{}},"body":{"modules/NotificationsModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationsservic",{"_index":623,"title":{"injectables/NotificationsService.html":{}},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["now",{"_index":3496,"title":{},"body":{"injectables/SdkService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{}}}],["no||((!safetyword?'resource.delete.no':'resource.delete.cancel",{"_index":3404,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["no||((!safetyword?\\'resource.delete.no\\':\\'resource.delete.cancel",{"_index":3407,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["npm",{"_index":4320,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{}}}],["nr",{"_index":4893,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["nth",{"_index":2566,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["null",{"_index":866,"title":{},"body":{"classes/Collection.html":{},"injectables/CrudService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":384,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["numbers.add(4",{"_index":827,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.addall([5",{"_index":830,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has(2",{"_index":835,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has([1,2",{"_index":838,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.remove(4",{"_index":844,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.removeal",{"_index":847,"title":{},"body":{"classes/Collection.html":{}}}],["numer",{"_index":3656,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/variables.html":{}}}],["numlist",{"_index":4695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oauth",{"_index":3255,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object",{"_index":499,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["object.assign",{"_index":892,"title":{},"body":{"classes/Config.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/TinymceComponent.html":{}}}],["object.assign(componentref.inst",{"_index":1421,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["object.assign(config",{"_index":2780,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["object.assign(entri",{"_index":1100,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["object.assign(resourc",{"_index":3448,"title":{},"body":{"injectables/ResourceService.html":{}}}],["object.assign(thi",{"_index":1646,"title":{},"body":{"classes/Field.html":{},"classes/Notification.html":{},"classes/PaginationConfig.html":{}}}],["object.assign(this.config",{"_index":1525,"title":{},"body":{"components/EntryListComponent.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{}}}],["object.assign(this.config[key][properti",{"_index":900,"title":{},"body":{"classes/Config.html":{}}}],["object.assign(this.stringfield('model",{"_index":3222,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.assign(this.stringfield('nam",{"_index":3210,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.assign(this.tagsfield('right",{"_index":3218,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.assign(this.types[typ",{"_index":3929,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["object.keys(defaultconfig).foreach(properti",{"_index":2779,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(filt",{"_index":1082,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(item.config.fields).reduce((equ",{"_index":975,"title":{},"body":{"components/CrudComponent.html":{}}}],["object.keys(permiss",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{}}}],["object.keys(schema.properti",{"_index":2792,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(this.config[relationnam",{"_index":3195,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.keys(this.control.errors).reduce((err",{"_index":2107,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["object.keys(this.sets).length",{"_index":3714,"title":{},"body":{"injectables/SymbolService.html":{}}}],["object.keys(value).foreach((key",{"_index":1097,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(variables).foreach((key",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{}}}],["observ",{"_index":479,"title":{},"body":{"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/GeocodeService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/core-classes.html":{}}}],["observable(observ",{"_index":1880,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observable.throw(err",{"_index":2555,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["observeel",{"_index":1855,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observeelement(el",{"_index":1872,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complet",{"_index":1894,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(coord",{"_index":1893,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["obsolet",{"_index":2879,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["ok",{"_index":1902,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["old",{"_index":1096,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["oldvalu",{"_index":1095,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["oldvalues[key",{"_index":1098,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["omit",{"_index":169,"title":{},"body":{"components/AceComponent.html":{},"injectables/ModelConfigService.html":{}}}],["omittedfield",{"_index":2722,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["on",{"_index":456,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["onchang",{"_index":21,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{}}}],["onclick",{"_index":4699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ondestroy",{"_index":2575,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ondragleave(",{"_index":1387,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondragover(",{"_index":1377,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondrop(",{"_index":1382,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["onsav",{"_index":2125,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/core-classes/item.html":{}}}],["onsubmit",{"_index":2498,"title":{},"body":{"components/LoginFormComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1016,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["openid",{"_index":3245,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["openinghour",{"_index":4827,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["openinghourscompon",{"_index":4835,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["oper",{"_index":467,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"injectables/ModelConfigService.html":{},"classes/Sorter.html":{},"interfaces/WithLoader.html":{}}}],["optim",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":88,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/selection.html":{}}}],["options](https://github.com/yabwe/medium",{"_index":2597,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["order",{"_index":4872,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["other",{"_index":2244,"title":{},"body":{"components/ListHeaderComponent.html":{},"classes/Notification.html":{}}}],["otherwis",{"_index":1073,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["ouput",{"_index":2055,"title":{},"body":{"components/InputComponent.html":{}}}],["out",{"_index":327,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"components/ToolbarComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["outbox",{"_index":4515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["outdir",{"_index":4367,"title":{},"body":{"index.html":{}}}],["outlin",{"_index":4585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["output",{"_index":373,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/list.html":{}}}],["output'},{'nam",{"_index":213,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["output('toggl",{"_index":3139,"title":{},"body":{"components/PopComponent.html":{}}}],["output.compon",{"_index":1138,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["output.component.html",{"_index":1334,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.t",{"_index":1333,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["output.component.ts:12",{"_index":1335,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.ts:14",{"_index":1336,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output/default",{"_index":1345,"title":{},"body":{"components/DefaultOutputComponent.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["output/output.compon",{"_index":2117,"title":{},"body":{"modules/IoModule.html":{}}}],["outputcompon",{"_index":269,"title":{"components/OutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["outsid",{"_index":102,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"directives/SlotHostDirective.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["over",{"_index":2105,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["overrid",{"_index":1503,"title":{},"body":{"components/EntryListComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/core-classes/selection.html":{}}}],["overridden",{"_index":2556,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["overriden",{"_index":2721,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SymbolService.html":{}}}],["overview",{"_index":4384,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/ui.html":{},"additional-documentation/data.html":{}}}],["overwritten",{"_index":2530,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["p",{"_index":4679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img",{"_index":4688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p.method",{"_index":3286,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["packag",{"_index":4034,"title":{"dependencies.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{}}}],["package.json",{"_index":4779,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["packages/.../ace.component.t",{"_index":4389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../auth.module.t",{"_index":4304,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../ec",{"_index":4392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../editor.component.t",{"_index":4391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../email",{"_index":4394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../email.validator.t",{"_index":4395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../emoji",{"_index":4396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../errors.t",{"_index":4390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../field",{"_index":4397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../geocode.service.t",{"_index":4398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../location.module.t",{"_index":4399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../notifications.service.t",{"_index":4400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../sorter.t",{"_index":4305,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/.../tinymc",{"_index":4393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/ace/src/ace.component.t",{"_index":9,"title":{},"body":{"components/AceComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ace/src/ace.component.ts:103",{"_index":100,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:113",{"_index":115,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:117",{"_index":82,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:121",{"_index":90,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:26",{"_index":109,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:30",{"_index":120,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:34",{"_index":117,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:36",{"_index":111,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:40",{"_index":107,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:44",{"_index":67,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:48",{"_index":68,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:51",{"_index":69,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:76",{"_index":92,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:85",{"_index":97,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:94",{"_index":80,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:98",{"_index":78,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.module.t",{"_index":328,"title":{},"body":{"modules/AceModule.html":{}}}],["packages/cor",{"_index":4337,"title":{},"body":{"index.html":{}}}],["packages/core/src/collection/collection.t",{"_index":802,"title":{},"body":{"classes/Collection.html":{},"coverage.html":{}}}],["packages/core/src/collection/collection.ts:107",{"_index":843,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:11",{"_index":817,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:124",{"_index":846,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:13",{"_index":820,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:139",{"_index":849,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:15",{"_index":812,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:152",{"_index":841,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:32",{"_index":840,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:43",{"_index":834,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:54",{"_index":837,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:72",{"_index":824,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:90",{"_index":829,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/config/config.t",{"_index":879,"title":{},"body":{"classes/Config.html":{},"coverage.html":{}}}],["packages/core/src/config/config.ts:13",{"_index":884,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/config/config.ts:5",{"_index":882,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/config/field",{"_index":1653,"title":{},"body":{"interfaces/FieldConfig.html":{},"coverage.html":{}}}],["packages/core/src/field/field.t",{"_index":1564,"title":{},"body":{"classes/Field.html":{},"coverage.html":{}}}],["packages/core/src/field/field.ts:11",{"_index":1587,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:13",{"_index":1604,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:15",{"_index":1607,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:17",{"_index":1605,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:19",{"_index":1592,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:21",{"_index":1597,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:23",{"_index":1598,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:25",{"_index":1593,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:27",{"_index":1579,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:29",{"_index":1583,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:31",{"_index":1584,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:33",{"_index":1606,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:35",{"_index":1577,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:37",{"_index":1591,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:39",{"_index":1603,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:41",{"_index":1578,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:43",{"_index":1594,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:45",{"_index":1589,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:47",{"_index":1575,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:59",{"_index":1608,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:7",{"_index":1601,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:9",{"_index":1599,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/form/form",{"_index":1778,"title":{},"body":{"interfaces/FormConfig.html":{},"coverage.html":{}}}],["packages/core/src/form/form.t",{"_index":4156,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/item/item",{"_index":2121,"title":{},"body":{"interfaces/ItemConfig.html":{},"coverage.html":{}}}],["packages/core/src/item/item.t",{"_index":4159,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/list/list",{"_index":2215,"title":{},"body":{"interfaces/ListConfig.html":{},"coverage.html":{}}}],["packages/core/src/list/list.t",{"_index":4163,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/pagination/pagination.t",{"_index":2957,"title":{},"body":{"classes/Pagination.html":{},"coverage.html":{}}}],["packages/core/src/pagination/pagination.ts:10",{"_index":2968,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:107",{"_index":2976,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:112",{"_index":2977,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:117",{"_index":2978,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:12",{"_index":2969,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:125",{"_index":2992,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:130",{"_index":2983,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:14",{"_index":2966,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:142",{"_index":2995,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:16",{"_index":2964,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:34",{"_index":2973,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:39",{"_index":2974,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:44",{"_index":2982,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:53",{"_index":2984,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:64",{"_index":2988,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:77",{"_index":2981,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:8",{"_index":2970,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:85",{"_index":2986,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:93",{"_index":2972,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:98",{"_index":2979,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/selection/selection.t",{"_index":4166,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/sorter/sorter.t",{"_index":3639,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/core/src/sorter/sorter.ts:25",{"_index":3646,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/sorter/sorter.ts:32",{"_index":3648,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/sorter/sorter.ts:62",{"_index":3651,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/data/src/asset",{"_index":428,"title":{},"body":{"components/AssetListComponent.html":{},"coverage.html":{}}}],["packages/data/src/auth/auth",{"_index":611,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["packages/data/src/auth/auth.module.t",{"_index":652,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/data/src/auth/auth.service.t",{"_index":670,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["packages/data/src/auth/auth.service.ts:112",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:134",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:146",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:156",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:170",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:24",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:31",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:45",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:57",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:66",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:73",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:81",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/email",{"_index":4175,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/data/src/auth/errors.t",{"_index":4177,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/data/src/auth/login/login.component.t",{"_index":2464,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["packages/data/src/auth/login/login.component.ts:20",{"_index":2472,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:22",{"_index":2473,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:24",{"_index":2477,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:26",{"_index":2470,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:28",{"_index":2476,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:29",{"_index":2478,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:30",{"_index":2479,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:33",{"_index":2474,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/password",{"_index":3091,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud",{"_index":999,"title":{},"body":{"interfaces/CrudConfig.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud.component.t",{"_index":901,"title":{},"body":{"components/CrudComponent.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud.component.ts:112",{"_index":945,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:124",{"_index":931,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:35",{"_index":926,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:37",{"_index":925,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:39",{"_index":927,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:41",{"_index":947,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:43",{"_index":946,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:45",{"_index":948,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:47",{"_index":929,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:49",{"_index":930,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:51",{"_index":922,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:58",{"_index":950,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:59",{"_index":949,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:70",{"_index":943,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:78",{"_index":936,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:83",{"_index":941,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:90",{"_index":938,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.service.t",{"_index":1039,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud.service.ts:112",{"_index":1061,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:29",{"_index":1050,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:36",{"_index":1067,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:42",{"_index":1052,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:50",{"_index":1071,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:63",{"_index":1075,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:78",{"_index":1063,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:84",{"_index":1055,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:99",{"_index":1058,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/data.module.t",{"_index":1128,"title":{},"body":{"modules/DataModule.html":{}}}],["packages/data/src/entri",{"_index":332,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"coverage.html":{}}}],["packages/data/src/entries/entries.directive.t",{"_index":1422,"title":{},"body":{"directives/EntriesDirective.html":{},"coverage.html":{}}}],["packages/data/src/entries/entries.directive.ts:100",{"_index":1439,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:21",{"_index":1450,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:23",{"_index":1436,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:25",{"_index":1438,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:27",{"_index":1434,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:29",{"_index":1431,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:31",{"_index":1435,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:33",{"_index":1449,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:34",{"_index":1430,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:41",{"_index":1445,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:54",{"_index":1443,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:63",{"_index":1448,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:74",{"_index":1444,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:81",{"_index":1446,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:88",{"_index":1442,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:92",{"_index":1441,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entry/entry.directive.t",{"_index":1474,"title":{},"body":{"directives/EntryDirective.html":{},"coverage.html":{}}}],["packages/data/src/entry/entry.directive.ts:18",{"_index":1485,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:20",{"_index":1478,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:22",{"_index":1481,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:24",{"_index":1477,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:26",{"_index":1479,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:28",{"_index":1482,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:30",{"_index":1480,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:32",{"_index":1476,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:39",{"_index":1484,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:47",{"_index":1483,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/files/asset",{"_index":489,"title":{},"body":{"components/AssetListPopComponent.html":{},"coverage.html":{}}}],["packages/data/src/files/asset/asset.directive.t",{"_index":366,"title":{},"body":{"directives/AssetDirective.html":{},"coverage.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:13",{"_index":397,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:15",{"_index":379,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:17",{"_index":383,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:19",{"_index":382,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:21",{"_index":385,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:23",{"_index":378,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:25",{"_index":389,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:27",{"_index":374,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:30",{"_index":398,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:34",{"_index":395,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:45",{"_index":391,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/assetgroup",{"_index":594,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"coverage.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.t",{"_index":1350,"title":{},"body":{"directives/DropzoneDirective.html":{},"coverage.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:11",{"_index":1364,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:13",{"_index":1372,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:24",{"_index":1374,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:37",{"_index":1369,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:46",{"_index":1361,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:7",{"_index":1366,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:9",{"_index":1365,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/file.service.t",{"_index":1656,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["packages/data/src/files/file.service.ts:115",{"_index":1747,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:148",{"_index":1744,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:185",{"_index":1741,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:49",{"_index":1748,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:51",{"_index":1740,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:61",{"_index":1743,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:74",{"_index":1742,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/file.service.ts:94",{"_index":1746,"title":{},"body":{"injectables/FileService.html":{}}}],["packages/data/src/files/files.module.t",{"_index":1754,"title":{},"body":{"modules/FilesModule.html":{}}}],["packages/data/src/files/image/image.directive.t",{"_index":2001,"title":{},"body":{"directives/ImageDirective.html":{},"coverage.html":{}}}],["packages/data/src/files/image/image.directive.ts:15",{"_index":2016,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:17",{"_index":2014,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:19",{"_index":2011,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:21",{"_index":2010,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:23",{"_index":2025,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:28",{"_index":2020,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:40",{"_index":2017,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:44",{"_index":2024,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:61",{"_index":2022,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/upload/upload.component.t",{"_index":3940,"title":{},"body":{"components/UploadComponent.html":{},"coverage.html":{}}}],["packages/data/src/files/upload/upload.component.ts:100",{"_index":3965,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:132",{"_index":3960,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:18",{"_index":3967,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:19",{"_index":3972,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:20",{"_index":3970,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:22",{"_index":3952,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:24",{"_index":3950,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:26",{"_index":3948,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:28",{"_index":3949,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:30",{"_index":3951,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:37",{"_index":3947,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:39",{"_index":3955,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:41",{"_index":3953,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:43",{"_index":3968,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:45",{"_index":3971,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:47",{"_index":3946,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:56",{"_index":3963,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:66",{"_index":3962,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:72",{"_index":3957,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:80",{"_index":3958,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:87",{"_index":3966,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/model",{"_index":2715,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["packages/data/src/resourc",{"_index":3164,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"coverage.html":{}}}],["packages/data/src/resource/resource.module.t",{"_index":3413,"title":{},"body":{"modules/ResourceModule.html":{}}}],["packages/data/src/sdk/history.service.t",{"_index":1917,"title":{},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["packages/data/src/sdk/history.service.ts:14",{"_index":1940,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:16",{"_index":1923,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:19",{"_index":1939,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:20",{"_index":1938,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:21",{"_index":1943,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:22",{"_index":1942,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:24",{"_index":1935,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:40",{"_index":1925,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:50",{"_index":1931,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/sdk.module.t",{"_index":3467,"title":{},"body":{"modules/SdkModule.html":{}}}],["packages/data/src/sdk/sdk.service.t",{"_index":3469,"title":{},"body":{"injectables/SdkService.html":{},"coverage.html":{}}}],["packages/data/src/sdk/sdk.service.ts:106",{"_index":3491,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:116",{"_index":3482,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:127",{"_index":3479,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:139",{"_index":3489,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:31",{"_index":3495,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:33",{"_index":3502,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:34",{"_index":3507,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:44",{"_index":3504,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:46",{"_index":3494,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:48",{"_index":3493,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:50",{"_index":3497,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:52",{"_index":3508,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:59",{"_index":3510,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:64",{"_index":3499,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:66",{"_index":3505,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:68",{"_index":3503,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:75",{"_index":3478,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:78",{"_index":3500,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:83",{"_index":3486,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/location/src/geocode.service.t",{"_index":1849,"title":{},"body":{"injectables/GeocodeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/location/src/geocode.service.ts:12",{"_index":1859,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:18",{"_index":1873,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:43",{"_index":1862,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:49",{"_index":1865,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:62",{"_index":1870,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/loc",{"_index":2367,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["packages/location/src/location.module.t",{"_index":2401,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/medium",{"_index":2570,"title":{},"body":{"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["packages/tinymce/src/tinymce.module.t",{"_index":3847,"title":{},"body":{"modules/TinymceModule.html":{}}}],["packages/tinymce/src/tinymce/tinymc",{"_index":4241,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.t",{"_index":3784,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:108",{"_index":3800,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:117",{"_index":3803,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:127",{"_index":3806,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:129",{"_index":3801,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:133",{"_index":3802,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:53",{"_index":3807,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:55",{"_index":3805,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:57",{"_index":3804,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:59",{"_index":3808,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:61",{"_index":3796,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:63",{"_index":3797,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:65",{"_index":3798,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:67",{"_index":3791,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:83",{"_index":3799,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/ui/src/form/datetime/calendar.component.t",{"_index":4245,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/datetime/daterange.component.t",{"_index":4247,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/datetime/datetime.component.t",{"_index":1150,"title":{},"body":{"components/DatetimeComponent.html":{},"coverage.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:24",{"_index":1161,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:26",{"_index":1163,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:28",{"_index":1169,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:30",{"_index":1172,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:32",{"_index":1162,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:34",{"_index":1165,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:37",{"_index":1168,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:42",{"_index":1170,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:46",{"_index":1166,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:51",{"_index":1167,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.pipe.t",{"_index":1182,"title":{},"body":{"pipes/DatetimePipe.html":{},"coverage.html":{}}}],["packages/ui/src/form/datetime/datetime.pipe.ts:12",{"_index":1189,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["packages/ui/src/form/datetime/heatmap.component.t",{"_index":4250,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/datetime/month.component.t",{"_index":1198,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["packages/ui/src/form/default",{"_index":1339,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/form/form.component.t",{"_index":4254,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/form.module.t",{"_index":1795,"title":{},"body":{"modules/FormModule.html":{}}}],["packages/ui/src/form/form.service.t",{"_index":1812,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["packages/ui/src/form/form.service.ts:18",{"_index":1821,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:31",{"_index":1819,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:38",{"_index":1823,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:50",{"_index":1827,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/max",{"_index":2563,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/form/toggle/toggle.component.t",{"_index":3849,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:19",{"_index":3859,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:21",{"_index":3852,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:24",{"_index":3856,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:29",{"_index":3857,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:33",{"_index":3858,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:36",{"_index":3853,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:40",{"_index":3854,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/vis",{"_index":4019,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/icon/ec",{"_index":4256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/icon/emoji",{"_index":4258,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/icon/icon.component.t",{"_index":1964,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["packages/ui/src/icon/icon.component.ts:13",{"_index":1971,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/icon/icon.component.ts:15",{"_index":1970,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/icon/icon.component.ts:19",{"_index":1972,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/icon/icon.module.t",{"_index":1995,"title":{},"body":{"modules/IconModule.html":{}}}],["packages/ui/src/icon/icon.service.t",{"_index":1997,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{}}}],["packages/ui/src/icon/icon.service.ts:9",{"_index":1999,"title":{},"body":{"injectables/IconService.html":{}}}],["packages/ui/src/io/dynam",{"_index":1388,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/input",{"_index":2095,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/input/input.component.t",{"_index":2043,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/input/input.component.ts:23",{"_index":2052,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:25",{"_index":2048,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:27",{"_index":2057,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:29",{"_index":2050,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:31",{"_index":2051,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:33",{"_index":2054,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:35",{"_index":2053,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:37",{"_index":2046,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:40",{"_index":2063,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:42",{"_index":2058,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:73",{"_index":2061,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:79",{"_index":2070,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:83",{"_index":2059,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:87",{"_index":2060,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/io.module.t",{"_index":2116,"title":{},"body":{"modules/IoModule.html":{}}}],["packages/ui/src/io/output/output.component.t",{"_index":2952,"title":{},"body":{"components/OutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/output/output.component.ts:14",{"_index":2953,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/io/output/output.component.ts:16",{"_index":2954,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/io/output/output.component.ts:20",{"_index":2955,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/io/slot",{"_index":3631,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["packages/ui/src/list/group.pipe.t",{"_index":1912,"title":{},"body":{"pipes/GroupPipe.html":{},"coverage.html":{}}}],["packages/ui/src/list/group.pipe.ts:10",{"_index":1914,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["packages/ui/src/list/list",{"_index":2230,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/list.component.t",{"_index":2135,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/list.component.ts:23",{"_index":2171,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:26",{"_index":2147,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:28",{"_index":2148,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:30",{"_index":2146,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:32",{"_index":2151,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:34",{"_index":2152,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:36",{"_index":2153,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:38",{"_index":2154,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:40",{"_index":2149,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:42",{"_index":2150,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:46",{"_index":2162,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:67",{"_index":2156,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:75",{"_index":2169,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:81",{"_index":2165,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:89",{"_index":2166,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:99",{"_index":2167,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.module.t",{"_index":2292,"title":{},"body":{"modules/ListModule.html":{}}}],["packages/ui/src/list/pagination/pagin",{"_index":3079,"title":{},"body":{"classes/PaginationConfig.html":{},"coverage.html":{}}}],["packages/ui/src/list/pagination/pagination.component.t",{"_index":3022,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:15",{"_index":3027,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:17",{"_index":3035,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:19",{"_index":3039,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:21",{"_index":3037,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:23",{"_index":3026,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:27",{"_index":3032,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:32",{"_index":3031,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:63",{"_index":3029,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:68",{"_index":3034,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.t",{"_index":3547,"title":{},"body":{"components/SearchbarComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:108",{"_index":3570,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:19",{"_index":3566,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:21",{"_index":3564,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:23",{"_index":3568,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:25",{"_index":3567,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:27",{"_index":3561,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:29",{"_index":3583,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:31",{"_index":3563,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:33",{"_index":3584,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:35",{"_index":3585,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:37",{"_index":3565,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:39",{"_index":3559,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:41",{"_index":3587,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:66",{"_index":3572,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:71",{"_index":3581,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:78",{"_index":3578,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.ts:87",{"_index":3574,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["packages/ui/src/loader/loader.component.t",{"_index":2300,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["packages/ui/src/loader/loader.component.ts:14",{"_index":2318,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:16",{"_index":2319,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:18",{"_index":2311,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:25",{"_index":2313,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:31",{"_index":2312,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:38",{"_index":2315,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.module.t",{"_index":2358,"title":{},"body":{"modules/LoaderModule.html":{}}}],["packages/ui/src/loader/loader.service.t",{"_index":2361,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["packages/ui/src/loader/loader.service.ts:11",{"_index":2363,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/loader/loader.service.ts:16",{"_index":2364,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/loader/loader.service.ts:8",{"_index":2365,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/loader/with",{"_index":4026,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/error/error.component.t",{"_index":1546,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:12",{"_index":1549,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:18",{"_index":1551,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:22",{"_index":1550,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:26",{"_index":1552,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/notification.t",{"_index":2822,"title":{},"body":{"classes/Notification.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/notification.ts:10",{"_index":2831,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:12",{"_index":2838,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:14",{"_index":2835,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:16",{"_index":2841,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:18",{"_index":2828,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:20",{"_index":2829,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:22",{"_index":2827,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:24",{"_index":2825,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:6",{"_index":2839,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:8",{"_index":2832,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notifications.component.t",{"_index":2845,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/notifications.component.ts:19",{"_index":2851,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/notifications/notifications.component.ts:21",{"_index":2850,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/notifications/notifications.module.t",{"_index":2910,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["packages/ui/src/notifications/notifications.service.t",{"_index":2913,"title":{},"body":{"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:22",{"_index":2931,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:24",{"_index":2933,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:26",{"_index":2920,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:34",{"_index":2927,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:45",{"_index":2929,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:58",{"_index":2922,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/with",{"_index":4029,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["packages/ui/src/pop/pop.component.t",{"_index":3121,"title":{},"body":{"components/PopComponent.html":{},"coverage.html":{}}}],["packages/ui/src/pop/pop.component.ts:17",{"_index":3127,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:19",{"_index":3128,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:22",{"_index":3129,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:24",{"_index":3126,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:30",{"_index":3132,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:42",{"_index":3131,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:51",{"_index":3130,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.module.t",{"_index":3149,"title":{},"body":{"modules/PopModule.html":{}}}],["packages/ui/src/pop/pop.service.t",{"_index":3150,"title":{},"body":{"injectables/PopService.html":{},"coverage.html":{}}}],["packages/ui/src/pop/pop.service.ts:9",{"_index":3154,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/select/select.component.t",{"_index":4267,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/select/select.module.t",{"_index":3629,"title":{},"body":{"modules/SelectModule.html":{}}}],["packages/ui/src/symbol/symbol.interface.t",{"_index":3678,"title":{},"body":{"interfaces/Symbol.html":{},"coverage.html":{}}}],["packages/ui/src/symbol/symbol.module.t",{"_index":3684,"title":{},"body":{"modules/SymbolModule.html":{}}}],["packages/ui/src/symbol/symbol.pipe.t",{"_index":3688,"title":{},"body":{"injectables/SymbolPipe.html":{},"coverage.html":{}}}],["packages/ui/src/symbol/symbol.pipe.ts:21",{"_index":3690,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["packages/ui/src/symbol/symbol.service.t",{"_index":3694,"title":{},"body":{"injectables/SymbolService.html":{},"coverage.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:10",{"_index":3712,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:12",{"_index":3697,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:18",{"_index":3707,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:23",{"_index":3709,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:31",{"_index":3699,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:36",{"_index":3701,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:46",{"_index":3703,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:9",{"_index":3710,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/ui.module.t",{"_index":3937,"title":{},"body":{"modules/UiModule.html":{}}}],["packages/ui/src/utility/focus/focus.directive.t",{"_index":1767,"title":{},"body":{"directives/FocusDirective.html":{},"coverage.html":{}}}],["packages/ui/src/utility/focus/focus.directive.ts:13",{"_index":1770,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/utility/focus/focus.directive.ts:8",{"_index":1769,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/utility/focus/focus.interface.t",{"_index":1763,"title":{},"body":{"interfaces/Focus.html":{},"coverage.html":{}}}],["packages/ui/src/utility/focus/focus.interface.ts:6",{"_index":1766,"title":{},"body":{"interfaces/Focus.html":{}}}],["packages/ui/src/utility/login",{"_index":2490,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/menu/menu.component.t",{"_index":2614,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:102",{"_index":2660,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:15",{"_index":2645,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:17",{"_index":2644,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:19",{"_index":2646,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:21",{"_index":2643,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:23",{"_index":2639,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:25",{"_index":2649,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:27",{"_index":2642,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:29",{"_index":2672,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:31",{"_index":2633,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:38",{"_index":2671,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:47",{"_index":2662,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:52",{"_index":2670,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:58",{"_index":2668,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:63",{"_index":2657,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:68",{"_index":2653,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:73",{"_index":2655,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:78",{"_index":2665,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:88",{"_index":2650,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:95",{"_index":2666,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/mockup/mockup.component.t",{"_index":2700,"title":{},"body":{"components/MockupComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/tab/tab.component.t",{"_index":3727,"title":{},"body":{"components/TabComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:11",{"_index":3733,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:13",{"_index":3735,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:15",{"_index":3734,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:17",{"_index":3736,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:19",{"_index":3737,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:21",{"_index":3731,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:24",{"_index":3741,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:27",{"_index":3738,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:32",{"_index":3739,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.t",{"_index":3745,"title":{},"body":{"components/TabsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:14",{"_index":3761,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:16",{"_index":3753,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:27",{"_index":3759,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:38",{"_index":3754,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:48",{"_index":3755,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:53",{"_index":3757,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/utility.module.t",{"_index":4008,"title":{},"body":{"modules/UtilityModule.html":{}}}],["packages/ui/src/utility/validators/email.validator.t",{"_index":4272,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/utility/validators/field",{"_index":4274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/vc/src/editor/editor.component.t",{"_index":4276,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/vc/src/saf",{"_index":3454,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["packages/vc/src/toolbar/toolbar.component.t",{"_index":3860,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["packages/vc/src/toolbar/toolbar.component.ts:13",{"_index":3867,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["packages/vc/src/toolbar/toolbar.component.ts:17",{"_index":3869,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["packages/vc/src/toolbar/toolbar.component.ts:24",{"_index":3873,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["packages/vc/src/toolbar/toolbar.component.ts:29",{"_index":3871,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["packages/vc/src/vc.module.t",{"_index":4016,"title":{},"body":{"modules/VcModule.html":{}}}],["pad",{"_index":4471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page",{"_index":629,"title":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}},"body":{"injectables/AuthGuard.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["page!==1",{"_index":1457,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["pagecontain",{"_index":3024,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagin",{"_index":2224,"title":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}},"body":{"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["pagination'},{'nam",{"_index":271,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["pagination.component.html",{"_index":3023,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.first",{"_index":3066,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.getpag",{"_index":2998,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["pagination.last",{"_index":3071,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.next",{"_index":3070,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.of",{"_index":3074,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.params().from",{"_index":3072,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.params().to",{"_index":3073,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.params().tot",{"_index":3075,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.prev",{"_index":3067,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.s",{"_index":3078,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.settotal(50",{"_index":2997,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["pagination/pagin",{"_index":2189,"title":{},"body":{"components/ListComponent.html":{}}}],["pagination/pagination.compon",{"_index":2298,"title":{},"body":{"modules/ListModule.html":{}}}],["paginationcompon",{"_index":270,"title":{"components/PaginationComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginationconfig",{"_index":2145,"title":{"classes/PaginationConfig.html":{}},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"changelog.html":{},"coverage.html":{}}}],["paginationconfig(this.config",{"_index":3044,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paint",{"_index":4516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["palett",{"_index":4461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paperclip",{"_index":4520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paperplan",{"_index":4521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paragraph",{"_index":4522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":2960,"title":{},"body":{"classes/Pagination.html":{},"classes/Sorter.html":{}}}],["paramet",{"_index":86,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":858,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/collection.html":{}}}],["parent.getpath(item",{"_index":2681,"title":{},"body":{"components/MenuComponent.html":{}}}],["parent=0",{"_index":2658,"title":{},"body":{"components/MenuComponent.html":{}}}],["pars",{"_index":2751,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["parsetyp",{"_index":2728,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["parsetype(typ",{"_index":2749,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["part",{"_index":530,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["pass",{"_index":1932,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/item.html":{}}}],["password",{"_index":273,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["passwordlabel",{"_index":2504,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["passwordplacehold",{"_index":2505,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["passwordresetcompon",{"_index":272,"title":{"components/PasswordResetComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["passwort",{"_index":2520,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{}}}],["past",{"_index":3553,"title":{},"body":{"components/SearchbarComponent.html":{},"miscellaneous/variables.html":{}}}],["paste_as_text",{"_index":4653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":1508,"title":{},"body":{"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ItemConfig.html":{},"components/MenuComponent.html":{},"components/TabsComponent.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["paths[paths.length",{"_index":3771,"title":{},"body":{"components/TabsComponent.html":{}}}],["pattern",{"_index":1187,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["pattern[0",{"_index":1196,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["paus",{"_index":4582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pen",{"_index":4524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pencil",{"_index":4446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pend",{"_index":3253,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{}}}],["per",{"_index":2228,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["percent",{"_index":4525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["peripher",{"_index":2269,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["permiss",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceConfig.html":{},"changelog.html":{}}}],["permissions[method",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{}}}],["pflichtfeld",{"_index":4409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phone",{"_index":3910,"title":{},"body":{"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["photo",{"_index":4527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pick",{"_index":523,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/LocationPickerComponent.html":{}}}],["picker",{"_index":2415,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker'},{'nam",{"_index":250,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["picker.compon",{"_index":2407,"title":{},"body":{"modules/LocationModule.html":{}}}],["picker.component.html",{"_index":2417,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.scss",{"_index":2416,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.t",{"_index":2414,"title":{},"body":{"components/LocationPickerComponent.html":{},"coverage.html":{}}}],["picker.component.ts:24",{"_index":2422,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:26",{"_index":2423,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:28",{"_index":2432,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:30",{"_index":2434,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:32",{"_index":2421,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:35",{"_index":2431,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:41",{"_index":2427,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:56",{"_index":2430,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:62",{"_index":2428,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:78",{"_index":2433,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:80",{"_index":2424,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:84",{"_index":2425,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["pictur",{"_index":4530,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["pie",{"_index":4441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pin",{"_index":4450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":1180,"title":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/SafeHtmlPipe.html":{},"pipes/VisibleFieldsPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(distinctuntilchang",{"_index":3598,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["pipe(switchmap",{"_index":1896,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["pipetransform",{"_index":1191,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["place",{"_index":1884,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/NotificationsComponent.html":{},"components/TabComponent.html":{},"index.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["place.geometri",{"_index":1887,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lat",{"_index":1890,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lng",{"_index":1892,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["placehold",{"_index":599,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/DatetimeComponent.html":{},"classes/Field.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/PasswordResetComponent.html":{},"components/SearchbarComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["plan",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"miscellaneous/variables.html":{}}}],["platform",{"_index":3266,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["platformid",{"_index":3267,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["platformtyp",{"_index":3269,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["play",{"_index":4583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pleas",{"_index":4361,"title":{},"body":{"index.html":{}}}],["plot",{"_index":4444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plug",{"_index":2301,"title":{},"body":{"components/LoaderComponent.html":{}}}],["plugin",{"_index":4639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point",{"_index":4454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["polici",{"_index":3231,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["policy.method",{"_index":3233,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["pop",{"_index":492,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["pop'},{'nam",{"_index":197,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["pop.compon",{"_index":959,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{}}}],["pop.component.html",{"_index":504,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.t",{"_index":491,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{},"components/ResourceDeletePopComponent.html":{},"coverage.html":{}}}],["pop.component.ts:16",{"_index":1533,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.component.ts:17",{"_index":1532,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.component.ts:18",{"_index":1534,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.component.ts:19",{"_index":1535,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.component.ts:20",{"_index":1540,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:21",{"_index":1531,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.component.ts:22",{"_index":3387,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:24",{"_index":1539,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:25",{"_index":528,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:26",{"_index":3379,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:27",{"_index":529,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:28",{"_index":3375,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:29",{"_index":526,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:30",{"_index":1536,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:31",{"_index":535,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:32",{"_index":3376,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:33",{"_index":536,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:34",{"_index":3378,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:35",{"_index":555,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:36",{"_index":3374,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:37",{"_index":553,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:38",{"_index":3388,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:39",{"_index":521,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:40",{"_index":1538,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.component.ts:41",{"_index":3386,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:43",{"_index":3384,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:45",{"_index":556,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:50",{"_index":545,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:62",{"_index":541,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.component.ts:69",{"_index":3380,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:73",{"_index":543,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:78",{"_index":3385,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["pop.component.ts:83",{"_index":538,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["pop.hid",{"_index":2260,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["pop.servic",{"_index":3138,"title":{},"body":{"components/PopComponent.html":{},"modules/PopModule.html":{}}}],["pop.toggl",{"_index":2258,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["pop/asset",{"_index":490,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["pop/entri",{"_index":958,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"coverage.html":{}}}],["pop/pop.compon",{"_index":2254,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["pop/pop.modul",{"_index":1796,"title":{},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{}}}],["pop/resourc",{"_index":3355,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["pop_dialog",{"_index":3318,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["pop_draw",{"_index":933,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{}}}],["pop_fullscreen",{"_index":3902,"title":{},"body":{"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["pop_toast",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["popclass",{"_index":1013,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/TypeConfigService.html":{}}}],["popcompon",{"_index":275,"title":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["popcomponent:17",{"_index":532,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{}}}],["popcomponent:19",{"_index":533,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{}}}],["popcomponent:22",{"_index":537,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{}}}],["popcomponent:24",{"_index":559,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{}}}],["popcomponent:30",{"_index":551,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{}}}],["popcomponent:42",{"_index":549,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{}}}],["popcomponent:51",{"_index":546,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{}}}],["popmodul",{"_index":1790,"title":{"modules/PopModule.html":{}},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["popservic",{"_index":517,"title":{"injectables/PopService.html":{}},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"coverage.html":{},"overview.html":{}}}],["popth",{"_index":3137,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["portrait",{"_index":4529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["posit",{"_index":2390,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["possess",{"_index":444,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["possibl",{"_index":501,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/LoginFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["post",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["potter",{"_index":4507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["power",{"_index":4532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preced",{"_index":2878,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["prefer",{"_index":4119,"title":{},"body":{"changelog.html":{}}}],["prefil",{"_index":3181,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/SearchbarComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/core-classes/form.html":{}}}],["prefill:'bobbi",{"_index":4908,"title":{},"body":{"additional-documentation/core-classes/form.html":{}}}],["prefix",{"_index":4748,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["prepend",{"_index":2796,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["prepublish",{"_index":4326,"title":{},"body":{"index.html":{}}}],["prequisit",{"_index":4738,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["present",{"_index":73,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthGuard.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{}}}],["preserv",{"_index":1666,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["preservefilenam",{"_index":1661,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["press",{"_index":3342,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{}}}],["pretti",{"_index":2093,"title":{},"body":{"components/InputComponent.html":{}}}],["prev",{"_index":1427,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{},"miscellaneous/variables.html":{}}}],["prevent",{"_index":3582,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["preventdefault",{"_index":3556,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["preventdefault(",{"_index":3580,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["preview",{"_index":3273,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["previou",{"_index":2168,"title":{},"body":{"components/ListComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["price",{"_index":4573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primit",{"_index":2132,"title":{},"body":{"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["primitive.resolv",{"_index":4878,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["primitv",{"_index":4831,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["printer",{"_index":4533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["privat",{"_index":575,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["process",{"_index":3795,"title":{},"body":{"components/TinymceComponent.html":{}}}],["prod",{"_index":4762,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["product",{"_index":4765,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["profil",{"_index":4613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["programmat",{"_index":2129,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["project",{"_index":4038,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["promis",{"_index":116,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["promise((resolv",{"_index":1898,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["promise.all(this.stack.item",{"_index":2351,"title":{},"body":{"components/LoaderComponent.html":{}}}],["promise.reject('api_not_found",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject('cannot",{"_index":419,"title":{},"body":{"directives/AssetDirective.html":{}}}],["promise.reject('desktop",{"_index":2945,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["promise.reject('fehl",{"_index":2863,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["promise.reject('getaccount",{"_index":3545,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('getschema",{"_index":3542,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('no_api_found",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject(`ecimag",{"_index":2033,"title":{},"body":{"directives/ImageDirective.html":{}}}],["promise.reject(err",{"_index":1094,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["promise.reject(this.noclientid",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolv",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{}}}],["promise.resolve().then",{"_index":979,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(>asset",{"_index":1717,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(['get",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(api",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(config",{"_index":2814,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["promise.resolve(item.config.onsave(item",{"_index":3440,"title":{},"body":{"injectables/ResourceService.html":{}}}],["promise.resolve(method",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(result",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(results.concat(method",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(this.editor",{"_index":155,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["promise.resolve(valu",{"_index":2557,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["propag",{"_index":1171,"title":{},"body":{"components/DatetimeComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["propagatechang",{"_index":36,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["proper",{"_index":2737,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["properli",{"_index":4802,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["properti",{"_index":33,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["properties.foreach(properti",{"_index":2797,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["property.can",{"_index":4363,"title":{},"body":{"index.html":{}}}],["property.interfac",{"_index":1645,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["property.interface.t",{"_index":4153,"title":{},"body":{"coverage.html":{}}}],["property.split",{"_index":1512,"title":{},"body":{"components/EntryListComponent.html":{}}}],["property[0",{"_index":2766,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["protect",{"_index":434,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Pagination.html":{}}}],["prototyp",{"_index":2702,"title":{},"body":{"components/MockupComponent.html":{}}}],["protractor",{"_index":4378,"title":{},"body":{"index.html":{}}}],["provd",{"_index":2274,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["provid",{"_index":23,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["pseudo",{"_index":3577,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["public",{"_index":39,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["publicapi",{"_index":377,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{}}}],["publicapi(shortid",{"_index":3537,"title":{},"body":{"injectables/SdkService.html":{}}}],["publicassetlist",{"_index":1672,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["publicassetresourc",{"_index":409,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["publicassetright",{"_index":3215,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["publicservic",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":4323,"title":{"additional-documentation/project-setup-tutorial/publishing.html":{}},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["push",{"_index":2928,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["put",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"injectables/HistoryService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"changelog.html":{}}}],["qb1mro56u5katpx9j8o4",{"_index":2412,"title":{},"body":{"modules/LocationModule.html":{}}}],["qr",{"_index":4534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quellenangab",{"_index":4681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queri",{"_index":2220,"title":{},"body":{"interfaces/ListConfig.html":{},"components/SearchbarComponent.html":{}}}],["queryfilt",{"_index":3908,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["querylist",{"_index":2251,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/PaginationComponent.html":{},"components/TabsComponent.html":{}}}],["question",{"_index":3372,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"miscellaneous/variables.html":{}}}],["question||((!safetyword?'resource.delete.question':'resource.delete.safeti",{"_index":3402,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["question||((!safetyword?\\'resource.delete.question\\':\\'resource.delete.safeti",{"_index":3405,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["quick",{"_index":1001,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["quickli",{"_index":4793,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["quot",{"_index":4535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rack",{"_index":1401,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.compon",{"_index":2120,"title":{},"body":{"modules/IoModule.html":{}}}],["rack.component.html",{"_index":1392,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.component.t",{"_index":1390,"title":{},"body":{"components/DynamicRackComponent.html":{},"coverage.html":{}}}],["rack.component.ts:10",{"_index":1395,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack/dynam",{"_index":1389,"title":{},"body":{"components/DynamicRackComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["ramp",{"_index":4556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rang",{"_index":3082,"title":{},"body":{"classes/PaginationConfig.html":{},"changelog.html":{}}}],["raw",{"_index":1188,"title":{},"body":{"pipes/DatetimePipe.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{}}}],["rawfilt",{"_index":2774,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["rc.0",{"_index":4314,"title":{},"body":{"index.html":{}}}],["re",{"_index":79,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["reach",{"_index":3434,"title":{},"body":{"injectables/ResourceService.html":{}}}],["react",{"_index":618,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["reactiv",{"_index":2573,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["reactiveformsmodul",{"_index":656,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{}}}],["read",{"_index":1033,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/ImageDirective.html":{},"miscellaneous/variables.html":{}}}],["readabl",{"_index":1620,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["readi",{"_index":37,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{}}}],["readm",{"_index":365,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Collection.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"index.html":{}}}],["readonli",{"_index":600,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/ItemConfig.html":{},"components/LocationMapComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"changelog.html":{}}}],["recent",{"_index":2539,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["recogn",{"_index":4921,"title":{},"body":{"additional-documentation/core-classes/selection.html":{}}}],["recommend",{"_index":2871,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["reconstruct",{"_index":2163,"title":{},"body":{"components/ListComponent.html":{}}}],["recycl",{"_index":4619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirect",{"_index":620,"title":{},"body":{"injectables/AuthGuard.html":{},"components/LoginComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["redo",{"_index":4609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reduce((a",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{}}}],["reduce((ha",{"_index":3662,"title":{},"body":{"classes/Sorter.html":{}}}],["reduce((match",{"_index":1083,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["redund",{"_index":4860,"title":{},"body":{"additional-documentation/ui.html":{}}}],["refactor",{"_index":4110,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":2064,"title":{},"body":{"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["referenc",{"_index":4825,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["reflect",{"_index":1218,"title":{},"body":{"interfaces/Day.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":4447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regex",{"_index":3172,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["regexp",{"_index":2126,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ResourceConfig.html":{}}}],["regist",{"_index":83,"title":{},"body":{"components/AceComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"injectables/LoaderService.html":{},"injectables/SymbolService.html":{},"components/ToggleComponent.html":{}}}],["registeronchang",{"_index":48,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["registeronchange(fn",{"_index":81,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["registerontouch",{"_index":49,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["registri",{"_index":1965,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{},"injectables/SymbolService.html":{},"additional-documentation/ui/icons.html":{}}}],["regular",{"_index":4024,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["reject",{"_index":1899,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["reject(statu",{"_index":1904,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["rel",{"_index":1326,"title":{},"body":{"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/TabComponent.html":{},"index.html":{}}}],["relat",{"_index":441,"title":{},"body":{"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"modules/LocationModule.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{}}}],["relationnam",{"_index":3179,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["relativeto",{"_index":3782,"title":{},"body":{"components/TabsComponent.html":{}}}],["releas",{"_index":4144,"title":{},"body":{"changelog.html":{}}}],["relev",{"_index":340,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["reli",{"_index":4830,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["reload",{"_index":939,"title":{},"body":{"components/CrudComponent.html":{},"injectables/ResourceService.html":{},"index.html":{}}}],["remain",{"_index":1024,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["remov",{"_index":548,"title":{},"body":{"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"changelog.html":{}}}],["remove(item",{"_index":842,"title":{},"body":{"classes/Collection.html":{}}}],["removeal",{"_index":809,"title":{},"body":{"classes/Collection.html":{}}}],["removeall(item",{"_index":845,"title":{},"body":{"classes/Collection.html":{}}}],["removefilt",{"_index":2237,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["removefilter(properti",{"_index":2247,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["removeformat",{"_index":4696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["renam",{"_index":2134,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["renamend",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":903,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["renew",{"_index":4096,"title":{},"body":{"changelog.html":{}}}],["repeat",{"_index":4571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replac",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/SymbolService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["replacewith",{"_index":810,"title":{},"body":{"classes/Collection.html":{}}}],["replacewith(item",{"_index":848,"title":{},"body":{"classes/Collection.html":{}}}],["repli",{"_index":4686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositori",{"_index":4316,"title":{},"body":{"index.html":{}}}],["repres",{"_index":1205,"title":{},"body":{"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["request",{"_index":2012,"title":{},"body":{"directives/ImageDirective.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{}}}],["requir",{"_index":336,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"classes/Field.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/ResourceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["reset",{"_index":326,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"components/LoginFormComponent.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"components/PasswordResetComponent.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"changelog.html":{},"overview.html":{}}}],["reset'},{'nam",{"_index":274,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["reset.compon",{"_index":662,"title":{},"body":{"modules/AuthModule.html":{}}}],["reset.component.html",{"_index":3094,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.t",{"_index":3092,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset.component.ts:14",{"_index":3103,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:16",{"_index":3102,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:18",{"_index":3097,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:20",{"_index":3098,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:22",{"_index":3099,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:24",{"_index":3096,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:26",{"_index":3101,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:29",{"_index":3100,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset/password",{"_index":661,"title":{},"body":{"modules/AuthModule.html":{},"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["resetpassword",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(email",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{}}}],["resiz",{"_index":4637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolv",{"_index":118,"title":{},"body":{"components/AceComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["resolve(nam",{"_index":3700,"title":{},"body":{"injectables/SymbolService.html":{}}}],["resolve(result",{"_index":1903,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["resolveasset",{"_index":1737,"title":{},"body":{"injectables/FileService.html":{}}}],["resolveassets(asset",{"_index":1710,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["resolved.find((resourc",{"_index":1729,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["resolvedapi",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvevari",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvevariables(str",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{}}}],["resourc",{"_index":277,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["resource.assetid",{"_index":1730,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["resource.del().then((r",{"_index":3452,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resource.newhistori",{"_index":1956,"title":{},"body":{"injectables/HistoryService.html":{}}}],["resource.sav",{"_index":3442,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resource.save().then((_resourc",{"_index":3449,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resource/resource.modul",{"_index":1145,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{}}}],["resource[key",{"_index":3447,"title":{},"body":{"injectables/ResourceService.html":{}}}],["resourceconfig",{"_index":432,"title":{"injectables/ResourceConfig.html":{}},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["resourcecrudcompon",{"_index":276,"title":{"components/ResourceCrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["resourcedeletepopcompon",{"_index":278,"title":{"components/ResourceDeletePopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceform",{"_index":3192,"title":{},"body":{"injectables/ResourceConfig.html":{},"coverage.html":{}}}],["resourceformcompon",{"_index":280,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelist",{"_index":464,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"changelog.html":{},"coverage.html":{}}}],["resourcelistcompon",{"_index":281,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelistcomponent:105",{"_index":474,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["resourcelistcomponent:114",{"_index":466,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["resourcelistcomponent:118",{"_index":470,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["resourcelistcomponent:22",{"_index":482,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["resourcelistcomponent:24",{"_index":450,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["resourcelistcomponent:26",{"_index":459,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["resourcelistcomponent:28",{"_index":480,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["resourcelistcomponent:30",{"_index":448,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["resourcelistcomponent:32",{"_index":455,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["resourcelistcomponent:34",{"_index":452,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["resourcelistcomponent:36",{"_index":461,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["resourcelistcomponent:45",{"_index":484,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["resourcelistcomponent:57",{"_index":463,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["resourcelistcomponent:78",{"_index":476,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["resourcemodul",{"_index":1123,"title":{"modules/ResourceModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules.html":{},"overview.html":{}}}],["resourcepopcompon",{"_index":282,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["resourceselectcompon",{"_index":283,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceservic",{"_index":1497,"title":{"injectables/ResourceService.html":{}},"body":{"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["respons",{"_index":1708,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["response['getallitem",{"_index":1707,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["rest",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/ui/icons.html":{}}}],["result",{"_index":316,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/formcomponent.html":{},"additional-documentation/ui/logincomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["results.length",{"_index":2446,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["results.push(method",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{}}}],["results[0].formatted_address",{"_index":2447,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["retriev",{"_index":2742,"title":{},"body":{"injectables/ModelConfigService.html":{},"classes/Pagination.html":{}}}],["return",{"_index":76,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["revers",{"_index":1866,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"classes/Sorter.html":{}}}],["right",{"_index":3217,"title":{},"body":{"injectables/ResourceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":342,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{}}}],["roleid",{"_index":3313,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["roll",{"_index":4519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":361,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"injectables/SdkService.html":{}}}],["rotat",{"_index":4575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rout",{"_index":433,"title":{"additional-documentation/project-setup-tutorial/routes.html":{}},"body":{"components/AssetListComponent.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["route.data",{"_index":2678,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.data.hidden",{"_index":2679,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.param",{"_index":968,"title":{},"body":{"components/CrudComponent.html":{}}}],["route.params.subscrib",{"_index":1510,"title":{},"body":{"components/EntryListComponent.html":{}}}],["route.path",{"_index":2676,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.path.indexof",{"_index":2677,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.queryparam",{"_index":969,"title":{},"body":{"components/CrudComponent.html":{}}}],["router",{"_index":912,"title":{},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["routermodul",{"_index":1130,"title":{},"body":{"modules/DataModule.html":{},"modules/UtilityModule.html":{}}}],["routing.module.t",{"_index":4797,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["rss",{"_index":4543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ruler",{"_index":4537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1617,"title":{},"body":{"classes/Field.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes/field.html":{}}}],["rxj",{"_index":4296,"title":{},"body":{"dependencies.html":{},"additional-documentation/core-classes.html":{}}}],["rxjs/add/operator/debouncetim",{"_index":1209,"title":{},"body":{"interfaces/Day.html":{},"components/TinymceComponent.html":{}}}],["rxjs/add/operator/filt",{"_index":1079,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxjs/add/operator/switchmap",{"_index":956,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["rxjs/observ",{"_index":859,"title":{},"body":{"classes/Collection.html":{},"injectables/CrudService.html":{},"injectables/GeocodeService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxjs/observable/frompromis",{"_index":1876,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["rxjs/observable/merg",{"_index":957,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["rxjs/oper",{"_index":1878,"title":{},"body":{"injectables/GeocodeService.html":{},"components/SearchbarComponent.html":{}}}],["rxjs/subject",{"_index":567,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{}}}],["safe",{"_index":3458,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"modules/VcModule.html":{}}}],["safedelet",{"_index":1014,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["safehtml",{"_index":3460,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["safehtmlpip",{"_index":3453,"title":{"pipes/SafeHtmlPipe.html":{}},"body":{"pipes/SafeHtmlPipe.html":{},"modules/VcModule.html":{},"coverage.html":{},"overview.html":{}}}],["safetyword",{"_index":3373,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["samantha",{"_index":2708,"title":{},"body":{"components/MockupComponent.html":{}}}],["same",{"_index":818,"title":{},"body":{"classes/Collection.html":{},"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"components/MenuComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/core-classes/selection.html":{}}}],["sandbox.scss",{"_index":4759,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["sanit",{"_index":3463,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["save",{"_index":1026,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/ItemConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["save(item",{"_index":3428,"title":{},"body":{"injectables/ResourceService.html":{}}}],["save(model",{"_index":1070,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["savethi",{"_index":4753,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["scaffold",{"_index":4343,"title":{},"body":{"index.html":{}}}],["scale",{"_index":4442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema",{"_index":2720,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{}}}],["schema'",{"_index":2752,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.allof[1",{"_index":2791,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.properties[properti",{"_index":2803,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.properties[property].readonli",{"_index":2805,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.properties[property].titl",{"_index":2801,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema.required.indexof(properti",{"_index":2806,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schemarequest",{"_index":3472,"title":{},"body":{"injectables/SdkService.html":{}}}],["schon",{"_index":4406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scissor",{"_index":4538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":4846,"title":{},"body":{"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["screen",{"_index":4463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script",{"_index":4321,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["scripts:npm",{"_index":4327,"title":{},"body":{"index.html":{}}}],["scssmake",{"_index":4749,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["sdk",{"_index":347,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["sdk.api",{"_index":376,"title":{},"body":{"directives/AssetDirective.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{}}}],["sdk.servic",{"_index":3468,"title":{},"body":{"modules/SdkModule.html":{}}}],["sdk/history.servic",{"_index":1146,"title":{},"body":{"modules/DataModule.html":{}}}],["sdk/sdk.modul",{"_index":1147,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{}}}],["sdk/sdk.servic",{"_index":411,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["sdkmodul",{"_index":1124,"title":{"modules/SdkModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules.html":{},"overview.html":{}}}],["sdkservic",{"_index":350,"title":{"injectables/SdkService.html":{}},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/data.html":{}}}],["sdkservice#api",{"_index":2471,"title":{},"body":{"components/LoginComponent.html":{}}}],["sdkservice.readi",{"_index":4095,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":1580,"title":{},"body":{"classes/Field.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/SearchbarComponent.html":{}}}],["search'},{'nam",{"_index":252,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["search.compon",{"_index":2408,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["search.component.html",{"_index":2451,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.t",{"_index":2449,"title":{},"body":{"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:13",{"_index":2454,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:15",{"_index":2457,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:17",{"_index":2453,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:25",{"_index":2455,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:31",{"_index":2456,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["searchbar",{"_index":506,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/GeocodeService.html":{},"interfaces/ItemConfig.html":{},"components/LocationSearchComponent.html":{},"components/SearchbarComponent.html":{}}}],["searchbar'},{'nam",{"_index":285,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["searchbar.component.html",{"_index":3551,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["searchbar/searchbar.compon",{"_index":2299,"title":{},"body":{"modules/ListModule.html":{}}}],["searchbarcompon",{"_index":284,"title":{"components/SearchbarComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchinput",{"_index":2452,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["second",{"_index":2183,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["section",{"_index":3134,"title":{},"body":{"components/PopComponent.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["see",{"_index":445,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["sein",{"_index":4818,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["seit",{"_index":636,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["sekundär",{"_index":4669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":457,"title":{"additional-documentation/core-classes/selection.html":{}},"body":{"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationSearchComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/selection.html":{}}}],["select'},{'nam",{"_index":199,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["select($ev",{"_index":542,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["select(item",{"_index":1537,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["select(pag",{"_index":2985,"title":{},"body":{"classes/Pagination.html":{}}}],["select(tab",{"_index":3756,"title":{},"body":{"components/TabsComponent.html":{}}}],["select.compon",{"_index":1140,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{}}}],["select.component.html",{"_index":597,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.t",{"_index":596,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:10",{"_index":606,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:11",{"_index":603,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:12",{"_index":604,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:13",{"_index":605,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:14",{"_index":607,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:15",{"_index":602,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:18",{"_index":609,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:21",{"_index":608,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.emit(item",{"_index":2159,"title":{},"body":{"components/ListComponent.html":{}}}],["select/asset",{"_index":1757,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["select/assetgroup",{"_index":595,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["select/entri",{"_index":1139,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["select/resourc",{"_index":3415,"title":{},"body":{"modules/ResourceModule.html":{},"coverage.html":{}}}],["select/select.modul",{"_index":3939,"title":{},"body":{"modules/UiModule.html":{}}}],["selectbyurl",{"_index":3752,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectbyurl(url",{"_index":3758,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectcompon",{"_index":286,"title":{"additional-documentation/ui/selectcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selectday(_mo",{"_index":1314,"title":{},"body":{"interfaces/Day.html":{}}}],["selectentri",{"_index":917,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectentry(item",{"_index":944,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectindex",{"_index":2141,"title":{},"body":{"components/ListComponent.html":{}}}],["selectindex(index",{"_index":2164,"title":{},"body":{"components/ListComponent.html":{}}}],["selection.compon",{"_index":4076,"title":{},"body":{"changelog.html":{}}}],["selection.select(upload.item",{"_index":3997,"title":{},"body":{"components/UploadComponent.html":{}}}],["selection.toggl",{"_index":2161,"title":{},"body":{"components/ListComponent.html":{}}}],["selection.toggleall(upload.item",{"_index":3998,"title":{},"body":{"components/UploadComponent.html":{}}}],["selectmod",{"_index":2221,"title":{},"body":{"interfaces/ListConfig.html":{},"changelog.html":{}}}],["selectmodul",{"_index":3623,"title":{"modules/SelectModule.html":{}},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["selectnext",{"_index":2142,"title":{},"body":{"components/ListComponent.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["selectprev",{"_index":2143,"title":{},"body":{"components/ListComponent.html":{}}}],["selectupload",{"_index":3945,"title":{},"body":{"components/UploadComponent.html":{}}}],["selectupload(upload",{"_index":3959,"title":{},"body":{"components/UploadComponent.html":{}}}],["send",{"_index":3093,"title":{},"body":{"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["sensit",{"_index":3657,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/variables.html":{}}}],["sent",{"_index":3106,"title":{},"body":{"components/PasswordResetComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["serv",{"_index":4339,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes.html":{}}}],["server",{"_index":3746,"title":{},"body":{"components/TabsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["servic",{"_index":522,"title":{},"body":{"components/AssetListPopComponent.html":{},"modules/AuthModule.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"modules/LocationModule.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["session",{"_index":3473,"title":{},"body":{"injectables/SdkService.html":{}}}],["session(environment.environ",{"_index":3527,"title":{},"body":{"injectables/SdkService.html":{}}}],["set",{"_index":74,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["set([this.config.s",{"_index":3003,"title":{},"body":{"classes/Pagination.html":{}}}],["set(properti",{"_index":2753,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["set(symbol",{"_index":3702,"title":{},"body":{"injectables/SymbolService.html":{}}}],["set(typ",{"_index":3900,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["setapi(api",{"_index":3509,"title":{},"body":{"injectables/SdkService.html":{}}}],["setclientid",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["setdate(d",{"_index":1308,"title":{},"body":{"interfaces/Day.html":{}}}],["setemptystringstonul",{"_index":3419,"title":{},"body":{"injectables/ResourceService.html":{}}}],["setgroup",{"_index":509,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/UploadComponent.html":{}}}],["setgroup(group",{"_index":544,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/UploadComponent.html":{}}}],["setmod",{"_index":50,"title":{},"body":{"components/AceComponent.html":{}}}],["setmode(mod",{"_index":91,"title":{},"body":{"components/AceComponent.html":{}}}],["setter",{"_index":886,"title":{},"body":{"classes/Config.html":{}}}],["setthem",{"_index":51,"title":{},"body":{"components/AceComponent.html":{}}}],["settheme(them",{"_index":96,"title":{},"body":{"components/AceComponent.html":{}}}],["settimeout",{"_index":2693,"title":{},"body":{"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{}}}],["settimeout(resolv",{"_index":2333,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["settings.t",{"_index":4242,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["settot",{"_index":2961,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(itemcount",{"_index":3017,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(tot",{"_index":2987,"title":{},"body":{"classes/Pagination.html":{}}}],["setup",{"_index":4112,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["seturl",{"_index":2008,"title":{},"body":{"directives/ImageDirective.html":{}}}],["seturl(url",{"_index":2021,"title":{},"body":{"directives/ImageDirective.html":{}}}],["setvalu",{"_index":2372,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["setvalue(valu",{"_index":2385,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["share",{"_index":4541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shear",{"_index":4546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shift",{"_index":4603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shoot",{"_index":4356,"title":{},"body":{"index.html":{}}}],["shop",{"_index":4547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["short",{"_index":3492,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["shorthand",{"_index":4750,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["shortid",{"_index":2812,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["show",{"_index":500,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceDeletePopComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["showerror",{"_index":2499,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["showerror(err",{"_index":2534,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["showhead",{"_index":2144,"title":{},"body":{"components/ListComponent.html":{}}}],["showlabel",{"_index":2506,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["shown",{"_index":451,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthGuard.html":{},"interfaces/CrudConfig.html":{},"components/EntryListComponent.html":{},"components/IconComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/ResourceDeletePopComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["shownotif",{"_index":2856,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["showrawvalu",{"_index":2419,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["shrink",{"_index":4552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sie",{"_index":641,"title":{},"body":{"injectables/AuthGuard.html":{},"components/PasswordResetComponent.html":{}}}],["sign",{"_index":4425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signal",{"_index":4544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signup",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(undefin",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{}}}],["silent",{"_index":4031,"title":{},"body":{"interfaces/WithNotifications.html":{},"miscellaneous/variables.html":{}}}],["simi",{"_index":895,"title":{},"body":{"classes/Config.html":{}}}],["simibug",{"_index":1453,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["similar",{"_index":1521,"title":{},"body":{"components/EntryListComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/LoginComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{}}}],["simpl",{"_index":2853,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["sind",{"_index":642,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["singl",{"_index":399,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{}}}],["singleton",{"_index":3640,"title":{},"body":{"classes/Sorter.html":{}}}],["site",{"_index":2339,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["situat",{"_index":3884,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["size",{"_index":1721,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"interfaces/ListConfig.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["skin",{"_index":4638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skip",{"_index":449,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["skull",{"_index":4557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice",{"_index":2565,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"classes/Pagination.html":{}}}],["slice(item",{"_index":2991,"title":{},"body":{"classes/Pagination.html":{}}}],["slider",{"_index":4540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slot",{"_index":313,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["slot'},{'nam",{"_index":218,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["slot.compon",{"_index":2073,"title":{},"body":{"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{}}}],["slot.component.html",{"_index":1404,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["slot.component.t",{"_index":1403,"title":{},"body":{"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["slot.component.ts:11",{"_index":1407,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:14",{"_index":1412,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:18",{"_index":1410,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot/dynam",{"_index":1402,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"coverage.html":{}}}],["slothostdirect",{"_index":312,"title":{"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["small",{"_index":4558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smaller",{"_index":4633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smiley",{"_index":4604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smoother",{"_index":3088,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["soeben",{"_index":3110,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["solo",{"_index":442,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/core-classes/selection.html":{}}}],["somemodul",{"_index":1979,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["someth",{"_index":3586,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["somewher",{"_index":140,"title":{},"body":{"components/AceComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["soon",{"_index":364,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{}}}],["sophist",{"_index":803,"title":{},"body":{"classes/Collection.html":{},"index.html":{},"additional-documentation/core-classes/collection.html":{}}}],["sort",{"_index":1629,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["sort(((a",{"_index":3006,"title":{},"body":{"classes/Pagination.html":{}}}],["sort(item",{"_index":3650,"title":{},"body":{"classes/Sorter.html":{}}}],["sortabl",{"_index":1571,"title":{},"body":{"classes/Field.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["sortbi",{"_index":2222,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["sortboolean",{"_index":3645,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortboolean(a",{"_index":3661,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorter",{"_index":3638,"title":{"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}},"body":{"classes/Sorter.html":{},"coverage.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["sortierenfor",{"_index":4920,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["sortnumb",{"_index":3644,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortnumber(a",{"_index":3660,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sortstr",{"_index":3643,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortstring(a",{"_index":3658,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorttyp",{"_index":3641,"title":{},"body":{"classes/Sorter.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{}}}],["source.addeventlistener('entrycr",{"_index":1962,"title":{},"body":{"injectables/HistoryService.html":{}}}],["source.addeventlistener('entryupd",{"_index":1958,"title":{},"body":{"injectables/HistoryService.html":{}}}],["space",{"_index":4523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["span",{"_index":1220,"title":{},"body":{"interfaces/Day.html":{}}}],["spanchang",{"_index":1231,"title":{},"body":{"interfaces/Day.html":{}}}],["spancolor",{"_index":1221,"title":{},"body":{"interfaces/Day.html":{}}}],["speaker",{"_index":4559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speakingurl",{"_index":4826,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["spec.t",{"_index":4371,"title":{},"body":{"index.html":{}}}],["specif",{"_index":1610,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["specifi",{"_index":93,"title":{},"body":{"components/AceComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{}}}],["spell",{"_index":4563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spray",{"_index":4564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["squar",{"_index":2015,"title":{},"body":{"directives/ImageDirective.html":{},"miscellaneous/variables.html":{}}}],["src",{"_index":2006,"title":{},"body":{"directives/ImageDirective.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ace.html":{}}}],["src/app/app",{"_index":4796,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/app/app.component.html",{"_index":4785,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/app.modul",{"_index":4770,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/muffins/muffins.component.html",{"_index":4795,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/environ",{"_index":4761,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.prod.t",{"_index":4767,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.t",{"_index":4764,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/packag",{"_index":4308,"title":{},"body":{"index.html":{}}}],["ssl",{"_index":4778,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ssl\",without",{"_index":4780,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["stack",{"_index":2307,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"index.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["stackoverflow",{"_index":4610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stage",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["stand",{"_index":888,"title":{},"body":{"classes/Config.html":{}}}],["star",{"_index":4586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":1159,"title":{"changelog.html":{},"index.html":{}},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"pipes/MaxItemsPipe.html":{},"components/TabComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["startnow",{"_index":4789,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["state",{"_index":1042,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListHeaderComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["statement",{"_index":4147,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1148,"title":{},"body":{"modules/DataModule.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["statu",{"_index":1901,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{}}}],["stay",{"_index":2836,"title":{},"body":{"classes/Notification.html":{},"injectables/SymbolService.html":{},"changelog.html":{}}}],["sticki",{"_index":992,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["still",{"_index":4039,"title":{},"body":{"changelog.html":{}}}],["stop",{"_index":2317,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":1936,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{},"index.html":{}}}],["strategy=endless",{"_index":1458,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["stream",{"_index":1927,"title":{},"body":{"injectables/HistoryService.html":{},"dependencies.html":{}}}],["strike",{"_index":4565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":65,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/list.html":{}}}],["string,valu",{"_index":469,"title":{},"body":{"components/AssetListComponent.html":{},"components/EntryListComponent.html":{}}}],["string.replac",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{}}}],["stringfield",{"_index":3167,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["stringfield(label",{"_index":3183,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["structur",{"_index":1614,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["stuff",{"_index":2303,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["style",{"_index":2701,"title":{},"body":{"components/MockupComponent.html":{},"components/PopComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/popcomponent.html":{}}}],["style_format",{"_index":4671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles.scss",{"_index":4755,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["styleselect",{"_index":4692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":28,"title":{},"body":{"components/AceComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/TinymceComponent.html":{},"components/ToolbarComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["sub",{"_index":889,"title":{},"body":{"classes/Config.html":{}}}],["subbranch",{"_index":2131,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["subclass",{"_index":2531,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["subfold",{"_index":4335,"title":{},"body":{"index.html":{}}}],["subject",{"_index":554,"title":{},"body":{"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"additional-documentation/core-classes.html":{}}}],["submenu",{"_index":2634,"title":{},"body":{"components/MenuComponent.html":{}}}],["submit",{"_index":2494,"title":{},"body":{"components/LoginFormComponent.html":{},"changelog.html":{}}}],["subscrib",{"_index":478,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/EntryListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LocationSearchComponent.html":{},"components/PaginationComponent.html":{},"injectables/ResourceService.html":{},"components/SearchbarComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["subscribe((",{"_index":3593,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["subscribe((chang",{"_index":2086,"title":{},"body":{"components/InputComponent.html":{}}}],["subscribe((day",{"_index":1236,"title":{},"body":{"interfaces/Day.html":{}}}],["subscribe((ev",{"_index":1774,"title":{},"body":{"directives/FocusDirective.html":{}}}],["subscribe((upd",{"_index":1519,"title":{},"body":{"components/EntryListComponent.html":{}}}],["subscribe(editor",{"_index":3825,"title":{},"body":{"components/TinymceComponent.html":{}}}],["subscribe(timespan",{"_index":1239,"title":{},"body":{"interfaces/Day.html":{}}}],["subscribe(valu",{"_index":3599,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["subscript",{"_index":4566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["substract",{"_index":4567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subtract(weeksbefor",{"_index":1285,"title":{},"body":{"interfaces/Day.html":{}}}],["succes",{"_index":2526,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["success",{"_index":2466,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["success/error",{"_index":2869,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["successfulli",{"_index":1025,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["such",{"_index":1615,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["suitabl",{"_index":1621,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["sunni",{"_index":4568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super",{"_index":358,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/AssetListPopComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["super(loaderservic",{"_index":1509,"title":{},"body":{"components/EntryListComponent.html":{}}}],["super(popservic",{"_index":576,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{}}}],["super(sdk",{"_index":2027,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.load",{"_index":2018,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.load(id).then(this.use.bind(thi",{"_index":2031,"title":{},"body":{"directives/ImageDirective.html":{}}}],["superscript",{"_index":4569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":186,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"modules.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["sure",{"_index":62,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"components/LoaderComponent.html":{},"interfaces/Update.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["svg",{"_index":4382,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1023,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoaderComponent.html":{},"components/SearchbarComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["switchmap",{"_index":1877,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["symbol",{"_index":920,"title":{"interfaces/Symbol.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["symbol.cont",{"_index":3722,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbol.interfac",{"_index":3692,"title":{},"body":{"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{}}}],["symbol.nam",{"_index":3720,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbol.pip",{"_index":3687,"title":{},"body":{"modules/SymbolModule.html":{}}}],["symbol.servic",{"_index":3685,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"changelog.html":{}}}],["symbol/symbol.interfac",{"_index":1983,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{}}}],["symbol/symbol.modul",{"_index":1809,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["symbol/symbol.servic",{"_index":2000,"title":{},"body":{"injectables/IconService.html":{},"components/InputErrorsComponent.html":{}}}],["symbolmodul",{"_index":1793,"title":{"modules/SymbolModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["symbolpip",{"_index":3686,"title":{"injectables/SymbolPipe.html":{}},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"coverage.html":{}}}],["symbols.map(symbol",{"_index":3723,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservic",{"_index":921,"title":{"injectables/SymbolService.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"injectables/IconService.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["symbolservice.resolv",{"_index":3691,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["symlink",{"_index":4319,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["symlinks.sh",{"_index":4330,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["sync",{"_index":3234,"title":{},"body":{"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["synchron",{"_index":4572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":1065,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["t",{"_index":819,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{}}}],["t\\=(?:[0",{"_index":4711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tab",{"_index":3728,"title":{},"body":{"components/TabComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["tab'",{"_index":3732,"title":{},"body":{"components/TabComponent.html":{}}}],["tab'},{'nam",{"_index":288,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["tab.activ",{"_index":3780,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.component.html",{"_index":3729,"title":{},"body":{"components/TabComponent.html":{}}}],["tab.el.nativeelement.getattribute('select",{"_index":3775,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.label",{"_index":3783,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.par",{"_index":3774,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.rout",{"_index":3770,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab/tab.compon",{"_index":3763,"title":{},"body":{"components/TabsComponent.html":{},"modules/UtilityModule.html":{}}}],["tabcompon",{"_index":287,"title":{"components/TabComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["tabl",{"_index":1211,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["table_class_list",{"_index":4657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table_default_attribut",{"_index":4655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table_toolbar",{"_index":4654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":4278,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":4589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabs'},{'nam",{"_index":290,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["tabs.component.html",{"_index":3749,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs/tabs.compon",{"_index":3742,"title":{},"body":{"components/TabComponent.html":{},"modules/UtilityModule.html":{}}}],["tabscompon",{"_index":289,"title":{"components/TabsComponent.html":{},"additional-documentation/ui/tabscomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":404,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Field.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["tagsfield",{"_index":3168,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["tagsfield(label",{"_index":3185,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["take",{"_index":902,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/core-classes.html":{}}}],["tank",{"_index":4574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tap",{"_index":4468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tape",{"_index":4453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":130,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ResourceConfig.html":{},"components/TinymceComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["target[0",{"_index":1514,"title":{},"body":{"components/EntryListComponent.html":{}}}],["target[1",{"_index":1515,"title":{},"body":{"components/EntryListComponent.html":{}}}],["targetid",{"_index":3329,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["targettyp",{"_index":3330,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["task",{"_index":4324,"title":{},"body":{"index.html":{}}}],["tbd",{"_index":4862,"title":{},"body":{"additional-documentation/ui.html":{},"additional-documentation/ui/formcomponent.html":{}}}],["tell",{"_index":1602,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["template::view",{"_index":3257,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["templateid",{"_index":3256,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["templateurl",{"_index":30,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["test",{"_index":3652,"title":{},"body":{"classes/Sorter.html":{},"changelog.html":{},"index.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["test.t",{"_index":4370,"title":{},"body":{"index.html":{}}}],["test@test.d",{"_index":2710,"title":{},"body":{"components/MockupComponent.html":{}}}],["text",{"_index":1349,"title":{},"body":{"components/DefaultOutputComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/Symbol.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["textarea",{"_index":3905,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["textbox",{"_index":4702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["textcolor",{"_index":4645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["textcolor_map",{"_index":4658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["that",{"_index":4788,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["theme",{"_index":54,"title":{},"body":{"components/AceComponent.html":{},"miscellaneous/variables.html":{}}}],["themelist.j",{"_index":151,"title":{},"body":{"components/AceComponent.html":{}}}],["then((_entri",{"_index":1092,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["then((_resourc",{"_index":3445,"title":{},"body":{"injectables/ResourceService.html":{}}}],["then((_upload",{"_index":3989,"title":{},"body":{"components/UploadComponent.html":{}}}],["then((asset",{"_index":425,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((assetlist",{"_index":1693,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((avail",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((config",{"_index":1524,"title":{},"body":{"components/EntryListComponent.html":{},"injectables/ModelConfigService.html":{}}}],["then((entri",{"_index":1113,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"interfaces/Update.html":{}}}],["then((loadedentri",{"_index":985,"title":{},"body":{"components/CrudComponent.html":{}}}],["then((method",{"_index":973,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["then((r",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginFormComponent.html":{}}}],["then((resolvedapi",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((resourc",{"_index":3451,"title":{},"body":{"injectables/ResourceService.html":{}}}],["then((respons",{"_index":1706,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((schema",{"_index":2790,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["then((upload",{"_index":1700,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then((us",{"_index":2483,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{}}}],["then(_method",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(dmassetlist",{"_index":1723,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["then(editor",{"_index":3832,"title":{},"body":{"components/TinymceComponent.html":{}}}],["then(list",{"_index":1461,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["then(r",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ResourceDeletePopComponent.html":{},"interfaces/Upload.html":{}}}],["then(result",{"_index":2445,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["then(sourc",{"_index":1951,"title":{},"body":{"injectables/HistoryService.html":{}}}],["then(this.seturl.bind(thi",{"_index":2040,"title":{},"body":{"directives/ImageDirective.html":{}}}],["therefor",{"_index":2130,"title":{},"body":{"interfaces/ItemConfig.html":{},"index.html":{}}}],["thin",{"_index":1491,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this._api",{"_index":3484,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.m",{"_index":3546,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then",{"_index":3521,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then(api",{"_index":3539,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.setclientid(environment.clientid",{"_index":3540,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._toggle.emit(vis",{"_index":3141,"title":{},"body":{"components/PopComponent.html":{}}}],["this.account",{"_index":3480,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.act",{"_index":1380,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["this.activated.next",{"_index":3743,"title":{},"body":{"components/TabComponent.html":{}}}],["this.add(item",{"_index":873,"title":{},"body":{"classes/Collection.html":{}}}],["this.addall(item",{"_index":878,"title":{},"body":{"classes/Collection.html":{}}}],["this.addsystempropertiestofieldconfig(fieldconfig",{"_index":2795,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.api",{"_index":360,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["this.apiresolv",{"_index":3522,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.app.tick",{"_index":3828,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.asset",{"_index":426,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.assetgroup",{"_index":583,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{}}}],["this.assetgroupid",{"_index":581,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/UploadComponent.html":{}}}],["this.assetgrouplistpromis",{"_index":1733,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.assetid",{"_index":415,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["this.auth.getallowedmodelmethods(this.model",{"_index":971,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.auth.getallowedresourcemethods(this.rel",{"_index":3361,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.auth.login",{"_index":2482,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.auth.resetpassword(this.email",{"_index":3107,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.autofocu",{"_index":3602,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.autoload",{"_index":416,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["this.bakery.bake().then",{"_index":2876,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.base64uuid",{"_index":3291,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.blockevent(",{"_index":3877,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.calendar.writevalue(valu",{"_index":1179,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["this.canalter(valu",{"_index":1328,"title":{},"body":{"interfaces/Day.html":{}}}],["this.candelet",{"_index":3391,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.cel",{"_index":1280,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[0",{"_index":1255,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[this.cells.length",{"_index":1256,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cent",{"_index":2388,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.change.asobserv",{"_index":2967,"title":{},"body":{"classes/Pagination.html":{}}}],["this.change.emit(coord",{"_index":2463,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.change.emit(posit",{"_index":2394,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.change.emit(this.valu",{"_index":3827,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.change.next(this.config",{"_index":3014,"title":{},"body":{"classes/Pagination.html":{}}}],["this.changed.emit(chang",{"_index":2087,"title":{},"body":{"components/InputComponent.html":{}}}],["this.changes.asobserv",{"_index":1086,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.asobservable().filter((chang",{"_index":1087,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.next",{"_index":1104,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changesenvironment.next(environ",{"_index":3525,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.changespan.asobservable().debouncetime(800",{"_index":1238,"title":{},"body":{"interfaces/Day.html":{}}}],["this.changespan.next(this.timespan",{"_index":1254,"title":{},"body":{"interfaces/Day.html":{}}}],["this.checkpermission(`${model}:${method",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.checkpermission(`${this.resolvevariables(permissions[method",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.clean(oldvalu",{"_index":1105,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clean(valu",{"_index":1101,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clear",{"_index":3604,"title":{},"body":{"components/SearchbarComponent.html":{},"components/UploadComponent.html":{}}}],["this.collect",{"_index":2196,"title":{},"body":{"components/ListComponent.html":{}}}],["this.color",{"_index":1268,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors.length",{"_index":2689,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.colors[_moment.toisostr",{"_index":1269,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors[this.getlevel(level",{"_index":2688,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.columnclicked.emit($ev",{"_index":588,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.columnclicked.emit(item",{"_index":993,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.columnclicked.observers.length",{"_index":587,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(compon",{"_index":1417,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.componentinst",{"_index":2081,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance['writevalu",{"_index":2091,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance['writevalue'](valu",{"_index":2092,"title":{},"body":{"components/InputComponent.html":{}}}],["this.config",{"_index":995,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.alwaysloadentri",{"_index":980,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.availables",{"_index":3021,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.fields[target[1",{"_index":1513,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.config.level",{"_index":982,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.method",{"_index":972,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.methods.indexof(method",{"_index":974,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.pag",{"_index":3008,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.popclass",{"_index":996,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.rang",{"_index":3056,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.config.s",{"_index":3005,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config[key",{"_index":898,"title":{},"body":{"classes/Config.html":{}}}],["this.config[key][properti",{"_index":899,"title":{},"body":{"classes/Config.html":{}}}],["this.config[relationnam",{"_index":3193,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.configinput",{"_index":2193,"title":{},"body":{"components/ListComponent.html":{}}}],["this.configure('model",{"_index":2763,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.confirminput",{"_index":3399,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.container.nativeel",{"_index":3830,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.container.nativeelement.innerhtml",{"_index":2599,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.container.nativeelement.styl",{"_index":3061,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.control",{"_index":2077,"title":{},"body":{"components/InputComponent.html":{}}}],["this.control.errors[key",{"_index":2108,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.create(model",{"_index":1091,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["this.create(rel",{"_index":3444,"title":{},"body":{"injectables/ResourceService.html":{}}}],["this.createclicked.next",{"_index":3366,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.createclicked.observers.length",{"_index":3365,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.created(this.symbol.resolve('field.label.cr",{"_index":3219,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.crud.chang",{"_index":1518,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.crud.save(model",{"_index":2813,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.custom",{"_index":3983,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.dat",{"_index":1309,"title":{},"body":{"interfaces/Day.html":{}}}],["this.datamanag",{"_index":3535,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.datamanager.datamanager(this._api.datamanagerid",{"_index":3517,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.date.clone().add(valu",{"_index":1324,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dayclicked.emit(_mo",{"_index":1317,"title":{},"body":{"interfaces/Day.html":{}}}],["this.deactivated.next",{"_index":3744,"title":{},"body":{"components/TabComponent.html":{}}}],["this.defaultplacehold",{"_index":3590,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.defaulttim",{"_index":2951,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.delay",{"_index":3143,"title":{},"body":{"components/PopComponent.html":{}}}],["this.deleted.next(r",{"_index":3395,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.desktopnotification(inst",{"_index":2939,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.dis",{"_index":1378,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.disabledragend",{"_index":1262,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disabledragstart",{"_index":1261,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disableupdates(key",{"_index":1949,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.displaydate(tru",{"_index":3911,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.drag",{"_index":1242,"title":{},"body":{"interfaces/Day.html":{}}}],["this.drag.asobservable().debouncetime(100",{"_index":1235,"title":{},"body":{"interfaces/Day.html":{}}}],["this.drag.next(day",{"_index":1266,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.first",{"_index":1244,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.last",{"_index":1246,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dropday(day",{"_index":1237,"title":{},"body":{"interfaces/Day.html":{}}}],["this.ecasset",{"_index":414,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.ecdropzone.emit(",{"_index":1385,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.ecfocu",{"_index":1773,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.ecimag",{"_index":2028,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.ecimage.assetid",{"_index":2029,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.editor",{"_index":152,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.editor.buttons.image.onclick(tru",{"_index":3837,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.destroy",{"_index":2605,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.getcont",{"_index":2603,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.on('chang",{"_index":3839,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.on('dblclick",{"_index":3835,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.session.setmode('ace/mod",{"_index":177,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setcontent(this.valu",{"_index":3834,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.settheme('ace/them",{"_index":178,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setvalue(this.valu",{"_index":161,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.subscribe('editableinput",{"_index":2602,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.element.nativeelement.blur",{"_index":1776,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.element.nativeelement.focu",{"_index":1775,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.elementref.nativeelement.src",{"_index":2042,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.emitter.asobserv",{"_index":2932,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.emitter.next(inst",{"_index":2940,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.enableupdates(resourc",{"_index":1950,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.endless",{"_index":1454,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entri",{"_index":1489,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entryid",{"_index":1487,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entrylist",{"_index":1464,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.follownextlink().then(list",{"_index":1470,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.followprevlink().then(list",{"_index":1471,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.getallitem",{"_index":1465,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasfirstlink",{"_index":1473,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasnextlink",{"_index":1472,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrypop.edit(loadedentri",{"_index":986,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.environ",{"_index":3487,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.error",{"_index":1555,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.cod",{"_index":1557,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.emit(err",{"_index":2554,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.error.messag",{"_index":1558,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.errormessag",{"_index":2551,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.ev",{"_index":3984,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.eventsources[key",{"_index":1952,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[key].clos",{"_index":1955,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[rel",{"_index":1948,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.fb.group",{"_index":2547,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.field",{"_index":2074,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["this.field.init",{"_index":2089,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.init(this.componentinst",{"_index":2090,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.input",{"_index":2080,"title":{},"body":{"components/InputComponent.html":{}}}],["this.fieldhost.viewcontainerref",{"_index":1418,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.fileinput",{"_index":3974,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.click",{"_index":3975,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.valu",{"_index":3980,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.assetgrouplist().then(assetgroup",{"_index":582,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{}}}],["this.fileservice.uploadassets(fil",{"_index":3987,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.uploadfiles(fil",{"_index":3988,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.filestoupload",{"_index":3982,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.filterlist(past",{"_index":3595,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.filterlist(valu",{"_index":3600,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.focusevent.emit(tru",{"_index":3603,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.form",{"_index":2546,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.get('password').setvalu",{"_index":2553,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.reset",{"_index":2561,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.valid",{"_index":2559,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.format",{"_index":1311,"title":{},"body":{"interfaces/Day.html":{}}}],["this.generatefieldconfig(model",{"_index":2815,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.geocodelatlng",{"_index":1906,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocodeservice.autocompleteaddress(this.searchinput.nativeel",{"_index":2462,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.geocodeservice.getnearestaddress(valu",{"_index":2444,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.get(model",{"_index":2787,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.get(model).field",{"_index":2788,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.get(nam",{"_index":3721,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.getaccount",{"_index":3533,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.getalgorithm(item",{"_index":3671,"title":{},"body":{"classes/Sorter.html":{}}}],["this.getapi(email",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getcolor(1",{"_index":2691,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getdaycolor(d",{"_index":1299,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getdayheat(d",{"_index":1300,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getformdata(fil",{"_index":1692,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.getmonth(date.clon",{"_index":1313,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getmonth(this.date.clon",{"_index":1281,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getpag",{"_index":3019,"title":{},"body":{"classes/Pagination.html":{}}}],["this.getpath(item",{"_index":2683,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getpermission().then",{"_index":2948,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.getvalidators(field",{"_index":1835,"title":{},"body":{"injectables/FormService.html":{}}}],["this.group",{"_index":2076,"title":{},"body":{"components/InputComponent.html":{}}}],["this.group.get(this.field.properti",{"_index":2078,"title":{},"body":{"components/InputComponent.html":{}}}],["this.groupchanged.emit(group",{"_index":577,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/UploadComponent.html":{}}}],["this.groupchanged.emit(this.assetgroupid",{"_index":586,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.has(item",{"_index":869,"title":{},"body":{"classes/Collection.html":{}}}],["this.heatmap",{"_index":1271,"title":{},"body":{"interfaces/Day.html":{}}}],["this.heatmap[_moment.toisostr",{"_index":1272,"title":{},"body":{"interfaces/Day.html":{}}}],["this.hexcolor",{"_index":3209,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.hid",{"_index":2352,"title":{},"body":{"components/LoaderComponent.html":{},"components/PopComponent.html":{},"components/ResourceDeletePopComponent.html":{}}}],["this.host.nativeelement.classlist.add('i",{"_index":2345,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.host.nativeelement.classlist.remove('i",{"_index":2346,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.hov",{"_index":2685,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.hoverdelay",{"_index":2694,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.icon",{"_index":1984,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.get(this.nam",{"_index":1985,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.registri",{"_index":1989,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.set(emojiicon",{"_index":1981,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["this.iconservice.use(emojiicon",{"_index":1980,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["this.id",{"_index":1647,"title":{},"body":{"classes/Field.html":{}}}],["this.index(item",{"_index":865,"title":{},"body":{"classes/Collection.html":{}}}],["this.init",{"_index":179,"title":{},"body":{"components/AceComponent.html":{},"injectables/SdkService.html":{}}}],["this.initfilt",{"_index":1526,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.initfilterquery((properti",{"_index":1511,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.initmethod",{"_index":3359,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.inittab",{"_index":3778,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.input",{"_index":175,"title":{},"body":{"components/AceComponent.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.input.propagatechange(this.editor.getvalu",{"_index":176,"title":{},"body":{"components/AceComponent.html":{}}}],["this.input.propagatechange(this.valu",{"_index":4844,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.input.propagatechange(valu",{"_index":2441,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.isactive(item",{"_index":2690,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.isfirst",{"_index":3012,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isimmutableproperty(key",{"_index":1111,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.islast",{"_index":3011,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isnewasset(a",{"_index":1680,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.isnewasset(unresolv",{"_index":1715,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.isselected(item",{"_index":2686,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.issystemproperty(properti",{"_index":2793,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.item",{"_index":861,"title":{},"body":{"classes/Collection.html":{},"directives/EntriesDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/OutputComponent.html":{}}}],["this.item.getfield(this.properti",{"_index":2075,"title":{},"body":{"components/InputComponent.html":{}}}],["this.items.concat(item",{"_index":1466,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.filter((item",{"_index":1467,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.find((_item",{"_index":1468,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.indexof(item",{"_index":864,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.length",{"_index":872,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.push(item",{"_index":863,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(this.index(item",{"_index":874,"title":{},"body":{"classes/Collection.html":{}}}],["this.keyup.asobservable().debouncetime(this.debouncetim",{"_index":3597,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.label",{"_index":1650,"title":{},"body":{"classes/Field.html":{}}}],["this.level",{"_index":1488,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.lightmodel",{"_index":1542,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.list",{"_index":2194,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/SearchbarComponent.html":{}}}],["this.list.config",{"_index":2198,"title":{},"body":{"components/ListComponent.html":{},"components/SearchbarComponent.html":{}}}],["this.list.config.alwaysshowhead",{"_index":2206,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.disablehead",{"_index":2203,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.identifi",{"_index":3612,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.list.config.identifierpattern",{"_index":3609,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.list.config.label",{"_index":3608,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.list.config.selectmod",{"_index":2201,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.list.config.titl",{"_index":2205,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.fields.length",{"_index":2204,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.filter(properti",{"_index":2261,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.isempti",{"_index":2207,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.items.indexof(this.selection.items[0",{"_index":2211,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.items.length",{"_index":2214,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.items[index",{"_index":2208,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.list",{"_index":3606,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.list.list.filter(this.properti",{"_index":3613,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.list.load",{"_index":1520,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.list.pag",{"_index":2284,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.list.select",{"_index":3614,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.list.selection.isempti",{"_index":3621,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.list.selectnext",{"_index":3620,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.list.selectprev",{"_index":3617,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.load",{"_index":418,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"components/UploadComponent.html":{}}}],["this.loadcomponent(this.compon",{"_index":2079,"title":{},"body":{"components/InputComponent.html":{}}}],["this.loadcomponent(this.field.output",{"_index":2956,"title":{},"body":{"components/OutputComponent.html":{}}}],["this.loaded.emit(asset",{"_index":427,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.loaded.emit(entri",{"_index":1490,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.loader.wait(delet",{"_index":3397,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.loader.wait(login",{"_index":2489,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{}}}],["this.loader.wait(reset",{"_index":3120,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.loader.wait(this.promis",{"_index":1463,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.loaderservice.use(this.globalload",{"_index":2331,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.loaderservice.wait(load",{"_index":1963,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(new",{"_index":2332,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.loaderservice.wait(this.loadentry(item",{"_index":994,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.loaderservice.wait(this.promises[key",{"_index":1954,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(this.uploadpromis",{"_index":3995,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.localload",{"_index":2335,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.localloader.wait(new",{"_index":2336,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.lockform",{"_index":3116,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.login(this.form.valu",{"_index":2560,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.map.setvalue(valu",{"_index":2438,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.map.valu",{"_index":2442,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.maploader.load().then",{"_index":1905,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.matches(chang",{"_index":1088,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.mod",{"_index":156,"title":{},"body":{"components/AceComponent.html":{}}}],["this.model",{"_index":970,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.modelconfig.generateconfig(this.model",{"_index":1523,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.modelconfig.getlightmodel(this.model).then(model",{"_index":1541,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.modelconfig.set('muffin",{"_index":4806,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.monthformat",{"_index":1233,"title":{},"body":{"interfaces/Day.html":{}}}],["this.mustreload(item",{"_index":981,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.nam",{"_index":1987,"title":{},"body":{"components/IconComponent.html":{}}}],["this.nestedcrudconfig",{"_index":3919,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.ngzone.run",{"_index":1883,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.noapi",{"_index":3518,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noapi(api",{"_index":3541,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noclientid",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.notif",{"_index":988,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.notifications.add(notif",{"_index":2899,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.emit",{"_index":634,"title":{},"body":{"injectables/AuthGuard.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.notifications.remove(notif",{"_index":2903,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.removeall(notification.hid",{"_index":2889,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.defaulttim",{"_index":2886,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.emit",{"_index":987,"title":{},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.notificationservice.emitter$.subscribe((notif",{"_index":2887,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.observeelement(el",{"_index":1897,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.omittedfields.indexof(properti",{"_index":2767,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.opt",{"_index":1460,"title":{},"body":{"directives/EntriesDirective.html":{},"components/MediumEditorComponent.html":{},"components/UploadComponent.html":{}}}],["this.options.pag",{"_index":1455,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.options.placehold",{"_index":2600,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.pag",{"_index":3009,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{}}}],["this.page.first.nativeelement.clientwidth",{"_index":3053,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagecontain",{"_index":3050,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagecontainer.nativeelement.styl",{"_index":3058,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pages.length",{"_index":3010,"title":{},"body":{"classes/Pagination.html":{}}}],["this.pagin",{"_index":3045,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagination.change$.subscribe((config",{"_index":3046,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagination.getpag",{"_index":3054,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.par",{"_index":2680,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getlevel(++level",{"_index":2687,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getpath(this.rout",{"_index":2698,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parsetype(schema.properties[property].titl",{"_index":2799,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.paste.asobserv",{"_index":3592,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.placehold",{"_index":1649,"title":{},"body":{"classes/Field.html":{},"components/MediumEditorComponent.html":{}}}],["this.pop",{"_index":3367,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.cr",{"_index":3368,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.edit(item.getbodi",{"_index":3362,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.hid",{"_index":3401,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{}}}],["this.pop.show",{"_index":3400,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{}}}],["this.pops.foreach((pop",{"_index":2259,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.popservice.stack.add(thi",{"_index":3142,"title":{},"body":{"components/PopComponent.html":{}}}],["this.popservice.stack.remove(thi",{"_index":3144,"title":{},"body":{"components/PopComponent.html":{}}}],["this.preventdefault(",{"_index":3596,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.promis",{"_index":423,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.promises[key",{"_index":1947,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.propagatechang",{"_index":181,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.propagatechange(chang",{"_index":2088,"title":{},"body":{"components/InputComponent.html":{}}}],["this.propagatechange(this.editor.getvalu",{"_index":166,"title":{},"body":{"components/AceComponent.html":{}}}],["this.propagatechange(this.valu",{"_index":2604,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["this.propagatechange(valu",{"_index":2440,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.properti",{"_index":1651,"title":{},"body":{"classes/Field.html":{},"components/InputComponent.html":{},"components/SearchbarComponent.html":{}}}],["this.property}_${date.now",{"_index":1648,"title":{},"body":{"classes/Field.html":{}}}],["this.queri",{"_index":3605,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.readi",{"_index":154,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["this.ready.then",{"_index":3516,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.ready.then((editor",{"_index":163,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.ready.then(editor",{"_index":3841,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.redirect.next",{"_index":644,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.registri",{"_index":3713,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry.find(symbol",{"_index":3719,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry.indexof(this.get(symbol.nam",{"_index":3724,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry.push(symbol",{"_index":3725,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry[index",{"_index":3726,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.rel",{"_index":3360,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.remove(item",{"_index":875,"title":{},"body":{"classes/Collection.html":{}}}],["this.removeall(undefin",{"_index":876,"title":{},"body":{"classes/Collection.html":{}}}],["this.resourc",{"_index":3382,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.resourceconfig.get('dmasset",{"_index":1697,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get('legacyasset",{"_index":1709,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get(rel",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resourceconfig.get(relation).permiss",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resourceservice.chang",{"_index":1522,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.resourceservice.changes.next",{"_index":1702,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/HistoryService.html":{},"interfaces/Upload.html":{}}}],["this.resourceservice.del(this.rel",{"_index":3393,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.roots[this._api.datamanagerid",{"_index":3515,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.rout",{"_index":2673,"title":{},"body":{"components/MenuComponent.html":{},"components/TabsComponent.html":{}}}],["this.route.children",{"_index":2674,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.route.param",{"_index":3601,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.router.events.subscribe((ev",{"_index":3765,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.navigate(['profil",{"_index":4804,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{}}}],["this.router.navigate([tab.rout",{"_index":3781,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.url",{"_index":2682,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.indexof(path",{"_index":2684,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.split('?')[0",{"_index":1928,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.safetyword",{"_index":3398,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.sanitized.bypasssecuritytrusthtml(valu",{"_index":3464,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["this.schemarequests[model",{"_index":3543,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk",{"_index":1528,"title":{},"body":{"components/EntryListComponent.html":{}}}],["this.sdk.account",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.emailavail",{"_index":4722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.sdk.accounts.m",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.signup(email",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api",{"_index":420,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"components/UploadComponent.html":{}}}],["this.sdk.api.asset(unresolved[0]).then(asset",{"_index":1725,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.assetgrouplist",{"_index":1734,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.assetlist",{"_index":1727,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createasset(data",{"_index":1704,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createassets(data",{"_index":1705,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createentry(model",{"_index":1112,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["this.sdk.api.dmassetlist(assetgroupid",{"_index":1720,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.emailavailable(email",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.entry(this.model",{"_index":983,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntryDirective.html":{}}}],["this.sdk.api.entrylist(this.model",{"_index":1459,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.sdk.api.logout",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.m",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.modellist()).then((model",{"_index":2818,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.api.signup(email",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.changesenvironment.subscribe(env",{"_index":3437,"title":{},"body":{"injectables/ResourceService.html":{}}}],["this.sdk.environ",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.environment.clientid",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.getschema(model",{"_index":2789,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.init",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then",{"_index":2817,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.ready.then((us",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then(account",{"_index":3501,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk.ready.then(us",{"_index":633,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.sdk.root.then((root",{"_index":359,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["this.sdk.sess",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.session.logout().catch",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.us",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.search.clear",{"_index":2437,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.search.searchinput.nativeelement.valu",{"_index":2443,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.searchbar",{"_index":578,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.searchbar.clear",{"_index":579,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.searchbar.focusevent.emit(tru",{"_index":580,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.searchinput",{"_index":2460,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.searchinput.nativeelement.valu",{"_index":2461,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.select",{"_index":589,"title":{},"body":{"components/AssetListPopComponent.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{}}}],["this.select(match",{"_index":3772,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.select(tab",{"_index":3776,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(event.url",{"_index":3766,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(this.router.url",{"_index":3777,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selected.deactiv",{"_index":3779,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selected.emit(new",{"_index":3611,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.selected.emit(select",{"_index":2200,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selected.emit(this.list.selection.items[0",{"_index":3622,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.selected.startof('day').diff(_mo",{"_index":1321,"title":{},"body":{"interfaces/Day.html":{}}}],["this.selectindex(index",{"_index":2213,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.isempti",{"_index":2210,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.removeal",{"_index":2212,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.select(this.list.items[index",{"_index":2209,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.toggle($ev",{"_index":591,"title":{},"body":{"components/AssetListPopComponent.html":{}}}],["this.selection.toggle(item",{"_index":1545,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.selection.update$.subscribe((select",{"_index":2199,"title":{},"body":{"components/ListComponent.html":{}}}],["this.sess",{"_index":3526,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.session.setclientid(environment.clientid",{"_index":3529,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.set",{"_index":3831,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.setd",{"_index":1259,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(_mo",{"_index":1315,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(day.date.clone().subtract(1",{"_index":1258,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(mo",{"_index":1330,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.d",{"_index":1276,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.date.clone().add(valu",{"_index":1329,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.select",{"_index":1274,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setmode(this.mod",{"_index":157,"title":{},"body":{"components/AceComponent.html":{}}}],["this.sets[key",{"_index":3716,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.sets[object.keys(this.sets)[0",{"_index":3715,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.settheme(this.them",{"_index":159,"title":{},"body":{"components/AceComponent.html":{}}}],["this.settotal(tot",{"_index":3007,"title":{},"body":{"classes/Pagination.html":{}}}],["this.setvalue(posit",{"_index":2393,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.show",{"_index":2348,"title":{},"body":{"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["this.solo",{"_index":2202,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.sorttype[types[0",{"_index":3669,"title":{},"body":{"classes/Sorter.html":{}}}],["this.spanchanged.emit(this.timespan",{"_index":1240,"title":{},"body":{"interfaces/Day.html":{}}}],["this.stack.add(promis",{"_index":2347,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.stack.items.length",{"_index":3159,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.items[this.stack.items.length",{"_index":3161,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.remove(latestpop",{"_index":3163,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.removeal",{"_index":2353,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.stringfield(this.symbol.resolve('field.label.nam",{"_index":3238,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.submit",{"_index":2558,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.success.emit",{"_index":3117,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.success.emit(_upload",{"_index":3990,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.success.emit(r",{"_index":2562,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.success.emit(us",{"_index":2485,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol",{"_index":3220,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.group",{"_index":3247,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.haspendingemail",{"_index":3243,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.languag",{"_index":3244,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.st",{"_index":3250,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('app.field.label.app",{"_index":3265,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('asset.field.label.assetgroupid",{"_index":3279,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('asset.field.label.fil",{"_index":3276,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('asset.field.label.thumb",{"_index":3272,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('client.field.label.callbackurl",{"_index":3308,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('client.field.label.clientid",{"_index":3306,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmaccount.field.label.haspassword",{"_index":3252,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmaccount.field.label.pend",{"_index":3254,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.assetid",{"_index":3297,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.capt",{"_index":3299,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.dupl",{"_index":3300,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.fil",{"_index":3292,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.thumbnail",{"_index":3302,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.typ",{"_index":3304,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('error",{"_index":1556,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.symbol.resolve('error.delet",{"_index":3396,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.symbol.resolve('error.input",{"_index":2109,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.input.invalid",{"_index":2110,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.load",{"_index":991,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.symbol.resolve('error.upload",{"_index":3994,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve('field.creator.ecus",{"_index":3932,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('field.label.config",{"_index":3212,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.cr",{"_index":2771,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.descript",{"_index":3211,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.email",{"_index":3239,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.id",{"_index":2769,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.label",{"_index":3315,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.modifi",{"_index":2776,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.nam",{"_index":3314,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.password",{"_index":3241,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.shortid",{"_index":3264,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.titl",{"_index":3275,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.typ",{"_index":3326,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('login.error",{"_index":2487,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('login.success",{"_index":2484,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('moment.format.d",{"_index":1190,"title":{},"body":{"pipes/DatetimePipe.html":{},"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('moment.format.month",{"_index":1234,"title":{},"body":{"interfaces/Day.html":{}}}],["this.symbol.resolve('moment.format.tim",{"_index":3930,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('platform.field.label.platform",{"_index":3268,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('platform.field.label.platformtyp",{"_index":3270,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('role.field.label.account",{"_index":3316,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('role.field.label.addregist",{"_index":3320,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('role.field.label.addunregist",{"_index":3322,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('searchbar.placehold",{"_index":3591,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["this.symbol.resolve('success.delet",{"_index":3394,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["this.symbol.resolve('success.upload",{"_index":3991,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve('template.field.label.templ",{"_index":3258,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('template.field.label.vers",{"_index":3260,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve(nam",{"_index":3693,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["this.tab",{"_index":3767,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.find((tab",{"_index":3769,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.foreach((tab",{"_index":3773,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tagsfield(this.symbol.resolve('account.field.label.permiss",{"_index":3246,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('asset.field.label.tag",{"_index":3277,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('client.field.label.disablestrategi",{"_index":3312,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('client.field.label.tokenmethod",{"_index":3310,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('datamanager.field.label.publicassetright",{"_index":3216,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('field.label.local",{"_index":3214,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.them",{"_index":158,"title":{},"body":{"components/AceComponent.html":{}}}],["this.thumb",{"_index":2037,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.tim",{"_index":2885,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.timeout",{"_index":2692,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.timespan",{"_index":1253,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timespan[1",{"_index":1298,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timestamp",{"_index":2350,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.tot",{"_index":3013,"title":{},"body":{"classes/Pagination.html":{}}}],["this.translatecontain",{"_index":3047,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.tre",{"_index":2175,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["this.typ",{"_index":2844,"title":{},"body":{"classes/Notification.html":{}}}],["this.typeconfig.displayaccount",{"_index":2778,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.displayd",{"_index":2772,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["this.typeconfig.get(type.nam",{"_index":2807,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.groupd",{"_index":2773,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["this.types[typ",{"_index":3924,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.upd",{"_index":1554,"title":{},"body":{"components/ErrorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.update(model",{"_index":1090,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["this.update(rel",{"_index":3443,"title":{},"body":{"injectables/ResourceService.html":{}}}],["this.update.asobserv",{"_index":821,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(thi",{"_index":870,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(this.editor",{"_index":3840,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.updateaddress",{"_index":2439,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.upload(fil",{"_index":3985,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadfiles(e.target.fil",{"_index":3979,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromis",{"_index":3986,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromise.then",{"_index":3996,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploads.emit(upload",{"_index":1701,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["this.url",{"_index":2041,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.us",{"_index":3534,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.use(this.ecimag",{"_index":2030,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.use(this.sets[key",{"_index":3718,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.usedatamanager(environment.datamanagerid",{"_index":3532,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.usedesktopnotif",{"_index":2938,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.uselist(list",{"_index":1462,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.uuid",{"_index":3205,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.valu",{"_index":160,"title":{},"body":{"components/AceComponent.html":{},"components/LocationMapComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["this.vanishdelay",{"_index":2696,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.vis",{"_index":552,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["those",{"_index":1642,"title":{},"body":{"classes/Field.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/core-classes/field.html":{}}}],["thought",{"_index":4876,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["three",{"_index":2738,"title":{},"body":{"injectables/ModelConfigService.html":{},"index.html":{}}}],["through",{"_index":1933,"title":{},"body":{"injectables/HistoryService.html":{},"components/PasswordResetComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["throw",{"_index":421,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["thrown",{"_index":1553,"title":{},"body":{"components/ErrorComponent.html":{}}}],["thumb",{"_index":2009,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["thumbnail",{"_index":3301,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["thumbsiz",{"_index":3284,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["tick",{"_index":3793,"title":{},"body":{"components/TinymceComponent.html":{}}}],["ticket",{"_index":4602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":561,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/DatetimeComponent.html":{},"components/EntryListPopComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["timeout",{"_index":2619,"title":{},"body":{"components/MenuComponent.html":{}}}],["timespan",{"_index":1207,"title":{},"body":{"interfaces/Day.html":{}}}],["timestamp",{"_index":2308,"title":{},"body":{"components/LoaderComponent.html":{}}}],["tinymc",{"_index":3785,"title":{"additional-documentation/tinymce.html":{}},"body":{"components/TinymceComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinymce.html":{}}}],["tinymce'},{'nam",{"_index":292,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["tinymce.component.html",{"_index":3788,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce.component.scss",{"_index":3787,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce.init",{"_index":3829,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autolink",{"_index":3818,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autores",{"_index":3813,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/cod",{"_index":3814,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/colorpick",{"_index":3822,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/contextmenu",{"_index":3820,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/fullscreen",{"_index":3810,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/link",{"_index":3815,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/list",{"_index":3819,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/past",{"_index":3811,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/t",{"_index":3816,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/templ",{"_index":3812,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/textcolor",{"_index":3821,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/visualblock",{"_index":3817,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/themes/modern",{"_index":3809,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/tinymce.compon",{"_index":3848,"title":{},"body":{"modules/TinymceModule.html":{}}}],["tinymcecompon",{"_index":291,"title":{"components/TinymceComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tinymcemodul",{"_index":3843,"title":{"modules/TinymceModule.html":{}},"body":{"modules/TinymceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinymce.html":{}}}],["titel",{"_index":2765,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["titel&#39",{"_index":2757,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["titl",{"_index":402,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/item.html":{}}}],["titlefield",{"_index":3226,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["today",{"_index":1204,"title":{},"body":{"interfaces/Day.html":{}}}],["todo",{"_index":167,"title":{},"body":{"components/AceComponent.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/tabscomponent.html":{}}}],["togeth",{"_index":1622,"title":{},"body":{"classes/Field.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/field.html":{}}}],["toggl",{"_index":511,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ListItemsComponent.html":{},"components/PopComponent.html":{},"components/SearchbarComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["toggle'},{'nam",{"_index":294,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["toggle(resourc",{"_index":1934,"title":{},"body":{"injectables/HistoryService.html":{}}}],["toggle(vis",{"_index":550,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{},"components/PopComponent.html":{}}}],["toggle.component.html",{"_index":3851,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle/toggle.compon",{"_index":1803,"title":{},"body":{"modules/FormModule.html":{}}}],["togglecompon",{"_index":293,"title":{"components/ToggleComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["token",{"_index":4768,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["tokenmethod",{"_index":3309,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["tommi",{"_index":4880,"title":{},"body":{"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{}}}],["tommy'item",{"_index":4885,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.display('nam",{"_index":4882,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.getvalue('nam",{"_index":4906,"title":{},"body":{"additional-documentation/core-classes/form.html":{}}}],["tommy.group('nam",{"_index":4883,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.resolve('nam",{"_index":4881,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.sort('nam",{"_index":4884,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tool",{"_index":3863,"title":{},"body":{"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["toolbar",{"_index":3862,"title":{},"body":{"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["toolbar'},{'nam",{"_index":296,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["toolbar.component.html",{"_index":3865,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":3864,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar/toolbar.compon",{"_index":4018,"title":{},"body":{"modules/VcModule.html":{}}}],["toolbarcompon",{"_index":295,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"modules/VcModule.html":{},"coverage.html":{},"overview.html":{}}}],["toolbox",{"_index":4577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["top",{"_index":4088,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["total",{"_index":2958,"title":{},"body":{"classes/Pagination.html":{}}}],["totop",{"_index":4612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touch",{"_index":3855,"title":{},"body":{"components/ToggleComponent.html":{}}}],["tower",{"_index":4545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["track",{"_index":1918,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["tranform",{"_index":2137,"title":{},"body":{"components/ListComponent.html":{}}}],["transfer",{"_index":4469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transform",{"_index":1185,"title":{},"body":{"pipes/DatetimePipe.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["transform(array",{"_index":2567,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["transform(field",{"_index":4022,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["transform(item",{"_index":1913,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["transform(nam",{"_index":3689,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["transform(valu",{"_index":1186,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/SafeHtmlPipe.html":{}}}],["transform:translatex",{"_index":3059,"title":{},"body":{"components/PaginationComponent.html":{}}}],["translat",{"_index":3030,"title":{},"body":{"components/PaginationComponent.html":{},"injectables/SymbolPipe.html":{}}}],["translatecontain",{"_index":3049,"title":{},"body":{"components/PaginationComponent.html":{}}}],["translation}px",{"_index":3060,"title":{},"body":{"components/PaginationComponent.html":{}}}],["transpar",{"_index":4618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trash",{"_index":4430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["tree.display('fruit",{"_index":4918,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["tree.display('nam",{"_index":4916,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["tri",{"_index":2465,"title":{},"body":{"components/LoginComponent.html":{}}}],["trigger",{"_index":2158,"title":{},"body":{"components/ListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/SearchbarComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["troubl",{"_index":4355,"title":{},"body":{"index.html":{}}}],["true",{"_index":25,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"modules/SelectModule.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["trust",{"_index":3456,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["ts",{"_index":3523,"title":{},"body":{"injectables/SdkService.html":{},"index.html":{}}}],["tsc/app",{"_index":4368,"title":{},"body":{"index.html":{}}}],["tsconfig",{"_index":4362,"title":{},"body":{"index.html":{}}}],["tsconfig.json",{"_index":4351,"title":{},"body":{"index.html":{}}}],["tslint:dis",{"_index":1771,"title":{},"body":{"directives/FocusDirective.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["turn",{"_index":1351,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{},"interfaces/ListConfig.html":{}}}],["tutori",{"_index":4113,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/core-classes.html":{}}}],["twitter",{"_index":4595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":4101,"title":{},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["type",{"_index":64,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["type'",{"_index":3883,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["type.match(/^(\\w*)()?/i",{"_index":2783,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["type.rel",{"_index":2804,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typeconfig",{"_index":1676,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{}}}],["typeconfigservic",{"_index":1127,"title":{"injectables/TypeConfigService.html":{}},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["typed.isvalid",{"_index":1194,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["typeof",{"_index":1681,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["types.length",{"_index":3668,"title":{},"body":{"classes/Sorter.html":{}}}],["types[0",{"_index":3670,"title":{},"body":{"classes/Sorter.html":{}}}],["typescript",{"_index":860,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/core-classes.html":{}}}],["typic",{"_index":2868,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["uglifyj",{"_index":4353,"title":{},"body":{"index.html":{}}}],["ui",{"_index":924,"title":{"additional-documentation/ui.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{},"components/ResourceCrudComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/logincomponent.html":{}}}],["ui/src/list/list.component.html",{"_index":1493,"title":{},"body":{"components/EntryListComponent.html":{}}}],["ui/src/list/searchbar/searchbar.compon",{"_index":568,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{}}}],["uimodul",{"_index":651,"title":{"modules/UiModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["ul",{"_index":3040,"title":{},"body":{"components/PaginationComponent.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":1056,"title":{},"body":{"injectables/CrudService.html":{},"injectables/GeocodeService.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{}}}],["under",{"_index":1937,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/Symbol.html":{}}}],["underlin",{"_index":4578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undo",{"_index":4608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unexpect",{"_index":2802,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["ungültig",{"_index":3913,"title":{},"body":{"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["uniqu",{"_index":823,"title":{},"body":{"classes/Collection.html":{},"interfaces/Symbol.html":{}}}],["unit",{"_index":4374,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["unresolv",{"_index":1711,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["unresolved.length",{"_index":1716,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{}}}],["untertitel",{"_index":4674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["until",{"_index":2316,"title":{},"body":{"components/LoaderComponent.html":{},"components/SearchbarComponent.html":{}}}],["up",{"_index":1045,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/item.html":{}}}],["updat",{"_index":438,"title":{"interfaces/Update.html":{}},"body":{"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/EntryListComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/selectcomponent.html":{}}}],["update(model",{"_index":1074,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Update.html":{}}}],["update(rel",{"_index":3431,"title":{},"body":{"injectables/ResourceService.html":{}}}],["updateaddress",{"_index":2418,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["updateon",{"_index":1838,"title":{},"body":{"injectables/FormService.html":{}}}],["updates",{"_index":2962,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{}}}],["updatesize(s",{"_index":2994,"title":{},"body":{"classes/Pagination.html":{}}}],["updatesize(valu",{"_index":3033,"title":{},"body":{"components/PaginationComponent.html":{}}}],["upload",{"_index":298,"title":{"interfaces/Upload.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["upload(fil",{"_index":3964,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.assetgroup",{"_index":3999,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.component.html",{"_index":3941,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.ignoredupl",{"_index":4002,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.includeassetidinpath",{"_index":4001,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.preservefilenam",{"_index":4000,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload/upload.compon",{"_index":1761,"title":{},"body":{"modules/FilesModule.html":{}}}],["uploadasset",{"_index":1738,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadassets(fil",{"_index":1745,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadcompon",{"_index":297,"title":{"components/UploadComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uploadfil",{"_index":1739,"title":{},"body":{"injectables/FileService.html":{},"components/UploadComponent.html":{}}}],["uploadfiles(fil",{"_index":1703,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["uploadpromis",{"_index":3944,"title":{},"body":{"components/UploadComponent.html":{}}}],["upon",{"_index":1046,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/LoaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["url",{"_index":2005,"title":{},"body":{"directives/ImageDirective.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["url.split",{"_index":3768,"title":{},"body":{"components/TabsComponent.html":{}}}],["url/id",{"_index":4704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlexpir",{"_index":3281,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["us",{"_index":55,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{},"additional-documentation/project-setup-tutorial/publishing.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/tabscomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["usag",{"_index":1623,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/popcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["use(asset",{"_index":2023,"title":{},"body":{"directives/ImageDirective.html":{}}}],["use(load",{"_index":2362,"title":{},"body":{"injectables/LoaderService.html":{}}}],["use(symbol",{"_index":3706,"title":{},"body":{"injectables/SymbolService.html":{}}}],["usedatamanag",{"_index":3476,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedatamanager(shortid",{"_index":3490,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedesktopnotif",{"_index":2912,"title":{},"body":{"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{}}}],["useexist",{"_index":143,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["uselegacyasset",{"_index":4037,"title":{},"body":{"changelog.html":{}}}],["uselist",{"_index":1428,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["uselist(entrylist",{"_index":1447,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["user",{"_index":614,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"miscellaneous/variables.html":{}}}],["users/kon/workspace/0.entrecode/nwb.admin/node_modules/@ec.components/data/src/auth/auth.service.t",{"_index":4358,"title":{},"body":{"index.html":{}}}],["uses",{"_index":3893,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["useset",{"_index":3696,"title":{},"body":{"injectables/SymbolService.html":{}}}],["useset(key",{"_index":3708,"title":{},"body":{"injectables/SymbolService.html":{}}}],["usevalu",{"_index":675,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["utility/focus/focus.interfac",{"_index":3589,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["utility/utility.modul",{"_index":2294,"title":{},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["utilitymodul",{"_index":2291,"title":{"modules/UtilityModule.html":{}},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["uuid",{"_index":3169,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ux",{"_index":3089,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["v",{"_index":4606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":1572,"title":{},"body":{"classes/Field.html":{},"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"interfaces/Symbol.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["validatefactori",{"_index":1817,"title":{},"body":{"injectables/FormService.html":{}}}],["validatefactory(field",{"_index":1826,"title":{},"body":{"injectables/FormService.html":{}}}],["validationerror",{"_index":1829,"title":{},"body":{"injectables/FormService.html":{}}}],["validatorfn",{"_index":1825,"title":{},"body":{"injectables/FormService.html":{},"miscellaneous/variables.html":{}}}],["validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":4723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.push(this.validatefactory(field",{"_index":1846,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.push(validators.requir",{"_index":1845,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.requir",{"_index":2548,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["validators.t",{"_index":4275,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validators/field",{"_index":2542,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["valu",{"_index":38,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"injectables/FileService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/ui/selectcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["value.hasownproperty(key",{"_index":1108,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["value.latitud",{"_index":3922,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.length",{"_index":1627,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceConfig.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["value.longitud",{"_index":3921,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.map(group",{"_index":3248,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["value.match(this.list.config.identifierpattern",{"_index":3610,"title":{},"body":{"components/SearchbarComponent.html":{}}}],["value.nam",{"_index":3923,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.split",{"_index":3909,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.titl",{"_index":3317,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{}}}],["value.touppercas",{"_index":1626,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["value.url",{"_index":3293,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["value[key",{"_index":1109,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["values.map(valu",{"_index":3303,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["vanishdelay",{"_index":2631,"title":{},"body":{"components/MenuComponent.html":{}}}],["var",{"_index":188,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["variabl",{"_index":711,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/AuthService.html":{},"components/TabsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["variables[key",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{}}}],["variou",{"_index":2302,"title":{},"body":{"components/LoaderComponent.html":{}}}],["vc",{"_index":220,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/ToolbarComponent.html":{},"components/UploadComponent.html":{}}}],["vcmodul",{"_index":4012,"title":{"modules/VcModule.html":{}},"body":{"modules/VcModule.html":{},"modules.html":{},"overview.html":{}}}],["vector",{"_index":4576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vergeben",{"_index":4407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["verifi",{"_index":1886,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["versendet",{"_index":3108,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["version",{"_index":3259,"title":{},"body":{"injectables/ResourceConfig.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["versions:npm",{"_index":4328,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":4436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":619,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Config.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/TabsComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/list.html":{}}}],["viabl",{"_index":1639,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["video",{"_index":4579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":1214,"title":{},"body":{"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceDeletePopComponent.html":{},"components/SearchbarComponent.html":{},"directives/SlotHostDirective.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/list.html":{}}}],["viewchild",{"_index":106,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["viewchild('contain",{"_index":147,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{}}}],["viewchild('fileinput",{"_index":3973,"title":{},"body":{"components/UploadComponent.html":{}}}],["viewchild('filterform",{"_index":2257,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["viewchild('globalload",{"_index":2327,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["viewchild('localload",{"_index":2329,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["viewchild('pagecontain",{"_index":3042,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewchild('search",{"_index":2459,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["viewchild(calendarcompon",{"_index":1178,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["viewchild(entrylistcompon",{"_index":964,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(entrypopcompon",{"_index":965,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(loadercompon",{"_index":966,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["viewchild(locationmapcompon",{"_index":2435,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(locationsearchcompon",{"_index":2436,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(popcompon",{"_index":3389,"title":{},"body":{"components/ResourceDeletePopComponent.html":{},"components/UploadComponent.html":{}}}],["viewchild(resourcelistcompon",{"_index":3357,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(resourcepopcompon",{"_index":3358,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(searchbarcompon",{"_index":573,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/EntryListPopComponent.html":{}}}],["viewchild(slothostdirect",{"_index":1415,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewchildren",{"_index":2252,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/PaginationComponent.html":{}}}],["viewchildren('filterpop",{"_index":2256,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["viewchildren('pag",{"_index":3043,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewcontain",{"_index":3636,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["viewcontainerref",{"_index":1396,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/SlotHostDirective.html":{}}}],["viewcontainerref.clear",{"_index":1419,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewcontainerref.createcomponent(componentfactori",{"_index":1420,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewencapsul",{"_index":2188,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["viewencapsulation.non",{"_index":2140,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["visibl",{"_index":514,"title":{},"body":{"components/AssetListPopComponent.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"modules/FormModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"changelog.html":{}}}],["visiblefield",{"_index":4021,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["visiblefieldspip",{"_index":1788,"title":{"pipes/VisibleFieldsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["visualblock",{"_index":4642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":77,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetListPopComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/SdkService.html":{},"components/SearchbarComponent.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["volum",{"_index":4560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wait",{"_index":2309,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["wait(promis",{"_index":2314,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["wand",{"_index":4605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["want",{"_index":2066,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ace.html":{}}}],["war",{"_index":4403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warn",{"_index":1973,"title":{},"body":{"components/IconComponent.html":{}}}],["water",{"_index":4622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["way",{"_index":59,"title":{},"body":{"components/AceComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["week",{"_index":1174,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["weekday",{"_index":1155,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["wei",{"_index":4665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":4626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weiteren",{"_index":3113,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["well",{"_index":1391,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["werden",{"_index":640,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["wether",{"_index":1585,"title":{},"body":{"classes/Field.html":{}}}],["whenev",{"_index":2056,"title":{},"body":{"components/InputComponent.html":{}}}],["whistl",{"_index":4625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whiteboard",{"_index":4443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whole",{"_index":1641,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"injectables/ResourceConfig.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["whose",{"_index":1499,"title":{},"body":{"components/EntryListComponent.html":{},"components/PopComponent.html":{}}}],["width:${(1",{"_index":3062,"title":{},"body":{"components/PaginationComponent.html":{}}}],["wifi",{"_index":4459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wildcard",{"_index":1609,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{}}}],["window",{"_index":2934,"title":{},"body":{"injectables/NotificationsService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["window.addeventlistener('keydown",{"_index":3155,"title":{},"body":{"injectables/PopService.html":{}}}],["window.notification(notification.titl",{"_index":2949,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.permiss",{"_index":2941,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.requestpermission().then((permiss",{"_index":2942,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["withload",{"_index":907,"title":{"interfaces/WithLoader.html":{}},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{}}}],["withnotif",{"_index":908,"title":{"interfaces/WithNotifications.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["without",{"_index":1028,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/form.html":{}}}],["won't",{"_index":4782,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["wont",{"_index":2523,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["work",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["workaround",{"_index":138,"title":{},"body":{"components/AceComponent.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":11,"title":{},"body":{"components/AceComponent.html":{},"injectables/GeocodeService.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["wrapper",{"_index":4840,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields.html":{},"additional-documentation/core-classes/item.html":{}}}],["write",{"_index":101,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["writevalu",{"_index":52,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["writevalue(valu",{"_index":99,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields.html":{}}}],["written",{"_index":4306,"title":{},"body":{"index.html":{}}}],["wrote",{"_index":4111,"title":{},"body":{"changelog.html":{}}}],["wurst",{"_index":4895,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["wurst'sav",{"_index":4898,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["x",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["x.ui",{"_index":4299,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["x.ui/src/_config",{"_index":4757,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x.ui/src/x.ui",{"_index":4758,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x1f3b5",{"_index":4734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4b0",{"_index":4728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4c5",{"_index":4731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4e7",{"_index":4735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4f7",{"_index":4732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f50d",{"_index":4736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f516",{"_index":4729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f5a5",{"_index":4733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f682;&#x1f683;&#x1f683;&#x1f683",{"_index":362,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["x1f68c",{"_index":4730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xing",{"_index":4596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xlcss/sass/xlcss.scss",{"_index":4756,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["xxxxxxxx",{"_index":4766,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["yarn",{"_index":4752,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ye",{"_index":394,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/EntryListComponent.html":{},"injectables/FileService.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/ResourceDeletePopComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["yes||((!safetyword?'resource.delete.yes':'resource.delete.confirm",{"_index":3403,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["yes||((!safetyword?\\'resource.delete.yes\\':\\'resource.delete.confirm",{"_index":3406,"title":{},"body":{"components/ResourceDeletePopComponent.html":{}}}],["yield",{"_index":1053,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["youtub",{"_index":4597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yt",{"_index":4703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yturl",{"_index":4706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yturl[1",{"_index":4714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yyyi",{"_index":1229,"title":{},"body":{"interfaces/Day.html":{}}}],["z",{"_index":2810,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["z0",{"_index":1684,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["z]+))?)/g.exec(yt",{"_index":4712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]+.)?)(?:youtu\\.?be(?:\\.com)?\\/)(?:embed\\/)?(?:(?:(?:(?:watch\\?)?(?:time_continue=(?:[0",{"_index":4708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]{2",{"_index":4727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["za",{"_index":1683,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FileService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["zone",{"_index":1352,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["zone.j",{"_index":4301,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":325,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules/VcModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["zurücksetzen",{"_index":3119,"title":{},"body":{"components/PasswordResetComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AceComponent.html":{"url":"components/AceComponent.html","title":"component - AceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ace/src/ace.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps ace editor as angular component. Implements ControlValueAccessor!\nhttps://components.entrecode.de/misc/ace\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-ace\n            \n\n            \n                styleUrls\n                ace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ace.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                input\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setMode\n                            \n                            \n                                setTheme\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mode\n                    \n                    \n                        mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:48\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            creates new ace instance if not present and sets mode and theme if given \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Re-inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setMode\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetMode(mode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Sets the editor mode to the specified language (after ace/mode/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTheme(theme: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Sets the editor theme to the specified theme (after ace/theme/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:40\n                            \n                        \n\n                \n                    \n                        container element for ace editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:26\n                            \n                        \n\n                \n                    \n                        The ace editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     InputComponent\n\n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:36\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:34\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:30\n                            \n                        \n\n                \n                    \n                        The current value of the editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ElementRef, ViewChild, Input, OnChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent } from '@ec.components/ui';\n// import 'ace-builds/src-noconflict/ace.js';\n\n/** Workaround that expects ace to be imported somewhere else... */\ndeclare const ace: any;\n/** Wraps ace editor as angular component. Implements ControlValueAccessor!\n *\n * https://components.entrecode.de/misc/ace\n*/\n@Component({\n    selector: 'ec-ace',\n    templateUrl: 'ace.component.html',\n    styleUrls: ['ace.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => AceComponent),\n            multi: true\n        }\n    ]\n})\nexport class AceComponent extends DefaultInputComponent implements ControlValueAccessor, OnInit, OnChanges {\n    /** The ace editor instance */\n    editor: any;\n    /**\n     * The current value of the editor\n     */\n    value = '';\n    /**\n     * Promise that resolves when the editor has been initialized.\n     */\n    ready: Promise;\n    /** Form input component */\n    input: InputComponent;\n    /**\n     * container element for ace editor\n     */\n    @ViewChild('container') container: ElementRef;\n    /**\n     * mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n     */\n    @Input() mode: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-modelist.js\n    /**\n     * theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n     */\n    @Input() theme: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-themelist.js\n\n    /** creates new ace instance if not present and sets mode and theme if given */\n    init() {\n        if (!this.editor) {\n            this.editor = ace.edit(this.container.nativeElement);\n        }\n        this.ready = Promise.resolve(this.editor);\n        if (this.mode) {\n            this.setMode(this.mode);\n        }\n        if (this.theme) {\n            this.setTheme(this.theme);\n        }\n        if (this.value) {\n            this.editor.setValue(this.value, 1);\n        }\n        this.ready.then((editor) => {\n            editor.on('change', (e) => {\n                this.propagateChange(this.editor.getValue());\n                // TODO: find a way to omit this line in custom components and hook to change from input.component or form.component\n                if (this.input) {\n                    this.input.propagateChange(this.editor.getValue());\n                }\n            });\n        });\n    }\n    /** Sets the editor mode to the specified language (after ace/mode/) */\n    setMode(mode: string) {\n        this.mode = mode;\n        if (!this.editor) {\n            return;\n        }\n        this.editor.session.setMode('ace/mode/' + this.mode);\n    }\n\n    /** Sets the editor theme to the specified theme (after ace/theme/) */\n    setTheme(theme: string) {\n        this.theme = theme;\n        if (!this.editor) {\n            return;\n        }\n        this.editor.setTheme('ace/theme/' + this.theme);\n    }\n\n    /** Inits the editor */\n    ngOnInit() {\n        this.init();\n    }\n    /** Re-inits the editor */\n    ngOnChanges() {\n        this.init();\n    }\n\n    /** writes value to editor on outside model change. */\n    writeValue(value: any) {\n        this.value = value || '';\n        if (!this.ready) {\n            return;\n        }\n        this.ready.then((editor) => {\n            editor.setValue(this.value, 1);\n        });\n    }\n\n    propagateChange = (_: any) => {\n    };\n\n    /** Registers change callback */\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() {\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AceModule.html":{"url":"modules/AceModule.html","title":"module - AceModule","body":"\n                   \n\n\n\n\n  Modules\n  AceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->AceComponent -->\n\n{\n    : , : (() => ), : true\n}->AceComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ace/src/ace.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AceComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AceComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AceComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { AceComponent } from './ace.component';\n\n@NgModule({\n    imports: [],\n    exports: [AceComponent],\n    declarations: [AceComponent],\n    entryComponents: [AceComponent],\n    providers: [],\n})\nexport class AceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminEntryInputComponent.html":{"url":"components/AdminEntryInputComponent.html","title":"component - AdminEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-form/admin-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that require having the DatamanagerResource as api.\nThis is currently relevant for account and role fields which come from the ec.api.\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./admin-entry-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     DataManagerResource\n\n                    \n                \n                    \n                        \n                            Type :     DataManagerResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { SdkService } from '@ec.components/data/src/sdk/sdk.service';\nimport { Component } from '@angular/core';\nimport { DefaultInputComponent } from '@ec.components/ui/src/form/default-input/default-input.component';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\n\n/** This component holds the input templates for all field types that require having the DatamanagerResource as api.\n * This is currently relevant for account and role fields which come from the ec.api.\n */\n@Component({\n    templateUrl: './admin-entry-input.component.html',\n})\nexport class AdminEntryInputComponent extends DefaultInputComponent {\n    api: DataManagerResource;\n    constructor(public sdk: SdkService) {\n        super();\n        this.sdk.root.then((root) => this.api = root);\n    }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AssetDirective.html":{"url":"directives/AssetDirective.html","title":"directive - AssetDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  AssetDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/asset/asset.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset by id to the template. \n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecAsset]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asset\n                            \n                            \n                                promise\n                            \n                            \n                                    Public\n                                sdk\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetId\n                            \n                            \n                                autoload\n                            \n                            \n                                ecAsset\n                            \n                            \n                                levels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/asset/asset.directive.ts:27\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The api to use. Defaults to sdk.api \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetId\n                    \n                    \n                        The asset id that should be loaded\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the asset be loaded immediately? Defaults to true \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ecAsset\n                    \n                    \n                        The asset id that should be loaded\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                    \n                        The levels to use. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:21\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                    \n                        Fires as soon as the asset has been loaded. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:25\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:45\n                            \n                        \n\n\n                \n                    \n                            Loads the asset. Can be called from template when using autoload=false \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:34\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the asset will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            asset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        asset:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:27\n                            \n                        \n\n                \n                    \n                        The current loaded asset \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:13\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ecAsset\nThis directive can be used to load a single asset directly from the template:\n\n  id: {{myAsset.asset?.assetID}}\n  title: {{myAsset.asset?.title}}\n  tags: {{myAsset.asset?.tags}}\n  created: {{myAsset.asset?.created}}\n  type: {{myAsset.asset?.type}}\n  files: {{myAsset.asset?.files?.length}}\n\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { SdkService } from '../../sdk/sdk.service';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\n\n/** Loads an public asset by id to the template. */\n@Directive({\n  selector: '[ecAsset]',\n  exportAs: 'ecAsset'\n})\nexport class AssetDirective implements OnChanges {\n  /** The loading promise */\n  promise: any;\n  /** The asset id that should be loaded*/\n  @Input() assetId: string;\n  /** The asset id that should be loaded*/\n  @Input() ecAsset: string;\n  /** Should the asset be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** The api to use. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Fires as soon as the asset has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The current loaded asset */\n  public asset: any;\n\n  /** Injects the sdk */\n  constructor(public sdk: SdkService) {\n  }\n\n  /** as soon as model and id are known, the asset will be loaded. */\n  ngOnChanges() {\n    if (this.ecAsset) {\n      this.assetId = this.ecAsset;\n    }\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the asset. Can be called from template when using autoload=false */\n  load(id?: string) {\n    this.assetId = id || this.assetId;\n    if (!this.assetId) {\n      return Promise.reject('cannot load asset: no assetId is set');\n    }\n    const api = this.api || this.sdk.api;\n    if (!api) {\n      throw new Error('cannot load asset: no api was set!');\n    }\n    this.promise = api.asset(this.assetId)\n      .then((asset) => {\n        this.asset = asset;\n        this.loaded.emit(asset);\n        return asset;\n      });\n    return this.promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetListComponent.html":{"url":"components/AssetListComponent.html","title":"component - AssetListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/asset-list/asset-list.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ResourceListComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-asset-list\n            \n\n\n\n\n            \n                templateUrl\n                ./asset-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                resourceConfig\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                createList\n                            \n                            \n                                filter\n                            \n                            \n                                initFilterQuery\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                listResource\n                            \n                            \n                                loader\n                            \n                            \n                                relation\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                            \n                            Type:    Core\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listResource\n                    \n                    \n                        If listResource input is set, the given ListResource will be used directly and loading will be skipped. \n\n                            \n                            Type:    ListResource\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be shown while the list is loaded. \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        emits when the list changed (after loading) \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/asset-list/asset-list.component.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createList()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:57\n                            \n                        \n\n\n                \n                    \n                            The method to create the list\n\n\n                            \n                                Returns :     Promise | ResourceList\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter(property: string, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:114\n                            \n                        \n\n\n                \n                    \n                            This method will filter the list by a given property value and optional operator. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilterQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilterQuery(fieldFilter: (property: string,value: any) => void)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldFilter\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:105\n                            \n                        \n\n\n                \n                    \n                            When changing the model or the config, the list will update\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:78\n                            \n                        \n\n\n                \n                    \n                            Creates/Updates the list and subscribes Observables.  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     ResourceList\n\n                    \n                \n                    \n                        \n                            Type :     ResourceList\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:28\n                            \n                        \n\n                \n                    \n                        The instance of an EntryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resourceConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceConfig:     ResourceConfig\n\n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\n\n@Component({\n    selector: 'ec-asset-list',\n    templateUrl: './asset-list.component.html'\n})\n\nexport class AssetListComponent extends ResourceListComponent implements OnInit {\n    ngOnInit() {\n    }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n                \n                    \n                \n                \n                    {{group.value}}\n                \n            \n             -->\n            \n                \n                    \n                \n                {{item.getBody()}}\n                \n            \n\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    {{group.value}}                                         -->                                                                                {{item.getBody()}}                                        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetListPopComponent.html":{"url":"components/AssetListPopComponent.html","title":"component - AssetListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/files/asset-list-pop/asset-list-pop.component.ts\n\n\n    \n        Description\n    \n    \n        Entry Pop is an extension of Pop component to host an entry-form.\nYou can use it like a normal pop but with the extra handling of an entry form inside.\nYou can call edit with an entry object to edit an entry, or just call show.\nIt is also possible to bind an entry directly which will then be bound to the form.\n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-asset-list-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./asset-list-pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assetGroups\n                            \n                            \n                                    Public\n                                groupChange\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                searchbar\n                            \n                            \n                                delay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGroupRelation\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                select\n                            \n                            \n                                setGroup\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                config\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                groupChanged\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, auth: AuthService, fileService: FileService, sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:39\n                            \n                        \n\n                \n                    \n                            Injects auth service and calls super constructor. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                        The assetGroupID that should be picked from. If empty, legacy assets are used \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        CrudConfig for customizing the entry-form and the pop.\n\n                            \n                            Type:    CrudConfig\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The used selection \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                    \n                        If true, .visible is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Event emitter on item selection \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                    \n                        Emits when the group changes \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        Emits the value of visible on change. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getGroupRelation\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetGroupRelation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Returns the full resource relation name based on the current assetGroupID  \n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            emits columnClicked event or toggles selection if no observers. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGroup(group: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Changes the assetGroupID to the given value, emits groupChange \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:51\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. First removes visible and after the delay it removes active. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:42\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. First sets active and after the delay it sets visible. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(visible: boolean, emit: boolean)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:30\n                            \n                        \n\n\n                \n                    \n                            Shows if not visible, hides if visible. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        visible\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                !this.visible\n                                                        \n\n                                                \n                                                \n                                                        emit\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            assetGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        assetGroups:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:37\n                            \n                        \n\n                \n                    \n                        The loaded assetGroups \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groupChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groupChange:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:35\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items update \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchbar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchbar:     SearchbarComponent\n\n                    \n                \n                    \n                        \n                            Type :     SearchbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset-list-pop/asset-list-pop.component.ts:39\n                            \n                        \n\n                \n                    \n                        The nested searchbar \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:24\n                            \n                        \n\n                \n                    \n                        The amount of time between setting active and visible. Defaults to 0. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { Item, Selection } from '@ec.components/core';\nimport { SdkService } from '@ec.components/data';\nimport { PopComponent } from '@ec.components/ui/src/pop/pop.component';\nimport { PopService } from '@ec.components/ui/src/pop/pop.service';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { Subject } from 'rxjs/Subject';\nimport { SearchbarComponent } from '../../../../ui/src/list/searchbar/searchbar.component';\nimport { AuthService } from '../../auth/auth.service';\nimport { CrudConfig } from '../../crud/crud-config.interface';\nimport { FileService } from '../file.service';\n\n/** Entry Pop is an extension of Pop component to host an entry-form.\n * You can use it like a normal pop but with the extra handling of an entry form inside.\n * You can call edit with an entry object to edit an entry, or just call show.\n * It is also possible to bind an entry directly which will then be bound to the form.\n * */\n@Component({\n  selector: 'ec-asset-list-pop',\n  templateUrl: './asset-list-pop.component.html',\n})\n\nexport class AssetListPopComponent extends PopComponent implements OnInit {\n  /** CrudConfig for customizing the entry-form and the pop.*/\n  @Input() config: CrudConfig = {};\n  /** The used selection */\n  @Input() selection: Selection;\n  /** The assetGroupID that should be picked from. If empty, legacy assets are used */\n  @Input() assetGroupID: string;\n  /** Event emitter on item selection */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  /** Emits when the group changes */\n  @Output() groupChanged: EventEmitter = new EventEmitter();\n  /** Subject that is nexted when the items update */\n  public groupChange: Subject = new Subject();\n  /** The loaded assetGroups */\n  public assetGroups: string[];\n  /** The nested searchbar */\n  @ViewChild(SearchbarComponent) searchbar: SearchbarComponent;\n\n  /** Injects auth service and calls super constructor. */\n  constructor(protected popService: PopService,\n    private auth: AuthService,\n    private fileService: FileService,\n    public sdk: SdkService) {\n    super(popService);\n  }\n\n  /** Changes the assetGroupID to the given value, emits groupChange */\n  setGroup(group) {\n    if (!group) {\n      return;\n    }\n    this.groupChanged.emit(group);\n    if (this.searchbar) {\n      this.searchbar.clear();\n      this.searchbar.focusEvent.emit(true);\n    }\n    this.assetGroupID = group;\n  }\n\n  ngOnInit() {\n    this.fileService.assetGroupList().then(assetGroups => {\n      this.assetGroups = assetGroups\n      /* if (!this.assetGroupID) {\n        this.assetGroupID = assetGroups[0] || 'legacyAsset';\n        this.groupChanged.emit(this.assetGroupID);\n      } */\n    });\n  }\n\n  /** emits columnClicked event or toggles selection if no observers. */\n  select($event) {\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit($event);\n    } else if (this.selection) {\n      console.log('selection', this.selection);\n      // this.selection.toggle($event);\n    }\n  }\n\n  /** Returns the full resource relation name based on the current assetGroupID  */\n  getGroupRelation() {\n    return !this.assetGroupID || this.assetGroupID === 'legacyAsset' ? 'legacyAsset'\n      : 'dmAsset.' + this.assetGroupID;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Drop to upload\n    \n      \n        \n        upload file\n      \n      \n        \n          \n        \n        \n          \n        \n      \n    \n    \n      \n       -->\n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Drop to upload                          upload file                                                                                           -->          '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetgroupSelectComponent.html":{"url":"components/AssetgroupSelectComponent.html","title":"component - AssetgroupSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetgroupSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/files/assetgroup-select/assetgroup-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-assetgroup-select\n            \n\n\n\n\n            \n                templateUrl\n                ./assetgroup-select.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                assetGroups\n                            \n                            \n                                disableLegacy\n                            \n                            \n                                placeholder\n                            \n                            \n                                readOnly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroups\n                    \n                    \n                            \n                            Type:    string[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableLegacy\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        \n                            Default value: 'select assetgroup..'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileService:     FileService\n\n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FileService } from '..';\n\n@Component({\n    selector: 'ec-assetgroup-select',\n    templateUrl: './assetgroup-select.component.html',\n})\n\nexport class AssetgroupSelectComponent implements OnInit {\n    @Input() placeholder = 'select assetgroup..';\n    @Input() assetGroupID: string;\n    @Input() assetGroups: string[];\n    @Input() disableLegacy: boolean;\n    @Input() readOnly: boolean;\n    @Output() groupChanged: EventEmitter = new EventEmitter();\n\n    constructor(\n        public fileService: FileService\n    ) { }\n\n    ngOnInit() {\n        this.fileService.assetGroupList().then(assetGroups => this.assetGroups = assetGroups);\n    }\n}\n\n    \n\n    \n        \n    {{placeholder}}\n    {{assetGroup}}\n    legacy Assets\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{placeholder}}    {{assetGroup}}    legacy Assets'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetgroupSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/auth/auth-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                This guard can be used on routes that only can be activated when a user is present in the SdkService.\nIf no user is found, an error message is shown. You can then react via the redirect output. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/auth-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth-guard.service.ts:17\n                            \n                        \n\n\n                \n                    \n                            Checks if the sdk contains a user, if not an error message is shown. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        redirect:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/auth-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the user check fails. (Meant to be used for redirecting to another page e.g. login) \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { SdkService } from '@ec.components/data/src/sdk/sdk.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport { Subject } from 'rxjs/Subject';\n\n/** This guard can be used on routes that only can be activated when a user is present in the SdkService.\n * If no user is found, an error message is shown. You can then react via the redirect output. */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  /** Subject that is nexted when the user check fails. (Meant to be used for redirecting to another page e.g. login) */\n  redirect: Subject = new Subject();\n\n  constructor(private sdk: SdkService, private notifications: NotificationsService) {\n  }\n  /** Checks if the sdk contains a user, if not an error message is shown. */\n  canActivate() {\n    return this.sdk.ready.then(user => {\n      if (!!user) {\n        return true;\n      }\n      this.notifications.emit({\n        type: 'error',\n        title: 'Diese Seite kann nicht angezeigt werden.',\n        message: 'Sie sind nicht eingeloggt.'\n      });\n      this.redirect.next();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\n()\n\n()\n\nAuthModule -->\n\n()->AuthModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAuthModule -->\n\nAuthGuard->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/auth/auth.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for all auth related components and services. \n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                            \n                                PasswordResetComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuard\n                            \n                            \n                                     AuthService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ()\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                            \n                                    PasswordResetComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CookieModule } from 'ngx-cookie';\nimport { UiModule } from '@ec.components/ui/src/ui.module';\nimport { PasswordResetComponent } from './password-reset/password-reset.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './auth-guard.service';\nimport { AuthService } from './auth.service';\n\n/** loads CookieModule */\nexport function cookieFactory(): ModuleWithProviders {\n  // https://github.com/auth0/angular2-jwt/issues/305\n  return CookieModule.forRoot();\n}\n/** Module for all auth related components and services. */\n@NgModule({\n  declarations: [\n    PasswordResetComponent,\n    LoginComponent\n  ],\n  imports: [\n    cookieFactory(),\n    CommonModule,\n    ReactiveFormsModule,\n    UiModule\n  ],\n  exports: [\n    ReactiveFormsModule,\n    PasswordResetComponent,\n    LoginComponent,\n  ],\n  providers: [AuthGuard, AuthService]\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n{\nprovide: \"environment\",\nuseValue: {\ndatamanagerID: \"83cc6374\",\nenvironment: \"stage\",\nclientID: \"rest\"\n}\n}The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPermission\n                            \n                            \n                                getAccount\n                            \n                            \n                                getAllowedModelMethods\n                            \n                            \n                                getAllowedResourceMethods\n                            \n                            \n                                getApi\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                noClientID\n                            \n                            \n                                resetPassword\n                            \n                            \n                                resolveVariables\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceConfig: ResourceConfig, sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/auth.service.ts:24\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckPermission(permission: string, api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:66\n                            \n                        \n\n\n                \n                    \n                            checks given public permission for given api, defaults to this.sdk.api. Also works as ec user \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permission\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedModelMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedModelMethods(model: string, methods?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:112\n                            \n                        \n\n\n                \n                    \n                            Returns an array of all allowed methods for the given relation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedResourceMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedResourceMethods(relation: string, variables: Object, methods?: string[], api?: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApi\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApi(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:156\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined: , api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            Generic login that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout(api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:146\n                            \n                        \n\n\n                \n                    \n                            Generic logout that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noClientID\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoClientID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:170\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(email: , api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:134\n                            \n                        \n\n\n                \n                    \n                            Generic password reset that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveVariables\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolveVariables(string: string, variables: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:73\n                            \n                        \n\n\n                \n                    \n                            replaces all variables by values in a string \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(undefined: , api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Generic Signup, works for accounts API and PublicAPI \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Core from 'ec.sdk/lib/Core';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class AuthService {\n\n  /** Calls init and sets ready to true when finished. */\n  constructor(private resourceConfig: ResourceConfig, private sdk: SdkService) {\n  }\n\n  /** Generic login that works with both public and admin API. */\n  login({ email, password }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.session;\n        return !_api ? Promise.reject('api_not_found') : _api.login(email, password);\n      }).then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  /** Generic Signup, works for accounts API and PublicAPI */\n  signup({ email, password, invite }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api ? api.signup() : this.sdk.api.signup(email, password, invite)\n      .catch(() => this.sdk.accounts.signup(email, password, invite))\n      .then((res) => {\n        return this.sdk.init();\n      })\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.sdk.api) {\n    return api.me().then((account) => {\n      return account || this.sdk.accounts.me();\n    }).catch((err) => {\n      return this.sdk.api.me();\n    });\n  }\n\n  /** checks given public permission for given api, defaults to this.sdk.api. Also works as ec user */\n  checkPermission(permission: string, api?) {\n    return this.sdk.ready.then((user) => {\n      api = api || this.sdk.user;\n      return api.checkPermission(permission);\n    })\n  }\n  /** replaces all variables by values in a string */\n  resolveVariables(string: string, variables: Object) {\n    Object.keys(variables).forEach((key) => {\n      string = string.replace(``, variables[key]);\n    });\n    return string;\n  }\n\n  /** Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. */\n  getAllowedResourceMethods(relation: string, variables: Object = {}, methods?: string[], api?: Core): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    if (!this.resourceConfig.get(relation) || !this.resourceConfig.get(relation).permissions) {\n      /* console.warn(`relation ${relation} has no defined permissions, defaulting to all methods available`); */\n      return Promise.resolve(['get', 'post', 'put', 'delete']);\n    }\n    const permissions = this.resourceConfig.get(relation).permissions;\n    return Object.keys(permissions)\n      .map((method) => (results) => {\n        return !permissions[method] ? Promise.resolve(results) :\n          permissions[method] === true ? Promise.resolve(results.concat(method)) :\n            this.checkPermission(`${this.resolveVariables(permissions[method], variables)}`, api)\n              .then(res => {\n                if (res) {\n                  results.push(method);\n                }\n                return results;\n              }).catch(err => {\n                return results;\n              })\n      })\n      .reduce((a, b) => a.then(r => b(r)), Promise.resolve([]))\n      .then(_methods => {\n        _methods.filter(x => !!x);\n        return _methods;\n      });\n  }\n\n  /** Returns an array of all allowed methods for the given relation */\n  getAllowedModelMethods(model: string, methods?: string[]): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    return ['get', 'post', 'put', 'delete']\n      .map((method) => (results) =>\n        this.checkPermission(`${model}:${method}`, this.sdk.api)\n          .then(res => {\n            if (res) {\n              results.push(method);\n            }\n            return results;\n          })\n      )\n      .reduce((a, b) => a.then(r => b(r)), Promise.resolve([]))\n      .then(_methods => {\n        _methods.filter(x => !!x);\n        return _methods;\n      });\n  }\n\n  /** Generic password reset that works with both public and admin API. */\n  resetPassword(email, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.accounts;\n        return !_api ? Promise.reject('api_not_found') : _api.resetPassword(email);\n      });\n  }\n\n  /** Generic logout that works with both public and admin API. */\n  logout(api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api ? api.logout() : this.sdk.session.logout().catch(() => this.sdk.api.logout())\n      .then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  getApi(email: string) {\n    if (!this.sdk.api && !this.sdk.accounts) {\n      return Promise.reject('no_api_found');\n    }\n    return this.sdk.api.emailAvailable(email)\n      .then((available) => {\n        if (!available) {\n          return this.sdk.api;\n        }\n      }).catch(() => {\n        return;\n      });\n  }\n\n  noClientID() {\n    if (!this.sdk.environment || !this.sdk.environment.clientID) {\n      return `\nNo clientID set in environment! To enable all auth related functionalities,\nyou can create a client in your datamanager settings and provide it with your environment:\n\n  providers: [\n    {\n      provide: 'environment',\n      useValue: {\n        datamanagerID: '83cc6374',\n        clientID: 'myClient',\n      }\n    }\n  ]\n`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Collection.html":{"url":"classes/Collection.html","title":"class - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Collection\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/collection/collection.ts\n        \n\n            \n                Description\n            \n            \n                A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Public\n                                update$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addAll\n                            \n                            \n                                has\n                            \n                            \n                                hasAll\n                            \n                            \n                                index\n                            \n                            \n                                isEmpty\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                replaceWith\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: Array)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/collection/collection.ts:15\n                            \n                        \n\n                \n                    \n                            Constructs the collection with the given item Array (optional).\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                                    Example :\n                                        \n                                            const numbers = new Collection([1, 2, 3]);\n                                        \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:11\n                            \n                        \n\n                \n                    \n                        The items must all have the same type T.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     Subject>\n\n                    \n                \n                    \n                        \n                            Type :     Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:13\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items update \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            update$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update$:     Observable>\n\n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                    \n                        \n                            Default value : this.update.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:15\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items change \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(item: T, unique?: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:72\n                            \n                        \n\n\n                \n                    \n                            Adds the given item to the Collection. If the unique flag is set, the item will only be added\nif it is not contained.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.add(4);\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAll\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAll(items: Array, unique: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:90\n                            \n                        \n\n\n                \n                    \n                            Adds the given items to the Collection. If the unique flag is set, only items that are not\ncontained will be added.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.addAll([5, 6, 7]);\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            has\n                            \n                            \n                        \n                    \n                \n                \n                    \nhas(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:43\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains the given item.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.has(2); //true\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasAll(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:54\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains all given items.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.has([1,2]); //true\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            index\n                            \n                            \n                        \n                    \n                \n                \n                    \nindex(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:32\n                            \n                        \n\n\n                \n                    \n                            Returns the index of the given item \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisEmpty()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:152\n                            \n                        \n\n\n                \n                    \n                            Returns true if the collection is empty \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(item: T, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:107\n                            \n                        \n\n\n                \n                    \n                            Removes the given item from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.remove(4);\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll(items?: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:124\n                            \n                        \n\n\n                \n                    \n                            Removes all items from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.removeAll();\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            replaceWith\n                            \n                            \n                        \n                    \n                \n                \n                    \nreplaceWith(items: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:139\n                            \n                        \n\n\n                \n                    \n                            Replaces all current items with the given items. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Collection\nCollection is a more sophisticated Array:\nconst collection = new Collection([1, 2, 3]);\ncollection.has(1); //true\ncollection.has(4); //false\ncollection.add(4);\ncollection.remove(4);\ncollection.index(1); //0\ncollection.addAll([10,11,12]); //true\ncollection.hasAll([1,10,11]); //true\ncollection.removeAll();It is the Parent Class of List and Selection.\n\n    \n\n    \n        import { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n/**\n * A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n */\nexport class Collection {\n  /**\n   * The items must all have the same type T.\n   */\n  public items: Array;\n  /** Subject that is nexted when the items update */\n  protected update: Subject> = new Subject();\n  /** Subject that is nexted when the items change */\n  public update$: Observable> = this.update.asObservable();\n\n  /**\n   * Constructs the collection with the given item Array (optional).\n   * @example\n   * ```typescript\n   *  const numbers = new Collection([1, 2, 3]);\n   * ```\n   */\n  constructor(items: Array = []) {\n    this.items = [];\n    items.forEach((item) => {\n      this.items.push(item);\n    });\n  }\n\n  /** Returns the index of the given item */\n  index(item: T): number {\n    return this.items.indexOf(item);\n  }\n\n  /**\n   * Checks if the Collection contains the given item.\n   * @example\n   * ```typescript\n   * numbers.has(2); //true\n   * ```\n   */\n  has(item: T): boolean {\n    return this.index(item) !== -1;\n  }\n\n  /**\n   * Checks if the Collection contains all given items.\n   * @example\n   * ```typescript\n   * numbers.has([1,2]); //true\n   * ```\n   */\n  hasAll(items: Array = []): boolean {\n    if (items === null) {\n      // console.warn('has all fail', this, items);\n      return false;\n    }\n    return items.reduce((has, item) => {\n      return has && this.has(item);\n    }, true);\n  }\n\n  /**\n   * Adds the given item to the Collection. If the unique flag is set, the item will only be added\n   * if it is not contained.\n   * @example\n   * ```typescript\n   * numbers.add(4);\n   * ```\n   */\n  add(item: T, unique?: boolean, event: boolean = true) {\n    if (unique && this.has(item)) {\n      return false;\n    }\n    this.items.push(item);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Adds the given items to the Collection. If the unique flag is set, only items that are not\n   * contained will be added.\n   * @example\n   * ```typescript\n   * numbers.addAll([5, 6, 7]);\n   * ```\n   */\n  addAll(items: Array = [], unique: boolean = false, event: boolean = true) {\n    const length = this.items.length;\n    items.forEach((item) => {\n      this.add(item, unique, false);\n    });\n    if (this.items.length > length && event) {\n      this.update.next(this);\n    }\n  };\n\n  /**\n   * Removes the given item from the Collection.\n   * @example\n   * ```typescript\n   * numbers.remove(4);\n   * ```\n   */\n  remove(item: T, event: boolean = true) {\n    if (!this.has(item)) {\n      return false;\n    }\n    this.items.splice(this.index(item), 1);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes all items from the Collection.\n   * @example\n   * ```typescript\n   * numbers.removeAll();\n   * ```\n   */\n  removeAll(items?: Array, event: boolean = true) {\n    const length = this.items.length;\n    if (items) {\n      items.forEach((item) => {\n        this.remove(item, false);\n      });\n    } else {\n      this.items.length = 0;\n    }\n    if (this.items.length , event: boolean = true) {\n    if (this.items && this.items.length) {\n      this.removeAll(undefined, false);\n    }\n    if (items.length) {\n      this.addAll(items, false, false);\n    }\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /** Returns true if the collection is empty */\n  isEmpty() {\n    return this.items.length === 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Config.html":{"url":"classes/Config.html","title":"class - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/config/config.ts\n        \n\n            \n                Description\n            \n            \n                The Root class for all Configurations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/config/config.ts:5\n                            \n                        \n\n                \n                    \n                        The config object. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(key: string, property: string, config?: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/config/config.ts:13\n                            \n                        \n\n\n                \n                    \n                            This method is a getter and setter for configurations. The key stands for the config (e.g. model).\nThe property is a sub property if the config (e.g. fields => model.fields).\nIf no config is given, the method just returns the configuration for the given property.\nIf a config is given, the property config is merged via Object.assign. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Config {\n  // TODO use Map !!!! (like simi did in EventEmitter.ts)\n  /** The config object. */\n  private config: {\n    [key: string]: Object,\n  } = {};\n\n  /** This method is a getter and setter for configurations. The key stands for the config (e.g. model).\n   * The property is a sub property if the config (e.g. fields => model.fields).\n   * If no config is given, the method just returns the configuration for the given property.\n   * If a config is given, the property config is merged via Object.assign. */\n  public configure?(key: string, property: string, config?: Object) {\n    if (!this.config[key]) {\n      this.config[key] = {};\n    }\n    if (!config) {\n      return this.config[key][property];\n    }\n    if (!this.config[key][property]) {\n      this.config[key][property] = {};\n    }\n    Object.assign(this.config[key][property], config);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CrudComponent.html":{"url":"components/CrudComponent.html","title":"component - CrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/crud/crud.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\nhttps://components.entrecode.de/data/crud\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-crud\n            \n\n\n\n\n            \n                templateUrl\n                ./crud.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entryPop\n                            \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPopClass\n                            \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                    Private\n                                loadEntry\n                            \n                            \n                                    Public\n                                mustReload\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                selectEntry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, notificationService: NotificationsService, symbol: SymbolService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/crud/crud.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                            \n                            Type:    CrudConfig\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model that should be crud'ed. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection that should be used \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Emits when a list element is clicked \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Emits when the selection has changed \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPopClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPopClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:124\n                            \n                        \n\n\n                \n                    \n                            Returns the pop class that should be used, either uses config.popClass or defaults to ec-pop_drawer-left. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadEntry(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mustReload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mustReload(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Returns true if the visible fields in the list differ from the visible fields in the form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectEntry(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Is called when an item in the list is clicked. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entryPop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entryPop:     EntryPopComponent\n\n                    \n                \n                    \n                        \n                            Type :     EntryPopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:43\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     EntryListComponent\n\n                    \n                \n                    \n                        \n                            Type :     EntryListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:41\n                            \n                        \n\n                \n                    \n                        The EntryList inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:45\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:51\n                            \n                        \n\n                \n                    \n                        Emitted Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:58\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CrudConfig } from './crud-config.interface';\nimport { EntryFormComponent } from '../entry-form/entry-form.component';\nimport { EntryListComponent } from '../entry-list/entry-list.component';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core/src/selection/selection';\nimport { LoaderComponent } from '@ec.components/ui/src/loader/loader.component';\nimport { LoaderService } from '@ec.components/ui/src/loader/loader.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport 'rxjs/add/operator/switchMap';\nimport { merge } from 'rxjs/observable/merge';\nimport { AuthService } from '../auth/auth.service';\nimport { EntryPopComponent } from '../entry-pop/entry-pop.component';\nimport { WithLoader } from '@ec.components/ui';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport { WithNotifications } from '@ec.components/ui/src/notifications/with-notifications.interface';\nimport { Notification } from '@ec.components/ui/src/notifications/notification';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * https://components.entrecode.de/data/crud\n * */\n@Component({\n  selector: 'ec-crud',\n  templateUrl: './crud.component.html',\n})\nexport class CrudComponent implements OnInit, WithLoader, WithNotifications {\n  /** The model that should be crud'ed. */\n  @Input() model: string;\n  /** CrudConfig for customization of the crud's UI.*/\n  @Input() config: CrudConfig = {};\n  /** The selection that should be used */\n  @Input() selection: Selection;\n  /** The EntryList inside the template. */\n  @ViewChild(EntryListComponent) list: EntryListComponent;\n  /** The Pop inside the template. */\n  @ViewChild(EntryPopComponent) entryPop: EntryPopComponent;\n  /** The lists loader */\n  @ViewChild(LoaderComponent) loader: LoaderComponent;\n  /** Emits when a list element is clicked */\n  @Output() columnClicked: EventEmitter = new EventEmitter();\n  /** Emits when the selection has changed */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Emitted Notifications */\n  notifications: Notification[] = []\n\n  constructor(private sdk: SdkService,\n    private auth: AuthService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService,\n    @Optional() public router: Router,\n    @Optional() public route: ActivatedRoute) {\n    if (route) {\n      merge(route.data, route.params, route.queryParams)\n        .subscribe(({ model }) => {\n          if (model) {\n            this.model = model;\n          }\n        });\n    }\n  }\n\n  ngOnInit() {\n    this.auth.getAllowedModelMethods(this.model, this.config.methods)\n      .then((methods) => {\n        this.config.methods = methods;\n      });\n  }\n\n  /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n  public hasMethod(method: string) {\n    return this.config.methods && this.config.methods.indexOf(method) !== -1;\n  }\n\n  /** Returns true if the visible fields in the list differ from the visible fields in the form*/\n  public mustReload(item) {\n    return !Object.keys(item.config.fields).reduce((equal, property) => {\n      return equal && (item.config.fields[property].list !== false || item.config.fields[property].form === false);\n    }, true);\n  }\n\n  /** Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. */\n  private loadEntry(item) {\n    return Promise.resolve().then(() => {\n      if (!this.config.alwaysLoadEntry && !this.mustReload(item) && (!this.config.levels || this.config.levels === 1)) {\n        return item.getBody();\n      }\n      return this.sdk.api.entry(this.model, item.id(), { levels: this.config.levels || 1 })\n    }).then((loadedEntry) => {\n      this.entryPop.edit(loadedEntry);\n      this.notificationService.emit({ hide: this.notifications });\n    }).catch((err) => {\n      console.log('error while loading entry to edit', err);\n      this.notificationService.emit({\n        title: this.symbol.resolve('error.load'),\n        error: err,\n        sticky: true,\n        hide: this.notifications,\n        replace: this.notifications\n      })\n    });\n  }\n\n  /** Is called when an item in the list is clicked. */\n  private selectEntry(item) {\n    if (!item) {\n      return;\n    }\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n      return;\n    }\n    this.loaderService.wait(this.loadEntry(item), this.loader);\n  }\n\n  /** Returns the pop class that should be used, either uses config.popClass or defaults to ec-pop_drawer-left. */\n  getPopClass() {\n    return this.config && this.config.popClass ? this.config.popClass : 'ec-pop_drawer-left';\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{config?.createLabel}}\n        \n          \n        \n      \n    \n  \n  \n    \n    \n  \n\n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{config?.createLabel}}                                                      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'CrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CrudConfig.html":{"url":"interfaces/CrudConfig.html","title":"interface - CrudConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CrudConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/crud/crud-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                The CrudConfig allows a quick customization of an ec-crud component. \n\n            \n\n            \n                Extends\n            \n            \n                    ListConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysLoadEntry\n                                \n                                \n                                            Optional\n                                        createLabel\n                                \n                                \n                                            Optional\n                                        deleteOnRemove\n                                \n                                \n                                            Optional\n                                        develop\n                                \n                                \n                                            Optional\n                                        disableCreatePop\n                                \n                                \n                                            Optional\n                                        disableListPop\n                                \n                                \n                                            Optional\n                                        disableSelect\n                                \n                                \n                                            Optional\n                                        disableSelectSwitch\n                                \n                                \n                                            Optional\n                                        keepPopOpen\n                                \n                                \n                                            Optional\n                                        levels\n                                \n                                \n                                            Optional\n                                        loader\n                                \n                                \n                                            Optional\n                                        methods\n                                \n                                \n                                            Optional\n                                        nestedPopClass\n                                \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        permissions\n                                \n                                \n                                            Optional\n                                        popClass\n                                \n                                \n                                            Optional\n                                        safeDelete\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysLoadEntry\n                                    \n                                \n                                \n                                    \n                                        alwaysLoadEntry:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an entry is always loaded when opened, even with lvl1 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createLabel\n                                    \n                                \n                                \n                                    \n                                        createLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for the entry create button \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteOnRemove\n                                    \n                                \n                                \n                                    \n                                        deleteOnRemove:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, selects will delete entries that are removed from the selection \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        develop\n                                    \n                                \n                                \n                                    \n                                        develop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an extra develop button will be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCreatePop\n                                    \n                                \n                                \n                                    \n                                        disableCreatePop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no create pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableListPop\n                                    \n                                \n                                \n                                    \n                                        disableListPop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no list pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSelect\n                                    \n                                \n                                \n                                    \n                                        disableSelect:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no dropdown will be accessible \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSelectSwitch\n                                    \n                                \n                                \n                                    \n                                        disableSelectSwitch:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no select mode switch will be shown \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepPopOpen\n                                    \n                                \n                                \n                                    \n                                        keepPopOpen:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the entry pop will remain open after the entry has been successfully saved. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        levels\n                                    \n                                \n                                \n                                    \n                                        levels:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external loader component that should be used, falls back to internal. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        methods\n                                    \n                                \n                                \n                                    \n                                        methods:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An Array of Methods that should be supported. Possible values are create, read, update and delete\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nestedPopClass\n                                    \n                                \n                                \n                                    \n                                        nestedPopClass:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The class that should be used for the nested resources pops, defaults to no class. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     NotificationsComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NotificationsComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external notifications component that should be used, falls back to internal \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    maps the permissions to the methods post put create delete \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popClass\n                                    \n                                \n                                \n                                    \n                                        popClass:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The class that should be used for the pop. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeDelete\n                                    \n                                \n                                \n                                    \n                                        safeDelete:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, delete operations need confirmation \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ListConfig } from '@ec.components/core/src/list/list-config.interface';\nimport { LoaderComponent } from '@ec.components/ui/src/loader/loader.component';\nimport { NotificationsComponent } from '@ec.components/ui/src/notifications/notifications.component';\n\n/** The CrudConfig allows a quick customization of an ec-crud component. */\nexport interface CrudConfig extends ListConfig {\n  /** The label for the entry create button */\n  createLabel?: string;\n  /** An Array of Methods that should be supported. Possible values are create, read, update and delete*/\n  methods?: Array;\n  /** An external loader component that should be used, falls back to internal. */\n  loader?: LoaderComponent;\n  /** An external notifications component that should be used, falls back to internal */\n  notifications?: NotificationsComponent;\n  /** If true, an extra develop button will be shown*/\n  develop?: boolean;\n  /** If true, the entry pop will remain open after the entry has been successfully saved. */\n  keepPopOpen?: boolean;\n  /** With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)*/\n  levels?: number;\n  /** If true, an entry is always loaded when opened, even with lvl1 */\n  alwaysLoadEntry?: boolean;\n  /** The class that should be used for the pop. */\n  popClass?: string;\n  /** The class that should be used for the nested resources pops, defaults to no class. */\n  nestedPopClass?: string;\n  /** maps the permissions to the methods post put create delete */\n  permissions?: { put?: string | boolean, post?: string | boolean, get?: string | boolean, delete?: string | boolean }\n  /** If true, no select mode switch will be shown */\n  disableSelectSwitch?: boolean;\n  /** If true, no list pop will be available at selects */\n  disableListPop?: boolean;\n  /** If true, no create pop will be available at selects */\n  disableCreatePop?: boolean;\n  /** If true, no dropdown will be accessible */\n  disableSelect?: boolean;\n  /** If true, selects will delete entries that are removed from the selection */\n  deleteOnRemove?: boolean;\n  /** If true, delete operations need confirmation */\n  safeDelete?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CrudService.html":{"url":"injectables/CrudService.html","title":"injectable - CrudService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/crud/crud.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                matches\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/crud/crud.service.ts:29\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:84\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(model: string, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:99\n                            \n                        \n\n\n                \n                    \n                            Creates a new entry with the given value for the given model. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(model: string, entry: EntryResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:112\n                            \n                        \n\n\n                \n                    \n                            deletes the given entry and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:78\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatches(change: Update, filter: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:36\n                            \n                        \n\n\n                \n                    \n                            Gives true if the given change fits all property values of the filter. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        change\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(model: string, entry: EntryResource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(model: , entry: EntryResource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Updates the given entry with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            changes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changes:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:29\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an entry is created or updated. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/filter';\nimport { Subject } from 'rxjs/Subject';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Update {\n  /** The model that has been updated. */\n  model: string | string[],\n  /** The relevant entry. */\n  entry?: EntryResource,\n  /** The list where it happened. */\n  list?: EntryList,\n  /** The type of update. (create/read/update/delete) */\n  type?: 'post' | 'get' | 'put' | 'delete'\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class CrudService {\n  /** The changes event is emitted everytime an entry is created or updated. */\n  private changes: Subject = new Subject();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService) {\n  }\n\n  /** Gives true if the given change fits all property values of the filter. */\n  matches(change: Update, filter: Update): boolean {\n    return Object.keys(filter)\n      .reduce((match, key) => match && change[key] === filter[key], true);\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: Update): Observable {\n    if (!filter) {\n      return this.changes.asObservable();\n    }\n    return this.changes.asObservable().filter((change: Update) => this.matches(change, filter));\n  }\n\n  /** Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. */\n  save(model: string, entry: EntryResource, value: Object) {\n    if (entry && entry.save) {\n      return this.update(model, entry, value);\n    }\n    return this.create(model, value)\n      .then((_entry) => {\n        return _entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given entry with the new value. Fires the \"update\" change. */\n  update(model, entry: EntryResource, value: Object): Promise {\n    const oldValues = {}; // save old values\n    Object.keys(value).forEach((key) => oldValues[key] = entry[key]);\n    Object.assign(entry, this.clean(value)); // assign new form values\n    return entry.save().then((_entry) => {\n      this.changes.next({ model, entry: _entry, type: 'put' });\n      return _entry;\n    })\n      .catch((err) => {\n        Object.assign(entry, this.clean(oldValues)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' ||\n      ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (value[key] === '') { // clear empty strings\n          value[key] = null;\n        }\n        if (this.isImmutableProperty(key)) { // filter system properties\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new entry with the given value for the given model. Fires the \"create\" change. */\n  create(model: string, value: Object): Promise {\n    return this.sdk.api.createEntry(model, this.clean(value))\n      .then((entry: EntryResource) => {\n        // console.log('created entry', entry);\n        // TODO make sure leveled entries are returned leveled\n        this.changes.next({ model, entry, type: 'post' });\n        return entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given entry and emits the \"delete\" change. */\n  del(model: string, entry: EntryResource) {\n    return entry.del().then((res) => {\n      this.changes.next({ model, entry, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n  Modules\n  DataModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryListPopComponent\n\nEntryListPopComponent\n\nDataModule -->\n\nEntryListPopComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryListPopComponent \n\nEntryListPopComponent \n\nEntryListPopComponent  -->\n\nDataModule->EntryListPopComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nCrudService\n\nCrudService\n\nDataModule -->\n\nCrudService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/data.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AdminEntryInputComponent\n                            \n                            \n                                CrudComponent\n                            \n                            \n                                DefaultEntryInputComponent\n                            \n                            \n                                DefaultEntryOutputComponent\n                            \n                            \n                                EntriesDirective\n                            \n                            \n                                EntryDirective\n                            \n                            \n                                EntryFormComponent\n                            \n                            \n                                EntryListComponent\n                            \n                            \n                                EntryListPopComponent\n                            \n                            \n                                EntryPopComponent\n                            \n                            \n                                EntrySelectComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AdminEntryInputComponent\n                            \n                            \n                                DefaultEntryInputComponent\n                            \n                            \n                                DefaultEntryOutputComponent\n                            \n                            \n                                EntryListPopComponent\n                            \n                            \n                                EntrySelectComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CrudService\n                            \n                            \n                                     HistoryService\n                            \n                            \n                                     ModelConfigService\n                            \n                            \n                                     TypeConfigService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthModule\n                            \n                            \n                                    FilesModule\n                            \n                            \n                                    ResourceModule\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AuthModule\n                            \n                            \n                                    CrudComponent\n                            \n                            \n                                    EntriesDirective\n                            \n                            \n                                    EntryDirective\n                            \n                            \n                                    EntryFormComponent\n                            \n                            \n                                    EntryListComponent\n                            \n                            \n                                    EntryListPopComponent\n                            \n                            \n                                    EntryPopComponent\n                            \n                            \n                                    EntrySelectComponent\n                            \n                            \n                                    FilesModule\n                            \n                            \n                                    ResourceModule\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UiModule } from '@ec.components/ui/src/ui.module';\nimport { DndModule } from 'ngx-drag-drop';\nimport { AuthModule } from './auth/auth.module';\nimport { CrudComponent } from './crud/crud.component';\nimport { CrudService } from './crud/crud.service';\nimport { EntriesDirective } from './entries/entries.directive';\nimport { AdminEntryInputComponent } from './entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from './entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from './entry-form/default-entry-output.component';\nimport { EntryFormComponent } from './entry-form/entry-form.component';\nimport { EntryListPopComponent } from './entry-list-pop/entry-list-pop.component';\nimport { EntryListComponent } from './entry-list/entry-list.component';\nimport { EntryPopComponent } from './entry-pop/entry-pop.component';\nimport { EntrySelectComponent } from './entry-select/entry-select.component';\nimport { EntryDirective } from './entry/entry.directive';\nimport { FilesModule } from './files/files.module';\nimport { ModelConfigService } from './model-config/model-config.service';\nimport { TypeConfigService } from './model-config/type-config.service';\nimport { ResourceModule } from './resource/resource.module';\nimport { HistoryService } from './sdk/history.service';\nimport { SdkModule } from './sdk/sdk.module';\n\n@NgModule({\n  entryComponents: [\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    EntrySelectComponent,\n    EntryListPopComponent,\n  ],\n  declarations: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    EntryListPopComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule,\n    DndModule\n  ],\n  exports: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    EntryListPopComponent,\n    RouterModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule\n  ],\n  providers: [\n    CrudService,\n    TypeConfigService,\n    ModelConfigService,\n    HistoryService,\n    {\n      provide: 'environment',\n      useValue: {\n        environment: 'live'\n      }\n    }\n  ]\n})\nexport class DataModule {\n  static forEnvironment(environment): ModuleWithProviders {\n    return {\n      ngModule: DataModule,\n      providers: [\n        {\n          provide: 'environment',\n          useValue: Object.assign(\n            {\n              environment: 'live'\n            },\n            environment\n          )\n        }\n      ]\n    };\n  }\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatetimeComponent.html":{"url":"components/DatetimeComponent.html","title":"component - DatetimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatetimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/datetime/datetime.component.ts\n\n\n    \n        Description\n    \n    \n        Input for a datetime.\nhttps://components.entrecode.de/ui/datetime\n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-datetime\n            \n\n\n\n\n            \n                templateUrl\n                datetime.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                weekdays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                disableTime\n                            \n                            \n                                formControl\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        date\n                    \n                    \n                        The date that should be displayed at start. \n\n                            \n                            Type:    moment.Moment\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableTime\n                    \n                    \n                        If true, the time will not be displayed nor will be editable. \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        The form control that holds the date \n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The input's placeholder \n\n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:34\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            registerOnChange implementation of ControlValueAccessor \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            registerOnTouched implementation of ControlValueAccessor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Selects the given Date when the model changes. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        calendar:     CalendarComponent\n\n                    \n                \n                    \n                        \n                            Type :     CalendarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:28\n                            \n                        \n\n                \n                    \n                        The used calendar component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:42\n                            \n                        \n\n                \n                    \n                        Change propagation for ControlValueAccessor \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weekdays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weekdays:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:30\n                            \n                        \n\n                \n                    \n                        Array of the days of a week. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport moment from 'moment-es6';\nimport { CalendarComponent } from './calendar.component';\n\n/** Input for a datetime.\n *\n * https://components.entrecode.de/ui/datetime\n *\n*/\n@Component({\n  selector: 'ec-datetime',\n  templateUrl: 'datetime.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatetimeComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatetimeComponent implements ControlValueAccessor {\n  /** The date that should be displayed at start. */\n  @Input() date: moment.Moment;\n  /** The form control that holds the date */\n  @Input() formControl: FormControl = new FormControl();\n  /** The used calendar component */\n  @ViewChild(CalendarComponent) calendar: CalendarComponent;\n  /** Array of the days of a week. */\n  public weekdays: string[];\n  /** If true, the time will not be displayed nor will be editable. */\n  @Input() disableTime: boolean;\n  /** The input's placeholder */\n  @Input() placeholder = '';\n\n  /** Selects the given Date when the model changes. */\n  writeValue(value: Date) {\n    this.calendar.writeValue(value);\n  }\n\n  /** Change propagation for ControlValueAccessor */\n  propagateChange = (_: any) => {\n  };\n\n  /** registerOnChange implementation of ControlValueAccessor */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  /** registerOnTouched implementation of ControlValueAccessor */\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n      \n    \n  \n  \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatetimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DatetimePipe.html":{"url":"pipes/DatetimePipe.html","title":"pipe - DatetimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  DatetimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/datetime/datetime.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        datetime\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: Date | string, pattern: string | string[], raw?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date | string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        pattern\n                                                        \n                                                                    string | string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.symbol.resolve('moment.format.date')\n                                                        \n\n                                                \n                                                \n                                                        raw\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment-es6';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'datetime'\n})\nexport class DatetimePipe implements PipeTransform {\n  constructor(private symbol: SymbolService) { }\n  transform(\n    value: Date | string,\n    pattern: string | string[] = this.symbol.resolve('moment.format.date'),\n    raw?: string\n  ): string {\n    if (!value) {\n      return '';\n    }\n    if (raw) {\n      console.log('raw', raw);\n    }\n    const typed = moment(value, pattern, true);\n    if (!typed.isValid()) {\n      return '';\n    }\n    if (Array.isArray(pattern)) {\n      pattern = pattern[0];\n    }\n    return moment(value).format(pattern);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/form/datetime/month.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a day inside the a month. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        date\n                                \n                                \n                                        draggable\n                                \n                                \n                                        first\n                                \n                                \n                                        format\n                                \n                                \n                                            Optional\n                                        heat\n                                \n                                \n                                        index\n                                \n                                \n                                        last\n                                \n                                \n                                        today\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The moment that is represented by the day. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    determines if the day can be dragged to change the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                    \n                                \n                                \n                                    \n                                        first:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the first in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The formatted day number. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heat\n                                    \n                                \n                                \n                                    \n                                        heat:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The cell index \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                    \n                                \n                                \n                                    \n                                        last:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the last in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        today\n                                    \n                                \n                                \n                                    \n                                        today:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag that is true if the day is today. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Can be given a type, to set a class. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport moment from 'moment-es6';\nimport 'rxjs/add/operator/debounceTime';\nimport { Subject } from 'rxjs/Subject';\n\n/** Interface for a day inside the a month. */\nexport interface Day {\n  /** The cell index */\n  index: number,\n  /** The moment that is represented by the day. */\n  date: moment.Moment;\n  /** Can be given a type, to set a class. */\n  type?: string;\n  /** The formatted day number. */\n  format: string;\n  /** Flag that is true if the day is today. */\n  today: boolean;\n  /** if the day is the first in the timespan */\n  first: boolean;\n  /** if the day is the last in the timespan */\n  last: boolean;\n  /** determines if the day can be dragged to change the timespan */\n  draggable: boolean;\n  /** custom class */\n  heat?: string;\n}\n\n/** Displays the days of a month in a calendarish table. */\n@Component({\n  selector: 'ec-month',\n  templateUrl: 'month.component.html'\n})\nexport class MonthComponent implements OnInit, OnChanges {\n  dragged: any;\n  /** The current selected date */\n  @Input() selected: moment.Moment;\n  /** Color mapping for day cells. E.g. to view a month heatmap */\n  @Input() colors: Object;\n  /** Class mapping for day cells. E.g. to apply different background classes */\n  @Input() heatmap: Object;\n  /** Timespan that is reflected. Marks days inside the span */\n  @Input() timespan: moment.Moment[];\n  /** The current date (for showing month) */\n  @Input() date: moment.Moment;\n  /** The color of days that are inside the timespan */\n  @Input() spancolor = '#ccc'\n  /** If true, the timespan start cannot be dragged */\n  @Input() disableDragStart = false;\n  /** If true, the timespan end cannot be dragged */\n  @Input() disableDragEnd = false;\n  /** The current month as string */\n  public formatted: string;\n  /** The cells containing the days */\n  public cells: Array;\n  /** Format for month in header */\n  public monthFormat = 'MMMM YYYY';\n  /** Emits when the selected day changes. */\n  @Output() dayClicked: EventEmitter = new EventEmitter();\n  /** Changed Timespan selection */\n  @Output() spanChanged: EventEmitter = new EventEmitter();\n\n  protected drag: Subject = new Subject();\n  protected changeSpan: Subject = new Subject();\n\n  constructor(public symbol: SymbolService) {\n    this.monthFormat = this.symbol.resolve('moment.format.month') || this.monthFormat;\n    this.drag.asObservable().debounceTime(100)\n      .subscribe((day) => this.dropDay(day));\n    this.changeSpan.asObservable().debounceTime(800)\n      .subscribe(timespan => this.spanChanged.emit(this.timespan))\n  }\n\n  dropDay(day: Day) {\n    if (!this.dragged || (day.first && this.dragged.first || day.last && this.dragged.last)) {\n      return;\n    }\n    const newTimespan = [].concat(this.timespan);\n    newTimespan[this.dragged.first ? 0 : 1] = day.date.clone();\n    if (newTimespan[0].isAfter(newTimespan[1])) {\n      this.dragged.first = !this.dragged.first;\n      this.dragged.last = !this.dragged.last;\n      newTimespan.reverse();\n    }\n    this.timespan = newTimespan;\n    this.changeSpan.next(this.timespan);\n    /* if (this.cells[0] === day || this.cells[this.cells.length - 1] === day) {\n      // change month if dragging to edge\n      this.setDate(day.date.clone().subtract(1, 'days'));\n    } else {\n      this.setDate();\n    } */\n    this.setDate();\n  }\n\n  dragStart(day, e) {\n    if ((this.disableDragStart && day.first) || (this.disableDragEnd && day.last)) {\n      return;\n    }\n    this.dragged = day;\n    e.preventDefault();\n  }\n\n  mouseUp(day, e) {\n    if (!this.dragged) {\n      return;\n    }\n    delete this.dragged;\n    e.preventDefault();\n  }\n\n  mouseOver(day, e) {\n    if (!this.dragged || this.dragged === day) {\n      return;\n    }\n    e.preventDefault();\n    this.drag.next(day);\n  }\n\n  getDayColor(_moment: moment.Moment) {\n    if (this.colors && this.colors[_moment.toISOString()]) {\n      return this.colors[_moment.toISOString()];\n    }\n  }\n\n  getDayHeat(_moment: moment.Moment) {\n    if (this.heatmap && this.heatmap[_moment.toISOString()]) {\n      return this.heatmap[_moment.toISOString()];\n    }\n  }\n\n  /** Initializes the calendar. */\n  ngOnInit() {\n    this.setDate();\n  }\n\n  /** When changing the date or selected input, the calendar will update its view to display the month containing it. */\n  ngOnChanges(change) {\n    if (change.selected) {\n      this.setDate(this.selected);\n      return;\n    } else if (change.date) {\n      this.setDate(this.date);\n    } else if (change.timespan) {\n      this.setDate();\n    } if (change.colors || change.heatmap) {\n      this.cells = this.getMonth(this.date.clone(), 'current');\n    }\n  }\n\n  /** Returns days of current month */\n  getMonth(day = moment(), type?: string): Array {\n    const begin = day.clone().startOf('month').startOf('week'); // .subtract(weeksbefore * 7, 'days');\n    return new Array(42)\n      .fill(0)\n      .map((d, index) => begin.clone().add(index, 'days'))\n      .map((date, index) => {\n        const isStart = this.timespan && date.clone().startOf('day').isSame(this.timespan[0].clone().startOf('day'));\n        const isEnd = this.timespan && date.clone().startOf('day').isSame(this.timespan[1].clone().startOf('day'));\n        return {\n          index,\n          date,\n          type: date.format('MM YYYY') === day.format('MM YYYY') ? 'current' : 'other',\n          active: this.timespan && date.isBetween(this.timespan[0], this.timespan[1], 'days', '[]'),\n          first: isStart,\n          last: isEnd,\n          draggable: (!this.disableDragStart && isStart) || (!this.disableDragEnd && isEnd),\n          color: this.getDayColor(date),\n          heat: this.getDayHeat(date),\n          format: date.format('DD'),\n          today: moment().startOf('day').diff(date, 'days') === 0,\n        }\n      });\n  }\n\n\n  /** Sets the calendars viewed date to the given moment's month. Renders always 42 cells to keep the layout consistent. */\n  setDate(date: moment.Moment = this.selected || this.date || moment()) {\n    this.date = date.clone();\n    this.formatted = date.format(this.monthFormat);\n    this.cells = this.getMonth(date.clone(), 'current');\n  }\n\n  /** Selects the day of the given moment. */\n  selectDay(_moment: moment.Moment): void {\n    this.setDate(_moment);\n    this.selected = _moment;\n    this.dayClicked.emit(_moment);\n  }\n\n  /** Clears the current selected date*/\n  clearSelection(): void {\n    delete this.selected;\n  }\n\n  /** Returns true if the given moment is currently selected (on a day basis) */\n  isSelected(_moment: moment.Moment): boolean {\n    if (!this.selected) {\n      return;\n    }\n    return this.selected.startOf('day').diff(_moment, 'days') === 0;\n  }\n\n  canAlter(value, span: string) {\n    if (!this.timespan) {\n      return true;\n    }\n    const newDate = this.date.clone().add(value, span);\n    return newDate.isBetween(this.timespan[0], this.timespan[1], 'months', '[]');\n  }\n\n  /** Updates the viewed date to reflect the given relative changes. */\n  alter(value, span: string): void {\n    if (!this.canAlter(value, span)) {\n      return;\n    }\n    this.setDate(this.date.clone().add(value, span));\n  }\n\n  /** Sets the current viewed date to today. */\n  today(): void {\n    this.setDate(moment());\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryInputComponent.html":{"url":"components/DefaultEntryInputComponent.html","title":"component - DefaultEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-form/default-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that can not be represented by the default input template. \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-entry-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry-form/default-entry-input.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DefaultInputComponent } from '@ec.components/ui/src/form/default-input/default-input.component';\nimport { SdkService } from '@ec.components/data/src/sdk/sdk.service';\n\n/** This component holds the input templates for all field types that can not be represented by the default input template. */\n@Component({\n  templateUrl: './default-entry-input.component.html',\n})\nexport class DefaultEntryInputComponent extends DefaultInputComponent {\n  constructor(public sdk: SdkService) {\n    super();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n  \n    \n    \n  \n  \n    \n    \n  \n  \n    \n  \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryOutputComponent.html":{"url":"components/DefaultEntryOutputComponent.html","title":"component - DefaultEntryOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-form/default-entry-output.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all output types that cannot be represented by the default output component. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-entry-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-entry-output.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/default-entry-output.component.ts:12\n                            \n                        \n\n                \n                    \n                        The field to output. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/default-entry-output.component.ts:14\n                            \n                        \n\n                \n                    \n                        The item to display \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core';\n\n/** This component holds the templates for all output types that cannot be represented by the default output component. */\n@Component({\n  selector: 'ec-default-entry-output',\n  templateUrl: './default-entry-output.component.html',\n})\nexport class DefaultEntryOutputComponent {\n  /** The field to output. */\n  field: Field;\n  /** The item to display */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n    JSON\n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} output coming soon!-->\n    {{item?.display(field.property)}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          JSON        🚂🚃🚃🚃 {{field.type}} output coming soon!-->    {{item?.display(field.property)}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultInputComponent.html":{"url":"components/DefaultInputComponent.html","title":"component - DefaultInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/default-input/default-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all basic field types. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\n\n/** This component holds the templates for all basic field types. */\n@Component({\n  templateUrl: './default-input.component.html',\n})\nexport class DefaultInputComponent {\n  /** The field for which the input is meant. */\n  public field: Field;\n  /** The item that is targeted by the input */\n  public item: Item;\n  /** The form group that is used */\n  public group: FormGroup;\n  /** The form control that is used */\n  public control: FormControl;\n}\n\n    \n\n    \n        \n  \n\n  \n\n  \n\n  \n    \n      \n    \n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n    \n    \n      {{option}}\n    \n  \n\n  \n    \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  {{option}}                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultOutputComponent.html":{"url":"components/DefaultOutputComponent.html","title":"component - DefaultOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/default-output/default-output.component.ts\n\n\n    \n        Description\n    \n    \n        Holds the templates to output item field values. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-output.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-output/default-output.component.ts:12\n                            \n                        \n\n                \n                    \n                        The field that should be displayed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-output/default-output.component.ts:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\n\n/** Holds the templates to output item field values. */\n@Component({\n  selector: 'ec-default-output',\n  templateUrl: './default-output.component.html',\n})\nexport class DefaultOutputComponent {\n  /** The field that should be displayed */\n  field: Field;\n  /** The item that is targeted by the input */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n      {{label}}\n    \n    (field.maxItems||10)\">\n      ...\n    \n  \n\n  \n    {{item?.display(field.property)}}\n  \n\n  \n    &#10004;\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    {{item?.display(field.property)}}\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    \n    {{item?.display(field.property)}}\n  \n\n  \n    \n  \n\n  \n    \n      \n        \n      \n    -->\n    \n    {{item?.display(field.property)?.length}}\n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    {{item?.display(field.property)}}\n    \n  \n\n  \n    \n    text\n  \n  \n    {{item?.display(field.property)}}-->\n    JSON\n  \n  \n    {{item?.display(field.property)}}\n    \n  \n  \n    {{item?.display(field.property)}}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{label}}        (field.maxItems||10)\">      ...            {{item?.display(field.property)}}        ✔        {{item?.display(field.property)}}        {{item?.display(field.property)}}        {{item?.display(field.property)}}            {{item?.display(field.property)}}                                        -->        {{item?.display(field.property)?.length}}                        {{item?.display(field.property)}}                text        {{item?.display(field.property)}}-->    JSON        {{item?.display(field.property)}}            {{item?.display(field.property)}}      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropzoneDirective.html":{"url":"directives/DropzoneDirective.html","title":"directive - DropzoneDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DropzoneDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/dropzone/dropzone.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive that turns any element into a zone to drop files. \n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecDropzone]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecDropzone\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.is-active\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                dragleave\n                            \n                            \n                                dragover\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/dropzone/dropzone.directive.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                    \n                        If true the element acts normal \n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:11\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ecDropzone\n                    \n                    \n                        Emits when files are dropped \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:9\n                            \n                        \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.is-active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.is-active:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:7\n                            \n                        \n\n                \n                    \n                        The is-active class is bound to the host when dragover is active \n\n                    \n                \n\n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            dragleave\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragleave(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:37\n                            \n                        \n\n\n                \n                    \n                            flips active to false on dragleave \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragover(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:13\n                            \n                        \n\n\n                \n                    \n                            flips active to true on dragover \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drop\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndrop(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:24\n                            \n                        \n\n\n                \n                    \n                            emits dropped files and flips active to false on drop \n\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\n\n/** Directive that turns any element into a zone to drop files. */\n@Directive({ selector: '[ecDropzone]' })\nexport class DropzoneDirective {\n    /** The is-active class is bound to the host when dragover is active */\n    @HostBinding('class.is-active') private active: boolean;\n    /** Emits when files are dropped */\n    @Output() ecDropzone: EventEmitter = new EventEmitter();\n    /** If true the element acts normal */\n    @Input() disabled = false;\n    /** flips active to true on dragover */\n    @HostListener('dragover', ['$event']) onDragOver(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this.active) {\n            this.active = true;\n        }\n    }\n    /** emits dropped files and flips active to false on drop */\n    @HostListener('drop', ['$event']) onDrop(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (!e.dataTransfer.files || !e.dataTransfer.files.length) {\n            return;\n        }\n        this.ecDropzone.emit(e);\n        this.active = false;\n    }\n    /** flips active to false on dragleave */\n    @HostListener('dragleave', ['$event']) onDragLeave(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (this.active) {\n            this.active = false;\n        }\n    }\n    constructor(private el: ElementRef) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicRackComponent.html":{"url":"components/DynamicRackComponent.html","title":"component - DynamicRackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicRackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/dynamic-rack/dynamic-rack.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./dynamic-rack.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/dynamic-rack/dynamic-rack.component.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver, Type, ViewChild } from '@angular/core';\n\n// import { CustomFieldComponent } from './custom-field.component';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  // selector: 'ec-dynamic-rack',\n  templateUrl: './dynamic-rack.component.html'\n})\nexport class DynamicRackComponent {\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n}\n\n    \n\n    \n        \n  \n    -->\n    -->\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      -->    -->  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicRackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicSlotComponent.html":{"url":"components/DynamicSlotComponent.html","title":"component - DynamicSlotComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicSlotComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-dynamic-slot\n            \n\n\n\n\n            \n                templateUrl\n                ./dynamic-slot.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, data: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentFactoryResolver:     ComponentFactoryResolver\n\n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver, ComponentRef, Type, ViewChild } from '@angular/core';\nimport { SlotHostDirective } from '../slot-host.directive';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-dynamic-slot',\n  templateUrl: './dynamic-slot.component.html'\n})\nexport class DynamicSlotComponent {\n  /** The FieldHostDirective will  be used to nest custom components into the field */\n  @ViewChild(SlotHostDirective) fieldHost: SlotHostDirective;\n\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(public componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  /** Loads the given component inside the fieldHost. Sets current item and field by default. */\n  loadComponent(component: Type, data: Object = {}): ComponentRef {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n    const viewContainerRef = this.fieldHost.viewContainerRef;\n    viewContainerRef.clear();\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    Object.assign(componentRef.instance, data);\n    return componentRef;\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicSlotComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntriesDirective.html":{"url":"directives/EntriesDirective.html","title":"directive - EntriesDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  EntriesDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/entries/entries.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entryList of a given model with the given config.\nhttps://components.entrecode.de/data/entries\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecEntries]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                entryList\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Private\n                                promise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                load\n                            \n                            \n                                next\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                prev\n                            \n                            \n                                useList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                endless\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entries/entries.directive.ts:34\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the entries be loaded immediately? Defaults to true \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        endless\n                    \n                    \n                        If true, calling next will append the next page to the items, making the list grow.\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used. \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model to load from. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        The filterOptions for loading. \n\n                            \n                            Type:    any\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:25\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                            \n                        \n                    \n                \n                \n                    \nentries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:100\n                            \n                        \n\n\n                \n                    \n                            This helper returns all items of the current entryList. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:54\n                            \n                        \n\n\n                \n                    \n                            Loads the entries \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:41\n                            \n                        \n\n\n                \n                    \n                            When the model is known, the entryList will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useList\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseList(entryList: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryList\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            entryList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entryList:     EntryList\n\n                    \n                \n                    \n                        \n                            Type :     EntryList\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:33\n                            \n                        \n\n                \n                    \n                        The current loaded entryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     EntryResource[]\n\n                    \n                \n                    \n                        \n                            Type :     EntryResource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:21\n                            \n                        \n\n                \n                    \n                        The promise of the entryList call. \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ec-entries\nThis component can be used to load a list of entries from the template:\n\n  \n  {{muffin.name}}\n  \n\n    \n\n    \n        import { Directive, Input, OnChanges } from '@angular/core';\nimport { LoaderComponent, WithLoader } from '@ec.components/ui';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { SdkService } from '../sdk/sdk.service';\n\n// import { filterOptions } from 'ec.sdk/lib/resources/ListResource';\n\n/** Loads an entryList of a given model with the given config.\n * https://components.entrecode.de/data/entries\n*/\n@Directive({\n  selector: '[ecEntries]',\n  exportAs: 'ecEntries'\n})\nexport class EntriesDirective implements OnChanges, WithLoader {\n  /** The promise of the entryList call. */\n  private promise: any;\n  /** The model to load from. */\n  @Input() model: string;\n  /** The filterOptions for loading. */\n  @Input() options: any = {}; // TODO cannot import #simibug : filterOptions;\n  /** If true, calling next will append the next page to the items, making the list grow.*/\n  @Input() endless = false;\n  /** Should the entries be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entryList */\n  private entryList: EntryList;\n  public items: EntryResource[] = [];\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService) {\n  }\n\n  /** When the model is known, the entryList will be loaded. */\n  ngOnChanges() {\n    if (!this.model) {\n      return;\n    }\n    if (this.endless && this.options.page && this.options.page > 1) {\n      console.warn('cannot init ecEntries on page!==1 with strategy=endless');\n    }\n    if (this.autoload !== false) {\n      this.load();\n    }\n  }\n\n  /** Loads the entries */\n  load() {\n    this.promise = this.sdk.api.entryList(this.model, this.options)\n      .then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n\n  useList(entryList) {\n    this.entryList = entryList;\n    const items = this.entryList.getAllItems();\n    if (this.endless) {\n      this.items = this.items.concat(items);\n      this.items = this.items.filter((item) => this.items.find((_item) => _item.id === item.id));\n    } else {\n      this.items = this.entryList.getAllItems();\n    }\n  }\n\n  next() {\n    this.promise = this.entryList.followNextLink().then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  prev() {\n    this.promise = this.entryList.followPrevLink().then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  isLast() {\n    return !this.entryList || !this.entryList.hasNextLink();\n  }\n\n  isFirst() {\n    if (this.endless) {\n      return true;\n    }\n    return !this.entryList || !this.entryList.hasFirstLink();\n  }\n\n  /** This helper returns all items of the current entryList. */\n  entries() {\n    if (!this.entryList) {\n      return [];\n    }\n    return this.entryList.getAllItems();\n  }\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntryDirective.html":{"url":"directives/EntryDirective.html","title":"directive - EntryDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  EntryDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/entry/entry.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entry by id to the template.\nhttps://components.entrecode.de/data/entries\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecEntry]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                promise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                entryId\n                            \n                            \n                                levels\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry/entry.directive.ts:32\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the entry be loaded immediately? Defaults to true \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        entryId\n                    \n                    \n                        The entry id that should be loaded\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                    \n                        The levels to use. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used. \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model to load from \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:22\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                    \n                        Fires as soon as the entry has been loaded. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:28\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:47\n                            \n                        \n\n\n                \n                    \n                            Loads the entry. Can be called from template when using autoload=false \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:39\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the entry will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entry:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:32\n                            \n                        \n\n                \n                    \n                        The current loaded entry \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:18\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ec-entry\nThis directive can be used to load a single entry directly from the template:\n\n{{muffin.entry?.name}}\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { WithLoader, LoaderComponent } from '@ec.components/ui';\n\n/** Loads an entry by id to the template.\n * https://components.entrecode.de/data/entries\n * */\n@Directive({\n  selector: '[ecEntry]',\n  exportAs: 'ecEntry'\n})\nexport class EntryDirective implements OnChanges, WithLoader {\n  /** The loading promise */\n  promise: any;\n  /** The entry id that should be loaded*/\n  @Input() entryId: string;\n  /** The model to load from */\n  @Input() model: string;\n  /** Should the entry be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** Fires as soon as the entry has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entry */\n  entry: any;\n\n  /** Injects the sdk */\n  constructor(private sdk: SdkService) {\n  }\n\n  /** as soon as model and id are known, the entry will be loaded. */\n  ngOnChanges() {\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the entry. Can be called from template when using autoload=false */\n  load() {\n    if (!this.entryId || !this.model) {\n      return;\n    }\n    this.promise = this.sdk.api.entry(this.model, this.entryId, this.levels)\n      .then((entry) => {\n        this.entry = entry;\n        this.loaded.emit(entry);\n        return entry;\n      });\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntryListComponent.html":{"url":"components/EntryListComponent.html","title":"component - EntryListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EntryListComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-list/entry-list.component.ts\n\n\n    \n        Description\n    \n    \n        The EntryListComponent is a thin holder of an EntryList instance. It extends the ListComponent\nhttps://components.entrecode.de/data/entry-list\n\n    \n\n    \n        Extends\n    \n    \n            ResourceListComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-entry-list\n            \n\n\n\n\n            \n                templateUrl\n                ../../../ui/src/list/list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                list\n                            \n                            \n                                resourceConfig\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createList\n                            \n                            \n                                initFilter\n                            \n                            \n                                    Protected\n                                createList\n                            \n                            \n                                filter\n                            \n                            \n                                initFilterQuery\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                api\n                            \n                            \n                                listResource\n                            \n                            \n                                loader\n                            \n                            \n                                relation\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loaderService: LoaderService, sdk: SdkService, notificationService: NotificationsService, modelConfig: ModelConfigService, crud: CrudService, symbol: SymbolService, resourceService: ResourceService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry-list/entry-list.component.ts:26\n                            \n                        \n\n                \n                    \n                            The constructor will just call super of List\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelConfig\n                                                  \n                                                        \n                                                                    ModelConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        crud\n                                                  \n                                                        \n                                                                    CrudService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model whose entries should be shown.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                            \n                            Type:    Core\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listResource\n                    \n                    \n                        If listResource input is set, the given ListResource will be used directly and loading will be skipped. \n\n                            \n                            Type:    ListResource\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be shown while the list is loaded. \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        emits when the list changed (after loading) \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createList\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createList()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:57\n                            \n                        \n\n\n                \n                    \n                            The method to create the list\n\n\n                            \n                                Returns :     Promise | ResourceList\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter(property: string, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:114\n                            \n                        \n\n\n                \n                    \n                            This method will filter the list by a given property value and optional operator. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilterQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilterQuery(fieldFilter: (property: string,value: any) => void)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldFilter\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:105\n                            \n                        \n\n\n                \n                    \n                            When changing the model or the config, the list will update\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:78\n                            \n                        \n\n\n                \n                    \n                            Creates/Updates the list and subscribes Observables.  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ListConfig\n\n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:26\n                            \n                        \n\n                \n                    \n                        Overrides the Config of ResourceList with a ListConfig containing an EntryResource \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list/entry-list.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     ResourceList\n\n                    \n                \n                    \n                        \n                            Type :     ResourceList\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:28\n                            \n                        \n\n                \n                    \n                        The instance of an EntryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resourceConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceConfig:     ResourceConfig\n\n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Entry List\nEntry List is a thin extension of ec-list. It handles loading entries from the datamanager and converting them to a List instance.\n\n    \n\n    \n        import { Component, Input, Optional } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ListConfig } from '@ec.components/core/src/list/list-config.interface';\nimport { LoaderService } from '@ec.components/ui/src/loader/loader.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { CrudService } from '../crud/crud.service';\nimport { ModelConfigService } from '../model-config/model-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { SdkService } from '../sdk/sdk.service';\nimport { EntryList } from './entry-list';\n\n/** The EntryListComponent is a thin holder of an EntryList instance. It extends the ListComponent\n * https://components.entrecode.de/data/entry-list\n*/\n@Component({\n  selector: 'ec-entry-list',\n  templateUrl: '../../../ui/src/list/list.component.html', // TODO avoid relative paths\n})\nexport class EntryListComponent extends ResourceListComponent {\n  /** The model whose entries should be shown.*/\n  @Input() model: string;\n  /** Overrides the Config of ResourceList with a ListConfig containing an EntryResource */\n  config: ListConfig = {};\n\n  /** The constructor will just call super of List*/\n  constructor(protected loaderService: LoaderService,\n    protected sdk: SdkService,\n    protected notificationService: NotificationsService,\n    protected modelConfig: ModelConfigService,\n    protected crud: CrudService,\n    protected symbol: SymbolService,\n    protected resourceService: ResourceService,\n    @Optional() public route: ActivatedRoute) {\n    super(loaderService, sdk, notificationService, symbol, resourceService, route);\n    /*if (route) {\n      route.params.subscribe(({ model }) => {\n        if (model) {\n          this.model = model;\n        }\n      })\n    }*/\n  }\n\n  initFilter() {\n    this.initFilterQuery((property, value) => {\n      const target = property.split('.');\n      const field = this.config.fields[target[1]];\n      if (target[0] === this.model && field) {\n        return {\n          property: target[1],\n          value: field.queryFilter ? field.queryFilter(value) : value\n        }\n      }\n    });\n  }\n\n  createList(): Promise {\n    if (!this.model) {\n      return;\n    }\n    this.crud.change({ model: this.model })\n      .subscribe((update) => {\n        this.list.load();\n      }); // TODO: remove crud service or similar\n    this.resourceService.change({ relation: this.model })\n      .subscribe((update) => {\n        this.list.load();\n      });\n    return this.modelConfig.generateConfig(this.model, (this.config || {}).fields)\n      .then((config: ListConfig) => {\n        this.config = Object.assign(this.config || {}, config);\n        this.initFilter();\n        return new EntryList(this.model, this.config, this.sdk);\n      });\n\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n        \n        \n          {{group.value}}\n        \n      \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          {{group.value}}                          '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'EntryListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntryListPopComponent.html":{"url":"components/EntryListPopComponent.html","title":"component - EntryListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EntryListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-list-pop/entry-list-pop.component.ts\n\n\n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-entry-list-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./entry-list-pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lightModel\n                            \n                            \n                                    Public\n                                modelConfig\n                            \n                            \n                                searchbar\n                            \n                            \n                                delay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                select\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modelConfig: ModelConfigService, popService: PopService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelConfig\n                                                  \n                                                        \n                                                                    ModelConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type:    ListConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                    \n                        If true, .visible is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        Emits the value of visible on change. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            emits columnClicked event or toggles selection if no observers. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:51\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. First removes visible and after the delay it removes active. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:42\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. First sets active and after the delay it sets visible. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(visible: boolean, emit: boolean)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:30\n                            \n                        \n\n\n                \n                    \n                            Shows if not visible, hides if visible. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        visible\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                !this.visible\n                                                        \n\n                                                \n                                                \n                                                        emit\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lightModel:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modelConfig:     ModelConfigService\n\n                    \n                \n                    \n                        \n                            Type :     ModelConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchbar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchbar:     SearchbarComponent\n\n                    \n                \n                    \n                        \n                            Type :     SearchbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:24\n                            \n                        \n\n                \n                    \n                        The amount of time between setting active and visible. Defaults to 0. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, ViewChild } from '@angular/core';\nimport { Item, ListConfig, Selection } from '@ec.components/core';\nimport { PopComponent } from '@ec.components/ui';\nimport { PopService } from '@ec.components/ui/src/pop/pop.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { SearchbarComponent } from '../../../ui/src/list/searchbar/searchbar.component';\nimport { ModelConfigService } from '../model-config/model-config.service';\n\n@Component({\n    selector: 'ec-entry-list-pop',\n    templateUrl: './entry-list-pop.component.html',\n\n})\n\nexport class EntryListPopComponent extends PopComponent implements OnChanges {\n    @Input() model: string;\n    @Input() config: ListConfig;\n    @Input() selection: Selection;\n    @Output() columnClicked: EventEmitter> = new EventEmitter();\n    @ViewChild(SearchbarComponent) searchbar: SearchbarComponent;\n    lightModel: any;\n\n    constructor(\n        public modelConfig: ModelConfigService,\n        protected popService: PopService\n    ) {\n        super(popService);\n    }\n\n    ngOnChanges() {\n        if (this.model) {\n            this.modelConfig.getLightModel(this.model).then(model => this.lightModel = model);\n        }\n        if (this.config) {\n            this.config = Object.assign({ hidePagination: true, disableHeader: true }, this.config);\n        }\n    }\n\n    /** emits columnClicked event or toggles selection if no observers. */\n    select(item) {\n        if (this.columnClicked.observers.length) {\n            this.columnClicked.emit(item);\n        } else if (this.selection) {\n            this.selection.toggle(item);\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n            \n            \n            \n        \n        \n            \n        \n        \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'EntryListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/notifications/error/error.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/error/error.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        The error that should be displayed \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            change update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            initial update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            updates error message  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  */\n@Component({\n  selector: 'ec-error',\n  templateUrl: './error.component.html'\n})\n/** Displays an error thrown by the SDK. */\nexport class ErrorComponent implements OnInit, OnChanges {\n  /** The error that should be displayed */\n  @Input() error: any;\n\n  constructor(private symbol: SymbolService) {\n  }\n\n  /** initial update */\n  ngOnInit() {\n    this.update();\n  }\n  /** change update */\n  ngOnChanges() {\n    this.update();\n  }\n  /** updates error message  */\n  update() {\n    if (!this.error) {\n      return;\n    }\n    const message = this.symbol.resolve('error.' + this.error.code);\n    if (message) {\n      this.error.message = message;\n    }\n  }\n}\n\n    \n\n    \n        {{error.code}}\n{{error.dataPath}}\n{{error?.message}}\n{{error.detail}}\n\n  \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{error.code}}{{error.dataPath}}{{error?.message}}{{error.detail}}        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/field/field.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        FieldConfigProperty\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                    Optional\n                                filterable\n                            \n                            \n                                    Optional\n                                filterOperator\n                            \n                            \n                                    Optional\n                                filterPopClass\n                            \n                            \n                                    Optional\n                                form\n                            \n                            \n                                    Optional\n                                hidden\n                            \n                            \n                                    Optional\n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                input\n                            \n                            \n                                    Optional\n                                label\n                            \n                            \n                                    Optional\n                                maxItems\n                            \n                            \n                                    Optional\n                                output\n                            \n                            \n                                    Optional\n                                placeholder\n                            \n                            \n                                    Optional\n                                property\n                            \n                            \n                                    Optional\n                                required\n                            \n                            \n                                    Optional\n                                sortable\n                            \n                            \n                                    Optional\n                                type\n                            \n                            \n                                    Optional\n                                validate\n                            \n                            \n                                values\n                            \n                            \n                                    Optional\n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlaceholder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, config: FieldConfigProperty)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/field/field.ts:47\n                            \n                        \n\n                \n                    \n                            A Field is constructed by assigning the given config and the property to itself\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:35\n                            \n                        \n\n                \n                    \n                        Class string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:41\n                            \n                        \n\n                \n                    \n                        if false, the field will not be filterable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterOperator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterOperator:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:27\n                            \n                        \n\n                \n                    \n                        The operator to use for filtering: exact, search, any etc.. see ec.sdk doc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterPopClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterPopClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:29\n                            \n                        \n\n                \n                    \n                        Defines the class for the filter pop, e.g. in list header. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:31\n                            \n                        \n\n                \n                    \n                        Wether or not the field should appear in default forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hidden\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hidden:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:11\n                            \n                        \n\n                \n                    \n                        If true, the field will not be visible anywhere \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:45\n                            \n                        \n\n                \n                    \n                        Icon name that should be associated with the field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:37\n                            \n                        \n\n                \n                    \n                        id for form labels \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:19\n                            \n                        \n\n                \n                    \n                        Custom Component to display form input *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:25\n                            \n                        \n\n                \n                    \n                        Label for Inputs. Defaults to property name. If false, the label is empty. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxItems:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:43\n                            \n                        \n\n                \n                    \n                        Defines the maximum of visible item (for tags view or similar). Defaults to 10 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            output\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        output:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:21\n                            \n                        \n\n                \n                    \n                        Custom Component to display value *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            placeholder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placeholder:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:23\n                            \n                        \n\n                \n                    \n                        Placeholder in inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            property\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        property:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:9\n                            \n                        \n\n                \n                    \n                        The name of the field's property \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            required\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        required:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:7\n                            \n                        \n\n                \n                    \n                        Tells if the field is required in forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sortable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:39\n                            \n                        \n\n                \n                    \n                        if false, the field will not be sortable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:13\n                            \n                        \n\n                \n                    \n                        The field's type \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validate:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:17\n                            \n                        \n\n                \n                    \n                        Custom Validation function \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        values:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:33\n                            \n                        \n\n                \n                    \n                        Possible Values e.g. in a select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            view\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        view:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:15\n                            \n                        \n\n                \n                    \n                        The field's view \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlaceholder\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlaceholder()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns placeholder if any \n\n\n                            \n                                Returns :     string | true\n\n                            \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/field/field.ts:45\n                            \n                        \n                \n                    \n                        wildcard for custom config values \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n\n    \n        Field\nA Field represents a property of an Object, without a specific value.\nIt is used to describe a column or field of one or multiple equally structured objects.\nThe field config (see FieldConfigProperty) can contain different transformation methods, such as:\n\nresolve: This method is used to resolve the field value from the object body.\nIt runs before all other transformation methods.\ndisplay: Transforms the resolved value to a human readable output. It is used for e.g. in list cells.\ngroup: Should return a value that is suitable for grouping multiple different values together, like in a list.\n\nExample Usage:\nconst field = new Field('name', {\n    resolve: (body) => body.value.name,\n    display: (value) => value.toUpperCase(),\n    group: (value) => value.length + ' Buchstaben',\n    sort: (value) => value.length\n    });\nconst name = field.resolve({value:{name:'bobby'}}); // 'bobby'\nfield.display(name); // => 'Bobby'\nfield.group(name); // => '5 Buchstaben'\nfield.sort(name); // => 5The above example is of course only viable to show the concept.\nWhen using the components as a whole, those methods will be called automatically from Item, List or Form.\n\n    \n\n    \n        import { FieldConfigProperty } from '../config/field-config-property.interface';\n\nexport class Field implements FieldConfigProperty {\n  /** Tells if the field is required in forms */\n  required?: boolean;\n  /** The name of the field's property */\n  property?: string;\n  /** If true, the field will not be visible anywhere */\n  hidden?: boolean;\n  /** The field's type */\n  type?: string;\n  /** The field's view */\n  view?: string;\n  /** Custom Validation function */\n  validate?: (value, field) => any;\n  /** Custom Component to display form input **/\n  input?: any;\n  /** Custom Component to display value **/\n  output?: any;\n  /** Placeholder in inputs */\n  placeholder?: string;\n  /** Label for Inputs. Defaults to property name. If false, the label is empty. */\n  label?: string | boolean;\n  /** The operator to use for filtering: exact, search, any etc.. see ec.sdk doc */\n  filterOperator?: string;\n  /** Defines the class for the filter pop, e.g. in list header. */\n  filterPopClass?: string;\n  /** Wether or not the field should appear in default forms */\n  form?: boolean;\n  /** Possible Values e.g. in a select */\n  values: any[] = [];\n  /** Class string */\n  class = '';\n  /** id for form labels */\n  id: string;\n  /** if false, the field will not be sortable in a list */\n  sortable?: boolean;\n  /** if false, the field will not be filterable in a list */\n  filterable?: boolean;\n  /** Defines the maximum of visible item (for tags view or similar). Defaults to 10 */\n  maxItems?: number;\n  /** Icon name that should be associated with the field */\n  icon?: string;\n  /** wildcard for custom config values */\n  [key: string]: any;\n\n  /** A Field is constructed by assigning the given config and the property to itself*/\n  constructor(property: string, config: FieldConfigProperty) {\n    if (config) {\n      Object.assign(this, config);\n    }\n    Object.assign(this, { property: property });\n    this.id = `${this.property}_${Date.now()}`;\n  }\n\n  /** Returns placeholder if any */\n  getPlaceholder() {\n    return this.placeholder || this.label || this.property;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldConfig.html":{"url":"interfaces/FieldConfig.html","title":"interface - FieldConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/config/field-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for list fields.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    FieldConfigProperty\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/config/field-config.interface.ts:4\n                            \n                        \n                \n                    \n                        Each field can be configured in the form of FieldConfigProperty. \n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        export interface FieldConfig {\n  /** Each field can be configured in the form of FieldConfigProperty. */\n  [key: string]: FieldConfigProperty\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileOptions.html":{"url":"interfaces/FileOptions.html","title":"interface - FileOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for file options used by new assets \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customNames\n                                \n                                \n                                            Optional\n                                        fieldName\n                                \n                                \n                                            Optional\n                                        ignoreDuplicates\n                                \n                                \n                                            Optional\n                                        includeAssetIDInPath\n                                \n                                \n                                            Optional\n                                        preserveFilenames\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customNames\n                                    \n                                \n                                \n                                    \n                                        customNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional custom names for assets. Mapped by indices to assets. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                    \n                                \n                                \n                                    \n                                        fieldName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom file form fieldName \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreDuplicates\n                                    \n                                \n                                \n                                    \n                                        ignoreDuplicates:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Ignores duplicates \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includeAssetIDInPath\n                                    \n                                \n                                \n                                    \n                                        includeAssetIDInPath:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Includes assetID in path \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preserveFilenames\n                                    \n                                \n                                \n                                    \n                                        preserveFilenames:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Preserves Filenames \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource,\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[],\n  /** The uploaded asset as item */\n  item?: Item\n  /** The uploaded asset as item */\n  items?: Array>\n  /** The list where it happened. */\n  list?: ResourceList,\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  customNames?: string[]\n  /** Custom file form fieldName */\n  fieldName?: string\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) =>\n          ((only && (match && this.isNewAsset(a)) ||\n            (!only && (match || this.isNewAsset(a)))))\n        , only);\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id)\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n    if (!files.length) {\n      return;\n    }\n    return api.createDMAssets(assetGroupID, this.getFormData(files, options))\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('dmAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {})\n      }\n      return this.sdk.api.createAssets(data, {})\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array, assetGroupID?: string): Promise> {\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    console.log('resolve', unresolved, this.isNewAsset(unresolved));\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) { // new assets\n      return this.sdk.api.dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then(dmAssetList => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then((): any => {\n      if (unresolved.length === 1) {\n        return this.sdk.api.asset(unresolved[0]).then(asset => {\n          console.log('old asset', asset);\n          return [asset]\n        });\n      }\n      return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 })\n        .then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ?\n              resolved.find((resource) => resource.assetID === asset) : asset)\n        });\n\n    })\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupListPromise\n                            \n                            \n                                    Public\n                                uploads\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assetGroupList\n                            \n                            \n                                    Public\n                                getFormData\n                            \n                            \n                                    Public\n                                isNewAsset\n                            \n                            \n                                    Public\n                                resolveAssets\n                            \n                            \n                                    Public\n                                uploadAssets\n                            \n                            \n                                    Public\n                                uploadFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, typeConfig: TypeConfigService, resourceService: ResourceService, resourceConfig: ResourceConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/file.service.ts:51\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            assetGroupList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        assetGroupList(forceReload: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:185\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        forceReload\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormData(files: FileList, options?: FileOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                                    FileList\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    FileOptions\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormData\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isNewAsset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            returns true if the given asset is a new one (DMAssetResource) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        asset\n                                                        \n                                                                    Array | string | DMAssetResource | PublicAssetResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        only\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolveAssets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolveAssets(assets: Array, assetGroupID?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:148\n                            \n                        \n\n\n                \n                    \n                            Resolves all assetIDs to PublicAssetResources \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        assets\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        assetGroupID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploadAssets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        uploadAssets(files: , assetGroupID: , options: FileOptions, api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:94\n                            \n                        \n\n\n                \n                    \n                            Upload New Assets \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        assetGroupID\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    FileOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploadFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        uploadFiles(files: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:115\n                            \n                        \n\n\n                \n                    \n                            Upload old assets \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            assetGroupListPromise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        assetGroupListPromise:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:49\n                            \n                        \n\n                \n                    \n                        Promise that resolves assetGroupList from sdk \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploads\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uploads:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/file.service.ts:51\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an entry is created or updated. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource,\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[],\n  /** The uploaded asset as item */\n  item?: Item\n  /** The uploaded asset as item */\n  items?: Array>\n  /** The list where it happened. */\n  list?: ResourceList,\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  customNames?: string[]\n  /** Custom file form fieldName */\n  fieldName?: string\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) =>\n          ((only && (match && this.isNewAsset(a)) ||\n            (!only && (match || this.isNewAsset(a)))))\n        , only);\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id)\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n    if (!files.length) {\n      return;\n    }\n    return api.createDMAssets(assetGroupID, this.getFormData(files, options))\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('dmAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {})\n      }\n      return this.sdk.api.createAssets(data, {})\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array, assetGroupID?: string): Promise> {\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    console.log('resolve', unresolved, this.isNewAsset(unresolved));\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) { // new assets\n      return this.sdk.api.dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then(dmAssetList => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then((): any => {\n      if (unresolved.length === 1) {\n        return this.sdk.api.asset(unresolved[0]).then(asset => {\n          console.log('old asset', asset);\n          return [asset]\n        });\n      }\n      return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 })\n        .then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ?\n              resolved.find((resource) => resource.assetID === asset) : asset)\n        });\n\n    })\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n  Modules\n  FilesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nAssetDirective\n\nAssetDirective\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListComponent\n\nAssetListComponent\n\nFilesModule -->\n\nAssetListComponent->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nAssetgroupSelectComponent\n\nAssetgroupSelectComponent\n\nFilesModule -->\n\nAssetgroupSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListComponent \n\nAssetListComponent \n\nAssetListComponent  -->\n\nFilesModule->AssetListComponent \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent  -->\n\nFilesModule->AssetgroupSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\n\n\nResourceModule\n\nResourceModule\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/files/files.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AssetDirective\n                            \n                            \n                                AssetListComponent\n                            \n                            \n                                AssetListPopComponent\n                            \n                            \n                                AssetSelectComponent\n                            \n                            \n                                AssetgroupSelectComponent\n                            \n                            \n                                DropzoneDirective\n                            \n                            \n                                ImageDirective\n                            \n                            \n                                UploadComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AssetSelectComponent\n                            \n                            \n                                AssetgroupSelectComponent\n                            \n                            \n                                UploadComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     FileService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ResourceModule\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AssetDirective\n                            \n                            \n                                    AssetListComponent\n                            \n                            \n                                    AssetListPopComponent\n                            \n                            \n                                    AssetSelectComponent\n                            \n                            \n                                    AssetgroupSelectComponent\n                            \n                            \n                                    DropzoneDirective\n                            \n                            \n                                    ImageDirective\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UploadComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui/src/ui.module';\nimport { AssetListComponent } from '../asset-list/asset-list.component';\nimport { ResourceModule } from '../resource/resource.module';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { AssetListPopComponent } from './asset-list-pop/asset-list-pop.component';\nimport { AssetSelectComponent } from './asset-select/asset-select.component';\nimport { AssetDirective } from './asset/asset.directive';\nimport { AssetgroupSelectComponent } from './assetgroup-select/assetgroup-select.component';\nimport { DropzoneDirective } from './dropzone/dropzone.directive';\nimport { FileService } from './file.service';\nimport { ImageDirective } from './image/image.directive';\nimport { UploadComponent } from './upload/upload.component';\n\n@NgModule({\n  entryComponents: [\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    UploadComponent,\n  ],\n  declarations: [\n    AssetListComponent,\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n    ResourceModule\n  ],\n  exports: [\n    AssetListComponent,\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n    SdkModule,\n  ],\n  providers: [\n    FileService\n  ],\n})\nexport class FilesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Focus.html":{"url":"interfaces/Focus.html","title":"interface - Focus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Focus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/utility/focus/focus.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        focusEvent\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngAfterViewInit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/focus/focus.interface.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        focusEvent\n                                    \n                                \n                                \n                                    \n                                        focusEvent:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\n\nexport interface Focus {\n  focusEvent: EventEmitter;\n\n  ngAfterViewInit();\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusDirective.html":{"url":"directives/FocusDirective.html","title":"directive - FocusDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  FocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/utility/focus/focus.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecFocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecFocus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/focus/focus.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ecFocus\n                    \n                    \n                            \n                            Type:    EventEmitter\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/focus/focus.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/focus/focus.directive.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, Input, OnInit } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[ecFocus]',\n})\nexport class FocusDirective implements OnInit {\n  @Input() ecFocus: EventEmitter;\n\n  constructor(private element: ElementRef) {\n  }\n\n  ngOnInit() {\n    this.ecFocus\n      .subscribe((event: boolean) => {\n        if (event) {\n          this.element.nativeElement.focus();\n        } else {\n          this.element.nativeElement.blur();\n        }\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormConfig.html":{"url":"interfaces/FormConfig.html","title":"interface - FormConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/form/form-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                FormConfig is an extension of ItemConfig. \n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n\n\n\n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\n\n/** FormConfig is an extension of ItemConfig. */\nexport interface FormConfig extends ItemConfig {\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n  Modules\n  FormModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nCalendarComponent->FormModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nFormModule -->\n\nDaterangeComponent->FormModule\n\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nFormModule -->\n\nDatetimePipe->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nFormModule -->\n\nHeatmapComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nFormModule -->\n\nMonthComponent->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nFormModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nFormModule->DaterangeComponent \n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nFormModule->DatetimePipe \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nFormModule->HeatmapComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nFormModule->MonthComponent \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nIconModule\n\nIconModule\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/form.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CalendarComponent\n                            \n                            \n                                DaterangeComponent\n                            \n                            \n                                DatetimeComponent\n                            \n                            \n                                DatetimePipe\n                            \n                            \n                                DefaultInputComponent\n                            \n                            \n                                DefaultOutputComponent\n                            \n                            \n                                FormComponent\n                            \n                            \n                                HeatmapComponent\n                            \n                            \n                                MaxItemsPipe\n                            \n                            \n                                MonthComponent\n                            \n                            \n                                ToggleComponent\n                            \n                            \n                                VisibleFieldsPipe\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                DefaultInputComponent\n                            \n                            \n                                DefaultOutputComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     FormService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IconModule\n                            \n                            \n                                    IoModule\n                            \n                            \n                                    LoaderModule\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    SymbolModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CalendarComponent\n                            \n                            \n                                    DaterangeComponent\n                            \n                            \n                                    DatetimeComponent\n                            \n                            \n                                    DatetimePipe\n                            \n                            \n                                    FormComponent\n                            \n                            \n                                    HeatmapComponent\n                            \n                            \n                                    IoModule\n                            \n                            \n                                    MaxItemsPipe\n                            \n                            \n                                    MonthComponent\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    ToggleComponent\n                            \n                            \n                                    VisibleFieldsPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormComponent } from './form.component';\nimport { DefaultInputComponent } from './default-input/default-input.component';\nimport { DefaultOutputComponent } from './default-output/default-output.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PopModule } from '../pop/pop.module';\nimport { FormService } from './form.service';\nimport { VisibleFieldsPipe } from './visible-fields.pipe';\nimport { IoModule } from '../io/io.module';\nimport { DatetimeComponent } from './datetime/datetime.component';\nimport { MonthComponent } from './datetime/month.component';\nimport { DatetimePipe } from './datetime/datetime.pipe';\nimport { ToggleComponent } from './toggle/toggle.component';\nimport { CalendarComponent } from './datetime/calendar.component';\nimport { LoaderModule } from '../loader/loader.module';\nimport { IconModule } from '../icon/icon.module';\nimport { MaxItemsPipe } from './max-items.pipe';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { HeatmapComponent } from './datetime/heatmap.component';\nimport { DaterangeComponent } from './datetime/daterange.component';\n\n@NgModule({\n  entryComponents: [\n    DefaultInputComponent,\n    DefaultOutputComponent,\n  ],\n  declarations: [\n    FormComponent,\n    DefaultInputComponent,\n    DefaultOutputComponent,\n    DatetimeComponent,\n    DatetimePipe,\n    MonthComponent,\n    HeatmapComponent,\n    DaterangeComponent,\n    CalendarComponent,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    ToggleComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PopModule,\n    IoModule,\n    LoaderModule,\n    IconModule,\n    SymbolModule\n  ],\n  exports: [\n    FormComponent,\n    ReactiveFormsModule,\n    DatetimeComponent,\n    DatetimePipe,\n    CalendarComponent,\n    HeatmapComponent,\n    DaterangeComponent,\n    MonthComponent,\n    PopModule,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    IoModule,\n    ToggleComponent,\n  ],\n  providers: [\n    FormService\n  ]\n})\nexport class FormModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/form/form.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the interface between Angular Forms and ec.components core classes. \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addField\n                            \n                            \n                                    Public\n                                getGroup\n                            \n                            \n                                getValidators\n                            \n                            \n                                validateFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addField\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addField(field: Field, form: Form, group: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            adds a new field to a form. handles form group and control \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        group\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroup(form: Form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Initializes the form group from the form fields\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValidators\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValidators(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Extracts all validators from a given Field instance. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidatorFn[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateFactory(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Returns a Validation function from the given field (using field.validate) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidationErrors | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Form } from '@ec.components/core/src/form/form';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport { Field } from '@ec.components/core/src/field/field';\n\n/** This service is the interface between Angular Forms and ec.components core classes. */\n@Injectable()\nexport class FormService {\n\n  /** Initializes the form group from the form fields*/\n  public getGroup(form: Form) {\n    const control = {};\n    form.fields.filter((field) => field.form !== false)\n      .forEach((field) => {\n        const validators = this.getValidators(field);\n        control[field.property] = new FormControl(form.getValue(field.property), validators)\n        // TODO use { updateOn: blur } when updating to angular 5.0.0\n        // see https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4\n      });\n    return new FormGroup(control);\n  }\n\n  /** adds a new field to a form. handles form group and control */\n  public addField(field: Field, form: Form, group: FormGroup) {\n    const validators = this.getValidators(field);\n    const control = new FormControl(form.getValue(field.property), validators);\n    group.addControl(field.property, control);\n  }\n\n  /** Extracts all validators from a given Field instance. */\n  getValidators(field: Field): ValidatorFn[] {\n    const validators = [];\n    if (field.required) {\n      validators.push(Validators.required);\n    }\n    if (field.validate) {\n      validators.push(this.validateFactory(field));\n    }\n    return validators;\n  }\n\n  /** Returns a Validation function from the given field (using field.validate) */\n  validateFactory(field: Field): ValidationErrors | null {\n    return (control: AbstractControl) => {\n      if (!field.validate) {\n        return;\n      }\n      const error = field.validate(control.value, field);\n      if (error) {\n        return {\n          custom: error\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/location/src/geocode.service.ts\n        \n\n            \n                Description\n            \n            \n                Wraps google maps api to handle geocode operations \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autocompleteAddress\n                            \n                            \n                                geocodeLatLng\n                            \n                            \n                                    Public\n                                getNearestAddress\n                            \n                            \n                                    Public\n                                observeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapLoader: MapsAPILoader, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/geocode.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapLoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autocompleteAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        autocompleteAddress(el: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Turns an input element to an maps autocomplete searchbar. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocodeLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \ngeocodeLatLng(geocoder: , location: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Reverse address lookup for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocoder\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        location\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNearestAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNearestAddress(location: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Returns the nearest address for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            observeElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        observeElement(el: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Observes a given input element, transforming it into an autocomplete \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { MapsAPILoader } from '@agm/core';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { switchMap } from 'rxjs/operators';\n\n/** declares google namespace */\ndeclare var google: any;\n\n/** Wraps google maps api to handle geocode operations */\n@Injectable()\nexport class GeocodeService {\n\n    constructor(private mapLoader: MapsAPILoader,\n        private ngZone: NgZone) { }\n\n    /** Observes a given input element, transforming it into an autocomplete */\n    public observeElement(el) {\n        return new Observable(observer => {\n            const autocomplete = new google.maps.places.Autocomplete(el, {\n                types: ['address']\n            });\n            autocomplete.addListener('place_changed', () => {\n                this.ngZone.run(() => {\n                    // get the place result\n                    const place = autocomplete.getPlace();\n                    // verify result\n                    if (place.geometry === undefined || place.geometry === null) {\n                        return;\n                    }\n                    const coords = {\n                        latitude: place.geometry.location.lat(),\n                        longitude: place.geometry.location.lng()\n                    }\n                    observer.next(coords);\n                    /* observer.complete(); */\n                });\n            });\n        });\n    }\n\n    /** Turns an input element to an maps autocomplete searchbar. */\n    public autocompleteAddress(el): Observable {\n        return fromPromise(this.mapLoader.load())\n            .pipe(switchMap(() => this.observeElement(el)));\n    }\n\n    /** Reverse address lookup for a given location */\n    geocodeLatLng(geocoder, location): Promise {\n        return new Promise((resolve, reject) => {\n            geocoder.geocode({ location }, (results, status) => {\n                if (status === 'OK') {\n                    resolve(results);\n                } else {\n                    reject(status);\n                }\n            });\n        });\n    }\n\n    /** Returns the nearest address for a given location */\n    public getNearestAddress(location: { latitude: number, longitude: number }): Promise> {\n        return this.mapLoader.load().then(() => {\n            return this.geocodeLatLng(\n                new google.maps.Geocoder, {\n                    lat: location.latitude,\n                    lng: location.longitude\n                }\n            );\n        })\n    }\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GroupPipe.html":{"url":"pipes/GroupPipe.html","title":"pipe - GroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  GroupPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/list/group.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        group\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: Array>, property: string, value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/group.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Item } from '@ec.components/core';\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'group'\n})\nexport class GroupPipe implements PipeTransform {\n  transform(items: Array>, property: string, value: any): any {\n    if (!property) {\n      return items;\n    }\n    return items.filter((item) => {\n      return item.group(property) === value;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/sdk/history.service.ts\n        \n\n            \n                Description\n            \n            \n                The HistoryService keeps track of live updates for models entries and datamanagers. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                eventSources\n                            \n                            \n                                    Public\n                                loaderService\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                promises\n                            \n                            \n                                    Public\n                                resourceService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disableUpdates\n                            \n                            \n                                enableUpdates\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService, loaderService: LoaderService, router: Router, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/sdk/history.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableUpdates(key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Closes the event stream for the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \nenableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Enables Updates for the given resource. The relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Toggles live updates on the resource and stores them under the given key. The relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eventSources\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventSources:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:16\n                            \n                        \n\n                \n                    \n                        EventSources that are active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaderService:     LoaderService\n\n                    \n                \n                    \n                        \n                            Type :     LoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promises\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promises:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:14\n                            \n                        \n\n                \n                    \n                        Current loaded histories \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceService:     ResourceService\n\n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Resource } from 'halfred';\nimport ModelResource from 'ec.sdk/lib/resources/datamanager/ModelResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { ResourceService } from '@ec.components/data/src/resource-config/resource.service';\nimport { NotificationsService, LoaderService } from '@ec.components/ui';\nimport { Router } from '@angular/router';\n\n/** The HistoryService keeps track of live updates for models entries and datamanagers. */\n@Injectable()\nexport class HistoryService {\n    /** Current loaded histories */\n    promises: { [relation: string]: Promise } = {};\n    /** EventSources that are active */\n    eventSources: { [relation: string]: any } = {}; // EventSource[]\n\n    constructor(\n        public notificationService: NotificationsService,\n        public loaderService: LoaderService,\n        public router: Router,\n        public resourceService: ResourceService) { }\n    /** Toggles live updates on the resource and stores them under the given key. The relation is passed through the Update instances on change. */\n    toggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key = this.router.url.split('?')[0]) {\n        if (this.promises[key] && !this.eventSources[relation]) {\n            return this.promises[key];\n        }\n        this.disableUpdates(key);\n        this.promises[key] = this.enableUpdates(resource, relation, key)\n            .then(source => {\n                this.eventSources[key] = source;\n            })\n            .catch(error => {\n                delete this.promises[key];\n            });\n        this.loaderService.wait(this.promises[key]);\n    }\n\n    /** Closes the event stream for the given key */\n    disableUpdates(key = this.router.url.split('?')[0]) {\n        if (this.eventSources[key]) {\n            this.eventSources[key].close();\n            delete this.promises[key];\n            delete this.eventSources[key];\n            return;\n        }\n    }\n\n    /** Enables Updates for the given resource. The relation is passed through the Update instances on change. */\n    enableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key = this.router.url.split('?')[0]) {\n        if (!resource || !resource.newHistory) {\n            throw new Error('cannot get history: no newHistory method found on given resource');\n        }\n        if (this.promises[key]) {\n            return this.promises[key];\n        }\n        const loading = resource.newHistory()\n            .then(source => {\n                source.addEventListener('entryUpdated', (e) => {\n                    const data = JSON.parse(e.data);\n                    this.resourceService.changes.next({\n                        relation,\n                        type: 'put',\n                        identifier: data ? data.entryID : ''\n                    });\n                }, false);\n                source.addEventListener('entryCreated', (e) => {\n                    const data = JSON.parse(e.data);\n                    this.resourceService.changes.next({\n                        relation,\n                        type: 'post',\n                        identifier: data ? data.entryID : ''\n                    });\n                }, false);\n                return source;\n            })\n            .catch(error => {\n                this.notificationService.emit({\n                    title: 'History Error',\n                    error\n                });\n            });\n        this.loaderService.wait(loading);\n        return loading;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/icon/icon.component.ts\n\n\n    \n        Description\n    \n    \n        Displays icons by name. If the matching Icon (from registry contains a content, the content is shown. If not, is is expected to be a ec-icon. \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iconService: IconService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/icon/icon.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iconService\n                                                  \n                                                        \n                                                                    IconService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of the icon. An Icon with this name is expected to be present in the current iconService registry. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.component.ts:19\n                            \n                        \n\n\n                \n                    \n                            The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     Symbol\n\n                    \n                \n                    \n                        \n                            Type :     Symbol\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.component.ts:15\n                            \n                        \n\n                \n                    \n                        The resolved icon (by name) \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Icon\nDisplays an icon:\nThe default icon set uses ec-icons. You have to embedd them to your index.html (or similar):\n  Using another icon set\nYou can also use other icons:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.use(emojiIcons);\n    }\n}Overriding icons\nYou can also override the current icon registry:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.set(emojiIcons);\n    }\n}This will override the icon registry with the given icons, but keep the rest.\n\n    \n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { IconService } from './icon.service';\nimport { Symbol } from '../symbol/symbol.interface';\n\n/** Displays icons by name. If the matching Icon (from registry contains a content, the content is shown. If not, is is expected to be a ec-icon. */\n@Component({\n    selector: 'ec-icon',\n    templateUrl: './icon.component.html'\n})\n\nexport class IconComponent implements OnInit {\n    /** The name of the icon. An Icon with this name is expected to be present in the current iconService registry. */\n    @Input() name: string;\n    /** The resolved icon (by name) */\n    icon: Symbol;\n    constructor(private iconService: IconService) {\n    }\n    /** The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. */\n    ngOnInit() {\n        this.icon = this.iconService.get(this.name);\n        if (!this.icon) {\n            console.warn(`Icon ${this.name} cannot be found. Using the following icon registry:`, this.iconService.registry);\n        }\n    }\n}\n\n    \n\n    \n        \n{{icon.content}}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{icon.content}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IconModule.html":{"url":"modules/IconModule.html","title":"module - IconModule","body":"\n                   \n\n\n\n\n  Modules\n  IconModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\n\nIconComponent\n\nIconComponent\n\n\n\nIconModule\n\nIconModule\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/icon/icon.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                IconComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     IconService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    IconComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IconComponent } from './icon.component';\nimport { IconService } from './icon.service';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [IconComponent],\n    exports: [IconComponent],\n    providers: [IconService],\n})\nexport class IconModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/icon/icon.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons) \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registry\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registry:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : ecIcons\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.service.ts:9\n                            \n                        \n\n                \n                    \n                        The current icon set that is registered to the service. It will be used to resolve icons from. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ecIcons } from './ec-icons';\nimport { Symbol } from '../symbol/symbol.interface';\nimport { SymbolService } from '../symbol/symbol.service';\n/** Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons) */\n@Injectable()\nexport class IconService extends SymbolService {\n    /** The current icon set that is registered to the service. It will be used to resolve icons from. */\n    public registry: Symbol[] = ecIcons;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ImageDirective.html":{"url":"directives/ImageDirective.html","title":"directive - ImageDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ImageDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/image/image.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. \n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        img [ecImage]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                setUrl\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecImage\n                            \n                            \n                                size\n                            \n                            \n                                thumb\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/image/image.directive.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ecImage\n                    \n                    \n                        The assetID that should be loaded \n\n                            \n                            Type:    string | DMAssetResource\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        The size that should be requested. \n\n                        \n                            Default value: 200\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thumb\n                    \n                    \n                        If true, the image will be requested as thumb (square) \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:15\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:40\n                            \n                        \n\n\n                \n                    \n                            Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:28\n                            \n                        \n\n\n                \n                    \n                            Reads ecImage input as assetId and loads if autoload is not false \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(asset: PublicAssetResource | DMAssetResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        asset\n                                                        \n                                                                    PublicAssetResource | DMAssetResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:21\n                            \n                        \n\n                \n                    \n                        Resolved asset url. \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ecImage\nThis directive can be used to load an image:\n\nID: {{myImage.asset?.assetID}}\n    \n\n    \n        import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { AssetDirective } from '../asset/asset.directive';\nimport { SdkService } from '../../sdk/sdk.service';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\n\n/** Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. */\n@Directive({\n  selector: 'img [ecImage]',\n  exportAs: 'ecImage'\n})\nexport class ImageDirective extends AssetDirective implements OnChanges {\n  /** If true, the image will be requested as thumb (square) */\n  @Input() thumb: boolean;\n  /** The size that should be requested. */\n  @Input() size = 200;\n  /** The assetID that should be loaded */\n  @Input() ecImage: string | DMAssetResource;\n  /** Resolved asset url. */\n  url: string;\n\n  constructor(public sdk: SdkService, private elementRef: ElementRef) {\n    super(sdk);\n  }\n\n  /** Reads ecImage input as assetId and loads if autoload is not false */\n  ngOnChanges() {\n    if (typeof this.ecImage === 'string') {\n      this.assetId = this.ecImage;\n    } else if (this.ecImage && this.ecImage.assetID) {\n      this.use(this.ecImage);\n    }\n    if (this.autoload !== false && this.assetId) {\n      this.load();\n    }\n  }\n\n  /** Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) */\n  load(id?: string) {\n    return super.load(id).then(this.use.bind(this));\n  }\n\n  use(asset: PublicAssetResource | DMAssetResource) {\n    return Promise.resolve().then(() => {\n      if (asset.type !== 'image') {\n        return Promise.reject(`ecImage only works for assets of type image.\n        Loaded id ${asset.id} is of type ${asset.type}`);\n      }\n      if (asset instanceof DMAssetResource) { // new asset\n        return asset.getFileVariant(this.size, this.thumb);\n      } else if (asset instanceof PublicAssetResource) { // old asset\n        if (this.thumb) {\n          return asset.getImageThumbUrl(this.size, '');\n        }\n        return asset.getImageUrl(this.size, '');\n      }\n    }).then(this.setUrl.bind(this));\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n    this.elementRef.nativeElement.src = this.url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/input/input.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-input\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentInstance\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                control\n                            \n                            \n                                debounce\n                            \n                            \n                                field\n                            \n                            \n                                group\n                            \n                            \n                                item\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        component\n                    \n                    \n                        Overrides the default component \n\n                            \n                            Type:    Type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                        The belonging form control. This is not required if you pass in a field and group. \n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                    \n                        Debounce time in ms before the changed event emits. \n\n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        The instance of field that should be used in the template, can also be a property name. \n\n                            \n                            Type:    Field\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        group\n                    \n                    \n                        The belonging form group \n\n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                        The belonging item \n\n                            \n                            Type:    Item\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        property\n                    \n                    \n                        The property name that is edited. Expects a form as item input \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        The changed ouput emits whenever the form control of the input changes. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, data: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentInstance:     Component\n\n                    \n                \n                    \n                        \n                            Type :     Component\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:40\n                            \n                        \n\n                \n                    \n                        Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\nYou can access a form's InputComponents via FormComponent#inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentFactoryResolver:     ComponentFactoryResolver\n\n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, OnChanges, Type, ComponentRef, forwardRef } from '@angular/core';\n\nimport { FormControl, FormGroup, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { DefaultInputComponent } from '../../form/default-input/default-input.component';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\nimport { Form } from '@ec.components/core/src/form/form';\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-input',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent extends DynamicSlotComponent implements ControlValueAccessor, OnChanges {\n  /** The belonging form group */\n  @Input() group: FormGroup;\n  /** The belonging form control. This is not required if you pass in a field and group. */\n  @Input() control: FormControl;\n  /** The changed ouput emits whenever the form control of the input changes. */\n  @Output() changed = new EventEmitter();\n  /** Debounce time in ms before the changed event emits. */\n  @Input() debounce = 0;\n  /** The instance of field that should be used in the template, can also be a property name. */\n  @Input() field: Field;\n  /** The property name that is edited. Expects a form as item input */\n  @Input() property: string;\n  /** The belonging item */\n  @Input() item: Item;\n  /** Overrides the default component */\n  @Input() component: Type;\n  /** Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\n   * You can access a form's InputComponents via FormComponent#inputs */\n  componentInstance: Component\n\n  ngOnChanges() {\n    if (this.property && this.item instanceof Form) {\n      this.field = this.item.getField(this.property);\n    }\n    if (!this.field) {\n      return;\n    }\n    const data = {\n      group: this.group,\n      control: this.control || this.group ? this.group.get(this.field.property) : null,\n      item: this.item,\n      field: this.field,\n      input: this\n    };\n\n    const componentRef = this.loadComponent(this.component || this.field.input || DefaultInputComponent, data);\n    this.componentInstance = componentRef.instance;\n    if (componentRef.instance.control) {\n      componentRef.instance.control.valueChanges\n        .debounceTime(this.debounce)\n        .subscribe((change) => {\n          this.changed.emit(change);\n          this.propagateChange(change);\n        });\n    }\n    if (this.field && typeof this.field.init === 'function') {\n      this.field.init(this.componentInstance, this);\n    }\n  }\n\n  /** writes value to editor on outside model change. */\n  writeValue(value: any) {\n    if (this.componentInstance && this.componentInstance['writeValue']) {\n      this.componentInstance['writeValue'](value); // TODO: this is pretty hacky\n    }\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputErrorsComponent.html":{"url":"components/InputErrorsComponent.html","title":"component - InputErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputErrorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/input-errors/input-errors.component.ts\n\n\n    \n        Description\n    \n    \n        This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-input-errors\n            \n\n\n\n\n            \n                templateUrl\n                ./input-errors.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/input-errors/input-errors.component.ts:12\n                            \n                        \n\n                \n                    \n                            Imported error messages. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                        The form control that should be tracked \n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input-errors/input-errors.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getErrors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input-errors/input-errors.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            This method will iterate over the control errors and generate objects for the template. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/input-errors/input-errors.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. */\n@Component({\n  selector: 'ec-input-errors',\n  templateUrl: './input-errors.component.html',\n})\nexport class InputErrorsComponent {\n  /** The form control that should be tracked */\n  @Input() control: FormControl;\n  /** Imported error messages. */\n  constructor(public symbol: SymbolService) {\n  }\n\n  /** This method will iterate over the control errors and generate objects for the template. */\n  private getErrors() {\n    return Object.keys(this.control.errors).reduce((errs, key) => {\n      let message;\n      if (key === 'custom') {\n        message = this.control.errors[key];\n      } else {\n        message = this.symbol.resolve('error.input.' + key) || this.symbol.resolve('error.input.invalid');\n      }\n      errs.push({\n        key: key,\n        error: this.control.errors[key],\n        message\n      });\n      return errs;\n    }, []);\n  }\n\n}\n\n    \n\n    \n        \n  {{error.message}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{error.message}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IoModule.html":{"url":"modules/IoModule.html","title":"module - IoModule","body":"\n                   \n\n\n\n\n  Modules\n  IoModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\n\n\nIoModule\n\nIoModule\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/io/io.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicRackComponent\n                            \n                            \n                                DynamicSlotComponent\n                            \n                            \n                                InputComponent\n                            \n                            \n                                InputErrorsComponent\n                            \n                            \n                                OutputComponent\n                            \n                            \n                                SlotHostDirective\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                DefaultInputComponent\n                            \n                            \n                                DefaultOutputComponent\n                            \n                            \n                                InputComponent\n                            \n                            \n                                InputErrorsComponent\n                            \n                            \n                                OutputComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicRackComponent\n                            \n                            \n                                    DynamicSlotComponent\n                            \n                            \n                                    InputComponent\n                            \n                            \n                                    InputErrorsComponent\n                            \n                            \n                                    OutputComponent\n                            \n                            \n                                    SlotHostDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DynamicSlotComponent } from './dynamic-slot/dynamic-slot.component';\nimport { SlotHostDirective } from './slot-host.directive';\nimport { DefaultInputComponent } from '../form/default-input/default-input.component';\nimport { DefaultOutputComponent } from '../form/default-output/default-output.component';\nimport { OutputComponent } from './output/output.component';\nimport { InputComponent } from './input/input.component';\nimport { InputErrorsComponent } from './input-errors/input-errors.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DynamicRackComponent } from './dynamic-rack/dynamic-rack.component';\n\n@NgModule({\n  entryComponents: [\n    DefaultInputComponent,\n    DefaultOutputComponent,\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n  ],\n  declarations: [\n    InputErrorsComponent,\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n    ReactiveFormsModule,\n  ],\n  providers: []\n})\nexport class IoModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemConfig.html":{"url":"interfaces/ItemConfig.html","title":"interface - ItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/item/item-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                An ItemConfig describes an abstract entity with certain properties.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                                \n                                            Optional\n                                        identifier\n                                \n                                \n                                            Optional\n                                        identifierPattern\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        onSave\n                                \n                                \n                                            Optional\n                                        parent\n                                \n                                \n                                            Optional\n                                        resolve\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Items field Config \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to identify items from another (e.g. in a selection). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifierPattern\n                                    \n                                \n                                \n                                    \n                                        identifierPattern:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Pattern of the identifier field. Is used e.g. in the searchbar \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to display the item for humans \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSave\n                                    \n                                \n                                \n                                    \n                                        onSave:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback that is invoked when the item is saved \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolve\n                                    \n                                \n                                \n                                    \n                                        resolve:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom resolve path function. It can be used e.g. to access subbranches of an Object. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For primitive values only: the title for the item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the Item. It determines how it will be displayed in different contexts \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Item } from './item';\nimport { FieldConfigProperty } from '../config/field-config-property.interface';\nimport { FieldConfig } from '../config/field-config.interface';\n\n/** An ItemConfig describes an abstract entity with certain properties.*/\nexport interface ItemConfig {\n  /** For primitive values only: the title for the item */\n  title?: string;\n  /** The Property that is used to identify items from another (e.g. in a selection). */\n  identifier?: string;\n  /** Pattern of the identifier field. Is used e.g. in the searchbar */\n  identifierPattern?: RegExp;\n  /** The Property that is used to display the item for humans */\n  label?: string;\n  /** The Items field Config */\n  fields?: FieldConfig;\n  /** The type of the Item. It determines how it will be displayed in different contexts */\n  type?: string;\n  /** Custom resolve path function. It can be used e.g. to access subbranches of an Object. */\n  resolve?: (body: T) => any;\n  /** Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.*/\n  parent?: any;\n  /** Callback that is invoked when the item is saved */\n  onSave?: (item?: Item, value?: Object) => Promise | T; // TODO rename to save\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        The ListComponent will render a list containing the given items or collection.\nBasic Example:\nhttps://components.entrecode.de/ui/list/basic\nWith Tranforms:\nhttps://components.entrecode.de/ui/list/transforms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list\n            \n\n\n\n\n            \n                templateUrl\n                ./list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectIndex\n                            \n                            \n                                selectNext\n                            \n                            \n                                selectPrev\n                            \n                            \n                                showHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                collection\n                            \n                            \n                                config\n                            \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                paginationConfig\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        collection\n                    \n                    \n                        The used collection \n\n                            \n                            Type:    Collection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        Config input for List \n\n                            \n                            Type:    ListConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        The visible items \n\n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The Instance of the List \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        paginationConfig\n                    \n                    \n                        Custom PaginationConfig \n\n                            \n                            Type:    PaginationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The used selection \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:34\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Event emitter on item selection \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Event emitter on selection change \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Column click handler. Triggers select.emit(item) with fallback to selection.toggle\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Changing items or collection will trigger reconstructing the list with the new items.\nChanging the selection will reconstruct the selection \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIndex(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Selects the item with the given index \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectNext\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectNext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:89\n                            \n                        \n\n\n                \n                    \n                            Selects the next item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectPrev\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectPrev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Selects the previous item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Decides if the header should be visible or not \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ListConfig\n\n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:23\n                            \n                        \n\n                \n                    \n                        The current list config \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        List\nThe List is one of the main components to work with.\nThe basic idea is to display collections of data in a structured but flexible way.\nYou can create a new List like this:\nthis.trees = new List(\n//first argument: Array of Objects\n[{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}],\n//second (optional) argument: ListConfig\n{\n  fields: {\n    name: {\n      label: 'Name'\n    },\n    height: {\n      label: 'Height',\n      group: (h) => h > 10 ? 'Higher than 10m' : 'Lower than 10m'\n    },\n    fruits: {\n      label: 'Has Fruits?',\n      display: (value) => value ? 'yes' : 'no'\n    },\n  }\n})This is how you display a List instance into your template:\n\n    \n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { Collection, List, ListConfig, Selection } from '@ec.components/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport { PaginationConfig } from './pagination/pagination-config.interface';\n\n/**\n * The ListComponent will render a list containing the given items or collection.\n *\n * Basic Example:\n *\n * https://components.entrecode.de/ui/list/basic\n *\n * With Tranforms:\n * https://components.entrecode.de/ui/list/transforms\n * */\n@Component({\n  selector: 'ec-list',\n  templateUrl: './list.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class ListComponent implements OnChanges {\n  /** The current list config */\n  config: ListConfig = {};\n  /** Config input for List */\n  // tslint:disable-next-line:no-input-rename\n  @Input('config') configInput: ListConfig;\n  /** The visible items */\n  @Input() items: Array;\n  /** The used collection */\n  @Input() collection: Collection;\n  /** The used selection */\n  @Input() selection: Selection;\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** Event emitter on item selection */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  /** Event emitter on selection change */\n  @Output() selected: EventEmitter> = new EventEmitter();\n  /** The Instance of the List */\n  @Input() list: List;\n  /** Custom PaginationConfig */\n  @Input() paginationConfig: PaginationConfig;\n\n  /** Changing items or collection will trigger reconstructing the list with the new items.\n   * Changing the selection will reconstruct the selection */\n  ngOnChanges(changes?) {\n    this.config = Object.assign(this.config || {}, this.configInput || {});\n    if (this.items) {\n      this.list = new List(this.items, this.config);\n    } else if (this.collection) {\n      this.list = new List(this.collection.items, this.config);\n    }\n    if (!this.list) {\n      return;\n    }\n    if (!this.selection) {\n      this.selection = new Selection([], this.list.config);\n    }\n    if (this.selection) {\n      this.selection.update$.subscribe((selection: Selection) => {\n        this.selected.emit(selection);\n      })\n    }\n  }\n\n  /** Column click handler. Triggers select.emit(item) with fallback to selection.toggle*/\n  columnClick(item) {\n    if (this.list.config.selectMode && this.selection) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      return this.columnClicked.emit(item);\n    }\n  }\n  /** Decides if the header should be visible or not */\n  showHeader() {\n    return this.list && this.list.config && !this.list.config.disableHeader && (this.list.fields.length || this.list.config.title)\n      && (this.list.config.alwaysShowHeader || !this.list.isEmpty());\n  }\n\n  /** Selects the item with the given index */\n  selectIndex(index: number) {\n    if (!this.selection || this.list.isEmpty() || !this.list.items[index]) {\n      return;\n    }\n    this.selection.select(this.list.items[index]);\n  }\n\n  /** Selects the next item */\n  selectNext() {\n    let index = 0;\n    if (!this.selection.isEmpty()) {\n      index = this.list.items.indexOf(this.selection.items[0]) + 1;\n    }\n    this.selection.removeAll();\n    this.selectIndex(index % this.list.items.length);\n  }\n\n  /** Selects the previous item */\n  selectPrev() {\n    let index = this.list.items.length - 1;\n    if (!this.selection.isEmpty()) {\n      index = this.list.items.indexOf(this.selection.items[0]) + this.list.items.length - 1;\n    }\n    this.selection.removeAll();\n    this.selectIndex(index % this.list.items.length);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n        \n        \n          {{group.value}}\n        \n      \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          {{group.value}}                          '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListConfig.html":{"url":"interfaces/ListConfig.html","title":"interface - ListConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/list/list-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for List Classes.\n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysShowHeader\n                                \n                                \n                                            Optional\n                                        availableSizes\n                                \n                                \n                                            Optional\n                                        desc\n                                \n                                \n                                            Optional\n                                        disableHeader\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                            Optional\n                                        hidePagination\n                                \n                                \n                                            Optional\n                                        maxColumns\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        query\n                                \n                                \n                                            Optional\n                                        selectMode\n                                \n                                \n                                            Optional\n                                        size\n                                \n                                \n                                            Optional\n                                        solo\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                                \n                                            Optional\n                                        sortBy\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysShowHeader\n                                    \n                                \n                                \n                                    \n                                        alwaysShowHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the header will also be shown when the list is empty. Defaults to false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        availableSizes\n                                    \n                                \n                                \n                                    \n                                        availableSizes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The available sizes. If not set, the size cannot be changed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set to true, the sorting will be descending \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableHeader\n                                    \n                                \n                                \n                                    \n                                        disableHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will have no header. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    tells the list to show only items that match the filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidePagination\n                                    \n                                \n                                \n                                    \n                                        hidePagination:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the default pagination will not be visible. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxColumns\n                                    \n                                \n                                \n                                    \n                                        maxColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximal visible columns. Defaults to 8 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current active page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    a query that will be turned in to a filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectMode\n                                    \n                                \n                                \n                                    \n                                        selectMode:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will show its checkboxes and will select on column click.\nThe columnClicked output will be ignored as long selectMode is active \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The number of items per page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solo\n                                    \n                                \n                                \n                                    \n                                        solo:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Should the selection be solo? \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of properties that is sorted after, experimental... \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortBy\n                                    \n                                \n                                \n                                    \n                                        sortBy:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The property name that is sorted after \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For lists with primitive values only: the title of the list header \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\n\n/**\n *  Configuration for List Classes.\n * */\nexport interface ListConfig extends ItemConfig {\n  /** For lists with primitive values only: the title of the list header */\n  title?: string;\n  /** The property name that is sorted after */\n  sortBy?: string;\n  /** Array of properties that is sorted after, experimental... */\n  sort?: string[];\n  /** If set to true, the sorting will be descending */\n  desc?: boolean;\n  /** If true, the list will show its checkboxes and will select on column click.\n   * The columnClicked output will be ignored as long selectMode is active */\n  selectMode?: boolean\n  /** If true, the list will have no header. */\n  disableHeader?: boolean\n  /** If true, the header will also be shown when the list is empty. Defaults to false */\n  alwaysShowHeader?: boolean\n  /** If true, the default pagination will not be visible. */\n  hidePagination?: boolean;\n  /** The current active page */\n  page?: number,\n  /** The number of items per page */\n  size?: number,\n  /** The available sizes. If not set, the size cannot be changed */\n  availableSizes?: number[],\n  /** Should the selection be solo? */\n  solo?: boolean,\n  /** tells the list to show only items that match the filter */\n  filter?: { [key: string]: any },\n  /** a query that will be turned in to a filter */\n  query?: { [key: string]: any },\n  /** Maximal visible columns. Defaults to 8 */\n  maxColumns?: number\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListHeaderComponent.html":{"url":"components/ListHeaderComponent.html","title":"component - ListHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/list-header/list-header.component.ts\n\n\n    \n        Description\n    \n    \n        This component renders, as the name states, the header of a list.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-header\n            \n\n\n\n\n            \n                templateUrl\n                ./list-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                pops\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyFilter\n                            \n                            \n                                    Public\n                                editFilter\n                            \n                            \n                                    Public\n                                fieldLabel\n                            \n                            \n                                    Public\n                                removeFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The list instance \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        applyFilter(property: , value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            Applies the given filter to the list. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        editFilter(pop: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            opens the given filter pop and closes all others \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pop\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fieldLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fieldLabel(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFilter(property: , control: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        control\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     FormComponent\n\n                    \n                \n                    \n                        \n                            Type :     FormComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:21\n                            \n                        \n\n                \n                    \n                        The form that holds the current filter information \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pops\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pops:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:19\n                            \n                        \n\n                \n                    \n                        The pop dropdowns that contain the filtering \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { PopComponent } from '../../pop/pop.component';\nimport { FormComponent } from '../../form/form.component';\nimport { List } from '@ec.components/core/src/list/list';\nimport { Selection } from '@ec.components/core/src/selection/selection';\nimport { Field } from '@ec.components/core';\n\n/** This component renders, as the name states, the header of a list.*/\n@Component({\n  selector: 'ec-list-header',\n  templateUrl: './list-header.component.html',\n})\nexport class ListHeaderComponent {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** The pop dropdowns that contain the filtering */\n  @ViewChildren('filterPop') pops: QueryList;\n  /** The form that holds the current filter information */\n  @ViewChild('filterForm') filter: FormComponent;\n\n  /** opens the given filter pop and closes all others */\n  public editFilter(pop) {\n    pop.toggle();\n    // this.pops.forEach((pop) => pop.hide());\n  }\n\n  /** Applies the given filter to the list. */\n  public applyFilter(property, value) {\n    this.list.filter(property, value);\n  }\n\n  public removeFilter(property, control) {\n    control.reset();\n  }\n\n  public fieldLabel(field: Field) {\n    if (field.label === false) {\n      return '';\n    }\n    return field.label || field.property;\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n  \n\n    \n      \n    \n\n    \n      {{fieldLabel(field)}}\n    \n    \n\n    \n       \n      \n      &times;\n    \n  \n\n  \n  \n    &#9776;\n    \n      \n        \n          \n             option\n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{fieldLabel(field)}}                               ×              ☰                                         option                              '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListItemsComponent.html":{"url":"components/ListItemsComponent.html","title":"component - ListItemsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListItemsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/list-items/list-items.component.ts\n\n\n    \n        Description\n    \n    \n        The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\nIt can either be given an Array of Items or just the list parent to control the shown items. \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-items\n            \n\n\n\n\n            \n                templateUrl\n                ./list-items.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                isClickable\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.\n\n                            \n                            Type:    Item[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The list instance \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Event emitter on item clicked \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item: Item, e: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Propagate clicked item to host or toggle selection. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isClickable\n                            \n                            \n                        \n                    \n                \n                \n                    \nisClickable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Checks for host and uses its list. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Item, List, Selection } from '@ec.components/core';\nimport { ListComponent } from '../list.component';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\n\n/** The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\n * It can either be given an Array of Items or just the list parent to control the shown items. */\n@Component({\n  selector: 'ec-list-items',\n  templateUrl: './list-items.component.html',\n})\nexport class ListItemsComponent implements OnChanges {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.*/\n  @Input() items: Item[];\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** Event emitter on item clicked */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n\n  /** Checks for host and uses its list. */\n  ngOnChanges() {\n    if (!this.items && this.list) {\n      this.items = this.list.page;\n    }\n  }\n\n  isClickable() {\n    return this.columnClicked.observers.length || (this.selection && this.list && this.list.config.selectMode);\n  }\n  \n  /** Propagate clicked item to host or toggle selection. */\n  columnClick(item: Item, e: Event) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (this.selection && this.list && this.list.config.selectMode) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListItemsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ListModule.html":{"url":"modules/ListModule.html","title":"module - ListModule","body":"\n                   \n\n\n\n\n  Modules\n  ListModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_imports\n\n\n\ncluster_ListModule_exports\n\n\n\n\nGroupPipe\n\nGroupPipe\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nListModule -->\n\nSearchbarComponent->ListModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSearchbarComponent \n\nSearchbarComponent \n\nSearchbarComponent  -->\n\nListModule->SearchbarComponent \n\n\n\n\n\nFormModule\n\nFormModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nListModule -->\n\nUtilityModule->ListModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/list/list.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GroupPipe\n                            \n                            \n                                ListComponent\n                            \n                            \n                                ListHeaderComponent\n                            \n                            \n                                ListItemsComponent\n                            \n                            \n                                PaginationComponent\n                            \n                            \n                                SearchbarComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    IconModule\n                            \n                            \n                                    SymbolModule\n                            \n                            \n                                    UtilityModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    GroupPipe\n                            \n                            \n                                    ListComponent\n                            \n                            \n                                    ListHeaderComponent\n                            \n                            \n                                    ListItemsComponent\n                            \n                            \n                                    PaginationComponent\n                            \n                            \n                                    SearchbarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormModule } from '../form/form.module';\nimport { IconModule } from '../icon/icon.module';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { UtilityModule } from '../utility/utility.module';\nimport { GroupPipe } from './group.pipe';\nimport { ListHeaderComponent } from './list-header/list-header.component';\nimport { ListItemsComponent } from './list-items/list-items.component';\nimport { ListComponent } from './list.component';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { SearchbarComponent } from './searchbar/searchbar.component';\n\n@NgModule({\n  declarations: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    SearchbarComponent,\n    GroupPipe,\n  ],\n  imports: [\n    CommonModule,\n    FormModule,\n    IconModule,\n    SymbolModule,\n    UtilityModule\n  ],\n  exports: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    SearchbarComponent,\n    GroupPipe,\n    FormModule,\n  ],\n  providers: []\n})\nexport class ListModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/loader/loader.component.ts\n\n\n    \n        Description\n    \n    \n        The ec-loader can be plugged into various components to be triggered when they load stuff.\nhttps://components.entrecode.de/ui/loader\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-loader\n            \n\n            \n                styleUrls\n                loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stack\n                            \n                            \n                                    Private\n                                timestamp\n                            \n                            \n                                    Private\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Private\n                                show\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                            Injects the host element. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\nMake sure the given promise is catched (so the loader will stop loading on error)! \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stack:     Collection>\n\n                    \n                \n                    \n                        \n                            Type :     Collection>\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:14\n                            \n                        \n\n                \n                    \n                        The current stack of loading promises.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timestamp:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                        The timestamp of the last time a promise has been added to the stack. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:16\n                            \n                        \n\n                \n                    \n                        The loader's visibility status. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Loader\nThe loader can be used to indicate any kind of loading activity\nTemplate\n\n\nGlobal Loader\nLocal LoaderThe default classes can be found here.\nUsage\nYou can use a global loader that handles every action or use multiple local loaders:\nimport { LoaderComponent, LoaderService } from '@ec.components/ui';\nexport class MyApp {\n  @ViewChild('globalLoader') globalLoader: LoaderComponent;\n  @ViewChild('localLoader') localLoader: LoaderComponent;\n  constructor(private loaderService: LoaderService) {\n      this.loaderService.use(this.globalLoader); // set global loader\n  }\n  globalLoader() { // When not passing a loader to .wait, the global loader (set by .use) is used.\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)));\n  }\n  localLoader() {\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)), this.localLoader);\n    // this.localLoader.wait(new Promise((resolve) => setTimeout(resolve, 2000))); // alternative way\n  }\n}The advantage of local loaders is that you can place them in specific places of your template to only \"disable\" a part of your site while loading and not the whole page.\nSee the commented out line in localLoader for a direct way to trigger a loader without the service.\nHow it works\nEach time .wait is called on the LoaderService, the target loader throws the given promise on a stack. When all promises on the stack have been resolved, the loader is hidden. This is better than just a boolean switch because multiple loading activies do not interfere with each other.\n\n    \n\n    \n        import { Component, ElementRef } from '@angular/core';\nimport { Collection } from '@ec.components/core/src/collection/collection';\n\n/** The ec-loader can be plugged into various components to be triggered when they load stuff.\n * https://components.entrecode.de/ui/loader\n*/\n@Component({\n  selector: 'ec-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent {\n  /** The current stack of loading promises.*/\n  private stack: Collection> = new Collection([]);\n  /** The loader's visibility status. */\n  private visible = false;\n  /** The timestamp of the last time a promise has been added to the stack. */\n  private timestamp;\n\n  /** Injects the host element. */\n  constructor(private host: ElementRef) {\n  }\n\n  /** Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, */\n  private show() {\n    this.visible = true; // show loader\n    this.host.nativeElement.classList.add('is-active');\n  }\n\n  /** Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, */\n  private hide() {\n    this.visible = false; // show loader\n    this.host.nativeElement.classList.remove('is-active');\n  }\n\n  /** Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\n   * Make sure the given promise is catched (so the loader will stop loading on error)! */\n  wait(promise: Promise) {\n    this.stack.add(promise); // add promise to stack\n    this.show();\n    const timestamp = Date.now();\n    this.timestamp = timestamp; // get timestamp\n    Promise.all(this.stack.items)\n      .then(() => {\n        if (timestamp === this.timestamp) {\n          this.hide();\n          this.stack.removeAll();\n        }\n      });\n    return promise;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoaderModule.html":{"url":"modules/LoaderModule.html","title":"module - LoaderModule","body":"\n                   \n\n\n\n\n  Modules\n  LoaderModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\n\n\nLoaderModule\n\nLoaderModule\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/loader/loader.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoaderComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     LoaderService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoaderComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\nimport { LoaderService } from './loader.service';\n\n@NgModule({\n  declarations: [\n    LoaderComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    LoaderComponent,\n  ],\n  providers: [LoaderService]\n})\nexport class LoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/loader/loader.service.ts\n        \n\n            \n                Description\n            \n            \n                The loader service registers promises \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.service.ts:11\n                            \n                        \n\n\n                \n                    \n                            Sets a global loader that can be triggered without having the reference. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise, loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.loader\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.service.ts:8\n                            \n                        \n\n                \n                    \n                        The global loader that should be used if not loader is passed to wait. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\n\n/** The loader service registers promises */\n@Injectable()\nexport class LoaderService {\n  /** The global loader that should be used if not loader is passed to wait. */\n  loader: LoaderComponent;\n\n  /** Sets a global loader that can be triggered without having the reference. */\n  use(loader: LoaderComponent) {\n    this.loader = loader;\n  }\n\n  /** Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)*/\n  wait(promise: Promise, loader: LoaderComponent = this.loader) {\n    if (!loader || !promise) {\n      // console.warn('cannot trigger loader: no promise or loader given');\n      return;\n    }\n    return loader.wait(promise);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationMapComponent.html":{"url":"components/LocationMapComponent.html","title":"component - LocationMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/location-map.component.ts\n\n\n    \n        Description\n    \n    \n        Shows Google Maps Map \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-map\n            \n\n            \n                styleUrls\n                location-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                markerDragEnd\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                readOnly\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                    \n                        The desired map center \n\n                            \n                            Type:    literal type\n\n                            \n                        \n                            Default value: { latitude: 48.8093253, longitude: 9.159388100000001 }\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                    \n                        If true, no markers can be changed or set \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Form input component \n\n                            \n                            Type:    literal type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        Emits when the marker has been changed \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markerDragEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkerDragEnd(coords: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            changes value on marker dragend \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coords\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            sets the value cand changes the center \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/** Shows Google Maps Map */\n@Component({\n    selector: 'ec-location-map',\n    templateUrl: './location-map.component.html',\n    styleUrls: ['./location-map.component.scss']\n})\n\nexport class LocationMapComponent {\n    /** The desired map center */\n    @Input() center: { longitude: any; latitude: any; } = { latitude: 48.8093253, longitude: 9.159388100000001 };\n    /** If true, no markers can be changed or set */\n    @Input() readOnly: boolean;\n    /** Emits when the marker has been changed */\n    @Output() change: EventEmitter = new EventEmitter();\n    /** Form input component */\n    @Input() value: {\n        longitude: number,\n        latitude: number\n    };\n\n    /** sets the value cand changes the center */\n    setValue(value) {\n        this.value = value;\n        if (value) {\n            this.center = value;\n        }\n    }\n    /** changes value on marker dragend */\n    markerDragEnd(coords) {\n        if (!coords) {\n            console.warn('no coords');\n            return;\n        }\n        const position = { longitude: coords.lng, latitude: coords.lat };\n        this.setValue(position);\n        this.change.emit(position);\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/location/src/location.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module holds all location/map related components and services \n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LocationMapComponent\n                            \n                            \n                                LocationPickerComponent\n                            \n                            \n                                LocationSearchComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                LOCATION_COMPONENTS\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     GeocodeService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LocationMapComponent\n                            \n                            \n                                    LocationPickerComponent\n                            \n                            \n                                    LocationSearchComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { AgmCoreModule } from '@agm/core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationPickerComponent } from './location-picker.component';\nimport { LocationSearchComponent } from './location-search.component';\n/** The components of this module */\nconst LOCATION_COMPONENTS = [\n    LocationMapComponent,\n    LocationSearchComponent,\n    LocationPickerComponent,\n];\n/** This module holds all location/map related components and services */\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        UiModule,\n        AgmCoreModule.forRoot({\n            apiKey: 'AIzaSyAdgEUE1Yxo1F-qb1MrO56u5KATpX9j8o4',\n            libraries: ['places']\n        })],\n    exports: LOCATION_COMPONENTS,\n    declarations: LOCATION_COMPONENTS,\n    entryComponents: LOCATION_COMPONENTS,\n    providers: [GeocodeService],\n})\nexport class LocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationPickerComponent.html":{"url":"components/LocationPickerComponent.html","title":"component - LocationPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/location-picker.component.ts\n\n\n    \n        Description\n    \n    \n        Component with map and autocomplete input to pick a location. Implements ControlValueAccessor \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-location-picker\n            \n\n            \n                styleUrls\n                location-picker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-picker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                geocodeService\n                            \n                            \n                                input\n                            \n                            \n                                map\n                            \n                            \n                                propagateChange\n                            \n                            \n                                search\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setValue\n                            \n                            \n                                updateAddress\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControl\n                            \n                            \n                                showRawValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/location-picker.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        The form control that holds the location \n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showRawValue\n                    \n                    \n                        If true, the raw location value will be visible\n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value: , fromSearch?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Sets value of map and propagates change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fromSearch\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAddress()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            updates the address string by reverse geo lookup  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geocodeService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocodeService:     GeocodeService\n\n                    \n                \n                    \n                        \n                            Type :     GeocodeService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     InputComponent\n\n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     LocationMapComponent\n\n                    \n                \n                    \n                        \n                            Type :     LocationMapComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:28\n                            \n                        \n\n                \n                    \n                        The nested LocationMapComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => { }\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        search:     LocationSearchComponent\n\n                    \n                \n                    \n                        \n                            Type :     LocationSearchComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:30\n                            \n                        \n\n                \n                    \n                        The nested LocationSearchComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationSearchComponent } from './location-search.component';\n\n/** Component with map and autocomplete input to pick a location. Implements ControlValueAccessor */\n@Component({\n    selector: 'ec-location-picker',\n    templateUrl: './location-picker.component.html',\n    styleUrls: ['./location-picker.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LocationPickerComponent),\n            multi: true\n        }\n    ]\n})\n\nexport class LocationPickerComponent extends DefaultInputComponent implements ControlValueAccessor {\n    /** The form control that holds the location */\n    @Input() formControl: FormControl;\n    /** If true, the raw location value will be visible*/\n    @Input() showRawValue = true;\n    /** The nested LocationMapComponent */\n    @ViewChild(LocationMapComponent) map: LocationMapComponent;\n    /** The nested LocationSearchComponent */\n    @ViewChild(LocationSearchComponent) search: LocationSearchComponent;\n    /** Form input component */\n    input: InputComponent;\n\n    constructor(\n        public geocodeService: GeocodeService,\n    ) {\n        super();\n    }\n\n    /** Sets value of map and propagates change */\n    setValue(value, fromSearch?: boolean) {\n        if (!value) {\n            this.search.clear();\n        }\n        this.map.setValue(value);\n        if (!fromSearch) {\n            this.updateAddress();\n        }\n        this.propagateChange(value);\n        if (this.input) {\n            this.input.propagateChange(value);\n        }\n    }\n\n    /** Writes value to editor on outside model change. */\n    writeValue(value: any) {\n        this.map.setValue(value);\n        this.updateAddress();\n    }\n\n    /** updates the address string by reverse geo lookup  */\n    updateAddress() {\n        const value = this.map.value;\n        if (!value) {\n            this.search.searchInput.nativeElement.value = '';\n            return;\n        }\n        this.geocodeService.getNearestAddress(value)\n            .then(results => {\n                if (results.length) {\n                    this.search.searchInput.nativeElement.value = results[0].formatted_address;\n                } else {\n                    this.search.searchInput.nativeElement.value = '';\n                }\n            });\n    }\n\n    propagateChange = (_: any) => { };\n\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() { }\n}\n\n    \n\n    \n        \n\n\n    \n\n{{map.value | json}}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{map.value | json}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationSearchComponent.html":{"url":"components/LocationSearchComponent.html","title":"component - LocationSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/location-search.component.ts\n\n\n    \n        Description\n    \n    \n        Google Maps Location Searchbar \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-search\n            \n\n\n\n\n            \n                templateUrl\n                ./location-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/location-search.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Placeholder for input \n\n                        \n                            Default value: 'Search Location'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        emits when the coords have been changed (after selecting a match) \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Clears the searchbar input value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            subscribes to changes from the inputs autocomplete using geocodeService. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchInput:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:15\n                            \n                        \n\n                \n                    \n                        The search input element \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, Input, NgZone, Output, ViewChild } from '@angular/core';\nimport { } from 'googlemaps';\nimport { GeocodeService } from './geocode.service';\n\n/** Google Maps Location Searchbar */\n@Component({\n    selector: 'ec-location-search',\n    templateUrl: './location-search.component.html'\n})\n\nexport class LocationSearchComponent implements AfterViewInit {\n    /** Placeholder for input */\n    @Input() placeholder = 'Search Location';\n    /** The search input element */\n    @ViewChild('search') searchInput: ElementRef;\n    /** emits when the coords have been changed (after selecting a match) */\n    @Output() change: EventEmitter = new EventEmitter();\n\n    constructor(\n        private geocodeService: GeocodeService,\n        private ngZone: NgZone\n    ) {\n    }\n    /** Clears the searchbar input value */\n    clear() {\n        if (this.searchInput) {\n            this.searchInput.nativeElement.value = '';\n        }\n    }\n    /** subscribes to changes from the inputs autocomplete using geocodeService. */\n    ngAfterViewInit() {\n        this.geocodeService.autocompleteAddress(this.searchInput.nativeElement)\n            .subscribe(\n                coords => {\n                    this.change.emit(coords);\n                }\n            );\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/auth/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\nhttps://components.entrecode.de/auth/auth\n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login\n            \n\n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:24\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport { LoaderComponent, NotificationsService, WithLoader } from '@ec.components/ui';\nimport { AuthService } from '../auth.service';\nimport { WithNotifications } from '@ec.components/ui/src/notifications/with-notifications.interface';\nimport { Notification } from '@ec.components/ui/src/notifications/notification';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\n * https://components.entrecode.de/auth/auth\n*/\n@Component({\n  selector: 'ec-login',\n  templateUrl: 'login.component.html'\n})\n\nexport class LoginComponent implements WithLoader, WithNotifications {\n  /** You can optionally specify PublicAPI instance. Defaults to SdkService#api. */\n  @Input() api: PublicAPI;\n  /** Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The included loader. */\n  @ViewChild(LoaderComponent) loader;\n  /** Error notifications */\n  notifications: Notification[] = [];\n\n  constructor(public auth: AuthService,\n    public notificationService: NotificationsService,\n    public symbol: SymbolService) {\n  }\n  /** Communicates with the AuthService. Handles loader, notifications and success Subject. */\n  login({ email, password }) {\n    const login = this.auth.login({ email, password }, this.api)\n      .then((user) => {\n        this.notificationService.emit({\n          type: 'success',\n          title: this.symbol.resolve('login.success'),\n          hide: this.notifications\n        });\n        this.success.emit(user);\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: this.symbol.resolve('login.error'),\n          error,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications\n        });\n        console.log('could not login', error);\n      });\n    this.loader.wait(login);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        Login Form Component with validation. Fires success event with credentials on submit.\nhttps://components.entrecode.de/ui/login\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login-form\n            \n\n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                notifications\n                            \n                            \n                                    Private\n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClasses\n                            \n                            \n                                buttonLabel\n                            \n                            \n                                emailLabel\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                loader\n                            \n                            \n                                passwordLabel\n                            \n                            \n                                passwordPlaceholder\n                            \n                            \n                                showLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/login-form/login-form.component.ts:43\n                            \n                        \n\n                \n                    \n                            Injects the FormBuilder\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonClasses\n                    \n                    \n                        Additional Button classes \n\n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                    \n                        The Label of the submit button. Defaults to Login \n\n                        \n                            Default value: 'Login'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emailLabel\n                    \n                    \n                        The Label of the Mail field \n\n                        \n                            Default value: 'E-Mail'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emailPlaceholder\n                    \n                    \n                        The Placeholder of the mail Field \n\n                        \n                            Default value: 'E-Mail Adresse'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be shown during login \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordLabel\n                    \n                    \n                        The Label of the password field. \n\n                        \n                            Default value: 'Passwort'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordPlaceholder\n                    \n                    \n                        The Placeholder of the password field \n\n                        \n                            Default value: 'Passwort'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                    \n                        If true, email and password wont have labels \n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:29\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        Event that emits when calling showError. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Event that emits on succesful submit of the form, passing the login credentials. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showError\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowError(err: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Shows the given error in the form. Clears the password field and emits the error event. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:21\n                            \n                        \n\n                \n                    \n                        Contains possible error messages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:17\n                            \n                        \n\n                \n                    \n                        The login's form group.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:43\n                            \n                        \n\n                \n                    \n                        Recent error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:19\n                            \n                        \n\n                \n                    \n                        Flips true when submitted. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Login Form\nThe Login Form UI component is meant to be extended by a component that communicates with an API.\n    \n    \n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { FieldValidators } from '../validators/field-validators';\nimport { LoaderComponent } from '../../loader/loader.component';\nimport { WithLoader } from '../../loader/with-loader.interface';\n\n/** Login Form Component with validation. Fires success event with credentials on submit.\n * https://components.entrecode.de/ui/login\n*/\n@Component({\n  selector: 'ec-login-form',\n  templateUrl: './login-form.component.html',\n})\nexport class LoginFormComponent implements OnInit, WithLoader {\n  /** The login's form group.*/\n  public form: FormGroup;\n  /** Flips true when submitted. */\n  private submitted: boolean;\n  /** Contains possible error messages. */\n  public errorMessage: string;\n  /** Event that emits on succesful submit of the form, passing the login credentials. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Event that emits when calling showError. */\n  @Output() error: EventEmitter = new EventEmitter();\n  /** The loader that should be shown during login */\n  @Input() loader: LoaderComponent;\n  /** If true, email and password wont have labels */\n  @Input() showLabels = true;\n  /** The Label of the Mail field */\n  @Input() emailLabel = 'E-Mail';\n  /** The Placeholder of the mail Field */\n  @Input() emailPlaceholder = 'E-Mail Adresse';\n  /** The Label of the password field. */\n  @Input() passwordLabel = 'Passwort';\n  /** The Placeholder of the password field */\n  @Input() passwordPlaceholder = 'Passwort';\n  /** The Label of the submit button. Defaults to Login */\n  @Input() buttonLabel = 'Login';\n  /** Additional Button classes */\n  @Input() buttonClasses = '';\n  /** Recent error Notifications */\n  notifications: Notification[];\n\n  /** Injects the FormBuilder*/\n  constructor(private fb: FormBuilder) {\n  }\n\n  /** Initializes the form */\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, FieldValidators.email]], // emailAvailable?\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /** Shows the given error in the form. Clears the password field and emits the error event. */\n  showError(err): any {\n    this.errorMessage = err.message;\n    this.form.get('password').setValue('');\n    this.error.emit(err);\n    Observable.throw(err);\n  }\n\n  /** Method that is meant to be overwritten by a subclass to communicate with an API. */\n  login(value) { // meant to be overridden\n    return Promise.resolve(value);\n  }\n\n  /** Is called when the form has been successfully submitted. Calls login and resets the form after. */\n  onSubmit() {\n    this.submitted = true;\n    delete this.errorMessage;\n    if (!this.form.valid) {\n      return;\n    }\n    const login = this.login(this.form.value)\n      .then((res) => {\n        this.form.reset();\n        this.success.emit(res);\n      });\n    if (this.loader) {\n      this.loader.wait(login);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n  \n  \n    {{emailLabel}}\n    \n    \n    \n  \n  \n    Passwort\n    \n    \n  \n  \n    {{buttonLabel}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}        {{emailLabel}}                    Passwort                {{buttonLabel}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MaxItemsPipe.html":{"url":"pipes/MaxItemsPipe.html","title":"pipe - MaxItemsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  MaxItemsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/max-items.pipe.ts\n        \n\n            \n                Description\n            \n            \n                This pipe slices an array after the nth item \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        maxItems\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(array: Array, maxItems: number, start: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/max-items.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        maxItems\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        start\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n/** This pipe slices an array after the nth item */\n@Pipe({\n    name: 'maxItems'\n})\n\nexport class MaxItemsPipe implements PipeTransform {\n    transform(array: Array = [], maxItems: number, start: number = 0): any {\n        return array.slice(start, maxItems);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MediumEditorComponent.html":{"url":"components/MediumEditorComponent.html","title":"component - MediumEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MediumEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/medium-editor/src/medium-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps medium-editor to a reactive form component.\nhttps://components.entrecode.de/misc/medium-editor\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-medium-editor\n            \n\n            \n                styleUrls\n                medium-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                medium-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Private\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        data model \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        MediumEditor options \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        empty placeholder \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                    \n                        change emitter \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            destroys editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            inits editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                        container element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     MediumEditor\n\n                    \n                \n                    \n                        \n                            Type :     MediumEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:47\n                            \n                        \n\n                \n                    \n                        editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:49\n                            \n                        \n\n                \n                    \n                        ready promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:45\n                            \n                        \n\n                \n                    \n                        current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as MediumEditor from 'medium-editor/dist/js/medium-editor';\n\n/** Wraps medium-editor to a reactive form component.\n * https://components.entrecode.de/misc/medium-editor\n*/\n@Component({\n  selector: 'ec-medium-editor',\n  styleUrls: ['./medium-editor.component.scss'],\n  templateUrl: 'medium-editor.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MediumEditorComponent),\n      multi: true\n    }\n  ]\n})\nexport class MediumEditorComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  /** data model */\n  @Input() model: any;\n  /** MediumEditor [options](https://github.com/yabwe/medium-editor#mediumeditor-options) */\n  @Input() options: any;\n  /** empty placeholder */\n  @Input() placeholder: string;\n  /** change emitter */\n  @Output() modelChange: EventEmitter = new EventEmitter();\n  /** container element */\n  @ViewChild('container') container: ElementRef;\n  /** current value */\n  value: any;\n  /** editor instance */\n  private editor: MediumEditor;\n  /** ready promise */\n  public ready: Promise;\n\n  /** inits editor */\n  ngOnInit() {\n    this.container.nativeElement.innerHTML = this.model || '';\n    this.options.placeholder = this.placeholder;\n    this.editor = new MediumEditor(this.container.nativeElement, this.options);\n    this.editor.subscribe('editableInput', () => {\n      this.value = this.editor.getContent();\n      this.propagateChange(this.value);\n    });\n    this.ready = Promise.resolve(this.editor);\n  }\n  /** destroys editor */\n  ngOnDestroy(): void {\n    this.editor.destroy();\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    this.ready.then((editor) => {\n      editor.setContent(this.value);\n    });\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'MediumEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediumModule.html":{"url":"modules/MediumModule.html","title":"module - MediumModule","body":"\n                   \n\n\n\n\n  Modules\n  MediumModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediumModule\n\n\n\ncluster_MediumModule_declarations\n\n\n\ncluster_MediumModule_MediumEditorComponent_providers\n\n\n\ncluster_MediumModule_exports\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n\n\nMediumModule\n\nMediumModule\n\nMediumModule -->\n\nMediumEditorComponent->MediumModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumModule->MediumEditorComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->MediumEditorComponent -->\n\n{\n    : , : (() => ), : true\n}->MediumEditorComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/medium-editor/src/medium.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MediumEditorComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MediumEditorComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MediumEditorComponent } from './medium-editor.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [MediumEditorComponent],\n  declarations: [MediumEditorComponent],\n  providers: [],\n})\nexport class MediumModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/menu/menu.component.ts\n\n\n    \n        Description\n    \n    \n        Renders a nested menu from a given routes Array (the same you would use for angular routing). \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-menu,[ec-menu]\n            \n\n            \n                styleUrls\n                menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hover\n                            \n                            \n                                    Private\n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTimeout\n                            \n                            \n                                getColor\n                            \n                            \n                                getItemColor\n                            \n                            \n                                getLevel\n                            \n                            \n                                getPath\n                            \n                            \n                                hasActivePath\n                            \n                            \n                                hoverItem\n                            \n                            \n                                hoverOut\n                            \n                            \n                                isActive\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colors\n                            \n                            \n                                hoverDelay\n                            \n                            \n                                parent\n                            \n                            \n                                route\n                            \n                            \n                                routes\n                            \n                            \n                                title\n                            \n                            \n                                vanishDelay\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            Injects the Router. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colors\n                    \n                    \n                        Color map of submenus. \n\n                            \n                            Type:    string[]\n\n                            \n                        \n                            Default value: ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4']\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hoverDelay\n                    \n                    \n                        Delay before menu is shown on mouseover. \n\n                        \n                            Default value: 50\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parent\n                    \n                    \n                        Parent Menu (when nested) \n\n                            \n                            Type:    MenuComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                    \n                        The currently active route \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        routes\n                    \n                    \n                        Routes that should be used for the menu. You can use your angular router routes here. \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                        The title of the menu \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        vanishDelay\n                    \n                    \n                        Delay before menu is hidden after mouseout. \n\n                        \n                            Default value: 500\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelTimeout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Cancels the current timeout \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColor(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the current level. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItemColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItemColor(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the given item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLevel(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Returns the level of nesting (parent=0). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath(item: , path: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Returns the full path to an item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasActivePath\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasActivePath(item: , parent: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item or a child of it is active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        parent\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverItem(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            Hovers the item after hoverDelay timeout. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:95\n                            \n                        \n\n\n                \n                    \n                            Hovers out after vanishDelay \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item is active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item is selected. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            updates the routes on change of route \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hover\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hover:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:29\n                            \n                        \n\n                \n                    \n                        The currently hovered Route\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeout:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                        The timeout for delay handling \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router'; // TODO cannot import Route...\n\n/** Renders a nested menu from a given routes Array (the same you would use for angular routing). */\n@Component({\n  selector: 'ec-menu,[ec-menu]',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnChanges {\n  /** Routes that should be used for the menu. You can use your angular router routes here. */\n  @Input() routes; // : Route[];\n  /** The currently active route */\n  @Input() route; // : Route;\n  /** The title of the menu */\n  @Input() title: string;\n  /** Parent Menu (when nested) */\n  @Input() parent: MenuComponent;\n  /** Color map of submenus. */\n  @Input() colors: string[] = ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4'];\n  /** Delay before menu is hidden after mouseout. */\n  @Input() vanishDelay = 500;\n  /** Delay before menu is shown on mouseover. */\n  @Input() hoverDelay = 50;\n  /** The currently hovered Route*/\n  public hover; // : Route;\n  /** The timeout for delay handling */\n  private timeout;\n\n  /** Injects the Router. */\n  constructor(private router: Router) {\n  }\n\n  /** updates the routes on change of route */\n  ngOnChanges() {\n    if (this.route) {\n      this.routes = this.route.children\n      .filter(route => route.path && route.path.indexOf(':') === -1)\n      .filter(route => !route.data || !route.data.hidden);\n    }\n  }\n\n  /** Returns true if the item or a child of it is active. */\n  hasActivePath(item, parent = this) { // this.parent\n    return parent.getPath(item) === this.router.url;\n  }\n\n  /** Returns true if the item is selected. */\n  isSelected(item) {\n    const path = this.getPath(item);\n    return path !== '/' && (path === this.router.url || this.router.url.indexOf(path) === 0);\n  }\n\n  /** Returns true if the item is active. */\n  isActive(item) {\n    return this.hover === item || (!this.hover && this.isSelected(item));\n  }\n\n  /** Returns the level of nesting (parent=0). */\n  getLevel(level = 0) {\n    return this.parent ? this.parent.getLevel(++level) : level;\n  }\n\n  /** Returns the color for the current level. */\n  getColor(level = 0) {\n    return this.colors[this.getLevel(level) % this.colors.length];\n  }\n\n  /** Returns the color for the given item. */\n  getItemColor(item) {\n    return this.isActive(item) ? this.getColor(1) : 'initial';\n  }\n\n  /** Hovers the item after hoverDelay timeout. */\n  hoverItem(item) { // : Route\n    if (!this.hover) {\n      this.hover = item;\n    }\n    this.timeout = setTimeout(() => {\n      this.hover = item;\n    }, this.hoverDelay);\n  }\n\n  /** Cancels the current timeout */\n  cancelTimeout() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  /** Hovers out after vanishDelay */\n  hoverOut() {\n    this.timeout = setTimeout(() => {\n      delete this.hover;\n    }, this.vanishDelay)\n  }\n\n  /** Returns the full path to an item. */\n  getPath(item, path: string = '') {\n    path = '/' + item.path + path;\n    if (!this.parent) {\n      return path;\n    }\n    return this.parent.getPath(this.route, path);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{title}}\n    \n    \n      {{item.data?.title || item.path}}\n      {{item.data?.title || item.path}}\n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{title}}              {{item.data?.title || item.path}}      {{item.data?.title || item.path}}        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MockupComponent.html":{"url":"components/MockupComponent.html","title":"component - MockupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MockupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/mockup/mockup.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the style prototypes \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-mockup\n            \n\n\n\n\n            \n                templateUrl\n                ./mockup.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/** This component holds the style prototypes */\n@Component({\n  selector: 'ec-mockup',\n  templateUrl: './mockup.component.html',\n})\nexport class MockupComponent {\n}\n\n    \n\n    \n        \n  \n    ec.list\n\n    ec.list\n    \n      \n        \n          \n            \n          \n          \n            Groupname\n          \n          \n            \n              \n              \n                \n                  delete\n                \n                \n                  dublicate\n                \n              \n            \n          \n        \n        \n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .selected\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .error\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .disabled\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .success\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .info\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .invalid\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .custom-item-class\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n    ec.list.card\n    \n      \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n      \n    \n    ec.list.simple\n    \n      \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n      \n    \n  \n\n-->\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      ec.list    ec.list                                                                        Groupname                                                                                              delete                                                  dublicate                                                                                                                                                                                                                Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .selected                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .error                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .disabled                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .success                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .info                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .invalid                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .custom-item-class                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                                ec.list.card                                                                                                                                  Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                            ec.list.simple                                                      Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                          -->'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'MockupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfig.html":{"url":"interfaces/ModelConfig.html","title":"interface - ModelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/model-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig, FieldConfigProperty } from '@ec.components/core';\n\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfig {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelConfigService.html":{"url":"injectables/ModelConfigService.html","title":"injectable - ModelConfigService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ModelConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/model-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The main class for configuring the behaviour of a model.\nBy default, everything is auto generated from the model's schema but can be overriden via the\nset method. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                omittedFields\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSystemPropertiesToFieldConfig\n                            \n                            \n                                generateConfig\n                            \n                            \n                                generateFieldConfig\n                            \n                            \n                                get\n                            \n                            \n                                getLightModel\n                            \n                            \n                                isSystemProperty\n                            \n                            \n                                parseType\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(crud: CrudService, sdk: SdkService, typeConfig: TypeConfigService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/model-config/model-config.service.ts:26\n                            \n                        \n\n                \n                    \n                            Injects CrudService and SdkService. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        crud\n                                                  \n                                                        \n                                                                    CrudService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addSystemPropertiesToFieldConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \naddSystemPropertiesToFieldConfig(config: FieldConfig, override: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            Assigns default system fields to given config. Does not override by default \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    FieldConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        override\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateConfig(model: string, fieldConfig?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:178\n                            \n                        \n\n\n                \n                    \n                            Returns the given model's config and generates a field config from the schema if it is not configured. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fieldConfig\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateFieldConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateFieldConfig(model: string, fields?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:129\n                            \n                        \n\n\n                \n                    \n                            Generates a proper fieldConfig for a given model and an optional local fieldConfig.\nOperates in three layers: If a local fieldConfig is given, it will be used.\nIf no local fieldConfig is given, the global model's field config is used.\nIf no global field config is found for that model, it will be generated from the model schema.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fields\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Retrieves the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            ModelConfig.get(&#39;muffin&#39;); //returns muffin config;\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLightModel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLightModel(model: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:195\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSystemProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSystemProperty(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Checks if a given property name is a system property (either part of omittedFields or beginning with _).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseType\n                            \n                            \n                        \n                    \n                \n                \n                    \nparseType(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:112\n                            \n                        \n\n\n                \n                    \n                            Parses the property type (as contained in the property schema's title field). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { raw: string; name: any; relation: any; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(property: string, config: CrudConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Sets the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    CrudConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            ModelConfig.set(&#39;muffin&#39;, {\nfields: {\ntitle: {\nlabel: &#39;Muffin Titel&#39;\n}\n});\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            omittedFields\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        omittedFields:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'id',\n    'private',\n    'created',\n    'creator',\n    'modified'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:20\n                            \n                        \n\n                \n                    \n                        Array of property names that are omitted by default. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Config } from '@ec.components/core/src/config/config';\nimport { FieldConfigProperty } from '@ec.components/core/src/config/field-config-property.interface';\nimport { FieldConfig } from '@ec.components/core/src/config/field-config.interface';\nimport { Item } from '@ec.components/core/src/item/item';\nimport { ListConfig } from '@ec.components/core/src/list/list-config.interface';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { CrudService } from '../crud/crud.service';\nimport { SdkService } from '../sdk/sdk.service';\nimport { TypeConfigService } from './type-config.service';\n\n/** The main class for configuring the behaviour of a model.\n * By default, everything is auto generated from the model's schema but can be overriden via the\n * set method. */\n@Injectable()\nexport class ModelConfigService extends Config {\n  /** Array of property names that are omitted by default. */\n  omittedFields: Array = [\n    'id',\n    'private',\n    'created',\n    'creator',\n    'modified'\n  ];\n\n  /** Injects CrudService and SdkService. */\n  constructor(private crud: CrudService,\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private symbol: SymbolService) {\n    super();\n  }\n\n  /** Retrieves the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.get('muffin'); //returns muffin config;\n   * ```\n   * */\n  get(property: string): CrudConfig {\n    return this.configure('model', property);\n  }\n\n  /** Sets the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.set('muffin', {\n   *  fields: {\n   *    title: {\n   *      label: 'Muffin Titel'\n   *    }\n   *  });\n   * ```\n   * */\n  set(property: string, config: CrudConfig): CrudConfig {\n    return this.configure('model', property, config);\n  }\n\n  /** Checks if a given property name is a system property (either part of omittedFields or beginning with _).*/\n  isSystemProperty(property: string) {\n    return property[0] === '_' || this.omittedFields.indexOf(property) !== -1;\n  }\n\n  /** Assigns default system fields to given config. Does not override by default */\n  addSystemPropertiesToFieldConfig(config: FieldConfig, override = false) {\n    const defaultConfig = {\n      id: {\n        label: this.symbol.resolve('field.label.id'),\n        view: 'string',\n        form: false,\n        immutable: true,\n        hidden: true\n      },\n      _created: {\n        label: this.symbol.resolve('field.label.created'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        form: false,\n        immutable: true,\n        sortable: true,\n        hidden: true,\n        rawFilter: true\n      },\n      _modified: {\n        label: this.symbol.resolve('field.label.modified'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        form: false,\n        immutable: true,\n        sortable: true,\n        hidden: false,\n        rawFilter: true\n      },\n      _creator: {\n        label: this.symbol.resolve('field.label.creator'),\n        display: this.typeConfig.displayAccount(),\n        view: 'account',\n        form: false,\n        immutable: true,\n        hidden: true\n      }\n    };\n    Object.keys(defaultConfig).forEach(property =>\n      Object.assign(config, {\n        [property]: override ? defaultConfig[property] : config[property] || defaultConfig[property]\n      }));\n  }\n\n  /** Parses the property type (as contained in the property schema's title field). */\n  parseType(type: string) {\n    if (!type) {\n      return null;\n    }\n    const match = type.match(/^(\\w*)()?/i);\n    return !match.length ? null : {\n      raw: type,\n      name: match[1],\n      relation: match.length > 2 ? match[3] : null\n    };\n  }\n\n  /** Generates a proper fieldConfig for a given model and an optional local fieldConfig.\n   * Operates in three layers: If a local fieldConfig is given, it will be used.\n   * If no local fieldConfig is given, the global model's field config is used.\n   * If no global field config is found for that model, it will be generated from the model schema.\n   * */\n  generateFieldConfig(model: string, fields?): Promise> {\n    let fieldConfig;\n    return Promise.resolve().then(() => {\n      if (fields) {\n        return fields;\n      }\n      // use global config, if given\n      if (this.get(model) && this.get(model).fields) {\n        return this.get(model).fields;\n      }\n    }).then((config) => {\n      fieldConfig = config;\n      return this.sdk.getSchema(model);\n    }).then((schema) => {\n      schema = schema.allOf[1];\n      const properties = Object.keys(schema.properties)\n        .filter(property => (!fieldConfig && !this.isSystemProperty(property)) || (fieldConfig && !!fieldConfig[property]));\n      fieldConfig = fieldConfig || {};\n      this.addSystemPropertiesToFieldConfig(fieldConfig); // prepends system fields\n      properties.forEach(property => {\n        let type;\n        if (property === '_entryTitle') {\n          type = {\n            raw: 'text',\n            name: 'text',\n            model: null\n          };\n        } else {\n          type = this.parseType(schema.properties[property].title);\n        }\n        if (!type) {\n          console.error('Model Property Schema title ', schema.properties[property].title, ' was unexpected, ignoring property', property)\n          return;\n        }\n        fieldConfig[property] = Object.assign({\n          label: property,\n          schema: schema.properties[property],\n          relation: type.relation,\n          readOnly: schema.properties[property].readOnly || this.isSystemProperty(property),\n          // required: schema.required.indexOf(property) !== -1, // TODO\n          display: ((value) => value)\n        }, this.typeConfig.get(type.name),\n          fieldConfig[property] ? fieldConfig[property] : {});\n      });\n      return fieldConfig;\n    });\n  }\n\n  /** Returns the given model's config and generates a field config from the schema if it is not configured. */\n  generateConfig(model: string, fieldConfig?): Promise> {\n    const config = Object.assign({}, this.get(model) || {}); // clone\n    Object.assign(config, {\n      identifier: 'id',\n      identifierPattern: /^[0-9A-Za-z-_]{7,14}$/, // shortID pattern\n      label: '_entryTitle',\n      onSave: (item: Item, value) => this.crud.save(model, item.getBody(), value)\n    });\n    if (!model) {\n      return Promise.resolve(config);\n    }\n    return this.generateFieldConfig(model, fieldConfig).then((fields) => {\n      Object.assign(config, { fields });\n      return Promise.resolve(config);\n    });\n  }\n\n  getLightModel(model) {\n    return this.sdk.ready.then(() => this.sdk.api.modelList()).then((models) => models[model]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfiguration.html":{"url":"interfaces/ModelConfiguration.html","title":"interface - ModelConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/model-configuration.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig, FieldConfigProperty } from '@ec.components/core';\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfiguration {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/notifications/notification.ts\n        \n\n            \n                Description\n            \n            \n                A Notification is used inside NotificationService and NotificationComponent to display any information to the user.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                append\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                hide\n                            \n                            \n                                    Optional\n                                host\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                replace\n                            \n                            \n                                    Optional\n                                sticky\n                            \n                            \n                                    Optional\n                                time\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notification: Notification)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                            The constructor just looks if an error is set, and if yes, sets the type to error. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                  \n                                                        \n                                                                    Notification\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            append\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        append:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:22\n                            \n                        \n\n                \n                    \n                        If set, the notification will be appended to the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:18\n                            \n                        \n\n                \n                    \n                        If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hide:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:20\n                            \n                        \n\n                \n                    \n                        Notifications that should be hidden when this one gets active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            host\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        host:     NotificationsComponent\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:10\n                            \n                        \n\n                \n                    \n                        The host the is NotificationsComponent that should display the notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:8\n                            \n                        \n\n                \n                    \n                        The message is shown below the title and is meant for further description. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            replace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        replace:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                        If set, the notification will replace all others in the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sticky\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sticky:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:14\n                            \n                        \n\n                \n                    \n                        If true, the notification will stay forever \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:12\n                            \n                        \n\n                \n                    \n                        The amount of ms it should be visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:6\n                            \n                        \n\n                \n                    \n                        The title is the headline of a notification and the only value that is required. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:16\n                            \n                        \n\n                \n                    \n                        Determines the looks. Currently info, error and success are defined. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationsComponent } from './notifications.component';\n\n/** A Notification is used inside NotificationService and NotificationComponent to display any information to the user.*/\nexport class Notification {\n  /** The title is the headline of a notification and the only value that is required. */\n  title?: string;\n  /** The message is shown below the title and is meant for further description. */\n  message?: string;\n  /** The host the is NotificationsComponent that should display the notification. */\n  host?: NotificationsComponent;\n  /** The amount of ms it should be visible */\n  time?: number;\n  /** If true, the notification will stay forever */\n  sticky?: boolean;\n  /** Determines the looks. Currently info, error and success are defined. */\n  type?: string;\n  /** If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.*/\n  error?: any;\n  /** Notifications that should be hidden when this one gets active */\n  hide?: this[];\n  /** If set, the notification will be appended to the given array of Notifications when activated */\n  append?: this[];\n  /** If set, the notification will replace all others in the given array of Notifications when activated */\n  replace?: this[];\n\n  /** The constructor just looks if an error is set, and if yes, sets the type to error. */\n  constructor(notification: Notification) {\n    if (notification.error) {\n      this.type = 'error';\n    }\n    Object.assign(this, notification);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/notifications/notifications.component.ts\n\n\n    \n        Description\n    \n    \n        Displays any kind of Notification inside the DOM.\nIt listens on the notificationService.$emitter for notifications.\nhttps://components.entrecode.de/ui/notifications\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-notifications\n            \n\n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                time\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                            Listens on the NotificationService and shows each notification that has this component set as host, or none at all. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        time\n                    \n                    \n                        The default time for a notification to be visible. Will be ignored if the notification itself has a time set. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Collection\n\n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.component.ts:19\n                            \n                        \n\n                \n                    \n                        The current stack of notifications that are visible. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Notifications\nThe Notifications Module is a combination of the NotificationsService and the NotificationsComponent.\nSimple Usage\n\nPlace the component somewhere in your app template:\n\n\nEmit notifications via the service\n\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  showNotification() {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        message: 'Das ist die Beschreibung'\n      });\n  }\n\n  doSomethingRisky() {\n      return Promise.reject('Fehler')\n      .catch((err) => {\n          this.notifications.emit({\n              error: err, // passing the error Object\n              title: 'Fehler!'\n          })\n      })\n  }\n}The given type will be added as class. The classes that are available by default can be looked up here.\nAdvanced Usage\nYou can also use multiple ec-notifications at different places:\n\n\nA\nBAll you have to do, is pass the instance of the component that should display the notification via the host property:\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  emit(host) {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        host: host\n      });\n  }\n}Hiding previous errors\nHere is an example usage of a typical success/error handling.\nIt features hiding previous notifications. We recommended you to use the WithNotifications interface for that case.\nexport class MuffinComponent implements WithNotifications {\n  /** Recent Error notification */\n  notifications: Notification[] = [];\n\nconstructor(\n    public bakery:BakeryService,\n    public notificationService: NotificationsService,\n    )\n\n  bake() {\n    this.bakery.bake().then(()=> {\n        this.notificationService.emit({\n            title: 'Muffin was baken!',\n            hide: this.notifications // this will hide all preceding notifications\n        })\n    }).catch(error=>{\n        this.notificationService.emit({\n            title: 'Error while baking',\n            sticky: true,\n            hide: this.notifications, // this will hide all preceding notifications\n            replace: this.notifications // this will replace the given array with the new notification\n        })\n    });\n  }\n}The hide option is useful to hide obsolete errors. E.g. If you successfully log in after one failiure, the sticky error notification of the first attempt will be hidden. This enables you to keep errors messages as long as they are needed.\nInstead of replace, you could also use append (see notification.component.ts for implementation).\n\n    \n\n    \n        import { Component, Input } from '@angular/core';\nimport { Collection } from '@ec.components/core/src/collection/collection';\nimport { Notification } from './notification';\nimport { NotificationsService } from './notifications.service';\n\n/** Displays any kind of Notification inside the DOM.\n * It listens on the notificationService.$emitter for notifications.\n * https://components.entrecode.de/ui/notifications\n * */\n@Component({\n  selector: 'ec-notifications',\n  templateUrl: './notifications.component.html',\n})\nexport class NotificationsComponent {\n  /** The current stack of notifications that are visible. */\n  notifications: Collection = new Collection([]);\n  /** The default time for a notification to be visible. Will be ignored if the notification itself has a time set. */\n  @Input() time: number;\n\n  /** Listens on the NotificationService and shows each notification that has this component set as host, or none at all. */\n  constructor(private notificationService: NotificationsService) {\n    this.time = this.time || this.notificationService.defaultTime;\n    this.notificationService.emitter$.subscribe((notification: Notification) => {\n      if (notification.hide) {\n        this.notifications.removeAll(notification.hide);\n      }\n      if (!notification.title && !notification.message) {\n        // console.warn('tried to emit notification without message and title', notification);\n        return;\n      }\n      if (notification.append) {\n        notification.append.push(notification);\n      }\n      if (notification.replace) {\n        notification.replace.length = 0;\n        notification.replace.push(notification);\n      }\n      if (!notification.host || notification.host === this) {\n        this.notifications.add(notification);\n        if (notification.sticky) {\n          if (notification.time) {\n            console.warn('notification.time is ignored because it was set sticky');\n          }\n          return;\n        }\n        setTimeout(() => this.notifications.remove(notification), notification.time || this.time)\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{notification.title}}\n    {{notification.message}}\n    \n    \n    \n      \n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{notification.title}}    {{notification.message}}                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationsModule.html":{"url":"modules/NotificationsModule.html","title":"module - NotificationsModule","body":"\n                   \n\n\n\n\n  Modules\n  NotificationsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_imports\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nIconModule\n\nIconModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/notifications/notifications.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ErrorComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     NotificationsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IconModule\n                            \n                            \n                                    PopModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ErrorComponent\n                            \n                            \n                                    NotificationsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NotificationsComponent } from './notifications.component';\nimport { NotificationsService } from './notifications.service';\nimport { PopModule } from '../pop/pop.module';\nimport { ErrorComponent } from './error/error.component';\nimport { IconModule } from '../icon/icon.module';\n\n@NgModule({\n  declarations: [\n    NotificationsComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    CommonModule,\n    PopModule,\n    IconModule,\n  ],\n  exports: [\n    NotificationsComponent,\n    ErrorComponent,\n  ],\n  providers: [\n    {\n      provide: 'useDesktopNotifications',\n      useValue: false\n    }, NotificationsService]\n})\nexport class NotificationsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/notifications/notifications.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the main interaction layer for the developer to show notifications.\nYou can use desktop notifications by default by providing:\n{\nprovide: \"useDesktopNotifications\",\nuseValue: true\n}in your module's providers.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultTime\n                            \n                            \n                                    Private\n                                emitter\n                            \n                            \n                                    Public\n                                emitter$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                desktopNotification\n                            \n                            \n                                emit\n                            \n                            \n                                getPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(useDesktopNotifications: )\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                            The constructors injects the useDesktopNotifications flag from the module.\nIf true, all notifications will be shown as desktop notifications instead. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        useDesktopNotifications\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktopNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \ndesktopNotification(notification: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Emits a desktop notification after asking for permission (if not already granted). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emit\n                            \n                            \n                        \n                    \n                \n                \n                    \nemit(notification: Notification, desktop?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        desktop\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPermission()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Asks for permission to show desktop notifications, if not already granted. \n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                        The default view time for a notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emitter:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:22\n                            \n                        \n\n                \n                    \n                        The emitter subject to fire notifications. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            emitter$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emitter$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.emitter.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:24\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when a new notification comes in. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Notification } from './notification';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n/** Workaround to get window without typescript complaining */\ndeclare const window;\n\n/** This service is the main interaction layer for the developer to show notifications.\n * You can use desktop notifications by default by providing:\n * ```json\n {\n   provide: \"useDesktopNotifications\",\n   useValue: true\n }```\n * in your module's providers.\n *\n * */\n@Injectable()\nexport class NotificationsService {\n  /** The emitter subject to fire notifications. */\n  private emitter: Subject = new Subject();\n  /** Observable that is nexted when a new notification comes in. */\n  public emitter$: Observable = this.emitter.asObservable();\n  /** The default view time for a notification. */\n  public defaultTime = 5000;\n\n  /** The constructors injects the useDesktopNotifications flag from the module.\n   * If true, all notifications will be shown as desktop notifications instead. */\n  constructor(@Inject('useDesktopNotifications') private useDesktopNotifications) {\n  }\n\n  /** Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.*/\n  emit(notification: Notification, desktop?: boolean) {\n    const instance = new Notification(notification);\n    if (desktop || this.useDesktopNotifications) {\n      this.desktopNotification(instance);\n    } else {\n      this.emitter.next(instance);\n    }\n    return instance;\n  }\n\n  /** Asks for permission to show desktop notifications, if not already granted. */\n  getPermission(): Promise {\n    if (window.Notification.permission === 'granted') {\n      return Promise.resolve();\n    }\n    return window.Notification.requestPermission().then((permission) => {\n      // If the user accepts, let's create a notification\n      if (permission !== 'granted') {\n        return Promise.reject('Desktop Notification Permission Denied!');\n      }\n    });\n  }\n\n  /** Emits a desktop notification after asking for permission (if not already granted). */\n  desktopNotification(notification: Notification) {\n    if (!('Notification' in window)) {\n      console.warn('This browser does not support desktop notification');\n    }\n    this.getPermission().then(() => {\n      const message = new window.Notification(notification.title, { body: notification.message });\n      if (notification.sticky) {\n        if (notification.time) {\n          console.warn('notification.time is ignored because it was set sticky');\n        }\n        return;\n      }\n      setTimeout(() => message.close(), notification.time || this.defaultTime)\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OutputComponent.html":{"url":"components/OutputComponent.html","title":"component - OutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/output/output.component.ts\n\n\n    \n        Description\n    \n    \n        Outputs the given field of the given item, rendering the component dynamically. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-output\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        The instance of field that should be used in the template \n\n                            \n                            Type:    Field\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/output/output.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                        The belonging item \n\n                            \n                            Type:    Item\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/output/output.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/output/output.component.ts:20\n                            \n                        \n\n\n                \n                    \n                            The component is loade as soon as the field and item are known.\nIf the field has no output property set, the DefaultOutputComponent will be rendered. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, data: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentFactoryResolver:     ComponentFactoryResolver\n\n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges } from '@angular/core';\nimport { DefaultOutputComponent } from '../../form/default-output/default-output.component';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\n\n/** Outputs the given field of the given item, rendering the component dynamically. */\n@Component({\n  selector: 'ec-output',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n})\nexport class OutputComponent extends DynamicSlotComponent implements OnChanges {\n  /** The instance of field that should be used in the template */\n  @Input() field: Field;\n  /** The belonging item */\n  @Input() item: Item;\n\n  /** The component is loade as soon as the field and item are known.\n   * If the field has no output property set, the DefaultOutputComponent will be rendered. */\n  ngOnChanges() {\n    if (this.field && this.item) {\n      this.loadComponent(this.field.output || DefaultOutputComponent,\n        {\n          item: this.item,\n          field: this.field\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'OutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/pagination/pagination.ts\n        \n\n            \n                Description\n            \n            \n                This class can be used to control the loading behaviour of external data. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                change\n                            \n                            \n                                    Public\n                                change$\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                pages\n                            \n                            \n                                    Protected\n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                getPage\n                            \n                            \n                                getPages\n                            \n                            \n                                isActive\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                last\n                            \n                            \n                                    Protected\n                                load\n                            \n                            \n                                next\n                            \n                            \n                                params\n                            \n                            \n                                prev\n                            \n                            \n                                select\n                            \n                            \n                                setTotal\n                            \n                            \n                                slice\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: ListConfig, total?: number)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/pagination/pagination.ts:16\n                            \n                        \n\n                \n                    \n                            You can init each Pagination instance with an optional config.\nIf no config is provided, it will default to {page: 1, size: 25}. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ListConfig\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        change:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:14\n                            \n                        \n\n                \n                    \n                        Subject for tracking changes. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            change$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        change$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.change.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:16\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when the pagination has changed. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ListConfig\n\n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:10\n                            \n                        \n\n                \n                    \n                        The pagination config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pages:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:12\n                            \n                        \n\n                \n                    \n                        Array to iterate over the number of pages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            total\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        total:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:8\n                            \n                        \n\n                \n                    \n                        The total number of items that is being paginated. It can be changed via setTotal. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first\n                            \n                            \n                        \n                    \n                \n                \n                    \nfirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:93\n                            \n                        \n\n\n                \n                    \n                            Loads the first Page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:34\n                            \n                        \n\n\n                \n                    \n                            Retrieves the current page \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPages\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:39\n                            \n                        \n\n\n                \n                    \n                            Retrieves the number of pages \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:107\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given page number is currently active.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:112\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the first one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:117\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the last one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last\n                            \n                            \n                        \n                    \n                \n                \n                    \nlast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:98\n                            \n                        \n\n\n                \n                    \n                            Loads the last page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load(config?: ListConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:77\n                            \n                        \n\n\n                \n                    \n                            Merges config and fires next on change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ListConfig\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:44\n                            \n                        \n\n\n                \n                    \n                            Loads the next page. Throws error if already on last page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                            \n                        \n                    \n                \n                \n                    \nparams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:130\n                            \n                        \n\n\n                \n                    \n                            Returns an object with all relevant infos about the current state of pagination \n\n\n                            \n                                Returns :     { page: number; pages: number; total: number; from: number; to: any; size: any; availableSizes: a...\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:53\n                            \n                        \n\n\n                \n                    \n                            Loads the previous page. Throws error if already on first page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:85\n                            \n                        \n\n\n                \n                    \n                            Selects the given page number \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTotal\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTotal(total: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:64\n                            \n                        \n\n\n                \n                    \n                            Sets the total number of items and calculcates the page count.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        total\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slice\n                            \n                            \n                        \n                    \n                \n                \n                    \nslice(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:125\n                            \n                        \n\n\n                \n                    \n                            slices a given array according to the current pagination state \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(size: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:142\n                            \n                        \n\n\n                \n                    \n                            updates the size of the pages.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Pagination\nPagination can be used to keep track of the pages of arbitrary items.\nconst pagination = new Pagination({ size: 10 });\npagination.setTotal(50); //tells the pagination that it should paginate over 50 items.\npagination.getPages(); //5See list.ts/list.component for example usage.\n\n    \n\n    \n        import { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ListConfig } from '../list/list-config.interface';\n\n/** This class can be used to control the loading behaviour of external data. */\nexport class Pagination {\n  /** The total number of items that is being paginated. It can be changed via setTotal. */\n  protected total: number;\n  /** The pagination config */\n  protected config: ListConfig;\n  /** Array to iterate over the number of pages. */\n  public pages: Array;\n  /** Subject for tracking changes. */\n  private change = new Subject();\n  /** Observable that is nexted when the pagination has changed. */\n  public change$: Observable = this.change.asObservable();\n\n  /** You can init each Pagination instance with an optional config.\n   * If no config is provided, it will default to ```{page: 1, size: 25}```. */\n  constructor(config?: ListConfig, total?: number) {\n    this.config = { page: 1, size: 25 };\n    Object.assign(this.config, config);\n    Object.assign(this.config, {\n      availableSizes: Array.from(new Set([this.config.size]\n        .concat(this.config.availableSizes || [10, 25, 50, 100], [this.config.size])\n        .sort(((a, b) => a - b))))\n    });\n    if (total) {\n      this.setTotal(total);\n    }\n  }\n\n  /** Retrieves the current page */\n  getPage(): number {\n    return this.config.page;\n  }\n\n  /** Retrieves the number of pages */\n  getPages(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /** Loads the next page. Throws error if already on last page. */\n  next(): void {\n    if (this.isLast()) {\n      return; // already last page\n    }\n    this.config.page += 1;\n    this.load();\n  }\n\n  /** Loads the previous page. Throws error if already on first page. */\n  prev(): void {\n    if (this.isFirst()) {\n      return; // already first page\n    }\n    this.config.page -= 1;\n    this.load();\n  }\n\n  /**\n   * Sets the total number of items and calculcates the page count.\n   * */\n  setTotal(total: number) {\n    /* if (this.total !== total) {\n      this.change.next(this.config);\n    } */\n    this.total = total;\n    this.pages = new Array(Math.ceil(this.total / this.config.size));\n    if (this.config.page !== 1 && this.config.page > this.pages.length) {\n      this.config.page = this.pages.length || 1;\n      this.load();\n    }\n  }\n\n  /** Merges config and fires next on change */\n  protected load(config?: ListConfig): void {\n    if (config) {\n      Object.assign(this.config, config);\n    }\n    this.change.next(this.config);\n  }\n\n  /** Selects the given page number */\n  select(page: number): void {\n    if (page === this.config.page) {\n      return;\n    }\n    this.load({ page: page });\n  }\n\n  /** Loads the first Page */\n  first(): void {\n    this.load({ page: 1 });\n  }\n\n  /** Loads the last page */\n  last() {\n    if (!this.pages) {\n      throw new Error(`Cannot load last page without knowing the item count.\n        Call setTotal(itemCount) before loading.`);\n    }\n    this.load({ page: this.pages.length });\n  }\n\n  /** Returns true if the given page number is currently active.*/\n  isActive(page: number): boolean {\n    return this.config.page === page;\n  }\n\n  /** Returns true if the current page is the first one */\n  isFirst(): boolean {\n    return this.config.page === 1;\n  }\n\n  /** Returns true if the current page is the last one */\n  isLast(): boolean {\n    if (!this.pages) {\n      return true;\n    }\n    return this.config.page === this.pages.length;\n  }\n\n  /** slices a given array according to the current pagination state */\n  slice(items: Array): Array {\n    return items.slice((this.config.page - 1) * this.config.size, (this.config.page) * this.config.size);\n  }\n\n  /** Returns an object with all relevant infos about the current state of pagination */\n  params() {\n    return {\n      page: this.getPage(),\n      pages: this.getPages(),\n      total: this.total,\n      from: (this.getPage() - 1) * this.config.size + 1,\n      to: Math.min(this.getPage() * this.config.size, this.total),\n      size: this.config.size,\n      availableSizes: this.config.availableSizes,\n    }\n  }\n  /** updates the size of the pages.  */\n  updateSize(size: number) {\n    if (!size) {\n      return;\n    }\n    this.load({ size, page: 1 });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/pagination/pagination.component.ts\n\n\n    \n        Description\n    \n    \n        The Pagination component renders a given instance of the Pagination class.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pagination\n            \n\n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                page\n                            \n                            \n                                    Private\n                                pageContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        The config that is used \n\n                            \n                            Type:    PaginationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                    \n                        A Pagination Instance \n\n                            \n                            Type:    Pagination\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \nisVisible(page: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            When the view is ready, the container is translated.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            As soon as the pagination is known, the change$ event is subscribed to translate the container on change.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Init config. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:17\n                            \n                        \n\n                \n                    \n                        The div container for the pages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            page\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        page:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:21\n                            \n                        \n\n                \n                    \n                        The pages li elements. The first one is used to determine the container translation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pageContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageContainer:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:19\n                            \n                        \n\n                \n                    \n                        The ul around pages \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Pagination\nTODO\n\n    \n\n    \n        import { Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { Pagination } from '@ec.components/core';\nimport { PaginationConfig } from './pagination-config.interface';\n\n/**\n * The Pagination component renders a given instance of the Pagination class.\n */\n@Component({\n  selector: 'ec-pagination',\n  templateUrl: './pagination.component.html',\n})\nexport class PaginationComponent implements OnChanges, OnInit {\n  /** A Pagination Instance */\n  @Input() pagination: Pagination;\n  /** The div container for the pages*/\n  @ViewChild('container') private container: ElementRef;\n  /** The ul around pages */\n  @ViewChild('pageContainer') private pageContainer: ElementRef;\n  /** The pages li elements. The first one is used to determine the container translation. */\n  @ViewChildren('page') private page: QueryList;\n  /** The config that is used */\n  @Input() config: PaginationConfig;\n  /** Init config. */\n\n  /** Init config. */\n  ngOnInit() {\n    this.config = new PaginationConfig(this.config);\n  }\n\n  /** As soon as the pagination is known, the change$ event is subscribed to translate the container on change.*/\n  ngOnChanges() {\n    if (!this.pagination) {\n      return;\n    }\n    /*  this.pagination.change$.subscribe((config) => {\n       setTimeout(() => {\n         this.translateContainer();\n       })\n     }); */\n    this.config = new PaginationConfig(this.config);\n  }\n  /** When the view is ready, the container is translated.  */\n  /*   ngAfterViewInit() {\n      this.translateContainer();\n    } */\n\n  /** Translates the page container that the current page is in the middle */\n  /* translateContainer() {\n    if (!this.page || !this.pageContainer) {\n      // console.warn('pages not ready', this.page, this.pageContainer);\n      return;\n    }\n    const itemWidth = this.page.first.nativeElement.clientWidth;\n    const page = this.pagination.getPage();\n    let translation = Math.max(0, itemWidth * (page - this.config.range - 1));\n    translation = Math.min(translation, (this.pagination.getPages() - (2 * this.config.range) - 1) * itemWidth);\n    this.pageContainer.nativeElement.style = `transform:translateX(-${translation}px)`;\n    this.container.nativeElement.style = `max-width:${(1 + 2 * this.config.range) * itemWidth}px`;\n  } */\n\n  /** Determines if a page should be visible */\n  isVisible(page) {\n    const current = this.pagination.getPage();\n    return Math.abs(current - page) \n    \n\n    \n        \n  1&&!pagination?.isFirst()\">\n    \n      \n        {{'pagination.first' | symbol}}\n      \n    \n    \n      \n        {{'pagination.prev' | symbol}}\n      \n    \n  \n  1\">\n    \n      \n        \n          {{i+1}}\n        \n      \n    \n  \n  1&&!pagination?.isLast()\">\n    \n      \n        {{'pagination.next' | symbol}}\n      \n    \n    \n      \n        {{'pagination.last' | symbol}}\n      \n    \n  \n  \n    {{pagination.params().from}} - {{pagination.params().to}} {{ 'pagination.of' | symbol}} {{pagination.params().total}}\n  \n  \n     1\" (change)=\"updateSize($event.target.value)\" class=\"input\">\n      \n        {{size}} {{'pagination.size' | symbol}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  1&&!pagination?.isFirst()\">                  {{\\'pagination.first\\' | symbol}}                            {{\\'pagination.prev\\' | symbol}}              1\">                            {{i+1}}                      1&&!pagination?.isLast()\">                  {{\\'pagination.next\\' | symbol}}                            {{\\'pagination.last\\' | symbol}}                  {{pagination.params().from}} - {{pagination.params().to}} {{ \\'pagination.of\\' | symbol}} {{pagination.params().total}}         1\" (change)=\"updateSize($event.target.value)\" class=\"input\">              {{size}} {{\\'pagination.size\\' | symbol}}            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationConfig.html":{"url":"classes/PaginationConfig.html","title":"class - PaginationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/list/pagination/pagination-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for a pagination component \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideFirstLast\n                            \n                            \n                                hidePages\n                            \n                            \n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: PaginationConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor assigns the config \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    PaginationConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideFirstLast\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hideFirstLast:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:9\n                            \n                        \n\n                \n                    \n                        Hides first and last Link \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hidePages:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                        Hides pages \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        range:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:7\n                            \n                        \n\n                \n                    \n                        Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\nNOTE: For a smoother UX, there are minimum 2 * range + 1 pages visible.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** Configuration for a pagination component */\nexport class PaginationConfig {\n    /** Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\n * NOTE: For a smoother UX, there are minimum ```2 * range + 1``` pages visible.*/\n    range = 2;\n    /** Hides first and last Link */\n    hideFirstLast: boolean;\n    /** Hides pages */\n    hidePages: boolean;\n    /** The constructor assigns the config */\n    constructor(config: PaginationConfig) {\n        Object.assign(this, config);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordResetComponent.html":{"url":"components/PasswordResetComponent.html","title":"component - PasswordResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/auth/password-reset/password-reset.component.ts\n\n\n    \n        Description\n    \n    \n        Form to send password reset request. \n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-password-reset\n            \n\n\n\n\n            \n                templateUrl\n                password-reset.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                email\n                            \n                            \n                                loader\n                            \n                            \n                                lockForm\n                            \n                            \n                                    Public\n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/password-reset/password-reset.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        Optional api to be used (if not using sdk.api instance) \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Custom placeholder for email field \n\n                        \n                            Default value: 'E-Mail Adresse...'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Event after request was successful \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Sends request through AuthService and shows notifications + loader. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:16\n                            \n                        \n\n                \n                    \n                        The user email \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:24\n                            \n                        \n\n                \n                    \n                        The loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lockForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lockForm:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:14\n                            \n                        \n\n                \n                    \n                        To ensure the user only sends one request, the form is locked after the request has been sent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { LoaderComponent, NotificationsService, WithLoader } from '@ec.components/ui';\nimport { AuthService } from '../auth.service';\n\n/** Form to send password reset request. */\n@Component({\n  selector: 'ec-password-reset',\n  templateUrl: 'password-reset.component.html'\n})\n\nexport class PasswordResetComponent implements WithLoader {\n  /** To ensure the user only sends one request, the form is locked after the request has been sent */\n  lockForm: boolean;\n  /** The user email */\n  email: string;\n  /** Optional api to be used (if not using sdk.api instance) */\n  @Input() api: PublicAPI;\n  /** Custom placeholder for email field */\n  @Input() placeholder = 'E-Mail Adresse...';\n  /** Event after request was successful */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The loader */\n  @ViewChild(LoaderComponent) loader;\n\n  constructor(public auth: AuthService, public notifications: NotificationsService) {\n  }\n  /** Sends request through AuthService and shows notifications + loader. */\n  reset() {\n    const reset = this.auth.resetPassword(this.email, this.api)\n      .then(() => {\n        this.notifications.emit({\n          type: 'success',\n          title: 'Mail versendet',\n          message: 'Sie haben soeben eine Mail mit weiteren Anweisungen erhalten',\n          sticky: true\n        });\n        this.lockForm = true;\n        this.success.emit();\n      }).catch((error) => {\n        this.notifications.emit({\n          title: 'Fehler beim Passwort zurücksetzen',\n          error,\n          sticky: true\n        });\n        console.log('could not reset password', error);\n      });\n    this.loader.wait(reset);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  Passwort zurücksetzen\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Passwort zurücksetzen'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopComponent.html":{"url":"components/PopComponent.html","title":"component - PopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PopComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/pop/pop.component.ts\n\n\n    \n        Description\n    \n    \n        A Pop is an area of content whose visibility can be toggled.\nIt can be used e.g as dialog, drawer or dialog.\nhttps://components.entrecode.de/ui/pop\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/pop/pop.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                    \n                        If true, .visible is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        Emits the value of visible on change. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. First removes visible and after the delay it removes active. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. First sets active and after the delay it sets visible. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(visible: boolean, emit: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            Shows if not visible, hides if visible. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        visible\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                !this.visible\n                                                        \n\n                                                \n                                                \n                                                        emit\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:24\n                            \n                        \n\n                \n                    \n                        The amount of time between setting active and visible. Defaults to 0. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Pop\nA Pop is not just a modal, but a section of markup that appears (pops) anywhere and with any style on your page.\nUsage\n\n    \n        Close\n    \n    \n        Some body content\n    \n    \n        This is the footer\n    \n\nShow popThe default pop classes can be looked up here.\n\n    \n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PopService } from './pop.service';\n\n/** A Pop is an area of content whose visibility can be toggled.\n * It can be used e.g as dialog, drawer or dialog.\n * https://components.entrecode.de/ui/pop\n * */\n@Component({\n  selector: 'ec-pop',\n  templateUrl: './pop.component.html',\n})\nexport class PopComponent {\n  /** If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  */\n  @Input() active: boolean;\n  /** If true, .visible is set on .ec-pop-container.  */\n  @Input() visible: boolean;\n  /** Emits the value of visible on change. */\n  // tslint:disable-next-line:no-output-rename\n  @Output('toggle') _toggle: EventEmitter = new EventEmitter();\n  /** The amount of time between setting active and visible. Defaults to 0. */\n  delay = 0;\n\n  constructor(protected popService: PopService) {\n  }\n\n  /** Shows if not visible, hides if visible. */\n  public toggle(visible: boolean = !this.visible, emit: boolean = false) {\n    if (!visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n    if (emit) {\n      this._toggle.emit(visible);\n    }\n  }\n\n  /** Shows the pop. First sets active and after the delay it sets visible. */\n  public show() {\n    this.active = true;\n    this.popService.stack.add(this);\n    setTimeout(() => {\n      this.visible = true;\n    }, this.delay);\n  }\n\n  /** Hides the pop. First removes visible and after the delay it removes active. */\n  public hide() {\n    this.visible = false;\n    this.popService.stack.remove(this);\n    if (!this.delay) {\n      return;\n    }\n    setTimeout(() => {\n      this.active = false;\n    }, this.delay);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'PopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PopModule.html":{"url":"modules/PopModule.html","title":"module - PopModule","body":"\n                   \n\n\n\n\n  Modules\n  PopModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\n\nPopComponent\n\nPopComponent\n\n\n\nPopModule\n\nPopModule\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/pop/pop.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PopComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     PopService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    PopComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PopComponent } from './pop.component';\nimport { PopService } from './pop.service';\n\n@NgModule({\n  declarations: [\n    PopComponent\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    PopComponent\n  ],\n  providers: [PopService]\n})\nexport class PopModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PopService.html":{"url":"injectables/PopService.html","title":"injectable - PopService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PopService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/pop/pop.service.ts\n        \n\n            \n                Description\n            \n            \n                Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stack\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/pop/pop.service.ts:9\n                            \n                        \n\n                \n                    \n                            Listens for escape keys and hides latest pop + removes the pop from stack \n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stack:     Collection\n\n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.service.ts:9\n                            \n                        \n\n                \n                    \n                        Stack of current opened pops \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Collection } from '@ec.components/core';\nimport { PopComponent } from './pop.component';\n\n/** Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. */\n@Injectable()\nexport class PopService {\n    /** Stack of current opened pops */\n    stack: Collection = new Collection();\n    /** Listens for escape keys and hides latest pop + removes the pop from stack */\n    constructor() {\n        window.addEventListener('keydown', (event) => {\n            if ((event.keyCode === 27 || event.key === 'Escape') && this.stack.items.length) {\n                const latestPop = this.stack.items[this.stack.items.length - 1];\n                latestPop.hide();\n                this.stack.remove(latestPop);\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceConfig.html":{"url":"injectables/ResourceConfig.html","title":"injectable - ResourceConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ResourceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/resource-config/resource-config.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                base64uuid\n                            \n                            \n                                created\n                            \n                            \n                                get\n                            \n                            \n                                hexColor\n                            \n                            \n                                shortID\n                            \n                            \n                                stringField\n                            \n                            \n                                tagsField\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService, typeConfig: TypeConfigService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-config/resource-config.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            base64uuid\n                            \n                            \n                        \n                    \n                \n                \n                    \nbase64uuid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            regex for base64 uuid \n\n\n                            \n                                Returns :     RegExp\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreated(label: string, symbol: SymbolService)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            returns the config for a created field \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'Date'\n                                                        \n\n                                                \n                                                \n                                                        symbol\n                                                        \n                                                                    SymbolService\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { label: string; sortable: boolean; view: string; display: any; group: any; form: boolean; immuta...\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(relationName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Returns the CrudConfig for the given relation name. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relationName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hexColor\n                            \n                            \n                        \n                    \n                \n                \n                    \nhexColor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            returns the config for a hexColor field \n\n\n                            \n                                Returns :     { label: string; view: string; prefill: string; }\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shortID\n                            \n                            \n                        \n                    \n                \n                \n                    \nshortID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            returns regex for a shortID \n\n\n                            \n                                Returns :     RegExp\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stringField\n                            \n                            \n                        \n                    \n                \n                \n                    \nstringField(label: , filterable: , sortable: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            returns the config for a string field \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        filterable\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                                \n                                                        sortable\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { label: any; view: string; filterable: boolean; sortable: boolean; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagsField\n                            \n                            \n                        \n                    \n                \n                \n                    \ntagsField(label: , list: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            returns the config for a tags field \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        list\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { label: any; view: string; display: (value: any) => any; list: boolean; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            returns regex for a uuid \n\n\n                            \n                                Returns :     RegExp\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:76\n                                \n                            \n                    \n                        \n                                Returns the whole resource-config, which maps a resource relation name to a CrudConfig. \n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DefaultEntryInputComponent } from '@ec.components/data/src/entry-form/default-entry-input.component';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { TypeConfigService } from '../model-config/type-config.service';\n\n@Injectable()\n/** Contains default configurations for all kinds of resources. Used by ResourceList and ResourceForm.  */\nexport class ResourceConfig {\n\n  constructor(private symbol: SymbolService, private typeConfig: TypeConfigService) { }\n  /** Returns the CrudConfig for the given relation name. */\n  get(relationName: string): CrudConfig {\n    if (!this.config[relationName]) {\n      console.error(`${relationName} could not be found in the resource-config.\n      Use one of ${Object.keys(this.config[relationName])}`);\n      return;\n    } // TODO enrich fields with type with type-config?\n    return this.config[relationName];\n  }\n\n  /** returns the config for a created field */\n  created(label = 'Date', symbol: SymbolService) {\n    return {\n      label,\n      sortable: true,\n      view: 'date',\n      display: this.typeConfig.displayDate(),\n      group: this.typeConfig.groupDate(),\n      form: false,\n      immutable: true\n    }\n  };\n  /** returns the config for a hexColor field */\n  hexColor() {\n    return {\n      label: '#',\n      view: 'color',\n      prefill: '#ffffff'\n    }\n  };\n  /** returns the config for a tags field */\n  tagsField(label, list = true) {\n    return {\n      label,\n      view: 'tags',\n      display: (value) => value || [],\n      list\n    };\n  }\n  /** returns the config for a string field */\n  stringField(label, filterable = true, sortable = true) {\n    return {\n      label,\n      view: 'string',\n      filterable,\n      sortable\n    };\n  }\n  /** returns regex for a shortID */\n  shortID(): RegExp {\n    return /^[0-9A-Za-z-_]{7,14}$/;\n  }\n  /** returns regex for a uuid */\n  uuid(): RegExp {\n    return /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\n  }\n  /** regex for base64 uuid */\n  base64uuid(): RegExp {\n    return /^[a-zA-Z0-9\\\\-_]{22}$/;\n  }\n\n  /** Returns the whole resource-config, which maps a resource relation name to a CrudConfig. */\n  get config(): { [key: string]: CrudConfig } {\n    return {\n      dataManager: {\n        identifier: 'dataManagerID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        permissions: {\n          post: 'dm-create',\n          put: 'dm::edit',\n          delete: 'dm::delete',\n          get: true\n        },\n        fields: {\n          hexColor: this.hexColor(),\n          shortID: {\n            immutable: true,\n            list: false\n          },\n          title: Object.assign(this.stringField('Name'), { required: true }),\n          description: {\n            label: this.symbol.resolve('field.label.description'),\n            view: 'string',\n            filterable: true\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            view: 'json',\n            list: false,\n            immutable: true\n          },\n          defaultLocale: {\n            list: false,\n            immutable: true\n          },\n          locales: this.tagsField(this.symbol.resolve('field.label.locales'), false),\n          publicAssetRights: Object.assign(\n            this.tagsField(this.symbol.resolve('datamanager.field.label.publicAssetRights'), false),\n            { immutable: true }),\n          rights: Object.assign(this.tagsField('rights', false), { immutable: true }),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      model: {\n        identifier: 'modelID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        fields: {\n          hexColor: this.hexColor(),\n          title: Object.assign(this.stringField('Model'), { required: true }),\n          description: {\n            label: this.symbol.resolve('field.label.description'),\n            view: 'string',\n            filterable: true,\n          },\n          locales: {\n            list: false,\n            prefill: []\n          },\n          fields: {\n            view: 'tags',\n            display: (value) => {\n              return (value || []).map(field => field.title).filter(field => field[0] !== '_')\n            },\n            prefill: []\n          },\n          titleField: {\n            view: 'string',\n            list: false\n          },\n          config: {\n            list: false,\n            view: 'json'\n          },\n          hasEntries: {\n            immutable: true,\n            view: 'boolean'\n          },\n          hooks: {\n            display: (value) => {\n              return (value || []).map(hook => (hook.methods || []).join(', '))\n            },\n            view: 'tags'\n          },\n          policies: {\n            display: (value) => {\n              return (value || []).map(policy => policy.method)\n            },\n            view: 'tags'\n          },\n          sync: {\n            list: false,\n            view: 'json',\n            immutable: true\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      // ec accounts\n      account: {\n        identifier: 'accountID',\n        identifierPattern: this.uuid(),\n        label: 'email',\n        permissions: {\n          get: 'acc:list',\n          put: 'acc:edit:'\n        },\n        fields: {\n          name: this.stringField(this.symbol.resolve('field.label.name')),\n          email: {\n            label: this.symbol.resolve('field.label.email'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          hasPassword: {\n            label: this.symbol.resolve('field.label.password'),\n            view: 'boolean',\n            filterable: true,\n            sortable: true,\n            readOnly: true\n          },\n          hasPendingEmail: {\n            label: this.symbol.resolve('account.field.label.hasPendingEmail'),\n            view: 'boolean',\n            filterable: true,\n            sortable: true,\n            readOnly: true\n          },\n          language: {\n            label: this.symbol.resolve('account.field.label.language'),\n            view: 'string',\n            list: false\n          },\n          openID: {\n            list: false\n          },\n          permissions: this.tagsField(this.symbol.resolve('account.field.label.permissions'), false),\n          groups: {\n            label: this.symbol.resolve('account.field.label.groups'),\n            type: 'groups',\n            input: DefaultEntryInputComponent,\n            list: false,\n            display: (value) => value ? value.map(group => group.name) : []\n          },\n          state: {\n            label: this.symbol.resolve('account.field.label.state')\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dmAccount: {\n        identifier: 'accountID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        permissions: {\n          get: 'acc:list',\n          put: 'acc:edit:'\n        },\n        methods: ['get', 'put', 'delete'],\n        fields: {\n          accountID: {\n            label: this.symbol.resolve('field.label.id'),\n            view: 'string'\n          },\n          email: {\n            label: this.symbol.resolve('field.label.email'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          hasPassword: {\n            label: this.symbol.resolve('dmAccount.field.label.hasPassword'),\n            view: 'boolean',\n            filterable: true,\n            readOnly: true\n          },\n          pending: {\n            label: this.symbol.resolve('dmAccount.field.label.pending'),\n            view: 'boolean',\n            filterable: true,\n            readOnly: true\n          },\n          oauth: {\n            list: false\n          }\n        }\n      },\n      template: {\n        identifier: 'templateID',\n        identifierPattern: this.uuid(),\n        label: 'name',\n        permissions: {\n          post: 'dm-template-create',\n          get: 'dm-template::view'\n        },\n        fields: {\n          name: {\n            label: this.symbol.resolve('template.field.label.template'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          version: {\n            label: this.symbol.resolve('template.field.label.version'),\n            display: this.typeConfig.displayDate(),\n            group: this.typeConfig.groupDate(),\n            form: false\n          }\n        }\n      },\n      app: {\n        identifier: 'appID',\n        identifierPattern: this.uuid(),\n        permissions: {\n          post: 'app-create',\n          delete: 'app::delete',\n          put: 'app::edit'\n        },\n        fields: {\n          hexColor: this.hexColor(),\n          shortID: {\n            label: this.symbol.resolve('field.label.shortID'),\n            list: false\n          },\n          title: {\n            label: this.symbol.resolve('app.field.label.app'),\n            view: 'string',\n            filterable: true,\n            sortable: true,\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      platform: {\n        identifier: 'platformID',\n        identifierPattern: this.uuid(),\n        fields: {\n          title: {\n            label: this.symbol.resolve('platform.field.label.platform'),\n            view: 'string'\n          },\n          platformType: {\n            label: this.symbol.resolve('platform.field.label.platformType'),\n            view: 'string'\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            view: 'json',\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      asset: { // old ec.asset\n        identifier: 'assetID',\n        identifierPattern: this.uuid(),\n        fields: {\n          thumb: {\n            form: false,\n            label: this.symbol.resolve('asset.field.label.thumb'),\n            view: 'preview',\n            resolve: (asset) => {\n              if (asset.type !== 'image') {\n                return '';\n              }\n              return asset.getImageUrl(200);\n            },\n            immutable: true\n          },\n          assetID: {\n            label: 'assetID',\n            list: false,\n            form: false,\n            immutable: true\n          },\n          title: {\n            label: this.symbol.resolve('field.label.title'),\n            view: 'string',\n            sortable: true,\n            filterable: true\n          },\n          files: {\n            label: this.symbol.resolve('asset.field.label.files'),\n            view: 'tag',\n            form: false,\n            display: value => value.length,\n            immutable: true\n          },\n          tags: this.tagsField(this.symbol.resolve('asset.field.label.tags')),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      legacyAsset: { // old public assets\n        identifier: 'assetID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        fields: {\n          thumb: {\n            form: false,\n            label: this.symbol.resolve('asset.field.label.thumb'),\n            view: 'preview',\n            resolve: (asset) => {\n              if (asset.type !== 'image') {\n                return '';\n              }\n              return asset.getImageUrl(200);\n            },\n            immutable: true\n          },\n          assetID: {\n            label: 'assetID',\n            list: false,\n            form: false,\n            immutable: true\n          },\n          title: {\n            label: this.symbol.resolve('field.label.title'),\n            view: 'string',\n            sortable: true,\n            filterable: true\n          },\n          files: {\n            label: this.symbol.resolve('asset.field.label.files'),\n            view: 'tag',\n            form: false,\n            display: value => value.length,\n            immutable: true\n          },\n          tags: this.tagsField(this.symbol.resolve('asset.field.label.tags')),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      // https://doc.entrecode.de/en/develop/resources/dm-assetgroup/\n      assetGroup: {\n        identifier: 'assetGroupID',\n        fields: {\n          assetGroupID: {\n            label: this.symbol.resolve('asset.field.label.assetGroupID'),\n            view: 'string',\n            filterable: true\n          },\n          public: {\n            view: 'boolean',\n            prefill: false\n          },\n          settings: {\n            view: 'json',\n            display: (json) => JSON.stringify(json),\n            prefill: {}\n            /*\n            urlExpiration: string\n            disabledTypes: Array\n            imageSizes: Array\n            thumbSizes: Array\n            */\n          },\n          policies: {\n            view: 'tags',\n            display: (policies) => (policies || []).map(p => p.method),\n            prefill: []\n            /*\n            method: get, put, post, delete\n            user: public, dmUser\n            conditions: JSON or null (https://entrecode.de/schema/dm-assetgroup#definitions/conditions)\n            */\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dmAsset: { // new assets\n        identifier: 'assetID',\n        identifierPattern: this.base64uuid(),\n        label: 'title',\n        fields: {\n          file: {\n            label: this.symbol.resolve('dmAsset.field.label.file'),\n            display: value => value.url,\n            view: 'preview',\n            immutable: true,\n            form: false,\n            list: false\n          },\n          thumb: {\n            form: false,\n            list: true,\n            label: this.symbol.resolve('asset.field.label.thumb'),\n            view: 'preview',\n            resolve: (asset) => {\n              if (asset.type !== 'image' || !asset.thumbnails || !asset.thumbnails.length) {\n                return '';\n              }\n              return asset.thumbnails[0].url;\n            },\n            immutable: true\n          },\n          assetID: {\n            label: this.symbol.resolve('dmAsset.field.label.assetID'),\n            list: false,\n            form: false,\n            immutable: true\n          },\n          title: {\n            label: this.symbol.resolve('field.label.title'),\n            view: 'string',\n            sortable: true,\n            filterable: true\n          },\n          caption: {\n            label: this.symbol.resolve('dmAsset.field.label.caption'),\n            view: 'string'\n          },\n          duplicates: {\n            label: this.symbol.resolve('dmAsset.field.label.duplicates'),\n            view: 'number',\n            list: false,\n            form: false\n          },\n          thumbnails: {\n            label: this.symbol.resolve('dmAsset.field.label.thumbnails'),\n            display: values => values.map(value => value.url),\n            list: false,\n            form: false\n          },\n          type: {\n            label: this.symbol.resolve('dmAsset.field.label.type'),\n            view: 'string',\n            immutable: true,\n            form: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dmClient: {\n        identifier: 'clientID',\n        fields: {\n          clientID: {\n            label: this.symbol.resolve('client.field.label.clientID'),\n            view: 'string'\n          },\n          callbackURL: {\n            label: this.symbol.resolve('client.field.label.callbackURL'),\n            view: 'string',\n          },\n          tokenMethod: this.tagsField(this.symbol.resolve('client.field.label.tokenMethod')),\n          disableStrategies: this.tagsField(this.symbol.resolve('client.field.label.disableStrategies')),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      role: {\n        identifier: 'roleID',\n        identifierPattern: this.uuid(),\n        label: 'name',\n        fields: {\n          name: {\n            label: this.symbol.resolve('field.label.name'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          label: {\n            label: this.symbol.resolve('field.label.label'),\n            view: 'string'\n          },\n          accounts: {\n            label: this.symbol.resolve('role.field.label.accounts'),\n            type: 'accounts',\n            prefill: [],\n            list: false,\n            display: (value) => value ? value.title : '',\n            input: AdminEntryInputComponent,\n            filterPopClass: 'ec-pop_dialog'\n          },\n          addRegistered: {\n            label: this.symbol.resolve('role.field.label.addRegistered'),\n            view: 'boolean'/* ,\n        prefill: false */\n          },\n          addUnregistered: {\n            label: this.symbol.resolve('role.field.label.addUnregistered'),\n            view: 'boolean'/* ,\n        prefill: false */\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      codeSource: {\n        identifier: 'codeSourceID',\n        identifierPattern: this.uuid(),\n        fields: {\n          codeSourceID: {\n            label: this.symbol.resolve('field.label.id'),\n          },\n          codeSourceType: {\n            label: this.symbol.resolve('field.label.type'),\n            view: 'tag'\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dataSource: {\n        identifier: 'dataSourceID',\n        identifierPattern: this.uuid(),\n        fields: {\n          dataSourceID: {\n            label: this.symbol.resolve('field.label.id'),\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      target: {\n        identifier: 'targetID',\n        identifierPattern: this.uuid(),\n        fields: {\n          targetType: {\n            label: this.symbol.resolve('field.label.type'),\n            view: 'tag'\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      group: {\n        identifier: 'groupID',\n        identifierPattern: this.uuid(),\n        label: 'name',\n        fields: {\n          name: {\n            label: this.symbol.resolve('field.label.name'),\n          },\n          permissions: {\n            view: 'tags',\n            display: (value) => value || [],\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceCrudComponent.html":{"url":"components/ResourceCrudComponent.html","title":"component - ResourceCrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceCrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/resource-crud/resource-crud.component.ts\n\n\n    \n        Description\n    \n    \n        The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-crud\n            \n\n\n\n\n            \n                templateUrl\n                ./resource-crud.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                pop\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                getPopClass\n                            \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                initMethods\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                config\n                            \n                            \n                                relation\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                createClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, notificationService: NotificationsService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-crud/resource-crud.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                            \n                            Type:    Core\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                            \n                            Type:    CrudConfig\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection that should be used \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Emits when a list element is clicked \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        createClicked\n                    \n                    \n                        Output that is nexted when pressing the create button \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Emits when the selection has changed \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:48\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPopClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPopClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Returns the pop class that should be used, either uses config.popClass or defaults to ec-pop_drawer-left. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitMethods()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Called on list columnClicked \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     ResourceListComponent\n\n                    \n                \n                    \n                        \n                            Type :     ResourceListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:40\n                            \n                        \n\n                \n                    \n                        The ResourceListComponent inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:44\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     ResourcePopComponent\n\n                    \n                \n                    \n                        \n                            Type :     ResourcePopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:42\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core/src/selection/selection';\nimport { LoaderComponent } from '@ec.components/ui/src/loader/loader.component';\nimport { LoaderService } from '@ec.components/ui/src/loader/loader.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport 'rxjs/add/operator/switchMap';\nimport { merge } from 'rxjs/observable/merge';\nimport { AuthService } from '../auth/auth.service';\nimport { WithLoader } from '@ec.components/ui';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport Core from 'ec.sdk/lib/Core';\nimport { ResourceFormComponent } from '../resource-form/resource-form.component';\n\n/** The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * */\n@Component({\n    selector: 'ec-resource-crud',\n    templateUrl: './resource-crud.component.html',\n})\nexport class ResourceCrudComponent implements OnInit, WithLoader {\n    /** The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors */\n    @Input() api: Core; // sdk api connector\n    /** The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) */\n    @Input() relation: string;\n    /** CrudConfig for customization of the crud's UI.*/\n    @Input() config: CrudConfig = {};\n    /** The selection that should be used */\n    @Input() selection: Selection;\n    /** The ResourceListComponent inside the template. */\n    @ViewChild(ResourceListComponent) list: ResourceListComponent;\n    /** The Pop inside the template. */\n    @ViewChild(ResourcePopComponent) pop: ResourcePopComponent;\n    /** The lists loader */\n    @ViewChild(LoaderComponent) loader: LoaderComponent;\n    /** Emits when a list element is clicked */\n    @Output() columnClicked: EventEmitter = new EventEmitter();\n    /** Emits when the selection has changed */\n    @Output() selected: EventEmitter = new EventEmitter();\n    /** Output that is nexted when pressing the create button */\n    @Output() createClicked: EventEmitter = new EventEmitter();\n\n    constructor(private sdk: SdkService,\n        private auth: AuthService,\n        private loaderService: LoaderService,\n        private notificationService: NotificationsService,\n        @Optional() public router: Router,\n        @Optional() public route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.initMethods();\n    }\n\n    initMethods() {\n        if (!this.relation) {\n            return;\n        }\n        this.auth.getAllowedResourceMethods(this.relation, {}, this.config.methods)\n            .then((methods) => {\n                this.config.methods = methods;\n            });\n    }\n\n    /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n    public hasMethod(method: string) {\n        return this.config.methods && this.config.methods.indexOf(method) !== -1;\n    }\n\n    /** Called on list columnClicked */\n    select(item) {\n        if (!item) {\n            return;\n        }\n        if (this.columnClicked.observers.length) {\n            this.columnClicked.emit(item);\n            return;\n        }\n        this.pop.edit(item.getBody());\n        // TODO: check CrudComponent#loadEntry for further inspiration\n    }\n\n    /** Returns the pop class that should be used, either uses config.popClass or defaults to ec-pop_drawer-left. */\n    getPopClass() {\n        return this.config && this.config.popClass ? this.config.popClass : 'ec-pop_dialog';\n    }\n    /** Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. */\n    create() {\n        if (this.createClicked.observers.length) {\n            this.createClicked.next();\n        } else if (this.pop) {\n            this.pop.create()\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{config?.createLabel}}\n                \n                    \n                \n            \n            \n                \n            \n        \n    \n    \n        \n    \n    \n    \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{config?.createLabel}}                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceCrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceDeletePopComponent.html":{"url":"components/ResourceDeletePopComponent.html","title":"component - ResourceDeletePopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceDeletePopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/resource-delete-pop/resource-delete-pop.component.ts\n\n\n    \n        Description\n    \n    \n        This component can be used to delete all kinds of resources with a confirmation pop.\n\nLÖSCHEN!\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-delete-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./resource-delete-pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmInput\n                            \n                            \n                                    Public\n                                loader\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                pop\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDelete\n                            \n                            \n                                confirm\n                            \n                            \n                                delete\n                            \n                            \n                                hide\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                no\n                            \n                            \n                                question\n                            \n                            \n                                relation\n                            \n                            \n                                resource\n                            \n                            \n                                safetyWord\n                            \n                            \n                                yes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService, loader: LoaderService, resourceService: ResourceService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:36\n                            \n                        \n\n                \n                    \n                            Injects SymbolService and LoaderService \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        no\n                    \n                    \n                        The label for canceling \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                    \n                        The question inside the pop \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The relation where it happened \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resource\n                    \n                    \n                        The resource to delete \n\n                            \n                            Type:    Resource\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        safetyWord\n                    \n                    \n                        If given, an input will be shown that expects the string to be entered before being able to press delete \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        yes\n                    \n                    \n                        The label for confirmation \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleted\n                    \n                    \n                        Output that is after the deletion was successful. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirm\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfirm(resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            The confirm method sets a given resource and shows the confirmation pop. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.resource\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            The delete method calls del() of the given resource. You can also pass a resource to delete directly to set it.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.resource\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \nhide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmInput:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderService\n\n                    \n                \n                    \n                        \n                            Type :     LoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     PopComponent\n\n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:22\n                            \n                        \n\n                \n                    \n                        The pop inside the view. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-delete-pop/resource-delete-pop.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { LoaderService, NotificationsService, PopComponent } from '@ec.components/ui';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { ResourceService } from '../resource-config/resource.service';\n/** This component can be used to delete all kinds of resources with a confirmation pop.\n *\n * ```html\n * \n * LÖSCHEN!\n * ```\n *\n */\n@Component({\n    selector: 'ec-resource-delete-pop',\n    templateUrl: './resource-delete-pop.component.html',\n})\nexport class ResourceDeletePopComponent {\n    /* The current value of the confirmation input */\n    confirmInput = '';\n    /** The pop inside the view. */\n    @ViewChild(PopComponent) pop: PopComponent;\n    /** The question inside the pop */\n    @Input() question: string;\n    /** The label for confirmation */\n    @Input() yes: string;\n    /** The label for canceling */\n    @Input() no: string;\n    /** The resource to delete */\n    @Input() resource: Resource;\n    /** The relation where it happened */\n    @Input() relation: string;\n    /** If given, an input will be shown that expects the string to be entered before being able to press delete */\n    @Input() safetyWord: string;\n    /** Output that is after the deletion was successful. */\n    @Output() deleted: EventEmitter = new EventEmitter();\n    /** Injects SymbolService and LoaderService */\n    constructor(public symbol: SymbolService,\n        public loader: LoaderService,\n        private resourceService: ResourceService,\n        public notificationService: NotificationsService) { }\n    /** The delete method calls del() of the given resource. You can also pass a resource to delete directly to set it.  */\n    delete(resource: Resource = this.resource) {\n        if (!resource) {\n            console.error('cannot delete: no resource given!');\n            return;\n        }\n        if (!this.canDelete()) {\n            console.warn('not confirmed!');\n            return;\n        }\n        const deletion = this.resourceService.del(this.relation, this.resource)\n            .then(res => {\n                this.notificationService.emit({\n                    title: this.symbol.resolve('success.delete'),\n                    type: 'success',\n                });\n                this.hide()\n                this.deleted.next(res);\n            }).catch(error => {\n                this.notificationService.emit({\n                    title: this.symbol.resolve('error.delete'),\n                    error\n                });\n            });\n        this.loader.wait(deletion);\n    }\n\n    canDelete() {\n        return !this.safetyWord || this.safetyWord === this.confirmInput;\n    }\n    /** The confirm method sets a given resource and shows the confirmation pop. */\n    confirm(resource: Resource = this.resource) {\n        this.resource = resource;\n        this.pop.show();\n    }\n\n    hide() {\n        this.pop.hide();\n        this.confirmInput = '';\n    }\n}\n\n    \n\n    \n        \n    {{question||((!safetyWord?'resource.delete.question':'resource.delete.safety') | symbol)}}\n    \"{{safetyWord}}\"\n        \n    \n    \n        {{yes||((!safetyWord?'resource.delete.yes':'resource.delete.confirm') | symbol)}}\n    \n    \n        {{no||((!safetyWord?'resource.delete.no':'resource.delete.cancel') | symbol)}}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{question||((!safetyWord?\\'resource.delete.question\\':\\'resource.delete.safety\\') | symbol)}}    \"{{safetyWord}}\"                        {{yes||((!safetyWord?\\'resource.delete.yes\\':\\'resource.delete.confirm\\') | symbol)}}                {{no||((!safetyWord?\\'resource.delete.no\\':\\'resource.delete.cancel\\') | symbol)}}    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceDeletePopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourceModule.html":{"url":"modules/ResourceModule.html","title":"module - ResourceModule","body":"\n                   \n\n\n\n\n  Modules\n  ResourceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_imports\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/resource/resource.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ResourceCrudComponent\n                            \n                            \n                                ResourceDeletePopComponent\n                            \n                            \n                                ResourceFormComponent\n                            \n                            \n                                ResourceListComponent\n                            \n                            \n                                ResourcePopComponent\n                            \n                            \n                                ResourceSelectComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ResourceListComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ResourceConfig\n                            \n                            \n                                     ResourceService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ResourceCrudComponent\n                            \n                            \n                                    ResourceDeletePopComponent\n                            \n                            \n                                    ResourceFormComponent\n                            \n                            \n                                    ResourceListComponent\n                            \n                            \n                                    ResourcePopComponent\n                            \n                            \n                                    ResourceSelectComponent\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { UiModule } from '@ec.components/ui';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourceFormComponent } from '../resource-form/resource-form.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport { ResourceCrudComponent } from '../resource-crud/resource-crud.component';\nimport { ResourceDeletePopComponent } from '../resource-delete-pop/resource-delete-pop.component';\nimport { ResourceSelectComponent } from '../resource-select/resource-select.component';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\n\n@NgModule({\n  entryComponents: [\n    ResourceListComponent,\n  ],\n  declarations: [\n    ResourceListComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n  ],\n  exports: [\n    UiModule,\n    SdkModule,\n    ResourceListComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n  ],\n  providers: [\n    ResourceService,\n    ResourceConfig,\n  ],\n})\nexport class ResourceModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceService.html":{"url":"injectables/ResourceService.html","title":"injectable - ResourceService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/resource-config/resource.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changes\n                            \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                matches\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, config: ResourceConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-config/resource.service.ts:36\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object, setEmptyStringsToNull: , deleteNullProperties: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:102\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        setEmptyStringsToNull\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                                \n                                                        deleteNullProperties\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(relation: string, value: Object, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:120\n                            \n                        \n\n\n                \n                    \n                            Creates a new resource with the given value for the given relation. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(relation: string, resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:131\n                            \n                        \n\n\n                \n                    \n                            deletes the given resource and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:96\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatches(change: Update, filter: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Gives true if the given change fits all property values of the filter. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        change\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(item: Item, value: Object, relation: string, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Saves the given resource with the given value. If the resource is not yet existing,\nit will be created.Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(relation: , resource: Resource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            Updates the given resource with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changes:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:36\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an resource is created or updated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ResourceConfig\n\n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:39\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/filter';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\nimport { ResourceConfig } from './resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Update {\n    /** The relation that has been updated. */\n    relation: string | string[],\n    /** The relevant resource. */\n    resource?: Resource,\n    /** The list where it happened. */\n    list?: ResourceList,\n    /** The type of update. (create/read/update/delete) */\n    type?: 'post' | 'get' | 'put' | 'delete',\n    /** An identifier associated with the update e.g. an entryID */\n    identifier?: string,\n    /** If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) */\n    broadcast?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class ResourceService {\n    /** The changes event is emitted everytime an resource is created or updated. */\n    public changes: Subject = new Subject();\n\n    /** Injects sdk */\n    constructor(private sdk: SdkService, public config: ResourceConfig) {\n        /* this.sdk.changesEnvironment.subscribe(env =>\n            this.changes.next({\n                relation: 'environment',\n                broadcast: true\n            })) */\n    }\n\n    /** Gives true if the given change fits all property values of the filter. */\n    matches(change: Update, filter: Update): boolean {\n        return change.broadcast || Object.keys(filter)\n            .reduce((match, key) => match && change[key] === filter[key], true);\n    }\n\n    /** Yields an observable that emits for all updates that match the given filter */\n    change(filter?: Update): Observable {\n        if (!filter) {\n            return this.changes.asObservable();\n        }\n        return this.changes.asObservable().filter((change: Update) => this.matches(change, filter));\n    }\n\n    /** Saves the given resource with the given value. If the resource is not yet existing,\n     * it will be created.Otherwise it will be updated. */\n    save(item: Item, value: Object, relation: string, api: Core): Promise {\n        const resource = item.getBody();\n        if (item.config.onSave) {\n            return Promise.resolve(item.config.onSave(item, value))\n        }\n        item.deleteImmutableProperties(value);\n        if (resource && resource.save) {\n            return this.update(relation, resource, value);\n        }\n        return this.create(relation, value, api)\n            .then((_resource) => {\n                return _resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** Updates the given resource with the new value. Fires the \"update\" change. */\n    update(relation, resource: Resource, value: Object): Promise {\n        const oldValues = {}; // save old values\n        Object.keys(value).forEach((key) => oldValues[key] = resource[key]);\n        Object.assign(resource, this.clean(value, false, false)); // assign new form values\n        return resource.save().then((_resource) => {\n            this.changes.next({ relation, resource: _resource, type: 'put' });\n            return _resource;\n        })\n            .catch((err) => {\n                Object.assign(resource, this.clean(oldValues, false, false)); // fall back to old values\n                return Promise.reject(err);\n            });\n    }\n\n    /** Returns true if the given field key is an immutable system property */\n    isImmutableProperty(key: string) {\n        return key[0] === '_' ||\n            ['id', 'created', 'modified'].indexOf(key) !== -1;\n    }\n\n    /** Removes all null or undefined values from the given object */\n    clean(value: Object, setEmptyStringsToNull = true, deleteNullProperties = true): Object {\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                if (setEmptyStringsToNull && value[key] === '') { // clear empty strings\n                    value[key] = null;\n                }\n                if (deleteNullProperties && value[key] === null) {\n                    delete value[key];\n                }\n                if (this.isImmutableProperty(key)) { // filter system properties\n                    delete value[key];\n                }\n            }\n        }\n        return value;\n    }\n\n    /** Creates a new resource with the given value for the given relation. Fires the \"create\" change. */\n    create(relation: string, value: Object, api: Core): Promise {\n        return api.create(relation, this.clean(value))\n            .then((resource: Resource) => {\n                this.changes.next({ relation, resource, type: 'post' });\n                return resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** deletes the given resource and emits the \"delete\" change. */\n    del(relation: string, resource: Resource) {\n        return resource.del().then((res) => {\n            this.changes.next({ relation, resource, type: 'delete' });\n            return res;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafeHtmlPipe.html":{"url":"pipes/SafeHtmlPipe.html","title":"pipe - SafeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  SafeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/vc/src/safe-html.pipe.ts\n        \n\n            \n                Description\n            \n            \n                trusts the incoming html as safe. uses bypassSecurityTrustHtml \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        safeHtml\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/vc/src/safe-html.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n                            Transforms the html value \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n/** trusts the incoming html as safe. uses bypassSecurityTrustHtml */\n@Pipe({ name: 'safeHtml' })\nexport class SafeHtmlPipe implements PipeTransform {\n  /** Injects DomSanitizer */\n  constructor(private sanitized: DomSanitizer) {\n  }\n  /** Transforms the html value */\n  transform(value) {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SdkModule.html":{"url":"modules/SdkModule.html","title":"module - SdkModule","body":"\n                   \n\n\n\n\n  Modules\n  SdkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\n\nSdkService\n\nSdkService\n\n\n\nSdkModule\n\nSdkModule\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/sdk/sdk.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     SdkService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SdkService } from './sdk.service';\n\n@NgModule({\n  entryComponents: [],\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    SdkService\n  ],\n})\nexport class SdkModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SdkService.html":{"url":"injectables/SdkService.html","title":"injectable - SdkService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SdkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/sdk/sdk.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n{\nprovide: \"environment\",\nuseValue: {\ndatamanagerID: \"83cc6374\",\nenvironment: \"stage\",\nclientID: \"rest\"\n}\n}The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _api\n                            \n                            \n                                    Public\n                                accounts\n                            \n                            \n                                apiResolved\n                            \n                            \n                                    Public\n                                changesEnvironment\n                            \n                            \n                                    Public\n                                datamanager\n                            \n                            \n                                    Public\n                                environment\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                roots\n                            \n                            \n                                    Private\n                                schemaRequests\n                            \n                            \n                                    Public\n                                session\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAccount\n                            \n                            \n                                getSchema\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                noApi\n                            \n                            \n                                useDatamanager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: )\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/sdk/sdk.service.ts:75\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:127\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.accounts\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSchema\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSchema(model: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:116\n                            \n                        \n\n\n                \n                    \n                            Returns a schema for the given model. Caches the promise. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init(environment: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Creates all the API instances and determines the current user. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noApi\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoApi(api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useDatamanager\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseDatamanager(shortID: string, environment: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:106\n                            \n                        \n\n\n                \n                    \n                            Uses the given datamanager and optional short id to init api. \nIf you set \"datamanagerID\" in your environment, this method is called automatically. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        shortID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        environment\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _api:     PublicAPI\n\n                    \n                \n                    \n                        \n                            Type :     PublicAPI\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:48\n                            \n                        \n\n                \n                    \n                        Current Public API instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accounts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accounts:     Accounts\n\n                    \n                \n                    \n                        \n                            Type :     Accounts\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:46\n                            \n                        \n\n                \n                    \n                        Current Accounts instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiResolved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        apiResolved:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:31\n                            \n                        \n\n                \n                    \n                        Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changesEnvironment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changesEnvironment:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:50\n                            \n                        \n\n                \n                    \n                        Emits when the env changes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datamanager\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datamanager:     DataManager\n\n                    \n                \n                    \n                        \n                            Type :     DataManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:64\n                            \n                        \n\n                \n                    \n                        Current DataManager instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:75\n                            \n                        \n\n                \n                    \n                        Promise that should be used before using any auth related stuff:\nthis.sdk.ready.then(account => {});\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roots\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roots:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:33\n                            \n                        \n\n                \n                    \n                        Collects different datamanager root instances \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            schemaRequests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        schemaRequests:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:68\n                            \n                        \n\n                \n                    \n                        Pending schema requests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     Session\n\n                    \n                \n                    \n                        \n                            Type :     Session\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:44\n                            \n                        \n\n                \n                    \n                        Current Session instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     AccountResource\n\n                    \n                \n                    \n                        \n                            Type :     AccountResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:66\n                            \n                        \n\n                \n                    \n                        Current User \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n\n                \n                    \n                        getroot()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/sdk/sdk.service.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/sdk/sdk.service.ts:52\n                                \n                            \n                    \n                        \n                                getter for api. Throws error if no api present. \n\n\n                                \n                                    Returns :     PublicAPI\n\n                                \n                        \n                    \n\n                \n                    \n                        setapi(api: )\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/sdk/sdk.service.ts:59\n                                \n                            \n                    \n                        \n                                Sets the public api \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            api\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport Accounts from 'ec.sdk/lib/Accounts';\nimport Core, { environment as env } from 'ec.sdk/lib/Core';\nimport DataManager from 'ec.sdk/lib/DataManager';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport Session from 'ec.sdk/lib/Session';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport { Subject } from 'rxjs/Subject';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class SdkService {\n  /** Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) */\n  apiResolved: boolean;\n  /** Collects different datamanager root instances */\n  roots: { [id: string]: Promise } = {};\n  get root(): Promise {\n    if (!this._api) {\n      throw new Error('no api');\n    }\n    if (!this.roots[this._api.dataManagerID]) {\n      this.roots[this._api.dataManagerID] = this.ready.then(() => this.datamanager.dataManager(this._api.dataManagerID));\n    }\n    return this.roots[this._api.dataManagerID];\n  };\n  /** Current Session instance */\n  public session: Session;\n  /** Current Accounts instance */\n  public accounts: Accounts;\n  /** Current Public API instance */\n  public _api: PublicAPI;\n  /** Emits when the env changes */\n  public changesEnvironment: Subject = new Subject();\n  /** getter for api. Throws error if no api present. */\n  get api(): PublicAPI {\n    if (this.noApi()) {\n      throw new Error('get api: ' + this.noApi());\n    }\n    return this._api;\n  }\n  /** Sets the public api */\n  set api(api: PublicAPI) {\n    this._api = api;\n    this._api.resolve().then(() => this.apiResolved = true);\n  }\n  /** Current DataManager instance */\n  public datamanager: DataManager;\n  /** Current User */\n  public user: AccountResource;\n  /** Pending schema requests */\n  private schemaRequests = {};\n  /** Promise that should be used before using any auth related stuff:\n   *\n   * ```ts\n   * this.sdk.ready.then(account => {});\n   * ```\n   * */\n  public ready: Promise;\n\n  /** Calls init and sets ready to true when finished. */\n  constructor(@Inject('environment') public environment) {\n    this.init();\n  }\n\n  /** Creates all the API instances and determines the current user. */\n  public init(environment = this.environment): Promise {\n    if (environment !== this.environment) {\n      this.changesEnvironment.next(environment);\n    }\n    this.environment = environment;\n    this.session = new Session(environment.environment);\n    if (environment.clientID) {\n      this.session.setClientID(environment.clientID);\n    }\n    this.accounts = new Accounts(environment.environment);\n    if (environment.datamanagerID) {\n      this.useDatamanager(environment.datamanagerID, environment);\n    }\n    this.ready = this.getAccount()\n      .then((user) => {\n        this.user = user;\n        this.datamanager = new DataManager(environment.environment);\n        return this.user;\n      });\n    return this.ready;\n  }\n  /** Uses the given datamanager and optional short id to init api. \n   * If you set \"datamanagerID\" in your environment, this method is called automatically. */\n  useDatamanager(shortID: string, environment = this.environment) {\n    this.apiResolved = false;\n    this._api = new PublicAPI(shortID, environment.environment, true);\n    this._api.resolve().then(api => this.apiResolved = true);\n    if (environment.clientID) {\n      this._api.setClientID(environment.clientID);\n    }\n  }\n\n  /** Returns a schema for the given model. Caches the promise. */\n  getSchema(model, api = this._api) {\n    if (this.noApi(api)) {\n      return Promise.reject('getSchema: ' + this.noApi(api));\n    }\n    if (!this.schemaRequests[model]) {\n      this.schemaRequests[model] = api.getSchema(model);\n    }\n    return this.schemaRequests[model];\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.accounts) {\n    if (this.noApi(api)) {\n      /* return Promise.reject('getAccount: ' + this.noApi(api)); */\n      return Promise.resolve();\n    }\n    return api.me().then((account) => {\n      return account || this._api.me();\n    }).catch((err) => {\n      return null;\n    });\n  }\n\n  noApi(api: Core = this._api) {\n    if (!api) {\n      return `No API was initialized. Either set datamanagerID in your environment or call useDatamanager with your shortID`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchbarComponent.html":{"url":"components/SearchbarComponent.html","title":"component - SearchbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/searchbar/searchbar.component.ts\n\n\n    \n        Description\n    \n    \n        Genereic Searchbar component. Filters a given list its label property (or given property).\nSupports autofocus and arrow navigation. \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                Focus\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-searchbar\n            \n\n\n\n\n            \n                templateUrl\n                searchbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                focusEvent\n                            \n                            \n                                    Public\n                                keyup\n                            \n                            \n                                    Public\n                                paste\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrowNavigation\n                            \n                            \n                                clear\n                            \n                            \n                                filterList\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                preventDefault\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                debounceTime\n                            \n                            \n                                defaultPlaceholder\n                            \n                            \n                                list\n                            \n                            \n                                placeholder\n                            \n                            \n                                property\n                            \n                            \n                                query\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/list/searchbar/searchbar.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                    \n                        If true, the input will be autofocused \n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        debounceTime\n                    \n                    \n                        Delay until search is fired \n\n                        \n                            Default value: 300\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultPlaceholder\n                    \n                    \n                        Default placeholder when no placeholder is given \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The list that should be filtered \n\n                            \n                            Type:    ListComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Searchbar placeholder \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        property\n                    \n                    \n                        Property that should be filtered \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        query\n                    \n                    \n                        The input query that should be prefilled \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Output that emits when enter is pressed on a selected item \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrowNavigation\n                            \n                            \n                        \n                    \n                \n                \n                    \narrowNavigation(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            called on keydown. if arrow keys are pressed, toggle selection of next/prev elements of list \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            clears the input query \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterList\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilterList(value: , paste: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:87\n                            \n                        \n\n\n                \n                    \n                            Filters the list by the given value, either uses property or list.config.label.\nIf paste is true and the value matches the list.config.identifierPattern,\nselect is emitted immediately with a pseudo item containing the value as item identifier. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        paste\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            After the view is ready, the searchbar needs to be focused (if autofocus is true) \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preventDefault\n                            \n                            \n                        \n                    \n                \n                \n                    \npreventDefault(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            prevents the event default and disables propagation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            focusEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        focusEvent:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:29\n                            \n                        \n\n                \n                    \n                        The event that focuses the input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keyup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keyup:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:33\n                            \n                        \n\n                \n                    \n                        Subject that is triggered on keyup \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            paste\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paste:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:35\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when something is pasted \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/searchbar/searchbar.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Item } from '@ec.components/core';\nimport { ListComponent } from '@ec.components/ui';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport { Subject } from 'rxjs/Subject';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { Focus } from '../../utility/focus/focus.interface';\n\n/** Genereic Searchbar component. Filters a given list its label property (or given property).\n * Supports autofocus and arrow navigation. */\n@Component({\n  selector: 'ec-searchbar',\n  templateUrl: 'searchbar.component.html',\n})\n\nexport class SearchbarComponent implements AfterViewInit, Focus {\n  /** Searchbar placeholder */\n  @Input() placeholder: string;\n  /** Default placeholder when no placeholder is given */\n  @Input() defaultPlaceholder: string;\n  /** The input query that should be prefilled */\n  @Input() public query: string;\n  /** Property that should be filtered */\n  @Input() property: string;\n  /** If true, the input will be autofocused */\n  @Input() autofocus = true;\n  /** The event that focuses the input */\n  public focusEvent: EventEmitter = new EventEmitter();\n  /** Delay until search is fired */\n  @Input() debounceTime = 300;\n  /** Subject that is triggered on keyup */\n  public keyup: Subject = new Subject();\n  /** Subject that is nexted when something is pasted */\n  public paste: Subject = new Subject();\n  /** The list that should be filtered */\n  @Input() list: ListComponent;\n  /** Output that emits when enter is pressed on a selected item */\n  @Output() selected: EventEmitter = new EventEmitter();\n\n  constructor(public route: ActivatedRoute, public symbol: SymbolService) {\n    this.defaultPlaceholder = this.symbol.resolve('searchbar.placeholder');\n    const paste = this.paste.asObservable();\n    this.paste.asObservable()\n      .subscribe((e) => {\n        const pasted = (e.clipboardData).getData('text');\n        if (this.filterList(pasted, true)) {\n          this.preventDefault(e);\n        }\n      });\n\n    this.keyup.asObservable().debounceTime(this.debounceTime)\n      .pipe(distinctUntilChanged())\n      .subscribe(value => this.filterList(value));\n\n    this.route.params\n      .subscribe(() => {\n        if (this.autofocus) {\n          this.focusEvent.emit(true);\n        }\n        this.clear();\n      })\n  }\n\n  /** clears the input query */\n  clear() {\n    this.query = '';\n  }\n\n  /** prevents the event default and disables propagation */\n  preventDefault(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n\n  /** After the view is ready, the searchbar needs to be focused (if autofocus is true) */\n  ngAfterViewInit() {\n    if (this.autofocus) {\n      this.focusEvent.emit(true);\n    }\n  }\n\n  /** Filters the list by the given value, either uses property or list.config.label.\n   * If paste is true and the value matches the list.config.identifierPattern,\n   * select is emitted immediately with a pseudo item containing the value as item identifier. */\n  filterList(value, paste = false) {\n    if (!this.list || !this.list.list) {\n      console.warn('could not search: no list given!', this.list);\n      return;\n    }\n    if (!this.property && !this.list.config.label) {\n      console.warn('cannot filter list: no property set and no label property configured');\n      return;\n    }\n    if (paste && this.list.config.identifierPattern) {\n      if (value.match(this.list.config.identifierPattern)) {\n        this.selected.emit(new Item({\n          [this.list.config.identifier]: value,\n        }, this.list.config));\n        /* return true; */\n      }\n    }\n    this.list.list.filter(this.property || this.list.config.label, value);\n  }\n\n  /** called on keydown. if arrow keys are pressed, toggle selection of next/prev elements of list */\n  arrowNavigation(e) {\n    if (!this.list || !this.list.selection) {\n      return;\n    }\n    switch (e.key) {\n      case 'ArrowUp':\n        this.list.selectPrev();\n        e.preventDefault();\n        break;\n      case 'ArrowDown':\n        this.list.selectNext();\n        e.preventDefault();\n        break;\n      case 'Enter':\n        if (!this.list.selection.isEmpty()) {\n          this.selected.emit(this.list.selection.items[0]);\n        }\n        break;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'SearchbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SelectModule.html":{"url":"modules/SelectModule.html","title":"module - SelectModule","body":"\n                   \n\n\n\n\n  Modules\n  SelectModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_SelectComponent_providers\n\n\n\ncluster_SelectModule_imports\n\n\n\ncluster_SelectModule_exports\n\n\n\n\nSelectComponent\n\nSelectComponent\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->SelectComponent -->\n\n{\n    : , : (() => ), : true\n}->SelectComponent\n\n\n\n\n\nListModule\n\nListModule\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/select/select.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                SelectComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ListModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ListModule\n                            \n                            \n                                    SelectComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DndModule } from 'ngx-drag-drop';\nimport { ListModule } from '../list/list.module';\nimport { SelectComponent } from './select.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ListModule,\n    DndModule\n  ],\n  declarations: [SelectComponent],\n  exports: [\n    ListModule,\n    SelectComponent,\n    DndModule\n  ],\n  providers: [],\n})\nexport class SelectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SlotHostDirective.html":{"url":"directives/SlotHostDirective.html","title":"directive - SlotHostDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  SlotHostDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/io/slot-host.directive.ts\n        \n\n            \n                Description\n            \n            \n                The field host is a helper to load components inside its view container.\nsee https://angular.io/guide/dynamic-component-loader\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ec-slot-host]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/slot-host.directive.ts:9\n                            \n                        \n\n                \n                    \n                            The constructor exposes the viewContainer that is used to load components into from outside.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainerRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/slot-host.directive.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from '@angular/core';\n\n/** The field host is a helper to load components inside its view container.\n * see https://angular.io/guide/dynamic-component-loader\n * */\n@Directive({\n  selector: '[ec-slot-host]',\n})\nexport class SlotHostDirective {\n  /** The constructor exposes the viewContainer that is used to load components into from outside.*/\n  constructor(public viewContainerRef: ViewContainerRef) {\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sorter.html":{"url":"classes/Sorter.html","title":"class - Sorter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sorter\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/sorter/sorter.ts\n        \n\n            \n                Description\n            \n            \n                The Sorter is a singleton that handles all kinds of sorting operations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sortType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getAlgorithm\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sortType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortType:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'string': sortString,\n    'number': sortNumber,\n    'boolean': sortBoolean\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/sorter/sorter.ts:25\n                            \n                        \n\n                \n                    \n                        Contains sorting methods for different value types. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getAlgorithm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAlgorithm(items: Array>, property?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/sorter/sorter.ts:32\n                            \n                        \n\n\n                \n                    \n                            Returns the sorting algorithm for the given item array. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sort(items: Array>, property?: string, desc?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/sorter/sorter.ts:62\n                            \n                        \n\n\n                \n                    \n                            Sorts a given Array of items after a given property.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Array of arbitrary content.\n\n                                                        \n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional property to sort after (For Objects)\n\n                                                        \n                                                \n                                                \n                                                        desc\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional Flag that will reverse sort the result (descending).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Sorter\nThe Sorter is a static class that acts as a helper to sort different primitive types. See the tests for example usage.\n\n    \n\n    \n        import { Item } from '../item/item';\n\n/** Used for natural sorting of strings */\nconst collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n\n/** Sorts strings (naturally) */\nexport function sortString(a, b) {\n  return collator.compare(a, b);\n}\n\n/** Sorts numbers */\nexport function sortNumber(a, b) {\n  return a - b;\n}\n\n/** Sorts booleans */\nexport function sortBoolean(a, b) {\n  return a ? -1 : 1;\n}\n\n/** The Sorter is a singleton that handles all kinds of sorting operations. */\nexport abstract class Sorter {\n\n  /** Contains sorting methods for different value types. */\n  static sortType = {\n    'string': sortString,\n    'number': sortNumber,\n    'boolean': sortBoolean\n  };\n\n  /** Returns the sorting algorithm for the given item array. */\n  private static getAlgorithm(items: Array>, property?: string): (a, b) => number {\n    if (!items.length) {\n      return;\n    }\n    if (property && !items\n      .reduce((has, item) => has && item.sort(property) !== undefined, true)) {\n      console.warn('cannot sort property \"' + property + '\" because not all items have that property', items);\n      return;\n    }\n    const types = items\n      .map(item => typeof item.sort(property))\n      .filter((item, index, _items) => _items.indexOf(item) === index);\n    if (types.length > 1) {\n      console.warn('cannot sort items because they contain multiple types:', types);\n      return;\n    }\n    if (!this.sortType[types[0]]) {\n      console.warn('cannot sort items because no algorithm was found for type', types[0]);\n      return;\n    }\n    return this.sortType[types[0]];\n  }\n\n  /** Sorts a given Array of items after a given property.\n   * @param items Array of arbitrary content.\n   * @param property Optional property to sort after (For Objects)\n   * @param desc Optional Flag that will reverse sort the result (descending).\n   * @param resolve Optional resolve function to expose relevant the part of object that contains\n   *   the given property. */\n\n  static sort(items: Array>, property?: string, desc?: boolean): Array {\n    const algorithm = this.getAlgorithm(items, property);\n    if (!algorithm) {\n      return;\n    }\n    items.sort((a, b) => {\n      if (!property) {\n        return algorithm(a.resolve(), b.resolve());\n      }\n      return algorithm(a.sort(property), b.sort(property));\n    });\n    if (desc) {\n      items.reverse();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Symbol.html":{"url":"interfaces/Symbol.html","title":"interface - Symbol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Symbol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.interface.ts\n        \n\n            \n                Description\n            \n            \n                A Symbol is specified with a unique name and an optional string content.  \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name under which the symbol is accessible. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Symbol {\n    /** The name under which the symbol is accessible. */\n    name: string\n    /** Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. */\n    content?: string\n};\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SymbolModule.html":{"url":"modules/SymbolModule.html","title":"module - SymbolModule","body":"\n                   \n\n\n\n\n  Modules\n  SymbolModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_providers\n\n\n\n\nSymbolService\n\nSymbolService\n\n\n\nSymbolModule\n\nSymbolModule\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     SymbolService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SymbolService } from './symbol.service';\nimport { SymbolPipe } from './symbol.pipe';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [SymbolPipe],\n    exports: [SymbolPipe],\n    providers: [SymbolService],\n})\nexport class SymbolModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolPipe.html":{"url":"injectables/SymbolPipe.html","title":"injectable - SymbolPipe","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SymbolPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The symbol pipe translates Symbol names to their content.\n{{ 'entry.saved' | symbol }}See SymbolService for more info about Symbols.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.pipe.ts:21\n                            \n                        \n\n\n                \n                    \n                            Calls SymbolService.resolve with the given name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, Injectable, PipeTransform } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport { SymbolService } from './symbol.service';\n\n/** The symbol pipe translates Symbol names to their content.\n *\n * ```html\n * {{ 'entry.saved' | symbol }}\n * ```\n *\n * See SymbolService for more info about Symbols.\n */\n@Pipe({\n    name: 'symbol'\n})\n@Injectable()\nexport class SymbolPipe implements PipeTransform {\n    /** Depends on the SymbolService */\n    constructor(private symbol: SymbolService) { }\n    /** Calls SymbolService.resolve with the given name */\n    transform(name: string): string {\n        if (!name) {\n            return '';\n        }\n        return this.symbol.resolve(name) || '';\n    }\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolService.html":{"url":"injectables/SymbolService.html","title":"injectable - SymbolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SymbolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register symbols for localization. The default set is de. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registry\n                            \n                            \n                                    Public\n                                sets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                resolve\n                            \n                            \n                                set\n                            \n                            \n                                use\n                            \n                            \n                                useSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/symbol/symbol.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            finds a symbol in the registry by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Symbol\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:36\n                            \n                        \n\n\n                \n                    \n                            resolves a symbols content by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set. Replaces registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useSet\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseSet(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:23\n                            \n                        \n\n\n                \n                    \n                            uses the set with the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registry:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:9\n                            \n                        \n\n                \n                    \n                        The current symbol set that is registered to the service. It will be used to resolve strings from. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sets:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        en, de\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport de from './de';\nimport en from './en';\n/** Service to register symbols for localization. The default set is de. */\n@Injectable()\nexport class SymbolService {\n    /** The current symbol set that is registered to the service. It will be used to resolve strings from. */\n    public registry: Symbol[];\n    public sets: { [key: string]: Symbol[] } = {\n        en, de\n    }\n    constructor() {\n        this.registry = Object.keys(this.sets).length ? this.sets[Object.keys(this.sets)[0]] : [];\n    }\n\n    /** Uses the given symbol set. Replaces registry. */\n    use(symbols: Symbol[]) {\n        this.registry = symbols;\n    }\n\n    /** uses the set with the given key */\n    useSet(key: string) {\n        if (!this.sets[key]) {\n            throw new Error('the symbol set with the key \"' + key + '\" does not exist');\n        }\n        this.use(this.sets[key]);\n    }\n\n    /** finds a symbol in the registry by name */\n    get(name: string): Symbol {\n        return this.registry.find(symbol => symbol.name === name);\n    }\n\n    /** resolves a symbols content by name */\n    resolve(name: string): string {\n        const symbol = this.get(name);\n        if (symbol) {\n            return symbol.content;\n        }\n        return null;\n    }\n\n    /** Uses the given symbol set to enhance the current registry.\n     * All duplicates will be overriden. Non specified symbols will stay in the registry. */\n    set(symbols: Symbol[] = []) {\n        symbols.map(symbol => {\n            const index = this.registry.indexOf(this.get(symbol.name));\n            if (index === -1) {\n                this.registry.push(symbol);\n            } else {\n                this.registry[index] = symbol;\n            }\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabComponent.html":{"url":"components/TabComponent.html","title":"component - TabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/tab/tab.component.ts\n\n\n    \n        Description\n    \n    \n        A Tab is meant to be placed inside TabsComponent \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tab\n            \n\n\n\n\n            \n                templateUrl\n                ./tab.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                route\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                deactivated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/tab/tab.component.ts:21\n                            \n                        \n\n                \n                    \n                            The constructor adds the tab itself to its TabsComponent parent. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                    \n                        The tab's label \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                    \n                        If set, the tab will be selected when the given (relative) route is active. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        If set to true, the tab will be selected at start. \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        activated\n                    \n                    \n                        Output that emits when the tab is activated \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deactivated\n                    \n                    \n                        Output that emits when the tab is deactivated \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activate\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Selects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Deselects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parent:     TabsComponent\n\n                    \n                \n                    \n                        \n                            Type :     TabsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:21\n                            \n                        \n\n                \n                    \n                        The parent TabsComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { TabsComponent } from '../tabs/tabs.component';\n\n/** A Tab is meant to be placed inside TabsComponent */\n@Component({\n  selector: 'ec-tab',\n  templateUrl: './tab.component.html',\n})\nexport class TabComponent {\n  /** The tab's label */\n  @Input() label: string;\n  /** If set to true, the tab will be selected at start. */\n  @Input() selected: boolean;\n  /** If set, the tab will be selected when the given (relative) route is active. */\n  @Input() route: string;\n  /** Output that emits when the tab is activated */\n  @Output() activated: EventEmitter = new EventEmitter();\n  /** Output that emits when the tab is deactivated */\n  @Output() deactivated: EventEmitter = new EventEmitter();\n  /** The parent TabsComponent */\n  parent: TabsComponent;\n\n  /** The constructor adds the tab itself to its TabsComponent parent. */\n  constructor(public el: ElementRef) {\n  }\n  /** Selects the tab and nexts activated */\n  activate() {\n    this.selected = true;\n    this.activated.next();\n  }\n  /** Deselects the tab and nexts activated */\n  deactivate() {\n    this.selected = false;\n    this.deactivated.next();\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/tabs/tabs.component.ts\n\n\n    \n        Description\n    \n    \n        The TabsComponent holds serveral instances of TabComponent.\nhttps://components.entrecode.de/ui/tabs\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tabs\n            \n\n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initTabs\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                select\n                            \n                            \n                                selectByUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/tabs/tabs.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) \n\n                            \n                            Type:    TabComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(tab: TabComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Selects the given tab (Component). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                        \n                                                                    TabComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectByUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectByUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Selects the tab associated with the route present in the given url \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabs:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChildren\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:14\n                            \n                        \n\n                \n                    \n                        The nested Tabs \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Tabs\nThis is how you use Tabs:\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \nTODO:\n\n*ngIf\nSlot for templated Tab Header\n\n\n    \n\n    \n        import { Component, ContentChildren, Input, QueryList, AfterContentInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { TabComponent } from '../tab/tab.component';\n\n/** The TabsComponent holds serveral instances of TabComponent.\n * https://components.entrecode.de/ui/tabs\n*/\n@Component({\n  selector: 'ec-tabs',\n  templateUrl: './tabs.component.html',\n})\nexport class TabsComponent implements AfterContentInit {\n  /** The nested Tabs */\n  @ContentChildren(TabComponent) tabs: QueryList;\n  /** You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) */\n  @Input() selected: TabComponent;\n\n  constructor(private router: Router, private route: ActivatedRoute) {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.selectByUrl(event.url);\n      }\n    });\n  }\n\n  /** Selects the tab associated with the route present in the given url */\n  selectByUrl(url: string) {\n    if (!url || !this.tabs) {\n      return;\n    }\n    const paths = url.split('/');\n    const match = this.tabs.find((tab) => tab.route === paths[paths.length - 1]);\n    if (match) {\n      this.select(match);\n    }\n  }\n\n  initTabs() {\n    this.tabs.forEach((tab) => {\n      tab.parent = this;\n      if (tab.el.nativeElement.getAttribute('selected') !== null) {\n        this.select(tab);\n      }\n    });\n    this.selectByUrl(this.router.url);\n  }\n\n  ngAfterContentInit() {\n    this.initTabs();\n  }\n\n  /** Selects the given tab (Component). */\n  select(tab: TabComponent) {\n    if (this.selected) {\n      this.selected.deactivate();\n    }\n    this.selected = tab;\n    tab.activate();\n    if (tab.route) {\n      this.router.navigate([tab.route], { relativeTo: this.route });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{tab.label}}\n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{tab.label}}                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TinymceComponent.html":{"url":"components/TinymceComponent.html","title":"component - TinymceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TinymceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/tinymce/src/tinymce/tinymce.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps tinymce as a control input.\nhttps://components.entrecode.de/misc/tinymce\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-tinymce\n            \n\n            \n                styleUrls\n                tinymce.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tinymce.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Public\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                update\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                debounce\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in packages/tinymce/src/tinymce/tinymce.component.ts:67\n                            \n                        \n\n                \n                    \n                            Subscribes for changes and propagates them + calling application tick manually :( \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                    \n                        Debounce time for value change processing \n\n                        \n                            Default value: 200\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settings\n                    \n                    \n                        TinyMCE Settings. Get Object.assigned to the default settings \n\n                            \n                            Type:    any\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:63\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        Output that emits when the value has been changed by the user \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:65\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Initializes the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Destroys the editor. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:57\n                            \n                        \n\n                \n                    \n                        The container where the editor is rendered \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:55\n                            \n                        \n\n                \n                    \n                        The current editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => { }\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:127\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:53\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:59\n                            \n                        \n\n                \n                    \n                        Subject that is nexted on editor change \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:67\n                            \n                        \n\n                \n                    \n                        Current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  ApplicationRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  AfterViewInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/debounceTime';\nimport * as tinymce from 'tinymce';\nimport 'tinymce/themes/modern';\nimport 'tinymce/plugins/fullscreen';\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/template';\nimport 'tinymce/plugins/autoresize';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/link';\nimport 'tinymce/plugins/table';\nimport 'tinymce/plugins/visualblocks';\nimport 'tinymce/plugins/autolink';\nimport 'tinymce/plugins/lists';\nimport 'tinymce/plugins/contextmenu';\nimport 'tinymce/plugins/textcolor';\nimport 'tinymce/plugins/colorpicker';\nimport { editorSettings } from './tinymce-settings';\n\n/** Wraps tinymce as a control input.\n * https://components.entrecode.de/misc/tinymce\n*/\n@Component({\n  selector: 'ec-tinymce',\n  templateUrl: './tinymce.component.html',\n  styleUrls: ['./tinymce.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TinymceComponent),\n      multi: true\n    }\n  ]\n})\nexport class TinymceComponent\n  implements AfterViewInit, OnDestroy, ControlValueAccessor {\n  /** Promise that resolves when the editor has been initialized */\n  ready: Promise;\n  /** The current editor instance */\n  public editor: any;\n  /** The container where the editor is rendered */\n  @ViewChild('container') container: ElementRef;\n  /** Subject that is nexted on editor change */\n  update: Subject = new Subject();\n  /** Debounce time for value change processing */\n  @Input() debounce = 200;\n  /** TinyMCE Settings. Get Object.assigned to the default settings */\n  @Input() settings: any = {};\n  /** Output that emits when the value has been changed by the user */\n  @Output() change: EventEmitter = new EventEmitter();\n  /** Current value */\n  public value = '';\n\n  /** Subscribes for changes and propagates them + calling application tick manually :( */\n  constructor(private app: ApplicationRef) {\n    this.update\n      .asObservable()\n      .debounceTime(this.debounce)\n      .subscribe(editor => {\n        this.value = editor.getContent();\n        this.propagateChange(this.value);\n        this.change.emit(this.value);\n        this.app.tick();\n      });\n  }\n\n  /** Initializes the editor */\n  ngAfterViewInit() {\n    this.ready = Promise.resolve(\n      tinymce.init(\n        Object.assign(\n          editorSettings,\n          {\n            target: this.container.nativeElement\n          },\n          this.settings\n        )\n      )\n    ).then(editor => {\n      this.editor = editor[0];\n      this.editor.setContent(this.value || '');\n      this.editor.on('dblclick', e => {\n        if (e.target.localName === 'img') {\n          this.editor.buttons.image.onclick(true, e.toElement);\n        }\n      });\n      this.editor.on('change keyup', res => this.update.next(this.editor));\n      return this.editor;\n    });\n  }\n\n  /** Destroys the editor. */\n  ngOnDestroy() {\n    if (this.editor) {\n      this.ready.then(editor => {\n        editor.destroy();\n      });\n    }\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    if (!this.ready) {\n      return;\n    }\n    this.ready.then(editor => {\n      editor.setContent(this.value);\n    });\n  }\n\n  propagateChange = (_: any) => { };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() { }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'TinymceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TinymceModule.html":{"url":"modules/TinymceModule.html","title":"module - TinymceModule","body":"\n                   \n\n\n\n\n  Modules\n  TinymceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/tinymce/src/tinymce.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TinymceComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TinymceComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TinymceComponent } from './tinymce/tinymce.component';\n\n@NgModule({\n  declarations: [TinymceComponent],\n  exports: [TinymceComponent]\n})\nexport class TinymceModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/toggle/toggle.component.ts\n\n\n    \n        Description\n    \n    \n        The toggle component is an alternative to the default boolean checkbox with fancier style.\nIt is used in the default input template for the view 'toggle'. \n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-toggle\n            \n\n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propagateChange\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                toggle\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The toggles placeholder (currently not in use) \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Register Touch \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            Toggles the value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            writes incoming value \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:19\n                            \n                        \n\n                \n                    \n                        The current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/** The toggle component is an alternative to the default boolean checkbox with fancier style.\n * It is used in the default input template for the view 'toggle'. */\n@Component({\n  selector: 'ec-toggle',\n  templateUrl: './toggle.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ToggleComponent),\n      multi: true\n    }\n  ]\n})\nexport class ToggleComponent implements ControlValueAccessor {\n  /** The current value */\n  value: boolean;\n  /** The toggles placeholder (currently not in use) */\n  @Input() placeholder: string;\n\n  /** Toggles the value */\n  toggle() {\n    this.value = !this.value;\n    this.propagateChange(this.value);\n  }\n  /** writes incoming value */\n  writeValue(value: boolean) {\n    this.value = value;\n  }\n  /* Propagates change*/\n  propagateChange = (_: any) => {\n  };\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  /** Register Touch */\n  registerOnTouched() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/vc/src/toolbar/toolbar.component.ts\n\n\n    \n        Description\n    \n    \n        ecvc toolbar containing editing tools. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-vc-toolbar\n            \n\n            \n                styleUrls\n                toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                editor\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                focusout\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        editor\n                    \n                    \n                        The editor to control \n\n                            \n                            Type:    EditorComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/vc/src/toolbar/toolbar.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nclick(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/vc/src/toolbar/toolbar.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            host click \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusout\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nfocusout(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/vc/src/toolbar/toolbar.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Blocks event on focus out \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \nclick(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/vc/src/toolbar/toolbar.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            blocks event on click \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, HostListener, Input } from '@angular/core';\nimport { EditorComponent } from '../editor/editor.component';\n\n/** ecvc toolbar containing editing tools. */\n@Component({\n  selector: 'ec-vc-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent {\n\n  /** The editor to control */\n  @Input() editor: EditorComponent;\n  /** host click */\n  @HostListener('click', ['$event'])\n  /** Blocks the incoming event from propagating. */\n  blockEvent(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    return false;\n  }\n  /** blocks event on click */\n  click(e: any) {\n    return this.blockEvent(e);\n  }\n  /** Blocks event on focus out */\n  @HostListener('focusout', ['$event'])\n  focusOut(e: any) {\n    return this.blockEvent(e);\n  }\n}\n\n    \n\n    \n        {{editor?.caret?.phrasing?.type || '-'}}\n\n  \n    \n      \n        {{el.tag}}\n      \n    \n  \n  \n    \n      \n        {{el.tag}}\n      \n    \n  \n\n\n\n  {{editor.caret?.flow?.type || '-'}} >\n  {{editor.caret?.phrasing?.type || '-'}}\n\n-->\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{editor?.caret?.phrasing?.type || \\'-\\'}}                    {{el.tag}}                                {{el.tag}}              {{editor.caret?.flow?.type || \\'-\\'}} >  {{editor.caret?.phrasing?.type || \\'-\\'}}-->'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeConfigService.html":{"url":"injectables/TypeConfigService.html","title":"injectable - TypeConfigService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TypeConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/type-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The TypeConfig holds each field type's specific behaviour in certain situations \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                nestedCrudConfig\n                            \n                            \n                                    Private\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayAccount\n                            \n                            \n                                displayDate\n                            \n                            \n                                get\n                            \n                            \n                                groupDate\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/model-config/type-config.service.ts:137\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayAccount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:172\n                            \n                        \n\n\n                \n                    \n                            Returns an account display function \n\n\n                            \n                                Returns :     (value: any, entry: any, property: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayDate(time: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:166\n                            \n                        \n\n\n                \n                    \n                            Returns a date display function. If time is true, the time will be displayed too. Usese 'moment.format.date' and 'moment.format.time' symbols. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (value: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:141\n                            \n                        \n\n\n                \n                    \n                            Returns the base FieldConfig for the given type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FieldConfigProperty\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngroupDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:177\n                            \n                        \n\n\n                \n                    \n                            Returns a date group function. Uses 'moment.format.month' symbol \n\n\n                            \n                                Returns :     (value: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(type: string, config: FieldConfigProperty)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            Assigns the given config to the type, e.g. to change the default template of a type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nestedCrudConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nestedCrudConfig:     CrudConfig\n\n                    \n                \n                    \n                        \n                            Type :     CrudConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    size: 10,\n    // methods: ['get'],\n    popClass: 'ec-pop_fullscreen'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:18\n                            \n                        \n\n                \n                    \n                        The default config for nested crud lists, as passed to entry-select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            types\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        types:     FieldConfig\n\n                    \n                \n                    \n                        \n                            Type :     FieldConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: {\n      view: 'label'\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true,\n    },\n    boolean: {\n      prefill: false,\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact'\n    },\n    decimal: {\n      view: 'number',\n      sortable: true,\n    },\n    url: {\n      sortable: true,\n      filterable: true,\n    },\n    asset: {\n      view: 'asset',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    assets: {\n      view: 'assets',\n      input: DefaultEntryInputComponent,\n      /* display: (value, entry, property) => entry.getImageThumbUrl(property, 100), */\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    email: {},\n    phone: {\n      view: 'string'\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: (value) => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(this.symbol.resolve('moment.format.date'))\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    entries: {\n      view: 'tags',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => value ? JSON.stringify(value) : ''\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => value ? value.longitude + ',' + value.latitude : '',\n      filterPopClass: 'ec-pop_dialog'\n    },\n    account: {\n      display: (value) => value ? value.title : '',\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    },\n    role: {\n      display: (value) => value ? value.name : '',\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:25\n                            \n                        \n\n                \n                    \n                        Defines the base configuration of each type.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FieldConfigProperty } from '@ec.components/core/src/config/field-config-property.interface';\nimport { FieldConfig } from '@ec.components/core/src/config/field-config.interface';\nimport { DefaultInputComponent } from '@ec.components/ui/src/form/default-input/default-input.component';\nimport { DefaultOutputComponent } from '@ec.components/ui/src/form/default-output/default-output.component';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport moment from 'moment-es6';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from '../entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from '../entry-form/default-entry-output.component';\n\n/** The TypeConfig holds each field type's specific behaviour in certain situations */\n@Injectable()\nexport class TypeConfigService {\n  /** The default config for nested crud lists, as passed to entry-select */\n  private nestedCrudConfig: CrudConfig = {\n    size: 10,\n    // methods: ['get'],\n    popClass: 'ec-pop_fullscreen'\n  };\n\n  /** Defines the base configuration of each type.*/\n  private types: FieldConfig = {\n    id: {\n      view: 'label'\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true,\n    },\n    boolean: {\n      prefill: false,\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact'\n    },\n    decimal: {\n      view: 'number',\n      sortable: true,\n    },\n    url: {\n      sortable: true,\n      filterable: true,\n    },\n    asset: {\n      view: 'asset',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) => entry.getImageThumbUrl(property, 100),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    assets: {\n      view: 'assets',\n      input: DefaultEntryInputComponent,\n      /* display: (value, entry, property) => entry.getImageThumbUrl(property, 100), */\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    email: {},\n    phone: {\n      view: 'string'\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: (value) => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(this.symbol.resolve('moment.format.date'))\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    entries: {\n      view: 'tags',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: (value) => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => value ? JSON.stringify(value) : ''\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: (value) => value ? value.longitude + ',' + value.latitude : '',\n      filterPopClass: 'ec-pop_dialog'\n    },\n    account: {\n      display: (value) => value ? value.title : '',\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    },\n    role: {\n      display: (value) => value ? value.name : '',\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    }\n  };\n  constructor(private symbol: SymbolService) { }\n\n  /** Returns the base FieldConfig for the given type. */\n  get(type: string): FieldConfigProperty {\n    const config = this.types[type];\n    if (!config) {\n      console.error('missing config for type', type);\n      return {};\n    }\n    Object.assign(config, {\n      type,\n      view: config.view || type,\n      input: config.input || DefaultInputComponent,\n      output: config.output || DefaultOutputComponent,\n    });\n    return config;\n  }\n\n  /** Assigns the given config to the type, e.g. to change the default template of a type. */\n  set(type: string, config: FieldConfigProperty) {\n    if (!this.types[type]) {\n      console.error('cannot configure non existing type', type);\n      return;\n    }\n    Object.assign(this.types[type], config);\n  }\n\n  /** Returns a date display function. If time is true, the time will be displayed too. Usese 'moment.format.date' and 'moment.format.time' symbols. */\n  displayDate(time = true) {\n    const format = this.symbol.resolve('moment.format.date') + (time ? ' ' + this.symbol.resolve('moment.format.time') : '');\n    return (value) => value ? moment(value).format(format) : '';\n  }\n\n  /** Returns an account display function */\n  displayAccount() {\n    return (value, entry, property) => entry.getTitle(property) || this.symbol.resolve('field.creator.ecuser');\n  }\n\n  /** Returns a date group function. Uses 'moment.format.month' symbol */\n  groupDate() {\n    return (value) => moment(value).format(this.symbol.resolve('moment.format.month'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n  Modules\n  UiModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_exports\n\n\n\n\nFormModule\n\nFormModule\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\n\n\nListModule\n\nListModule\n\nUiModule -->\n\nListModule->UiModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\n\n\nSelectModule\n\nSelectModule\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/ui.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    IconModule\n                            \n                            \n                                    ListModule\n                            \n                            \n                                    LoaderModule\n                            \n                            \n                                    NotificationsModule\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    SelectModule\n                            \n                            \n                                    SymbolModule\n                            \n                            \n                                    UtilityModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    IconModule\n                            \n                            \n                                    ListModule\n                            \n                            \n                                    LoaderModule\n                            \n                            \n                                    NotificationsModule\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    SelectModule\n                            \n                            \n                                    SymbolModule\n                            \n                            \n                                    UtilityModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ListModule } from './list/list.module';\nimport { FormModule } from './form/form.module';\nimport { PopModule } from './pop/pop.module';\nimport { LoaderModule } from './loader/loader.module';\nimport { NotificationsModule } from './notifications/notifications.module';\nimport { UtilityModule } from './utility/utility.module';\nimport { SelectModule } from './select/select.module';\nimport { IconModule } from './icon/icon.module';\nimport { SymbolModule } from './symbol/symbol.module';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    UtilityModule,\n    NotificationsModule,\n    PopModule,\n    LoaderModule,\n    FormModule,\n    ListModule,\n    SelectModule,\n    IconModule,\n    SymbolModule\n  ],\n  exports: [\n    ReactiveFormsModule,\n    FormsModule,\n    UtilityModule,\n    PopModule,\n    NotificationsModule,\n    LoaderModule,\n    ListModule,\n    FormModule,\n    SelectModule,\n    IconModule,\n    SymbolModule\n  ]\n})\nexport class UiModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Update.html":{"url":"interfaces/Update.html","title":"interface - Update","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Update\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/crud/crud.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the CrudService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        entry\n                                \n                                \n                                            Optional\n                                        list\n                                \n                                \n                                        model\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entry\n                                    \n                                \n                                \n                                    \n                                        entry:     EntryResource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EntryResource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant entry. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     EntryList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EntryList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The model that has been updated. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of update. (create/read/update/delete) \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/filter';\nimport { Subject } from 'rxjs/Subject';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Update {\n  /** The model that has been updated. */\n  model: string | string[],\n  /** The relevant entry. */\n  entry?: EntryResource,\n  /** The list where it happened. */\n  list?: EntryList,\n  /** The type of update. (create/read/update/delete) */\n  type?: 'post' | 'get' | 'put' | 'delete'\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class CrudService {\n  /** The changes event is emitted everytime an entry is created or updated. */\n  private changes: Subject = new Subject();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService) {\n  }\n\n  /** Gives true if the given change fits all property values of the filter. */\n  matches(change: Update, filter: Update): boolean {\n    return Object.keys(filter)\n      .reduce((match, key) => match && change[key] === filter[key], true);\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: Update): Observable {\n    if (!filter) {\n      return this.changes.asObservable();\n    }\n    return this.changes.asObservable().filter((change: Update) => this.matches(change, filter));\n  }\n\n  /** Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. */\n  save(model: string, entry: EntryResource, value: Object) {\n    if (entry && entry.save) {\n      return this.update(model, entry, value);\n    }\n    return this.create(model, value)\n      .then((_entry) => {\n        return _entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given entry with the new value. Fires the \"update\" change. */\n  update(model, entry: EntryResource, value: Object): Promise {\n    const oldValues = {}; // save old values\n    Object.keys(value).forEach((key) => oldValues[key] = entry[key]);\n    Object.assign(entry, this.clean(value)); // assign new form values\n    return entry.save().then((_entry) => {\n      this.changes.next({ model, entry: _entry, type: 'put' });\n      return _entry;\n    })\n      .catch((err) => {\n        Object.assign(entry, this.clean(oldValues)); // fall back to old values\n        return Promise.reject(err);\n      });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' ||\n      ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (value[key] === '') { // clear empty strings\n          value[key] = null;\n        }\n        if (this.isImmutableProperty(key)) { // filter system properties\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new entry with the given value for the given model. Fires the \"create\" change. */\n  create(model: string, value: Object): Promise {\n    return this.sdk.api.createEntry(model, this.clean(value))\n      .then((entry: EntryResource) => {\n        // console.log('created entry', entry);\n        // TODO make sure leveled entries are returned leveled\n        this.changes.next({ model, entry, type: 'post' });\n        return entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given entry and emits the \"delete\" change. */\n  del(model: string, entry: EntryResource) {\n    return entry.del().then((res) => {\n      this.changes.next({ model, entry, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Upload.html":{"url":"interfaces/Upload.html","title":"interface - Upload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Upload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the CrudService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        asset\n                                \n                                \n                                            Optional\n                                        assets\n                                \n                                \n                                            Optional\n                                        item\n                                \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                            Optional\n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asset\n                                    \n                                \n                                \n                                    \n                                        asset:     PublicAssetResource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant asset. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assets\n                                    \n                                \n                                \n                                    \n                                        assets:     PublicAssetResource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant assets (when uploading multiple). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     Item\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Item\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     ResourceList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResourceList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource,\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[],\n  /** The uploaded asset as item */\n  item?: Item\n  /** The uploaded asset as item */\n  items?: Array>\n  /** The list where it happened. */\n  list?: ResourceList,\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  customNames?: string[]\n  /** Custom file form fieldName */\n  fieldName?: string\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) =>\n          ((only && (match && this.isNewAsset(a)) ||\n            (!only && (match || this.isNewAsset(a)))))\n        , only);\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id)\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n    if (!files.length) {\n      return;\n    }\n    return api.createDMAssets(assetGroupID, this.getFormData(files, options))\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('dmAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {})\n      }\n      return this.sdk.api.createAssets(data, {})\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array, assetGroupID?: string): Promise> {\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    console.log('resolve', unresolved, this.isNewAsset(unresolved));\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) { // new assets\n      return this.sdk.api.dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then(dmAssetList => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then((): any => {\n      if (unresolved.length === 1) {\n        return this.sdk.api.asset(unresolved[0]).then(asset => {\n          console.log('old asset', asset);\n          return [asset]\n        });\n      }\n      return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 })\n        .then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ?\n              resolved.find((resource) => resource.assetID === asset) : asset)\n        });\n\n    })\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadComponent.html":{"url":"components/UploadComponent.html","title":"component - UploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/files/upload/upload.component.ts\n\n\n    \n        Description\n    \n    \n        This component will render an input field to upload files to the datamanager. \n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-upload\n            \n\n\n\n\n            \n                templateUrl\n                ./upload.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                fileInput\n                            \n                            \n                                    Public\n                                filesToUpload\n                            \n                            \n                                notifications\n                            \n                            \n                                pop\n                            \n                            \n                                uploadPromise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clear\n                            \n                            \n                                selectUpload\n                            \n                            \n                                setGroup\n                            \n                            \n                                trigger\n                            \n                            \n                                upload\n                            \n                            \n                                uploadFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetGroupID\n                            \n                            \n                                custom\n                            \n                            \n                                loader\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupChanged\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, fileService: FileService, loaderService: LoaderService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/upload/upload.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The api to use for the upload. Defaults to sdk.api \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                        The asset group to upload into. If not defined, old assets will be used! \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        custom\n                    \n                    \n                        If true, a pop to rename files + customize flags will appear before uploading. \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used while uploading\n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        Upload options \n\n                            \n                            Type:    FileOptions\n\n                            \n                        \n                            Default value: {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    customNames: []\n  }\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The input placeholder\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                    \n                        emits when the group has been set from the upload pop \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Emits when an upload is complete. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(e: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Uploads the files from the input event. Handles loader and notifications. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            clears the file input \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectUpload(upload: Upload, selection: , solo: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            method that can be called after the upload to select the uploaded item(s). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        upload\n                                                        \n                                                                    Upload\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        selection\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        solo\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGroup(group: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Sets the asset group to upload to \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \ntrigger()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            opens the system upload window by triggering the input \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upload\n                            \n                            \n                        \n                    \n                \n                \n                    \nupload(files: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Triggers upload of current selected files \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadFiles(files: , e: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileInput:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:43\n                            \n                        \n\n                \n                    \n                        Reference to the input[type=file] element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filesToUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filesToUpload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:47\n                            \n                        \n\n                \n                    \n                        Error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     PopComponent\n\n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:45\n                            \n                        \n\n                \n                    \n                        Pop child for new asset options. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadPromise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uploadPromise:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { LoaderComponent, LoaderService, NotificationsService, WithLoader } from '@ec.components/ui';\nimport { Notification } from '@ec.components/ui/src/notifications/notification';\nimport { WithNotifications } from '@ec.components/ui/src/notifications/with-notifications.interface';\nimport { PopComponent } from '@ec.components/ui/src/pop/pop.component';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { SdkService } from '../../sdk/sdk.service';\nimport { FileService, Upload } from '../file.service';\nimport { FileOptions } from './../file.service';\n\n/** This component will render an input field to upload files to the datamanager. */\n@Component({\n  selector: 'ec-upload',\n  templateUrl: './upload.component.html',\n})\nexport class UploadComponent implements WithLoader, WithNotifications {\n  event: any;\n  uploadPromise: Promise;\n  public filesToUpload: any;\n  /** The input placeholder*/\n  @Input() placeholder: string;\n  /** The loader that should be used while uploading*/\n  @Input() loader: LoaderComponent;\n  /** The asset group to upload into. If not defined, old assets will be used! */\n  @Input() assetGroupID: string;\n  /** If true, a pop to rename files + customize flags will appear before uploading. */\n  @Input() custom: boolean;\n  /** Upload options */\n  @Input() options: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    customNames: []\n  };\n  /** The api to use for the upload. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Emits when an upload is complete. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** emits when the group has been set from the upload pop */\n  @Output() groupChanged: EventEmitter = new EventEmitter();\n  /** Reference to the input[type=file] element */\n  @ViewChild('fileInput') fileInput: ElementRef;\n  /** Pop child for new asset options. */\n  @ViewChild(PopComponent) pop: PopComponent;\n  /** Error Notifications */\n  notifications: Notification[] = [];\n\n  constructor(private sdk: SdkService,\n    private fileService: FileService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService) {\n  }\n  /** opens the system upload window by triggering the input */\n  trigger() {\n    if (!this.fileInput) {\n      console.error('cannot trigger upload: file input element not found!');\n      return;\n    }\n    /* this.clear(); */\n    this.fileInput.nativeElement.click();\n  }\n\n  /** Sets the asset group to upload to */\n  setGroup(group) {\n    this.assetGroupID = group;\n    this.groupChanged.emit(group);\n  }\n\n  /** Uploads the files from the input event. Handles loader and notifications. */\n  change(e, api = this.sdk.api) {\n    if (!e || !e.target || !e.target.files || !e.target.files.length) {\n      return;\n    }\n    return this.uploadFiles(e.target.files, e, api);\n  }\n\n  /** clears the file input */\n  clear() {\n    if (!this.fileInput) {\n      return;\n    }\n    this.fileInput.nativeElement.value = ''; // clear input to eventually trigger change on same file\n  }\n\n  uploadFiles(files, e, api = this.sdk.api) {\n    this.filesToUpload = files;\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.custom || !this.assetGroupID) {\n      this.event = e;\n      this.pop.show();\n      return;\n    }\n    this.upload(files, api);\n  }\n\n  /** Triggers upload of current selected files */\n  upload(files, api = this.sdk.api) {\n    this.uploadPromise = (this.assetGroupID !== 'legacyAsset' ?\n      this.fileService.uploadAssets(files, this.assetGroupID, this.options, api) :\n      this.fileService.uploadFiles(files))\n      .then((_upload) => {\n        this.success.emit(_upload);\n        this.notificationService.emit({\n          title: this.symbol.resolve('success.upload'),\n          type: 'success',\n          hide: this.notifications\n        });\n        this.pop.hide();\n        return _upload;\n      }).catch((err) => {\n        console.error(err);\n        this.notificationService.emit({\n          title: this.symbol.resolve('error.upload'),\n          error: err,\n          sticky: true,\n          hide: this.notifications,\n          append: this.notifications\n        });\n      });\n    this.loaderService.wait(this.uploadPromise, this.loader);\n    this.uploadPromise.then(() => {\n      delete this.uploadPromise;\n    })\n    return this.uploadPromise;\n  }\n\n\n  /** method that can be called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload, selection, solo = false) {\n    if (!selection) {\n      return;\n    }\n    if (solo) {\n      selection.select(upload.item);\n    } else {\n      selection.toggleAll(upload.items);\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n        \n    \n    \n        \n            {{'upload.assetGroup' | symbol}}\n            \n        \n        \n            \n                \n                \n                    \n                    {{'upload.preserveFilenames' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.includeAssetIDInPath' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.ignoreDuplicates' | symbol}}\n                \n            \n            \n                {{ f.name }}\n                \n                    \n                \n            \n        \n        Upload\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{\\'upload.assetGroup\\' | symbol}}                                                                                                                {{\\'upload.preserveFilenames\\' | symbol}}                                                                                                                {{\\'upload.includeAssetIDInPath\\' | symbol}}                                                                                                                {{\\'upload.ignoreDuplicates\\' | symbol}}                                                        {{ f.name }}                                                                                Upload    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EditorComponent', 'selector': 'ec-vc-editor,[ec-vc-editor]'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'ToolbarComponent', 'selector': 'ec-vc-toolbar'},{'name': 'UploadComponent', 'selector': 'ec-upload'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilityModule.html":{"url":"modules/UtilityModule.html","title":"module - UtilityModule","body":"\n                   \n\n\n\n\n  Modules\n  UtilityModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_imports\n\n\n\ncluster_UtilityModule_exports\n\n\n\n\nFocusDirective\n\nFocusDirective\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nFocusDirective->UtilityModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nMockupComponent\n\nMockupComponent\n\nUtilityModule -->\n\nMockupComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nUtilityModule->FocusDirective \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nUtilityModule->IoModule \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nMockupComponent \n\nMockupComponent \n\nMockupComponent  -->\n\nUtilityModule->MockupComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nIoModule\n\nIoModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/utility/utility.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FocusDirective\n                            \n                            \n                                LoginFormComponent\n                            \n                            \n                                MenuComponent\n                            \n                            \n                                MockupComponent\n                            \n                            \n                                TabComponent\n                            \n                            \n                                TabsComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IoModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FocusDirective\n                            \n                            \n                                    IoModule\n                            \n                            \n                                    LoginFormComponent\n                            \n                            \n                                    MenuComponent\n                            \n                            \n                                    MockupComponent\n                            \n                            \n                                    TabComponent\n                            \n                            \n                                    TabsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { IoModule } from '../io/io.module';\nimport { FocusDirective } from './focus/focus.directive';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { MockupComponent } from './mockup/mockup.component';\nimport { TabComponent } from './tab/tab.component';\nimport { TabsComponent } from './tabs/tabs.component';\n\n@NgModule({\n  entryComponents: [],\n  declarations: [\n    TabsComponent,\n    TabComponent,\n    MockupComponent,\n    MenuComponent,\n    LoginFormComponent,\n    FocusDirective,\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    CommonModule,\n    RouterModule,\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    TabsComponent,\n    TabComponent,\n    MockupComponent,\n    MenuComponent,\n    LoginFormComponent,\n    FocusDirective,\n    RouterModule,\n  ],\n  providers: [],\n})\nexport class UtilityModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VcModule.html":{"url":"modules/VcModule.html","title":"module - VcModule","body":"\n                   \n\n\n\n\n  Modules\n  VcModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VcModule\n\n\n\ncluster_VcModule_declarations\n\n\n\ncluster_VcModule_exports\n\n\n\n\nEditorComponent\n\nEditorComponent\n\n\n\nVcModule\n\nVcModule\n\nVcModule -->\n\nEditorComponent->VcModule\n\n\n\n\n\nSafeHtmlPipe\n\nSafeHtmlPipe\n\nVcModule -->\n\nSafeHtmlPipe->VcModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nVcModule -->\n\nToolbarComponent->VcModule\n\n\n\n\n\nEditorComponent \n\nEditorComponent \n\nEditorComponent  -->\n\nVcModule->EditorComponent \n\n\n\n\n\nSafeHtmlPipe \n\nSafeHtmlPipe \n\nSafeHtmlPipe  -->\n\nVcModule->SafeHtmlPipe \n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nVcModule->ToolbarComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/vc/src/vc.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                EditorComponent\n                            \n                            \n                                SafeHtmlPipe\n                            \n                            \n                                ToolbarComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                EditorComponent\n                            \n                            \n                                ToolbarComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    EditorComponent\n                            \n                            \n                                    SafeHtmlPipe\n                            \n                            \n                                    ToolbarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\n\nimport { NgModule } from '@angular/core';\nimport { SafeHtmlPipe } from './safe-html.pipe';\nimport { EditorComponent } from './editor/editor.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\n\n@NgModule({\n  entryComponents: [\n    EditorComponent,\n    ToolbarComponent,\n  ],\n  declarations: [\n    EditorComponent,\n    ToolbarComponent,\n    SafeHtmlPipe,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    EditorComponent,\n    ToolbarComponent,\n    SafeHtmlPipe,\n  ],\n  providers: [],\n})\nexport class VcModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/VisibleFieldsPipe.html":{"url":"pipes/VisibleFieldsPipe.html","title":"pipe - VisibleFieldsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  VisibleFieldsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/visible-fields.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        visibleFields\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(fields: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/visible-fields.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n                            Filters out all fields that should not be displayed in a regular form \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fields\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Field } from '@ec.components/core/src/field/field';\n\n/** The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. */\n@Pipe({\n  name: 'visibleFields'\n})\nexport class VisibleFieldsPipe implements PipeTransform {\n  /** Filters out all fields that should not be displayed in a regular form */\n  transform(fields: Array): any {\n    return fields.filter((field) => {\n      return field.form !== false;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithLoader.html":{"url":"interfaces/WithLoader.html","title":"interface - WithLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/loader/with-loader.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses a loader. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The loader that is contacted on any kind of loading operation. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { LoaderComponent } from './loader.component';\n/** This interface can be used on a component that uses a loader. */\nexport interface WithLoader {\n  /** The loader that is contacted on any kind of loading operation. */\n  loader: LoaderComponent\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithNotifications.html":{"url":"interfaces/WithNotifications.html","title":"interface - WithNotifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithNotifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/notifications/with-notifications.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses notifications. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        silent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     Notification[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Notification[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Stores notification history for later access. E.g. stores errors that should be hidden later. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        silent\n                                    \n                                \n                                \n                                    \n                                        silent:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no notifications will be emitted \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Notification } from './notification';\n\n\n/** This interface can be used on a component that uses notifications. */\nexport interface WithNotifications {\n    /** Stores notification history for later access. E.g. stores errors that should be hidden later. */\n    notifications?: Notification[];\n    /** If true, no notifications will be emitted */\n    silent?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\n\n@ec.components/ui 0.22.0\nBREAKING CHANGE:\n\nnow requires ngx-drag-drop packages for new drag and drop features\n\n\n@ec.components/data 0.25.0\nBREAKING CHANGE:\n\nasset-select now contains asset-group selects in the list-pop and when uploading\n\n\n@ec.components/data 0.23.0\nBREAKING CHANGE:\n\nadded useLegacyAssets flag to use old assets. All projects still using old assets need to set this flag to migrate! The flag can be used in the field config or directly in the asset-select config.\n\n\n0.17.0\n\nadded resource module with all resource related components and services\ncan now add delete and modify entries and resource through the selects\nasset select now supports old and new assets. When you pass [assetGroupID] to select (or list/upload), new assets will be used.\ndeprecated asset-list, because ec.sdk now supports public api relations.\n\nBREAKING CHANGE:\n\nremoved [field] input from selects\n\n\n0.15.0\n\ncan now use SdkService without datamanagerID.\nadded resource-delete-pop\nremoved labels config from pagination-config. now using symbol.service\nadded ec-resource-select\nadded support for new assets\n\n\n0.14.0\n\nadded ready event to FormComponent when initialization is complete.\nadded ResourcePopComponent for creating and editing resources.\nadded permissions option to resource-config to automatically show only allowed actions.\nadded ResourceCrudComponent for easy create/read/update/delete of any resource.\ncan now set field config label to false to show an empty label. (COM-89)\noptimized ec-select toggle behaviour (COM-92, COM-93)\ncan now set placeholder for ec-password-reset (COM-101)\nadded SymbolService for localization\n\n\n0.13.0\n\ncan now configure the maximum visible items for 'tags' view via the maxItems option in the field config. The default value is 10.\nadded auto generated id to all fields. Those ids are used in label#for and input#id. You should also reference this id in custom inputs to make the label clickable.\nadded ec-icon component for more flexible icons.\nadded paginationConfig Input to ListComponent (+ all children like ResourceListComponent)\nadded maxColumns option to list-config.\n\nBREAKING CHANGES:\n\nCOM-98: active/visible classes: renamed active to is-active, visible to is-visible and disabled to is-disabled\nCOM-95: renamed is-sortable-active to is-sorted + added is-sorted-asc and is-sorted-desc\nCOM-96: replaced all usages of ec-icon with new ec-icon component (nests one level deeper)\nCOM-45: removed range input from pagination, replaced with PaginationConfig with additional options (see docs)\nremoved [host] input from ListItemsComponent due to incompatibilities.\nrenamed list config property disableSelection to selectMode and inverted its value meaning. When selectMode is true, the checkboxes are shown and the columnClicked event is ignored as long as selectMode is active. You can toggle the selectMode via list#toggleSelectMode.\nremoved DatamanagerListComponent and ModelListComponent. You can use ResourceList for both now.\n\n\n0.12.0\nBREAKING CHANGE:\n\nform.component (and all children): renamed (submit) output to (submitted)\n\n\n0.10.0\nBREAKING CHANGES:\n\nlist.component (and all extending components): renamed select output to columnClicked. (Global replace \"(select)\" to \"(columnClicked)\").\nmonth.component: renamed select output to dayClicked (similar to list.component)\n\n\n0.9.0\n\nadded use method to selection.component to write the model from outside\nBREAKING CHANGES:\necPublicAsset has been renamed to ecAsset and now supports direct id binding to directive.\n\n\n0.8.2\n\nadded ec-toggle to default inputs (use view: 'toggle' in field config)\nadded ec-calendar\nsystem fields (id, created, modified etc) are now readOnly by default\n\n\n0.8.1\n\nadded ec-entry-pop\n\n\n0.8.0\nBREAKING CHANGES:\n\nremoved PublicService and AdminService, you should use sdk methods instead.\nlogin/signup + more auth methods have been moved from SdkService to new AuthService\nformer ec-login has been renamed to ec-login-form, the new ec-login handles login automatically.\ncrud methods have been renamend to 'get', 'put', 'post', 'delete'\nec-entry and ec-entries are now directives ecEntry and ecEntries\n\n\n0.7.0\nBREAKING CHANGES:\n\npop classes have been completely changed to:\n.ec-pop_fullscreen\n.ec-pop_dialog\n.ec-pop_drawer-left\n.ec-pop_drawer-top\n.ec-pop_drawer-right\n.ec-pop_drawer-bottom\n.ec-pop_toast-top\n.ec-pop_toast-bottom\n\n\nadded @ec.components/style package\n\n\n0.6.0\n\nEntryFormComponent.deleteEntry now returns the deletion promise.\nfix: SdkService.ready promise was not renewed after login\nLoginComponent now accepts a loader as input\nBREAKING CHANGES:\nFormComponent.submitted now emits the instance of Form and not the group\n\n\n0.5.3\n\nfeature: asset-select is now capable of using ngModel with two way binding\n\n\n0.5.2\n\nremoved DataRoutingModule from DataModule\nfeature: asset-select can now resolve assetID's.\nfeature: added filterPopClass config option to field-property-config.\nfurther styling\n\n\n0.5.1\n\nfurther styling\nfix: could not set custom inputs/outputs for entry fields\nnow using ec.sdk 0.8.6\n\n\n0.5.0\n\nfurther styling\nBREAKING CHANGES:\nview: 'label' must now be view: 'tag'\nview: 'labels' must now be view: 'tags'\nselection is now a direct input of ec-crud instead of a config property\n\n\n0.4.1\n\nfixed tests after refactoring\nwrote project setup tutorial\nfurther styling\n\n\n0.4.0\n\nnow using ec.sdk 0.8.5\n\nBREAKING CHANGES:\n\nall imports from '@ec.components/_/' must now lead to '@ec.components//src/_'\nimports from '@ec.components/*' can stay the same and should generally be preferred.\n\n\n0.3.1\n\nrefactored typings to be aot compatible\nrefactored imports\nbegan styling\n\n\n0.3.0\n\nnow using ec.sdk 0.8.1\nnow supporting default routes for filtering and more\nAssetInput is now default for asset/assets fields\n\n\n0.2.0\n\nnow using ec.sdk 0.7.1\nentry-form now supports lvl1 entries even with nested resources\nec-datetime now supports iso dates\n\n\n0.1.1\n\nchanged src folder and module structure\nec-model-list\nec-asset-select\nec-upload\nec-datetime input\n\n\n0.1.0 (2017-08-23)\n\nthe most important basic components are now implemented\ndynamic input/output templates\nec-entry, ec-entries\nadded demo with multiple routes\nec-form\nmuch more\n\n\n0.0.2 (2017-05-11)\n\nimproved list\nimproved imports\n\n\n0.0.1 (2017-05-10)\n\ninitial release\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    packages/ace/src/ace.component.ts\n            \n            \n                component\n            \n            \n                AceComponent\n            \n            \n                90 %\n                (19/21)\n            \n        \n        \n            \n                \n                    packages/ace/src/ace.component.ts\n            \n            \n                variable\n            \n            \n                ace\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/collection/collection.ts\n            \n            \n                class\n            \n            \n                Collection\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    packages/core/src/config/config.ts\n            \n            \n                class\n            \n            \n                Config\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/core/src/config/field-config-property.interface.ts\n            \n            \n                interface\n            \n            \n                FieldConfigProperty\n            \n            \n                100 %\n                (36/36)\n            \n        \n        \n            \n                \n                    packages/core/src/config/field-config.interface.ts\n            \n            \n                interface\n            \n            \n                FieldConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/field/field.ts\n            \n            \n                class\n            \n            \n                Field\n            \n            \n                95 %\n                (22/23)\n            \n        \n        \n            \n                \n                    packages/core/src/form/form-config.interface.ts\n            \n            \n                interface\n            \n            \n                FormConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/form/form.ts\n            \n            \n                class\n            \n            \n                Form\n            \n            \n                92 %\n                (26/28)\n            \n        \n        \n            \n                \n                    packages/core/src/item/item-config.interface.ts\n            \n            \n                interface\n            \n            \n                ItemConfig\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    packages/core/src/item/item.ts\n            \n            \n                class\n            \n            \n                Item\n            \n            \n                91 %\n                (21/23)\n            \n        \n        \n            \n                \n                    packages/core/src/list/list-config.interface.ts\n            \n            \n                interface\n            \n            \n                ListConfig\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                    packages/core/src/list/list.ts\n            \n            \n                class\n            \n            \n                List\n            \n            \n                100 %\n                (37/37)\n            \n        \n        \n            \n                \n                    packages/core/src/pagination/pagination.ts\n            \n            \n                class\n            \n            \n                Pagination\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    packages/core/src/selection/selection.ts\n            \n            \n                class\n            \n            \n                Selection\n            \n            \n                100 %\n                (43/43)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                class\n            \n            \n                Sorter\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                function\n            \n            \n                sortBoolean\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                function\n            \n            \n                sortNumber\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                function\n            \n            \n                sortString\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                variable\n            \n            \n                collator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/asset-list/asset-list.component.ts\n            \n            \n                component\n            \n            \n                AssetListComponent\n            \n            \n                68 %\n                (11/16)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/auth-guard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuard\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/auth.module.ts\n            \n            \n                function\n            \n            \n                cookieFactory\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/email-available.validator.ts\n            \n            \n                variable\n            \n            \n                emailAvailable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/errors.ts\n            \n            \n                variable\n            \n            \n                backendErrorCodes\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/errors.ts\n            \n            \n                variable\n            \n            \n                errors\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/password-reset/password-reset.component.ts\n            \n            \n                component\n            \n            \n                PasswordResetComponent\n            \n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud-config.interface.ts\n            \n            \n                interface\n            \n            \n                CrudConfig\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud.component.ts\n            \n            \n                component\n            \n            \n                CrudComponent\n            \n            \n                78 %\n                (15/19)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud.service.ts\n            \n            \n                injectable\n            \n            \n                CrudService\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud.service.ts\n            \n            \n                interface\n            \n            \n                Update\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/data/src/entries/entries.directive.ts\n            \n            \n                directive\n            \n            \n                EntriesDirective\n            \n            \n                66 %\n                (12/18)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/admin-entry-input.component.ts\n            \n            \n                component\n            \n            \n                AdminEntryInputComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/default-entry-input.component.ts\n            \n            \n                component\n            \n            \n                DefaultEntryInputComponent\n            \n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/default-entry-output.component.ts\n            \n            \n                component\n            \n            \n                DefaultEntryOutputComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/entry-form.component.ts\n            \n            \n                component\n            \n            \n                EntryFormComponent\n            \n            \n                97 %\n                (35/36)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-list-pop/entry-list-pop.component.ts\n            \n            \n                component\n            \n            \n                EntryListPopComponent\n            \n            \n                44 %\n                (8/18)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-list/entry-list.component.ts\n            \n            \n                component\n            \n            \n                EntryListComponent\n            \n            \n                71 %\n                (15/21)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-list/entry-list.ts\n            \n            \n                class\n            \n            \n                EntryList\n            \n            \n                87 %\n                (21/24)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-pop/entry-pop.component.ts\n            \n            \n                component\n            \n            \n                EntryPopComponent\n            \n            \n                92 %\n                (25/27)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-select/entry-select.component.ts\n            \n            \n                component\n            \n            \n                EntrySelectComponent\n            \n            \n                83 %\n                (49/59)\n            \n        \n        \n            \n                \n                    packages/data/src/entry/entry.directive.ts\n            \n            \n                directive\n            \n            \n                EntryDirective\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    packages/data/src/files/asset-list-pop/asset-list-pop.component.ts\n            \n            \n                component\n            \n            \n                AssetListPopComponent\n            \n            \n                90 %\n                (20/22)\n            \n        \n        \n            \n                \n                    packages/data/src/files/asset-select/asset-select.component.ts\n            \n            \n                component\n            \n            \n                AssetSelectComponent\n            \n            \n                72 %\n                (39/54)\n            \n        \n        \n            \n                \n                    packages/data/src/files/asset/asset.directive.ts\n            \n            \n                directive\n            \n            \n                AssetDirective\n            \n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                    packages/data/src/files/assetgroup-select/assetgroup-select.component.ts\n            \n            \n                component\n            \n            \n                AssetgroupSelectComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    packages/data/src/files/dropzone/dropzone.directive.ts\n            \n            \n                directive\n            \n            \n                DropzoneDirective\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    packages/data/src/files/file.service.ts\n            \n            \n                injectable\n            \n            \n                FileService\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                    packages/data/src/files/file.service.ts\n            \n            \n                interface\n            \n            \n                FileOptions\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    packages/data/src/files/file.service.ts\n            \n            \n                interface\n            \n            \n                Upload\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    packages/data/src/files/image/image.directive.ts\n            \n            \n                directive\n            \n            \n                ImageDirective\n            \n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                    packages/data/src/files/upload/upload.component.ts\n            \n            \n                component\n            \n            \n                UploadComponent\n            \n            \n                78 %\n                (18/23)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/model-config.interface.ts\n            \n            \n                interface\n            \n            \n                ModelConfig\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/model-config.service.ts\n            \n            \n                injectable\n            \n            \n                ModelConfigService\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/model-configuration.interface.ts\n            \n            \n                interface\n            \n            \n                ModelConfiguration\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/type-config.service.ts\n            \n            \n                injectable\n            \n            \n                TypeConfigService\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-config/resource-config.service.ts\n            \n            \n                injectable\n            \n            \n                ResourceConfig\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-config/resource.service.ts\n            \n            \n                injectable\n            \n            \n                ResourceService\n            \n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-config/resource.service.ts\n            \n            \n                interface\n            \n            \n                Update\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-crud/resource-crud.component.ts\n            \n            \n                component\n            \n            \n                ResourceCrudComponent\n            \n            \n                75 %\n                (15/20)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-delete-pop/resource-delete-pop.component.ts\n            \n            \n                component\n            \n            \n                ResourceDeletePopComponent\n            \n            \n                66 %\n                (12/18)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-form/resource-form.component.ts\n            \n            \n                component\n            \n            \n                ResourceFormComponent\n            \n            \n                92 %\n                (35/38)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-form/resource-form.ts\n            \n            \n                class\n            \n            \n                ResourceForm\n            \n            \n                84 %\n                (27/32)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-list/resource-list.component.ts\n            \n            \n                component\n            \n            \n                ResourceListComponent\n            \n            \n                90 %\n                (29/32)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-list/resource-list.ts\n            \n            \n                class\n            \n            \n                ResourceList\n            \n            \n                94 %\n                (52/55)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-pop/resource-pop.component.ts\n            \n            \n                component\n            \n            \n                ResourcePopComponent\n            \n            \n                92 %\n                (24/26)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-select/resource-select.component.ts\n            \n            \n                component\n            \n            \n                ResourceSelectComponent\n            \n            \n                84 %\n                (45/53)\n            \n        \n        \n            \n                \n                    packages/data/src/sdk/history.service.ts\n            \n            \n                injectable\n            \n            \n                HistoryService\n            \n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                    packages/data/src/sdk/sdk.service.ts\n            \n            \n                injectable\n            \n            \n                SdkService\n            \n            \n                88 %\n                (16/18)\n            \n        \n        \n            \n                \n                    packages/location/src/geocode.service.ts\n            \n            \n                injectable\n            \n            \n                GeocodeService\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    packages/location/src/geocode.service.ts\n            \n            \n                variable\n            \n            \n                google\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/location/src/location-map.component.ts\n            \n            \n                component\n            \n            \n                LocationMapComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    packages/location/src/location-picker.component.ts\n            \n            \n                component\n            \n            \n                LocationPickerComponent\n            \n            \n                72 %\n                (13/18)\n            \n        \n        \n            \n                \n                    packages/location/src/location-search.component.ts\n            \n            \n                component\n            \n            \n                LocationSearchComponent\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    packages/location/src/location.module.ts\n            \n            \n                variable\n            \n            \n                LOCATION_COMPONENTS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/medium-editor/src/medium-editor.component.ts\n            \n            \n                component\n            \n            \n                MediumEditorComponent\n            \n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                    packages/tinymce/src/tinymce/tinymce-settings.ts\n            \n            \n                variable\n            \n            \n                editorSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/tinymce/src/tinymce/tinymce.component.ts\n            \n            \n                component\n            \n            \n                TinymceComponent\n            \n            \n                81 %\n                (13/16)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/calendar.component.ts\n            \n            \n                component\n            \n            \n                CalendarComponent\n            \n            \n                75 %\n                (41/54)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/daterange.component.ts\n            \n            \n                component\n            \n            \n                DaterangeComponent\n            \n            \n                64 %\n                (24/37)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/datetime.component.ts\n            \n            \n                component\n            \n            \n                DatetimeComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/datetime.pipe.ts\n            \n            \n                pipe\n            \n            \n                DatetimePipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/heatmap.component.ts\n            \n            \n                component\n            \n            \n                HeatmapComponent\n            \n            \n                62 %\n                (27/43)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/month.component.ts\n            \n            \n                component\n            \n            \n                MonthComponent\n            \n            \n                65 %\n                (23/35)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/month.component.ts\n            \n            \n                interface\n            \n            \n                Day\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/default-input/default-input.component.ts\n            \n            \n                component\n            \n            \n                DefaultInputComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/default-output/default-output.component.ts\n            \n            \n                component\n            \n            \n                DefaultOutputComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/form.component.ts\n            \n            \n                component\n            \n            \n                FormComponent\n            \n            \n                96 %\n                (27/28)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/form.service.ts\n            \n            \n                injectable\n            \n            \n                FormService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/max-items.pipe.ts\n            \n            \n                pipe\n            \n            \n                MaxItemsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/toggle/toggle.component.ts\n            \n            \n                component\n            \n            \n                ToggleComponent\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/visible-fields.pipe.ts\n            \n            \n                pipe\n            \n            \n                VisibleFieldsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/ec-icons.ts\n            \n            \n                variable\n            \n            \n                ecIcons\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/emoji-icons.ts\n            \n            \n                variable\n            \n            \n                emojiIcons\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/icon.component.ts\n            \n            \n                component\n            \n            \n                IconComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/icon.service.ts\n            \n            \n                injectable\n            \n            \n                IconService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/dynamic-rack/dynamic-rack.component.ts\n            \n            \n                component\n            \n            \n                DynamicRackComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts\n            \n            \n                component\n            \n            \n                DynamicSlotComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/input-errors/input-errors.component.ts\n            \n            \n                component\n            \n            \n                InputErrorsComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/input/input.component.ts\n            \n            \n                component\n            \n            \n                InputComponent\n            \n            \n                77 %\n                (14/18)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/output/output.component.ts\n            \n            \n                component\n            \n            \n                OutputComponent\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/slot-host.directive.ts\n            \n            \n                directive\n            \n            \n                SlotHostDirective\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/group.pipe.ts\n            \n            \n                pipe\n            \n            \n                GroupPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/list-header/list-header.component.ts\n            \n            \n                component\n            \n            \n                ListHeaderComponent\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/list-items/list-items.component.ts\n            \n            \n                component\n            \n            \n                ListItemsComponent\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/list.component.ts\n            \n            \n                component\n            \n            \n                ListComponent\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/pagination/pagination-config.interface.ts\n            \n            \n                class\n            \n            \n                PaginationConfig\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/pagination/pagination.component.ts\n            \n            \n                component\n            \n            \n                PaginationComponent\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/searchbar/searchbar.component.ts\n            \n            \n                component\n            \n            \n                SearchbarComponent\n            \n            \n                85 %\n                (17/20)\n            \n        \n        \n            \n                \n                    packages/ui/src/loader/loader.component.ts\n            \n            \n                component\n            \n            \n                LoaderComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/loader/loader.service.ts\n            \n            \n                injectable\n            \n            \n                LoaderService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/loader/with-loader.interface.ts\n            \n            \n                interface\n            \n            \n                WithLoader\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/error/error.component.ts\n            \n            \n                component\n            \n            \n                ErrorComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notification.ts\n            \n            \n                class\n            \n            \n                Notification\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notifications.service.ts\n            \n            \n                variable\n            \n            \n                window\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/with-notifications.interface.ts\n            \n            \n                interface\n            \n            \n                WithNotifications\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/pop/pop.component.ts\n            \n            \n                component\n            \n            \n                PopComponent\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/pop/pop.service.ts\n            \n            \n                injectable\n            \n            \n                PopService\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/select/select.component.ts\n            \n            \n                component\n            \n            \n                SelectComponent\n            \n            \n                83 %\n                (26/31)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.interface.ts\n            \n            \n                interface\n            \n            \n                Symbol\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.pipe.ts\n            \n            \n                injectable\n            \n            \n                SymbolPipe\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.pipe.ts\n            \n            \n                injectable\n            \n            \n                SymbolPipe\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.service.ts\n            \n            \n                injectable\n            \n            \n                SymbolService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/focus/focus.directive.ts\n            \n            \n                directive\n            \n            \n                FocusDirective\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/focus/focus.interface.ts\n            \n            \n                interface\n            \n            \n                Focus\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/login-form/login-form.component.ts\n            \n            \n                component\n            \n            \n                LoginFormComponent\n            \n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/menu/menu.component.ts\n            \n            \n                component\n            \n            \n                MenuComponent\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/mockup/mockup.component.ts\n            \n            \n                component\n            \n            \n                MockupComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/tab/tab.component.ts\n            \n            \n                component\n            \n            \n                TabComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/tabs/tabs.component.ts\n            \n            \n                component\n            \n            \n                TabsComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/validators/email.validator.ts\n            \n            \n                variable\n            \n            \n                emailValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/validators/field-validators.ts\n            \n            \n                variable\n            \n            \n                FieldValidators\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/vc/src/editor/editor.component.ts\n            \n            \n                component\n            \n            \n                EditorComponent\n            \n            \n                9 %\n                (6/62)\n            \n        \n        \n            \n                \n                    packages/vc/src/editor/editor.component.ts\n            \n            \n                variable\n            \n            \n                document\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/vc/src/safe-html.pipe.ts\n            \n            \n                pipe\n            \n            \n                SafeHtmlPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/vc/src/toolbar/toolbar.component.ts\n            \n            \n                component\n            \n            \n                ToolbarComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.3\n        \n            @angular/compiler : ^5.2.2\n        \n            @angular/core : ^5.2.2\n        \n            @angular/forms : ^5.2.2\n        \n            @angular/http : ^5.2.2\n        \n            @angular/platform-browser : ^5.2.2\n        \n            @angular/platform-browser-dynamic : ^5.2.2\n        \n            @angular/router : ^5.2.2\n        \n            @ec.components/data : ^0.21.12\n        \n            @ec.components/location : ^0.3.12\n        \n            @ec.components/medium-editor : ^0.2.0\n        \n            @ec.components/style : ^0.10.0\n        \n            @ec.components/tinymce : ^0.2.0\n        \n            ace-builds : ^1.2.9\n        \n            core-js : ^2.5.7\n        \n            ec.sdk : ^0.16.13\n        \n            moment-es6 : ^1.0.0\n        \n            ngx-cookie : ^2.0.1\n        \n            ngx-drag-drop : ^1.0.3\n        \n            rxjs : ^5.5.11\n        \n            stream : 0.0.2\n        \n            tinymce : ^4.7.6\n        \n            x.ui : git+https://github.com/entrecode/x.ui.git#develop\n        \n            zone.js : ^0.8.20\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieFactory   (packages/.../auth.module.ts)\n                        \n                        \n                            sortBoolean   (packages/.../sorter.ts)\n                        \n                        \n                            sortNumber   (packages/.../sorter.ts)\n                        \n                        \n                            sortString   (packages/.../sorter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/data/src/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cookieFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ncookieFactory()\n                    \n                \n\n\n\n\n                \n                    \n                            loads CookieModule \n\n\n                    \n                \n            \n        \n\n    packages/core/src/sorter/sorter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sortBoolean\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBoolean(a: , b: )\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts booleans \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortNumber(a: , b: )\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts numbers \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortString\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortString(a: , b: )\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts strings (naturally) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nec.components\nThis is the main project for ec.components, written in Typescript and Angular.\nModules\nThere are three main modules:\n\n*@ec.components/core*: contains core typescript classes (no angular, no datamanager)\n*@ec.components/ui*: contains core ui components (angular, no datamanager)\n*@ec.components/data*: contains ui components for datamanager (angular+datamanager)\n\nThe dependencies stack up from core to data (data > ui > core).\nThe packages sources are located at src/packages.\nThere is also a fourth module called ```*@ec.components/style*`.\nIt contains more sophisticated styles for ui components using x.ui.\nDocumentation\nThe main documentation is located at https://entrecode.github.io/ec.components/.\nYou can find a getting started guide there\nDemo\nA Demo is available at https://components.entrecode.de/.\nDevelopment\nThis project was generated with Angular CLI version 1.0.0-rc.0.\nLerna\nThe repository is a monorepo, managed by lerna.\nDeveloping with Symlinks\nThe start npm script will automatically use the symlinks from src/packages for @ec.components.\nIt also deletes eventually existing node_modules folders inside the packages.\nThis enables you to always use imports like: import  from '@ec.components/'.\nPublishing\n\nRun bootstrap task, this will call lerna bootstrap for core/ui/data packages and their prepublish scripts:npm run bootstrap\nRun publish task and select versions:npm run publish\n\nTo publish a new package, make sure you run npm publish --access=public before running lerna.\nMake sure you update the symlinks.sh and delete-modules.sh scripts to make it work for the demo server.\nImport Structure\nAll imports inside src/packages that import from the same package or another ec.components package must be relative.\n\nImports from the same package should always import the index file \"from '..'\"\nThis implies that all components/classes etc are placed inside a flat subfolder structure.\nThe relative path '..' therefore links to the index.ts where all package exports are defined.\n\n\nImports from another package should always import the relative path to the package index (e.g. ../../packages/core)\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive/pipe/service/class/module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nUse the --env=prod or --env=stag for environment builds.\nCAUTION: you may have to \"es2015\" in tsconfig.json / lib to make UglifyJS work\nsee https://github.com/mishoo/UglifyJS2/issues/659\nBuild Trouble Shooting\nErrors like this (or similar):\nERROR in ./node_modules/@ec.components/data/src/auth/auth.service.ts\nModule build failed: Error: /Users/kon/workspace/0.entrecode/nwb.admin/node_modules/@ec.components/data/src/auth/auth.service.ts is missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.can be fixed by including the ec.components files explicitly (+excluding the test files):\n{\n  \"extends\": \"../tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"../out-tsc/app\",\n    \"baseUrl\": \"./\",\n    \"module\": \"es2015\",\n    \"types\": []\n  },\n  \"exclude\": [\n    \"test.ts\",\n    \"**/*.spec.ts\",\n    \"../node_modules/@ec.components/**/*.spec.ts\"\n  ],\n  \"include\": [\n    \"**/*.ts\",\n    \"../node_modules/@ec.components/**/*.ts\"\n  ]\n}Running unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nBefore running the tests make sure you are serving the app via ng serve.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nImpressum & Datenschutz\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AceModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IconModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IoModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoaderModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediumModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PopModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResourceModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SdkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SelectModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SymbolModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TinymceModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilityModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VcModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_imports\n\n\n\ncluster_ListModule_exports\n\n\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_MediumModule\n\n\n\ncluster_MediumModule_declarations\n\n\n\ncluster_MediumModule_exports\n\n\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_exports\n\n\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_providers\n\n\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_exports\n\n\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_exports\n\n\n\ncluster_VcModule\n\n\n\ncluster_VcModule_declarations\n\n\n\ncluster_VcModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->AceComponent -->\n\n{\n    : , : (() => ), : true\n}->AceComponent\n\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n ), : true\n}->MediumEditorComponent -->\n\n{\n    : , : (() => ), : true\n}->MediumEditorComponent\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\n ), : true\n}->SelectComponent -->\n\n{\n    : , : (() => ), : true\n}->SelectComponent\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\n()\n\n()\n\nAuthModule -->\n\n()->AuthModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAuthModule -->\n\nAuthGuard->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryListPopComponent\n\nEntryListPopComponent\n\nDataModule -->\n\nEntryListPopComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryListPopComponent \n\nEntryListPopComponent \n\nEntryListPopComponent  -->\n\nDataModule->EntryListPopComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListComponent \n\nAssetListComponent \n\nAssetListComponent  -->\n\nFilesModule->AssetListComponent \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent  -->\n\nFilesModule->AssetgroupSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nCrudService\n\nCrudService\n\nDataModule -->\n\nCrudService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\nAssetDirective\n\nAssetDirective\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListComponent\n\nAssetListComponent\n\nFilesModule -->\n\nAssetListComponent->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nAssetgroupSelectComponent\n\nAssetgroupSelectComponent\n\nFilesModule -->\n\nAssetgroupSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nCalendarComponent->FormModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nFormModule -->\n\nDaterangeComponent->FormModule\n\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nFormModule -->\n\nDatetimePipe->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nFormModule -->\n\nHeatmapComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nFormModule -->\n\nMonthComponent->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nFormModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nFormModule->DaterangeComponent \n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nFormModule->DatetimePipe \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nFormModule->HeatmapComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nFormModule->MonthComponent \n\n\n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nPopModule\n\nPopModule\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nGroupPipe\n\nGroupPipe\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nListModule -->\n\nSearchbarComponent->ListModule\n\n\n\nUiModule -->\n\nListModule->UiModule\n\n\n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSearchbarComponent \n\nSearchbarComponent \n\nSearchbarComponent  -->\n\nListModule->SearchbarComponent \n\n\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\nIoModule  -->\n\nUtilityModule->IoModule \n\n\n\nListModule -->\n\nUtilityModule->ListModule\n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nUtilityModule->FocusDirective \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nMockupComponent \n\nMockupComponent \n\nMockupComponent  -->\n\nUtilityModule->MockupComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\nMediumModule\n\nMediumModule\n\nMediumModule -->\n\nMediumEditorComponent->MediumModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumModule->MediumEditorComponent \n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\nPopComponent\n\nPopComponent\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\nSdkService\n\nSdkService\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nUtilityModule -->\n\nFocusDirective->UtilityModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nMockupComponent\n\nMockupComponent\n\nUtilityModule -->\n\nMockupComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\n\n\nVcModule\n\nVcModule\n\nVcModule -->\n\nEditorComponent->VcModule\n\n\n\n\n\nSafeHtmlPipe\n\nSafeHtmlPipe\n\nVcModule -->\n\nSafeHtmlPipe->VcModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nVcModule -->\n\nToolbarComponent->VcModule\n\n\n\n\n\nEditorComponent \n\nEditorComponent \n\nEditorComponent  -->\n\nVcModule->EditorComponent \n\n\n\n\n\nSafeHtmlPipe \n\nSafeHtmlPipe \n\nSafeHtmlPipe  -->\n\nVcModule->SafeHtmlPipe \n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nVcModule->ToolbarComponent \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            21 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        60 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        19 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        14 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        17 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ace   (packages/.../ace.component.ts)\n                        \n                        \n                            backendErrorCodes   (packages/.../errors.ts)\n                        \n                        \n                            collator   (packages/.../sorter.ts)\n                        \n                        \n                            document   (packages/.../editor.component.ts)\n                        \n                        \n                            ecIcons   (packages/.../ec-icons.ts)\n                        \n                        \n                            editorSettings   (packages/.../tinymce-settings.ts)\n                        \n                        \n                            emailAvailable   (packages/.../email-available.validator.ts)\n                        \n                        \n                            emailValidator   (packages/.../email.validator.ts)\n                        \n                        \n                            emojiIcons   (packages/.../emoji-icons.ts)\n                        \n                        \n                            errors   (packages/.../errors.ts)\n                        \n                        \n                            FieldValidators   (packages/.../field-validators.ts)\n                        \n                        \n                            google   (packages/.../geocode.service.ts)\n                        \n                        \n                            LOCATION_COMPONENTS   (packages/.../location.module.ts)\n                        \n                        \n                            window   (packages/.../notifications.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ace/src/ace.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ace:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround that expects ace to be imported somewhere else... \n\n                    \n                \n\n            \n        \n\n    packages/data/src/auth/errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            backendErrorCodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backendErrorCodes:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  2460: {\n    'account_not_found': 'Der Login war ungültig.'\n  }\n}\n                        \n                    \n\n                \n                    \n                        Maps error messages to error codes that come from the backend. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errors:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  emailUnavailable: 'Diese Email ist schon vergeben',\n  required: 'Dieses Feld ist ein Pflichtfeld',\n  pattern: 'Ungültige Eingabe',\n  minlength: 'Die Eingabe ist kurz'\n}\n                        \n                    \n\n                \n                    \n                        Error Messages to show in notifications. \n\n                    \n                \n\n            \n        \n\n    packages/core/src/sorter/sorter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            collator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        collator:     \n\n                    \n                \n                    \n                        \n                            Default value : new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' })\n                        \n                    \n\n                \n                    \n                        Used for natural sorting of strings \n\n                    \n                \n\n            \n        \n\n    packages/vc/src/editor/editor.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        document:     \n\n                    \n                \n\n                \n                    \n                        declares document \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/icon/ec-icons.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ecIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ecIcons:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  { name: 'add' },\n  { name: 'add-circle' },\n  { name: 'alarm' },\n  { name: 'alarm-clock' },\n  { name: 'alarm-silent' },\n  { name: 'align-center' },\n  { name: 'align-justify' },\n  { name: 'align-left' },\n  { name: 'align-right' },\n  { name: 'all-caps' },\n  { name: 'brackets' },\n  { name: 'angle-tool' },\n  { name: 'arrange-1-to-9' },\n  { name: 'arrange-9-to-1' },\n  { name: 'arrange-a-to-z' },\n  { name: 'arrange-z-to-a' },\n  { name: 'arrow-down' },\n  { name: 'arrow-down-left' },\n  { name: 'arrow-down-right' },\n  { name: 'arrow-left' },\n  { name: 'arrow-return' },\n  { name: 'arrow-right' },\n  { name: 'arrow-up' },\n  { name: 'arrow-up-left' },\n  { name: 'arrow-up-right' },\n  { name: 'artboard' },\n  { name: 'asterisk' },\n  { name: 'at-sign' },\n  { name: 'bank' },\n  { name: 'bank-note' },\n  { name: 'banking-debit-machine' },\n  { name: 'barcode' },\n  { name: 'trash' },\n  { name: 'binoculars' },\n  { name: 'bitcoin-coin' },\n  { name: 'bookmark' },\n  { name: 'border-bottom' },\n  { name: 'border-inside' },\n  { name: 'border-inside-vertical' },\n  { name: 'border-inside-horizontal' },\n  { name: 'border-left' },\n  { name: 'border-none' },\n  { name: 'border-outside' },\n  { name: 'border-right' },\n  { name: 'border-top' },\n  { name: 'box' },\n  { name: 'briefcase' },\n  { name: 'bus' },\n  { name: 'graph-pie' },\n  { name: 'scale' },\n  { name: 'whiteboard' },\n  { name: 'graph-plot' },\n  { name: 'calculator' },\n  { name: 'calculator-2' },\n  { name: 'calendar' },\n  { name: 'calendar-check' },\n  { name: 'calendar-close' },\n  { name: 'calendar-pencil' },\n  { name: 'calendar-refresh-2' },\n  { name: 'camera' },\n  { name: 'brightness-1' },\n  { name: 'camera-off' },\n  { name: 'camera-pin' },\n  { name: 'camera-refresh' },\n  { name: 'car-6' },\n  { name: 'dashboard' },\n  { name: 'tape' },\n  { name: 'center-point' },\n  { name: 'chat-bubble-circle' },\n  { name: 'chat-bubble-circle-active' },\n  { name: 'chat-bubble-square' },\n  { name: 'chat-bubble-square-active' },\n  { name: 'chat-bubble-square-2' },\n  { name: 'chat-bubbles-square' },\n  { name: 'check-box' },\n  { name: 'cloud' },\n  { name: 'cloud-disable' },\n  { name: 'cloud-download' },\n  { name: 'cloud-refresh' },\n  { name: 'cloud-upload' },\n  { name: 'cloud-wifi' },\n  { name: 'color-contrast-off' },\n  { name: 'color-contrast-on' },\n  { name: 'color-palette' },\n  { name: 'computer-screen' },\n  { name: 'contact-book' },\n  { name: 'content-book' },\n  { name: 'content-bookmark' },\n  { name: 'filter' },\n  { name: 'layers-hide' },\n  { name: 'layers-show' },\n  { name: 'note' },\n  { name: 'content-view-array' },\n  { name: 'content-view-content' },\n  { name: 'content-view-list' },\n  { name: 'content-view-module' },\n  { name: 'crop' },\n  { name: 'cursor-arrow' },\n  { name: 'cursor-hand' },\n  { name: 'cursor-move' },\n  { name: 'cursor-select-area' },\n  { name: 'cursor-tap' },\n  { name: 'cursor-target' },\n  { name: 'data-download' },\n  { name: 'data-syncing' },\n  { name: 'data-transfer' },\n  { name: 'data-upload' },\n  { name: 'delete' },\n  { name: 'dial-pad' },\n  { name: 'diamond' },\n  { name: 'divide' },\n  { name: 'email' },\n  { name: 'email-read' },\n  { name: 'envelope' },\n  { name: 'equaliser' },\n  { name: 'eraser' },\n  { name: 'expand' },\n  { name: 'expand-2' },\n  { name: 'expand-vertical' },\n  { name: 'expand-horizontal' },\n  { name: 'exposure-level' },\n  { name: 'file-add' },\n  { name: 'file-copy' },\n  { name: 'file-new' },\n  { name: 'file-notes-document' },\n  { name: 'file-notes-new' },\n  { name: 'files' },\n  { name: 'files-thumbs' },\n  { name: 'flash' },\n  { name: 'flash-off' },\n  { name: 'flip-down' },\n  { name: 'flip-left' },\n  { name: 'flip-right' },\n  { name: 'flip-up' },\n  { name: 'focus' },\n  { name: 'focus-off' },\n  { name: 'folder-new' },\n  { name: 'folders' },\n  { name: 'font-color' },\n  { name: 'font-size' },\n  { name: 'format-clear' },\n  { name: 'frame' },\n  { name: 'gradient' },\n  { name: 'hash' },\n  { name: 'health-blood-drop' },\n  { name: 'eye-closed' },\n  { name: 'highlight' },\n  { name: 'hourglass' },\n  { name: 'id-card' },\n  { name: 'inbox' },\n  { name: 'indent-decrease' },\n  { name: 'indent-increase' },\n  { name: 'infinity-loop' },\n  { name: 'interface-alert-circle' },\n  { name: 'interface-information' },\n  { name: 'interface-question-mark' },\n  { name: 'intersect' },\n  { name: 'italic' },\n  { name: 'key' },\n  { name: 'laptop' },\n  { name: 'square' },\n  { name: 'lightbulb' },\n  { name: 'link' },\n  { name: 'link-broken' },\n  { name: 'list-bullets' },\n  { name: 'list-number' },\n  { name: 'location-direction' },\n  { name: 'location-globe' },\n  { name: 'location-gps-off' },\n  { name: 'location-gps-on' },\n  { name: 'location-plan' },\n  { name: 'location-map' },\n  { name: 'location-pin-1' },\n  { name: 'location-pin-2' },\n  { name: 'lock-closed' },\n  { name: 'lock-open' },\n  { name: 'leave' },\n  { name: 'harry-potter' },\n  { name: 'measuring-tool' },\n  { name: 'minus-front' },\n  { name: 'mobile-phone' },\n  { name: 'money-note-coin' },\n  { name: 'move-down' },\n  { name: 'move-left' },\n  { name: 'move-right' },\n  { name: 'move-to-back' },\n  { name: 'move-to-front' },\n  { name: 'move-up' },\n  { name: 'music-note' },\n  { name: 'hamburger' },\n  { name: 'more-horizontal' },\n  { name: 'more-vertical' },\n  { name: 'new-square' },\n  { name: 'outbox' },\n  { name: 'paint-brush' },\n  { name: 'paint-bucket' },\n  { name: 'paint-palette' },\n  { name: 'paint-roll' },\n  { name: 'paperclip' },\n  { name: 'paperplane' },\n  { name: 'paragraph' },\n  { name: 'paragraph-left-to-right' },\n  { name: 'paragraph-right-to-left' },\n  { name: 'paragraph-spacing' },\n  { name: 'pen-tool' },\n  { name: 'pencil' },\n  { name: 'percent' },\n  { name: 'bug' },\n  { name: 'photo-landscape' },\n  { name: 'photo-portrait' },\n  { name: 'photo-view-all' },\n  { name: 'picture-layer' },\n  { name: 'pin' },\n  { name: 'home' },\n  { name: 'power' },\n  { name: 'printer' },\n  { name: 'qr-code' },\n  { name: 'quote-closing' },\n  { name: 'quote-opening' },\n  { name: 'reflect-left' },\n  { name: 'reflect-right' },\n  { name: 'close-x-big' },\n  { name: 'ruler' },\n  { name: 'scale-vertical' },\n  { name: 'scissors' },\n  { name: 'select-area' },\n  { name: 'send-to-back' },\n  { name: 'send-to-front' },\n  { name: 'database' },\n  { name: 'settings-slider' },\n  { name: 'share' },\n  { name: 'megaphone' },\n  { name: 'rss' },\n  { name: 'signal' },\n  { name: 'signal-tower' },\n  { name: 'shear-left' },\n  { name: 'shear-right' },\n  { name: 'shopping-bag-alt' },\n  { name: 'shopping-basket' },\n  { name: 'shopping-cart' },\n  { name: 'shrink' },\n  { name: 'shrink-diagonal' },\n  { name: 'shrink-horizontal' },\n  { name: 'shrink-vertical' },\n  { name: 'command' },\n  { name: 'sign-euro' },\n  { name: 'sign-ramp-left' },\n  { name: 'sign-ramp-right' },\n  { name: 'skull' },\n  { name: 'sliders' },\n  { name: 'slider' },\n  { name: 'small-caps' },\n  { name: 'speaker-volume-decrease' },\n  { name: 'speaker-volume-high' },\n  { name: 'speaker-volume-increase' },\n  { name: 'speaker-volume-low' },\n  { name: 'speaker-volume-off' },\n  { name: 'spelling-check' },\n  { name: 'spray-paint' },\n  { name: 'strike-through' },\n  { name: 'subscript' },\n  { name: 'substract' },\n  { name: 'sunny' },\n  { name: 'superscript' },\n  { name: 'switch-left' },\n  { name: 'switch-right' },\n  { name: 'switches' },\n  { name: 'bluetooth' },\n  { name: 'wifi' },\n  { name: 'repeat' },\n  { name: 'synchronize' },\n  { name: 'switch' },\n  { name: 'price-tag' },\n  { name: 'tank' },\n  { name: 'text' },\n  { name: 'text-eraser' },\n  { name: 'rotate-right' },\n  { name: 'rotate-left' },\n  { name: 'text-vector' },\n  { name: 'toolbox' },\n  { name: 'underline' },\n  { name: 'unite' },\n  { name: 'user' },\n  { name: 'vector-circle' },\n  { name: 'vector-line' },\n  { name: 'vector-square' },\n  { name: 'video-call' },\n  { name: 'video-clip' },\n  { name: 'eject' },\n  { name: 'next' },\n  { name: 'pause' },\n  { name: 'play' },\n  { name: 'previous' },\n  { name: 'stop' },\n  { name: 'heart-outlined' },\n  { name: 'star-outlined' },\n  { name: 'thumbs-down' },\n  { name: 'thumbs-up' },\n  { name: 'zoom-in' },\n  { name: 'zoom-out' },\n  { name: 'glasses' },\n  { name: 'save' },\n  { name: 'chevron-left' },\n  { name: 'chevron-right' },\n  { name: 'move-vertical' },\n  { name: 'drag-handle' },\n  { name: 'user-chat' },\n  { name: 'text-input' },\n  { name: 'tablet' },\n  { name: 'company' },\n  { name: 'android' },\n  { name: 'apple' },\n  { name: 'facebook' },\n  { name: 'google' },\n  { name: 'linkedin' },\n  { name: 'twitter' },\n  { name: 'xing' },\n  { name: 'youtube' },\n  { name: 'find' },\n  { name: 'business-man' },\n  { name: 'factory' },\n  { name: 'building' },\n  { name: 'fax' },\n  { name: 'globe' },\n  { name: 'phone' },\n  { name: 'close-x-circle' },\n  { name: 'ticket' },\n  { name: 'key-enter' },\n  { name: 'key-left' },\n  { name: 'key-right' },\n  { name: 'key-shift' },\n  { name: 'img' },\n  { name: 'smiley' },\n  { name: 'arrow-next' },\n  { name: 'arrow-prev' },\n  { name: 'wand' },\n  { name: 'h-align-left' },\n  { name: 'h-align-middle' },\n  { name: 'h-align-right' },\n  { name: 'v-align-bottom' },\n  { name: 'v-align-middle' },\n  { name: 'v-align-top' },\n  { name: 'flip-h' },\n  { name: 'flip-v' },\n  { name: 'graph-bar' },\n  { name: 'check' },\n  { name: 'layer-down' },\n  { name: 'layer-up' },\n  { name: 'undo' },\n  { name: 'redo' },\n  { name: 'stackoverflow' },\n  { name: 'kununu' },\n  { name: 'totop' },\n  { name: 'shopping-bag' },\n  { name: 'profile-circle' },\n  { name: 'heart-filled' },\n  { name: 'github' },\n  { name: 'glue' },\n  { name: 'adhesive-tape' },\n  { name: 'transparent' },\n  { name: 'recycling' },\n  { name: 'dumbbell' },\n  { name: 'instagram' },\n  { name: 'eye-open' },\n  { name: 'water-bottle' },\n  { name: 'close-x' },\n  { name: 'star-filled' },\n  { name: 'clock' },\n  { name: 'appointment' },\n  { name: 'save-date' },\n  { name: 'whistle' },\n  { name: 'weight' },\n  { name: 'share-alt' },\n  { name: 'coin-transfer' },\n  { name: 'toggle-caret' },\n  { name: 'config' },\n  { name: 'server' },\n  { name: 'undo-2' },\n  { name: 'filter-2' },\n  { name: 'article' },\n  { name: 'bold' },\n  { name: 'bigger-text' },\n  { name: 'checkmark' },\n  { name: 'cross' },\n  { name: 'img-center' },\n  { name: 'img-full' },\n  { name: 'img-left' },\n  { name: 'smaller-text' },\n  { name: 'checkmark-2' }\n]\n                        \n                    \n\n                \n                    \n                        Contains all icons that are available in ec-icons font. \n\n                    \n                \n\n            \n        \n\n    packages/tinymce/src/tinymce/tinymce-settings.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            editorSettings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorSettings:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  theme: 'modern',\n  menubar: false,\n  branding: false,\n  resize: true,\n  skin: false,\n  plugins: [\n    'paste template autoresize fullscreen code link table visualblocks autolink lists contextmenu textcolor colorpicker'\n  ],\n  autoresize_min_height: 300,\n  autoresize_max_height: 800,\n  content_css: [\n    'https://icons.entrecode.de/ec-icons-3.0.0.min.css'\n  ],\n  paste_as_text: true,\n  table_toolbar: false,\n  table_default_attributes: {\n    class: 'table-grid'\n  },\n  table_class_list: [\n    { title: 'grid', value: 'table-grid' },\n  ],\n  // templates: [],\n  textcolor_map: [\n    '37474F', 'Text',\n    '879195', 'Text Light',\n    '00B0FF', 'Link',\n    'FF5353', 'Super',\n    'FFFF8D', 'Highlight',\n    'FFFFFF', 'Weiß'\n  ],\n  link_class_list: [\n    { title: 'einfacher link', value: '' },\n    { title: 'Normaler Button', value: 'btn' },\n    { title: 'Super Button', value: 'btn super' },\n    { title: 'Sekundärer Button', value: 'btn minor' }\n  ],\n  style_formats: [\n    { title: 'H2 - Titel', block: 'h2' },\n    { title: 'H3 - Untertitel', block: 'h3' },\n    { title: 'H4 - Überschrift 1', block: 'h4' },\n    { title: 'H5 - Überschrift 2', block: 'h5' },\n    { title: 'Einfacher Absatz', block: 'p' },\n    { title: 'Einleitung', block: 'p', classes: 'lead' },\n    { title: 'Quellenangabe', inline: 'small' },\n    { title: 'Checkliste', selector: 'ul', classes: 'v-checklist' },\n    { title: 'Frage', selector: 'p', classes: 'v-question' },\n    { title: 'Antwort', selector: 'p', classes: 'v-reply' }\n  ],\n  formats: {\n    alignleft: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-left'\n    },\n    aligncenter: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-center'\n    },\n    alignright: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-right'\n    },\n    alignjustify: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-full'\n    }\n  },\n  toolbar: 'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | forecolor | table | template | bullist numlist | link internal image youtube | removeformat | code | fullscreen',\n  setup: (editor) => {\n\n    editor.addButton('youtube', {\n      icon: 'media',\n      onclick: function (edit, element) {\n        const window = editor.windowManager.open({\n          title: 'Youtube einfügen',\n          body: [{\n            type: 'textbox',\n            name: 'yt',\n            label: 'Youtube-Url/ID'\n          }],\n          onsubmit: function (e) {\n            const yt = e.data.yt;\n\n            if (yt) {\n              const ytUrl = /(?:https?:\\/\\/(?:[a-z]+.)?)(?:youtu\\.?be(?:\\.com)?\\/)(?:embed\\/)?(?:(?:(?:(?:watch\\?)?(?:time_continue=(?:[0-9]+))?.+v=)?([a-zA-Z0-9_-]+))(?:\\?t\\=(?:[0-9a-zA-Z]+))?)/g.exec(yt);\n              const url = 'https://www.youtube.com/embed/' + (ytUrl ? ytUrl[1] : yt) + '?feature=oembed&rel=0';\n              editor.insertContent('');\n            }\n          }\n        });\n      }\n    });\n\n    // TODO\n    /*editor.addButton('image', {\n      icon: 'image',\n      onclick: function (edit, element) {\n        const id = Date.now();\n        const window = editor.windowManager.open({\n          title: 'Bild/Datei einfügen',\n          body: [{\n            type: 'container',\n            html: '' +\n            'Alt-Text' +\n            '' +\n            'Text' +\n            '' +\n            '' +\n            ' automatische Breite'\n          }],\n        });\n      }\n    });*/\n  }\n}\n                        \n                    \n\n                \n                    \n                        Default settings for tinymce editor. \n\n                    \n                \n\n            \n        \n\n    packages/data/src/auth/email-available.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : (control: FormControl, delay: number = 500) => {\n  /*return Datamanager.api().emailAvailable(control.value).then((available) => {\n    if (available) {\n      return null;\n    }\n    return { emailUnavailable: true };\n  });*/\n}\n                        \n                    \n\n                \n                    \n                        TODO use this.sdk.accounts.emailAvailable \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/utility/validators/email.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailValidator:     ValidatorFn\n\n                    \n                \n                    \n                        \n                            Type :     ValidatorFn\n\n                        \n                    \n                    \n                        \n                            Default value : Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n                        \n                    \n\n                \n                    \n                        Validates an email. Used for email inputs \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/icon/emoji-icons.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emojiIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emojiIcons:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { name: 'add', content: '➕' },\n    { name: 'close', content: '❌' },\n    { name: 'bitcoin-coin', content: '&#x1F4B0;' },\n    { name: 'bookmark', content: '&#x1F516;' },\n    { name: 'bus', content: '&#x1F68C;' },\n    { name: 'calendar', content: '&#x1F4C5;' },\n    { name: 'camera', content: '&#x1F4F7;' },\n    { name: 'check-box', content: '✅' },\n    { name: 'cloud', content: '☁' },\n    { name: 'computer-screen', content: '&#x1F5A5;' },\n    { name: 'note', content: '&#x1F3B5;' },\n    { name: 'email', content: '&#x1F4E7;' },\n    { name: 'find', content: '&#x1F50D;' }\n]\n                        \n                    \n\n                \n                    \n                        Contains fonts using emojis. \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/utility/validators/field-validators.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FieldValidators\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FieldValidators:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  email: emailValidator\n}\n                        \n                    \n\n                \n                    \n                        Groups together all validators that are meant to be used on fields. \n\n                    \n                \n\n            \n        \n\n    packages/location/src/geocode.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        declares google namespace \n\n                    \n                \n\n            \n        \n\n    packages/location/src/location.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOCATION_COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOCATION_COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    LocationMapComponent,\n    LocationSearchComponent,\n    LocationPickerComponent,\n]\n                        \n                    \n\n                \n                    \n                        The components of this module \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/notifications/notifications.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            window\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        window:     \n\n                    \n                \n\n                \n                    \n                        Workaround to get window without typescript complaining \n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial.html":{"url":"additional-documentation/project-setup-tutorial.html","title":"additional-page - Project Setup Tutorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up a new project with ec.components\nThis tutorial will show you how to set up a new project with the ec.components.\n1. Prequisites\nInstall angular-cli globally:\nnpm install -g @angular/cliThe following versions have been used for this tutorial:\n\n@angular/cli: 1.3.2\n@angular/animations: 4.3.6\n@angular/common: 4.3.6\n@angular/compiler: 4.3.6\n@angular/core: 4.3.6\n@angular/forms: 4.3.6\n@angular/http: 4.3.6\n@angular/platform-browser: 4.3.6\n@angular/platform-browser-dynamic: 4.3.6\n@angular/router: 4.3.6\n@angular/cli: 1.3.2\n@angular/compiler-cli: 4.3.6\n@angular/language-service: 4.3.6\ntypescript: 2.4.2\n\nYou can lookup your versions with ng --version\n2. Generate new Project\nng new ec-project --prefix ec-admin --routing true --style scssMake sure you replace ec-project with your project name and the prefix ec-admin with a project related shorthand symbol.\nMore info on the options for new.\n3. Install @ec.components/data\ncd ec-project\nyarn add @ec.components/data --save\nyarn add @ec.components/style --saveThis will install the data package which depends on ui and core packages.\nThe style package contains styles for ui and data.\n4. Import Styles\nInto your styles.scss, import the following styles:\n@import \"~xlcss/sass/xlcss.scss\";\n@import \"~x.ui/src/_config\";\n@import \"~x.ui/src/x.ui-sandbox.scss\";\n@import \"~@ec.components/style/components.scss\";5. Setup environment\nIn src/environments, you can find the different environment files.\nBy Default, there is a dev and a prod environment. For this tutorial, those two should be enough. We will use the dev environment for dev and staging and the prod environment for live. You could also add more environments, for more information, look here. \nsrc/environments/environment.ts:\nexport const environment = {\n  production: false,\n  environment: 'stage', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-dev-client' // your clientID\n};src/environments/environment.prod.ts:\nexport const environment = {\n  production: true,\n  environment: 'live', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-live-client' // your clientID\n};The .prod environment will be used when running ng build for production.\nThe client should use token method body. The callback URL does not matter.\n6. Add DataModule\nGo to src/app/app.module and add DataModule to your imports:\nimport { DataModule } from '@ec.components/data';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    DataModule.forEnvironment(environment),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Here we are importing the DataModule along with the environment to then import it into our AppModule with the forEnvironment method.\n7. Add --ssl flag\nin your package.json, edit your start script to look like this:\n\"start\": \"ng serve --ssl\",Without the --ssl flag, the authorization won't work, because it enforces https.\n8. Add a component\ne.g. add to src/app/app.component.html:\nThis assumes that the model muffin exists inside the datamanager provided through your environment.\n9. Run the fun\nThats it! Now you can run the app using:\nnpm run startnow navigate to https://localhost:4200\n10. Add Notifications\nTo your app.component, you can add a global notification component, outside of your routing:\nThis will display all messages sent by the components or your own modules.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/routes.html":{"url":"additional-documentation/project-setup-tutorial/routes.html","title":"additional-page - Routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding Routes\nThis short tutorial demonstrates how to quickly generate routes with components.\nIn the following tutorials, refer to this when you are called to create a new route.\n1. Create Component\nGenerate a new component\nng generate component muffinsAdd template to src/app/muffins/muffins.component.html\n2. Add a Route\nsrc/app/app-routing.module.ts:\nimport { MuffinsComponent } from './muffins/muffins.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: []\n  },\n  {\n    path: 'muffins',\n    component: MuffinsComponent\n  }\n];3. Run the Route\nNow you can access the muffin crud at https://localhost:4200/muffins\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/authorization.html":{"url":"additional-documentation/project-setup-tutorial/authorization.html","title":"additional-page - Authorization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-fields.html":{"url":"additional-documentation/project-setup-tutorial/custom-fields.html","title":"additional-page - Custom Fields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustom Field Configuration\nAdd a model config\nYou can configure a models behaviour over the ModelConfigService.\nIt is recommended to configure a model in a parent component of all possible ec-crud lists or nested forms.\nexport class MuffinsComponent {\n  constructor(private modelConfig: ModelConfigService) {\n    moment.locale('de'); //set moment locale\n\n    this.modelConfig.set('muffin', {\n      fields: {\n        pictures: {\n          label: 'Bilder' //this label is shown above the form field and in the table header\n        },\n        name: {\n          label: 'Muffin Name',\n          group: (name) => {\n            return name[0].toUpperCase() //the return value is used to show group headers in a sorted list\n          },\n          required: true //when required, a new entry form cannot be saved without a value set for the field\n        },\n        _created: { //you can also access the system properties\n          label: 'Erstellt',\n          form: false, //this will hide the field inside the form\n          group: (value) => moment(value).format('YYYY')\n        },\n        amazement_factor: {\n          label: 'Amazement Faktor',\n          display: (value) => { //this will transform the value for output e.g. in a list cell\n            return (value * 10) + '%'\n          },\n          group: (value) => {\n            return value > 5 ? 'Größer als 50%' : 'Kleiner als 50%';\n          },\n          validate: (value) => { //this function will run when validating the value inside a form\n            if (typeof value !== 'number') {\n              return; //value is valid\n            }\n            if (value  10) {\n              return 'Darf maximal 10 sein';\n            }\n          }\n        },\n      }\n    });\n}Using custom inputs and outputs\n1. Create Custom Input Component\nng g c custom-inputThis component will serve as a container for all possible custom input fields.\n2. Extend InputComponent (custom-input.component.ts)\nTo make the current field information available to the template, you need to extend InputComponent from @ec.components/ui:\nimport { Component } from '@angular/core';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'clubapp-custom-input',\n  templateUrl: './custom-input.component.html',\n  styleUrls: ['./custom-input.component.scss']\n})\nexport class CustomInputComponent extends InputComponent {\n}CMD+Click on InputComponent to see which properties you can now use!\n3. Add Markup (custom-input.component.html)\nNow we can decide which custom input should be used, based on e.g. the fields view value:\n\n  \n  \n    \n  \n  \n     -->\n  \nOf course you could also switch based on property name or type, depending on your application.\nThe id property of field is referenced in the label of the form. By adding it to the input makes sure your label click enters the input.\n4. Add CustomInputComponent to entryComponents:\nBecause the custom component will be loaded dynamically, your module needs to declare it as entryComponent:\n@NgModule({\n  entryComponents: [\n    CustomInputComponent\n  ]\n  /** more stuff **/\n})\nexport class AppModule {\n}5. Add CustomInputComponent to field config:\nNow you can add the Component as input to your field config:\nthis.modelConfig.set('muffin', {\n      fields: {\n        url: {\n          label: 'URL',\n          view: 'speakingurl',\n          input: CustomInputComponent\n        },\n        openingHours: {\n          label: 'Öffnungszeiten',\n          view: 'openingHours',\n          input: CustomInputComponent\n        }\n})By changing the view option, we can now decide which case will be met!\nCustom Form Controls\nNow what if you want to use a custom form control that does not rely on primitve inputs like number or text?\nIn the above custom-input.component template, we use  with a formControl input.\nTo have access to the form control's value, you need to provide a ControlValueAccessor:\nimport { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'ec-opening-hours',\n  templateUrl: './opening-hours.component.html',\n  styleUrls: ['./opening-hours.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OpeningHoursComponent),\n      multi: true\n    }\n  ]\n})\nexport class OpeningHoursComponent extends InputComponent implements ControlValueAccessor {\n\n  writeValue(value: any) {\n    console.log('received value', value);\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n\n}Now you can implement your own logic and call propagateChange when you change the value from your component, and react to change via the writeValue method!\nYou now could also use your component with ngModel or formControl in another context!\nMore information on this pattern: https://blog.thoughtram.io/angular/2016/07/27/custom-form-controls-in-angular-2.html\nUPDATE: Custom Fields without wrapper\nYou can now also use custom components as input directly without needing to wrap them explicitly.\nWhat you need to is:\n\nExtend DefaultInputComponent\n\nexport class JsonEditorComponent extends extends DefaultInputComponent\nadd the input component as member variable:\n\n/** Form input component */\ninput: InputComponent;and propagate the change to the input as well:\nthis.propagateChange(this.value);\nif (this.input) { // this is the important part\n this.input.propagateChange(this.value);\n}input will be defined when the component is used as input component inside ec-form.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/adding-new-packages.html":{"url":"additional-documentation/project-setup-tutorial/adding-new-packages.html","title":"additional-page - Adding New Packages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding a new package\nTo add a new package to @ec.components, follow this guide!\n1. Create folder in packages\nCreate a new folder, e.g. mkdir packages/medium-editor\n2. init npm\ncd packages/medium-editor && npm init\n\nMake sure to name the package scoped: ```@ec.components/*`\nAdd dependencies according to your needs, e.g. angular etc.\n\n3. Create src folder\nCreate a src folder and add your super cool typescript code.\n\nMake sure your package.json main file is correct.\nMake sure you have all dependencies up to date.\n\n4. add package to symlinks.sh\n\nAdd your package name to the symlinks script.\n\n5. add package to delete-modules.sh script\n\nAdd your package name to the delete-modules script.\n\n6. add package to main package.json dependencies\n\nKeep version up to date (or use * as wildcard)\nrun npm i\n\n7. add package to lerna.json\n\nThis integrates the package to the bootstrap/publish cycle of lerna.\n\n8. Manually Publish package the first time\nBefore being able to publish with lerna, you have to publish it manually the first time:\nnpm publish --access=publicsee https://docs.npmjs.com/cli/access#details.\n9. Add Demo\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/publishing.html":{"url":"additional-documentation/project-setup-tutorial/publishing.html","title":"additional-page - Publishing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui.html":{"url":"additional-documentation/ui.html","title":"additional-page - UI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUI Components Overview\nNow that the Core classes were discussed, lets have a look at its application in the ui components.\nThe ui components, which lay inside the ui package are all basic angular components.\nThey are API agnostic, meaning they do not contain any datamanager logic (or similar).\nAPI related components are meant to inherit from the base ui components to eliminate redundancies.\nInstallation\nnpm i @ec.components/uiDemo\nTBD:\n\nList\nCustom Cell Components\nTransform fields\n\n\nForm\nCustom Field Components\nInline Forms\n\n\nLogin\nPop\nTabs\nSelect\n\nNotifications\n\nLoader\nMenu\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/icons.html":{"url":"additional-documentation/ui/icons.html","title":"additional-page - Icons","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIcon\nDisplays an icon:\nThe default icon set uses ec-icons. You have to embedd them to your index.html (or similar):\n  Using another icon set\nYou can also use other icons:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.use(emojiIcons);\n    }\n}Overriding icons\nYou can also override the current icon registry:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.set(emojiIcons);\n    }\n}This will override the icon registry with the given icons, but keep the rest.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/notificationscomponent.html":{"url":"additional-documentation/ui/notificationscomponent.html","title":"additional-page - NotificationsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNotifications\nThe Notifications Module is a combination of the NotificationsService and the NotificationsComponent.\nSimple Usage\n\nPlace the component somewhere in your app template:\n\n\nEmit notifications via the service\n\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  showNotification() {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        message: 'Das ist die Beschreibung'\n      });\n  }\n\n  doSomethingRisky() {\n      return Promise.reject('Fehler')\n      .catch((err) => {\n          this.notifications.emit({\n              error: err, // passing the error Object\n              title: 'Fehler!'\n          })\n      })\n  }\n}The given type will be added as class. The classes that are available by default can be looked up here.\nAdvanced Usage\nYou can also use multiple ec-notifications at different places:\n\n\nA\nBAll you have to do, is pass the instance of the component that should display the notification via the host property:\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  emit(host) {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        host: host\n      });\n  }\n}Hiding previous errors\nHere is an example usage of a typical success/error handling.\nIt features hiding previous notifications. We recommended you to use the WithNotifications interface for that case.\nexport class MuffinComponent implements WithNotifications {\n  /** Recent Error notification */\n  notifications: Notification[] = [];\n\nconstructor(\n    public bakery:BakeryService,\n    public notificationService: NotificationsService,\n    )\n\n  bake() {\n    this.bakery.bake().then(()=> {\n        this.notificationService.emit({\n            title: 'Muffin was baken!',\n            hide: this.notifications // this will hide all preceding notifications\n        })\n    }).catch(error=>{\n        this.notificationService.emit({\n            title: 'Error while baking',\n            sticky: true,\n            hide: this.notifications, // this will hide all preceding notifications\n            replace: this.notifications // this will replace the given array with the new notification\n        })\n    });\n  }\n}The hide option is useful to hide obsolete errors. E.g. If you successfully log in after one failiure, the sticky error notification of the first attempt will be hidden. This enables you to keep errors messages as long as they are needed.\nInstead of replace, you could also use append (see notification.component.ts for implementation).\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/loadercomponent.html":{"url":"additional-documentation/ui/loadercomponent.html","title":"additional-page - LoaderComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLoader\nThe loader can be used to indicate any kind of loading activity\nTemplate\n\n\nGlobal Loader\nLocal LoaderThe default classes can be found here.\nUsage\nYou can use a global loader that handles every action or use multiple local loaders:\nimport { LoaderComponent, LoaderService } from '@ec.components/ui';\nexport class MyApp {\n  @ViewChild('globalLoader') globalLoader: LoaderComponent;\n  @ViewChild('localLoader') localLoader: LoaderComponent;\n  constructor(private loaderService: LoaderService) {\n      this.loaderService.use(this.globalLoader); // set global loader\n  }\n  globalLoader() { // When not passing a loader to .wait, the global loader (set by .use) is used.\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)));\n  }\n  localLoader() {\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)), this.localLoader);\n    // this.localLoader.wait(new Promise((resolve) => setTimeout(resolve, 2000))); // alternative way\n  }\n}The advantage of local loaders is that you can place them in specific places of your template to only \"disable\" a part of your site while loading and not the whole page.\nSee the commented out line in localLoader for a direct way to trigger a loader without the service.\nHow it works\nEach time .wait is called on the LoaderService, the target loader throws the given promise on a stack. When all promises on the stack have been resolved, the loader is hidden. This is better than just a boolean switch because multiple loading activies do not interfere with each other.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/listcomponent.html":{"url":"additional-documentation/ui/listcomponent.html","title":"additional-page - ListComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nList\nThe List is one of the main components to work with.\nThe basic idea is to display collections of data in a structured but flexible way.\nYou can create a new List like this:\nthis.trees = new List(\n//first argument: Array of Objects\n[{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}],\n//second (optional) argument: ListConfig\n{\n  fields: {\n    name: {\n      label: 'Name'\n    },\n    height: {\n      label: 'Height',\n      group: (h) => h > 10 ? 'Higher than 10m' : 'Lower than 10m'\n    },\n    fruits: {\n      label: 'Has Fruits?',\n      display: (value) => value ? 'yes' : 'no'\n    },\n  }\n})This is how you display a List instance into your template:\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/formcomponent.html":{"url":"additional-documentation/ui/formcomponent.html","title":"additional-page - FormComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nForm\nTBD\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/logincomponent.html":{"url":"additional-documentation/ui/logincomponent.html","title":"additional-page - LoginComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogin Form\nThe Login Form UI component is meant to be extended by a component that communicates with an API.\n    \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/popcomponent.html":{"url":"additional-documentation/ui/popcomponent.html","title":"additional-page - PopComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPop\nA Pop is not just a modal, but a section of markup that appears (pops) anywhere and with any style on your page.\nUsage\n\n    \n        Close\n    \n    \n        Some body content\n    \n    \n        This is the footer\n    \n\nShow popThe default pop classes can be looked up here.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/tabscomponent.html":{"url":"additional-documentation/ui/tabscomponent.html","title":"additional-page - TabsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTabs\nThis is how you use Tabs:\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \nTODO:\n\n*ngIf\nSlot for templated Tab Header\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/selectcomponent.html":{"url":"additional-documentation/ui/selectcomponent.html","title":"additional-page - SelectComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelect\nYou can pass an array of items that will be used for a selection instance.\n\n\n{{values | json}}TODO: update\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/data.html":{"url":"additional-documentation/data.html","title":"additional-page - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Components Overview\nDemo\n\nSdkService\nModelConfig\nHow to set up custom fields (input/output)\n\n\nentry-list\nentry-form\nentry-select\ncrud\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/medium.html":{"url":"additional-documentation/medium.html","title":"additional-page - Medium","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/medium-editor\nThis package wraps the medium-editor as an Angular Directive.\nInstallation\n\nInstall package\n\nnpm install @ec.components/medium-editor --save\nAdd Module\n\nimport { MediumModule } from '@ec.components/medium-editor';\n\n@NgModule({\n  imports: [\n    MediumModule\n  ]\n})\nexport class AppModule {\n}\nUse it\n\n \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinymce.html":{"url":"additional-documentation/tinymce.html","title":"additional-page - TinyMCE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/tinymce\nThis package wraps the tinymce editor as an Angular Component.\nInstallation\n\nInstall package\n\nnpm install @ec.components/tinymce --save\nAdd Module\n\nimport { TinymceModule } from '@ec.components/tinymce';\n\n@NgModule({\n  imports: [\n    TinymceModule\n  ]\n})\nexport class AppModule {\n}\nUse it\n\n \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ace.html":{"url":"additional-documentation/ace.html","title":"additional-page - Ace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/ace\nThis package wraps the ace editor as an Angular Component.\nInstallation\n\nInstall package\n\nnpm install @ec.components/ace --save\nAdd Module\n\nimport { AceModule } from '@ec.components/ace';\n\n@NgModule({\n  imports: [\n    AceModule\n  ]\n})\nexport class AppModule {\n}\nAdd CDN\n\nEither add the cdn src to your index.html:\n  \n`Or import from ace-builds (in app.module):\nimport 'ace-builds/src-noconflict/ace.js';When importing, you also need to import all extensions/modes/themes that you want to use manually.\n\nUse it\n\n \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes.html":{"url":"additional-documentation/core-classes.html","title":"additional-page - Core Classes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction\nThis is the Tutorial for ec.components.\nIt will take a look at all the major concepts in a didactic order.\nHINT: if you are looking for more information than this tutorial, have a look at the tests or the\nDemos!\nCore Classes\nThe core classes, which lay inside the core package are the abstract base for all components.\nThey are typescript only, without using any angular or datamanager code.\nInstead of EventEmitters there the Observables are served via RxJS subjects.\nInstallation\nnpm i @ec.components/core\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/field.html":{"url":"additional-documentation/core-classes/field.html","title":"additional-page - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nField\nA Field represents a property of an Object, without a specific value.\nIt is used to describe a column or field of one or multiple equally structured objects.\nThe field config (see FieldConfigProperty) can contain different transformation methods, such as:\n\nresolve: This method is used to resolve the field value from the object body.\nIt runs before all other transformation methods.\ndisplay: Transforms the resolved value to a human readable output. It is used for e.g. in list cells.\ngroup: Should return a value that is suitable for grouping multiple different values together, like in a list.\n\nExample Usage:\nconst field = new Field('name', {\n    resolve: (body) => body.value.name,\n    display: (value) => value.toUpperCase(),\n    group: (value) => value.length + ' Buchstaben',\n    sort: (value) => value.length\n    });\nconst name = field.resolve({value:{name:'bobby'}}); // 'bobby'\nfield.display(name); // => 'Bobby'\nfield.group(name); // => '5 Buchstaben'\nfield.sort(name); // => 5The above example is of course only viable to show the concept.\nWhen using the components as a whole, those methods will be called automatically from Item, List or Form.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/item.html":{"url":"additional-documentation/core-classes/item.html","title":"additional-page - Item","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nItem\nThe foundation for all entities is the Item class.\nIt consists of a body (value) and a config (see ItemConfig).\nIt can be used with arbitrary body values but is mainly thought to be a wrapper for objects.\nPrimitive use:\nconst primitive = new Item('a');\nprimitive.resolve(); //'a'Default use:\nconst tommy = new Item({ name: 'tommy' });\ntommy.resolve('name'); //'tommy'\ntommy.display('name'); //'tommy'\ntommy.group('name'); //'tommy'\ntommy.sort('name'); //'tommy'Item with fields definition\nWhen using it with objects, it can be passed a config (see ItemConfig) to set up its field config (see FieldConfig.\nEach item can call directly call a transformation function for a field:\nconst bobby = new Item({ value: { name: 'bobby' } }, {\n  fields: {\n    name: {\n      resolve: (body) => body.value.name,\n      display: (value) => value.toUpperCase(),\n      group: (value) => value.length + ' Buchstaben',\n      sort: (value) => value.length\n    }\n  }\n});\nbobby.resolve('name'); //'bobby'\nbobby.display('name'); //'Bobby'\nbobby.group('name'); //'5 Buchstaben'\nbobby.sort('name'); //5Identifiers and labels\nAn Item also brings the concept of identifiers and labels:\nconst e = new Item({ nr: '#AYQ', title: 'Wurst' }, { identifier: 'nr', label: 'title');\ne.id(); //'#AYQ'\ne.display(); //'Wurst'Saving items\nYou can set up a callback that is invoked when calling item.save():\nconst n = new Item(1, { onSave: (item, body) => body+1 });\nn.save();\nn.resolve(); //2\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/form.html":{"url":"additional-documentation/core-classes/form.html","title":"additional-page - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nForm\nForm is an Item with extra functions:\n\ninstantiates fields to iterate over\ngetters for fields and property values, including prefills.\n\nconst tommy = new Form({ name: 'tommy' }); //init without config\ntommy.getValue('name')); //'tommy'\nconst bobby = new Form(null, { fields: { name: { prefill:'bobby' }}}); //init with config only\ntommy.getValue('name')); //'bobby'\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/collection.html":{"url":"additional-documentation/core-classes/collection.html","title":"additional-page - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCollection\nCollection is a more sophisticated Array:\nconst collection = new Collection([1, 2, 3]);\ncollection.has(1); //true\ncollection.has(4); //false\ncollection.add(4);\ncollection.remove(4);\ncollection.index(1); //0\ncollection.addAll([10,11,12]); //true\ncollection.hasAll([1,10,11]); //true\ncollection.removeAll();It is the Parent Class of List and Selection.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/pagination.html":{"url":"additional-documentation/core-classes/pagination.html","title":"additional-page - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPagination\nPagination can be used to keep track of the pages of arbitrary items.\nconst pagination = new Pagination({ size: 10 });\npagination.setTotal(50); //tells the pagination that it should paginate over 50 items.\npagination.getPages(); //5See list.ts/list.component for example usage.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/list.html":{"url":"additional-documentation/core-classes/list.html","title":"additional-page - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nList\nList is a Collection with list specific features:\n\nIt instantiates each array value as an Item\nIt instantiates each field property config as a Field.\nIt supports getting items by identifier via the id method (if identifier is set)\nIt supports filtering, sorting, grouping and pagination.\n\nthis.trees = new List([{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}, {\n  name: 'Cinnamon',\n  height: 10,\n  fruits: true\n}], {\n  size: 3,\n  fields: {\n    name: {\n      label: 'Name',\n      view: 'string',\n      required: true,\n      input: CoolStringComponent,\n      output: CoolStringComponent\n    },\n    height: {\n      label: 'Höhe',\n      group: (h) => h > 10 ? 'Höher als 10m' : 'Niedriger als 10m',\n      view: 'number',\n      required: true,\n      validate: (value) => {\n        if (value  value ? 'ja' : 'nein',\n      view: 'boolean'\n    },\n  },\n});Here is an easy example of using a List instance in a template with Angular:\n\n    \n        {{tree.display('name')}}\n        Früchte? {{tree.display('fruits')}}\n    \n\nNach Name sortierenFor all the features, have a look at the List documentation.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/selection.html":{"url":"additional-documentation/core-classes/selection.html","title":"additional-page - Selection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelection\nSelection is a List with selection specific features:\n\nsupports select method with solo option\noverrides the index method to allow all items with the same identifier to be recognized as selected.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/sorter.html":{"url":"additional-documentation/core-classes/sorter.html","title":"additional-page - Sorter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSorter\nThe Sorter is a static class that acts as a helper to sort different primitive types. See the tests for example usage.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
